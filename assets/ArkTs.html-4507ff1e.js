import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as r,a}from"./app-b96769ad.js";const e={},n=a('<h2 id="arkts语言" tabindex="-1"><a class="header-anchor" href="#arkts语言" aria-hidden="true">#</a> ArkTS语言</h2><p>ArkTS是HarmonyOS优选的主力应用开发语言。ArkTS围绕应用开发在TypeScript（简称TS）生态基础上做了进一步扩展，继承了TS的所有特性，是TS的超集。因此，在学习ArkTS语言之前，建议开发者具备TS语言开发能力。</p><p>当前，ArkTS在TS的基础上主要扩展了如下能力：</p><ul><li>基本语法：ArkTS定义了声明式UI描述、自定义组件和动态扩展UI元素的能力，再配合ArkUI开发框架中的系统组件及其相关的事件方法、属性方法等共同构成了UI开发的主体。</li><li>状态管理：ArkTS提供了多维度的状态管理机制。在UI开发框架中，与UI相关联的数据可以在组件内使用，也可以在不同组件层级间传递，比如父子组件之间、爷孙组件之间，还可以在应用全局范围内传递或跨设备传递。另外，从数据的传递形式来看，可分为只读的单向传递和可变更的双向传递。开发者可以灵活地利用这些能力来实现数据和UI的联动。</li><li>渲染控制：ArkTS提供了渲染控制的能力。条件渲染可根据应用的不同状态，渲染对应状态下的UI内容。循环渲染可从数据源中迭代获取数据，并在每次迭代过程中创建相应的组件。数据懒加载从数据源中按需迭代数据，并在每次迭代过程中创建相应的组件。</li></ul><p>未来，ArkTS会结合应用开发/运行的需求持续演进，逐步提供并行和并发能力增强、系统类型增强、分布式开发范式等更多特性。</p><h2 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法" aria-hidden="true">#</a> 基本语法</h2><h3 id="arkts-基本组成" tabindex="-1"><a class="header-anchor" href="#arkts-基本组成" aria-hidden="true">#</a> ArkTS 基本组成</h3><figure><img src="https://qiniu.waite.wang/202404181345776.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://qiniu.waite.wang/202404181347607.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>自定义变量不能与基础通用属性/事件名重复。</p></blockquote><ul><li>装饰器： 用于装饰类、结构、方法以及变量，并赋予其特殊的含义。如上述示例中@Entry、@Component和@State都是装饰器，@Component表示自定义组件，@Entry表示该自定义组件为入口组件，@State表示组件中的状态变量，状态变量变化会触发UI刷新。</li><li>UI描述：以声明式的方式来描述UI的结构，例如build()方法中的代码块。</li><li>自定义组件：可复用的UI单元，可组合其他组件，如上述被@Component装饰的struct Hello。</li><li>系统组件：ArkUI框架中默认内置的基础和容器组件，可直接被开发者调用，比如示例中的Column、Text、Divider、Button。</li><li>属性方法：组件可以通过链式调用配置多项属性，如fontSize()、width()、height()、backgroundColor()等。</li><li>事件方法：组件可以通过链式调用设置多个事件的响应逻辑，如跟随在Button后面的onClick()。</li><li>系统组件、属性方法、事件方法具体使用可参考基于ArkTS的声明式开发范式。</li></ul>',11),l=[n];function o(c,s){return t(),r("div",null,l)}const p=i(e,[["render",o],["__file","ArkTs.html.vue"]]);export{p as default};
