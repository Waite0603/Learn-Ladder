const e=JSON.parse('{"key":"v-2e83353f","path":"/web/vue/learn/essential/%E9%80%BB%E8%BE%91%E5%A4%8D%E7%94%A8.html","title":"Mixins, extends 以及组合式函数","lang":"zh-CN","frontmatter":{"title":"Mixins, extends 以及组合式函数","icon":"post","order":5,"date":"2023-12-15T00:00:00.000Z","description":"认识 Mixin 在 Vue 2 中，mixins 是创建可重用组件逻辑的主要方式。尽管在 Vue 3 中保留了 mixins 支持，但对于组件间的逻辑复用，使用组合式 API 的组合式函数是现在更推荐的方式。 目前我们是使用组件化的方式在开发整个Vue的应用程序，但是组件和组件之间有时候会存在相同的代码逻辑，我们希望对相同的代码逻辑进行抽取。 在Vue2和Vue3中都支持的一种方式就是使用Mixin来完成： Mixin提供了一种非常灵活的方式，来分发Vue组件中的可复用功能； 一个Mixin对象可以包含任何组件选项； 当组件使用Mixin对象时，所有Mixin对象的选项将被 混合 进入该组件本身的选项中；","head":[["meta",{"property":"og:url","content":"https://brain.sunguoqi.com/web/vue/learn/essential/%E9%80%BB%E8%BE%91%E5%A4%8D%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"Waite Wang"}],["meta",{"property":"og:title","content":"Mixins, extends 以及组合式函数"}],["meta",{"property":"og:description","content":"认识 Mixin 在 Vue 2 中，mixins 是创建可重用组件逻辑的主要方式。尽管在 Vue 3 中保留了 mixins 支持，但对于组件间的逻辑复用，使用组合式 API 的组合式函数是现在更推荐的方式。 目前我们是使用组件化的方式在开发整个Vue的应用程序，但是组件和组件之间有时候会存在相同的代码逻辑，我们希望对相同的代码逻辑进行抽取。 在Vue2和Vue3中都支持的一种方式就是使用Mixin来完成： Mixin提供了一种非常灵活的方式，来分发Vue组件中的可复用功能； 一个Mixin对象可以包含任何组件选项； 当组件使用Mixin对象时，所有Mixin对象的选项将被 混合 进入该组件本身的选项中；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-15T07:04:58.000Z"}],["meta",{"property":"article:published_time","content":"2023-12-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-15T07:04:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Mixins, extends 以及组合式函数\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-15T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-15T07:04:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"认识 Mixin","slug":"认识-mixin","link":"#认识-mixin","children":[{"level":3,"title":"基本使用","slug":"基本使用","link":"#基本使用","children":[]},{"level":3,"title":"Mixin的合并规则","slug":"mixin的合并规则","link":"#mixin的合并规则","children":[]},{"level":3,"title":"全局混入 Mixin","slug":"全局混入-mixin","link":"#全局混入-mixin","children":[]}]},{"level":2,"title":"externds","slug":"externds","link":"#externds","children":[]},{"level":2,"title":"组合式函数","slug":"组合式函数","link":"#组合式函数","children":[{"level":3,"title":"什么是“组合式函数”？","slug":"什么是-组合式函数","link":"#什么是-组合式函数","children":[]},{"level":3,"title":"鼠标跟踪器示例","slug":"鼠标跟踪器示例","link":"#鼠标跟踪器示例","children":[]},{"level":3,"title":"异步状态示例","slug":"异步状态示例","link":"#异步状态示例","children":[]},{"level":3,"title":"接收响应式状态","slug":"接收响应式状态","link":"#接收响应式状态","children":[]}]},{"level":2,"title":"约定和最佳实践","slug":"约定和最佳实践","link":"#约定和最佳实践","children":[{"level":3,"title":"命名","slug":"命名","link":"#命名","children":[]},{"level":3,"title":"输入参数","slug":"输入参数","link":"#输入参数","children":[]},{"level":3,"title":"返回值","slug":"返回值","link":"#返回值","children":[]},{"level":3,"title":"副作用","slug":"副作用","link":"#副作用","children":[]},{"level":3,"title":"使用限制","slug":"使用限制","link":"#使用限制","children":[]},{"level":3,"title":"通过抽取组合式函数改善代码结构","slug":"通过抽取组合式函数改善代码结构","link":"#通过抽取组合式函数改善代码结构","children":[]},{"level":3,"title":"在选项式 API 中使用组合式函数","slug":"在选项式-api-中使用组合式函数","link":"#在选项式-api-中使用组合式函数","children":[]}]},{"level":2,"title":"对比","slug":"对比","link":"#对比","children":[{"level":3,"title":"和无渲染组件的对比","slug":"和无渲染组件的对比","link":"#和无渲染组件的对比","children":[]}]}],"git":{"createdTime":1702623898000,"updatedTime":1702623898000,"contributors":[{"name":"Waite Wang","email":"waite@waite.wang","commits":1}]},"readingTime":{"minutes":14.98,"words":4493},"filePathRelative":"web/vue/learn/essential/逻辑复用.md","localizedDate":"2023年12月15日","excerpt":"<h2> 认识 Mixin</h2>\\n<blockquote>\\n<p>在 Vue 2 中，mixins 是创建可重用组件逻辑的主要方式。尽管在 Vue 3 中保留了 mixins 支持，但对于组件间的逻辑复用，<a href=\\"https://cn.vuejs.org/guide/reusability/composables.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">使用组合式 API 的组合式函数</a>是现在更推荐的方式。</p>\\n</blockquote>\\n<ul>\\n<li>目前我们是使用组件化的方式在开发整个Vue的应用程序，但是组件和组件之间有时候会存在相同的代码逻辑，我们希望对相同的代码逻辑进行抽取。</li>\\n<li>在Vue2和Vue3中都支持的一种方式就是使用Mixin来完成：\\n<ul>\\n<li>Mixin提供了一种非常灵活的方式，来分发Vue组件中的可复用功能；</li>\\n<li>一个Mixin对象可以包含任何组件选项；</li>\\n<li>当组件使用Mixin对象时，所有Mixin对象的选项将被 混合 进入该组件本身的选项中；</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
