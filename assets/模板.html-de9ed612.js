import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as p,a,t as e,e as n}from"./app-4df96303.js";const o={},l=n(`<p>我们接着上一章节的项目将在 HelloWorld 目录底下创建 templates 目录并建立<code>hello.html</code>文件，整个目录结构如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>HelloWorld/
|-- HelloWorld
|   |-- __init__.py
|   |-- __init__.pyc
|   |-- settings.py
|   |-- settings.pyc
|   |-- urls.py
|   |-- urls.pyc
|   |-- views.py
|   |-- views.pyc
|   |-- wsgi.py
|   \`-- wsgi.pyc
|-- manage.py
\`-- templates
    \`-- hello.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- hello.html --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span> {{ hello }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>我们现在修改 views.py，增加一个新的对象，用于向模板提交数据：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># views.py </span>
<span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>
    context <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Hello World11!&#39;</span><span class="token punctuation">}</span>
    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">&#39;hello.html&#39;</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># urls</span>
<span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path

<span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> views

urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
    path<span class="token punctuation">(</span><span class="token string">&quot;hello/&quot;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>hello_world<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;hello_world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://qiniu.waite.wang/6BC47EC1-ABC8-4EA7-A536-756648FBBC20.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="django-模板标签" tabindex="-1"><a class="header-anchor" href="#django-模板标签" aria-hidden="true">#</a> Django 模板标签</h2><h3 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h3><p>模板语法：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>view：｛&quot;HTML变量名&quot; : &quot;views变量名&quot;｝
HTML：｛｛变量名｝｝
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># views.py</span>

<span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render

<span class="token keyword">def</span> <span class="token function">runoob</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span> 
  views_name <span class="token operator">=</span> <span class="token string">&quot;菜鸟教程&quot;</span> 
  <span class="token keyword">return</span>  render<span class="token punctuation">(</span>request<span class="token punctuation">,</span><span class="token string">&quot;runoob.html&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span>views_name<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>templates 中的 runoob.html ：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;p&gt;{{ name }}&lt;/p&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://qiniu.waite.wang/202406011609908.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="列表" tabindex="-1"><a class="header-anchor" href="#列表" aria-hidden="true">#</a> 列表</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render

<span class="token keyword">def</span> <span class="token function">runoob</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>
    views_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;菜鸟教程1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;菜鸟教程2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;菜鸟教程3&quot;</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">&quot;runoob.html&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;views_list&quot;</span><span class="token punctuation">:</span> views_list<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ views_list }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>   # 取出整个列表
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ views_list.0 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span> # 取出列表的第一个元素
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://qiniu.waite.wang/202406011612712.png" alt="image-20240601161226606" tabindex="0" loading="lazy"><figcaption>image-20240601161226606</figcaption></figure><h3 id="过滤器" tabindex="-1"><a class="header-anchor" href="#过滤器" aria-hidden="true">#</a> 过滤器</h3><p>模板语法：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{{ 变量名 | 过滤器：可选参数 }}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>模板过滤器可以在变量被显示前修改它，过滤器使用管道字符，如下所示：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{{ name|lower }}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,24),c=n(`<p>过滤管道可以被* 套接* ，既是说，一个过滤器管道的输出又可以作为下一个管道的输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{{ my_list|first|upper }}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以上实例将第一个元素并将其转化为大写。</p><p>有些过滤器有参数。 过滤器的参数跟随冒号之后并且总是以双引号包含。 例如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{{ bio|truncatewords:&quot;30&quot; }}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个将显示变量 bio 的前30个词。</p><p>其他过滤器：</p><ul><li><p>addslashes : 添加反斜杠到任何反斜杠、单引号或者双引号前面。</p></li><li><p>date : 按指定的格式字符串参数格式化 date 或者 datetime 对象，实例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{{ pub_date|date:&quot;F j, Y&quot; }}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>length : 返回变量的长度。</p></li></ul><p><strong>default</strong></p><p>default 为变量提供一个默认值。</p><p>如果 views 传的变量的布尔值是 false，则使用指定的默认值。</p><p>以下值为 false：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0  0.0  False  0j  &quot;&quot;  []  ()  set()  {}  None
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render

<span class="token keyword">def</span> <span class="token function">runoob</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name <span class="token operator">=</span><span class="token number">0</span>
    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">&quot;runoob.html&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> name<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>{{ name|default:&quot;菜鸟教程666&quot; }}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://qiniu.waite.wang/202406011614220.png" alt="image-20240601161412458" tabindex="0" loading="lazy"><figcaption>image-20240601161412458</figcaption></figure><p><strong>length</strong></p><p>返回对象的长度，适用于字符串和列表。</p><p>字典返回的是键值对的数量，集合返回的是去重后的长度。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>{{ name|length}}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>filesizeformat</strong></p><p>以更易读的方式显示文件的大小（即&#39;13 KB&#39;, &#39;4.1 MB&#39;, &#39;102 bytes&#39;等）。</p><p>字典返回的是键值对的数量，集合返回的是去重后的长度。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render

<span class="token keyword">def</span> <span class="token function">runoob</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>
    num<span class="token operator">=</span><span class="token number">1024</span>
    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">&quot;runoob.html&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;num&quot;</span><span class="token punctuation">:</span> num<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{{ num|filesizeformat}}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://qiniu.waite.wang/202406011615570.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p><strong>date</strong></p><p>根据给定格式对一个日期变量进行格式化。</p><p>格式 <strong>Y-m-d H:i:s</strong>返回 <strong>年-月-日 小时:分钟:秒</strong> 的格式时间。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render

<span class="token keyword">def</span> <span class="token function">runoob</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">import</span> datetime
    now  <span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">&quot;runoob.html&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span> now<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{{ time|date:&quot;Y-m-d&quot; }}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://qiniu.waite.wang/202406011617906.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p><strong>truncatechars</strong></p><p>如果字符串包含的字符总个数多于指定的字符数量，那么会被截断掉后面的部分。</p><p>截断的字符串将以 <strong>...</strong> 结尾。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render

<span class="token keyword">def</span> <span class="token function">runoob</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>
    views_str <span class="token operator">=</span> <span class="token string">&quot;菜鸟教程&quot;</span>
    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">&quot;runoob.html&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;views_str&quot;</span><span class="token punctuation">:</span> views_str<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{{ views_str|truncatechars:2}}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://qiniu.waite.wang/202406011617607.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p><strong>safe</strong></p><p>将字符串标记为安全，不需要转义。</p><p>要保证 views.py 传过来的数据绝对安全，才能用 safe。</p><p>和后端 views.py 的 mark_safe 效果相同。</p><p>Django 会自动对 views.py 传到HTML文件中的标签语法进行转义，令其语义失效。加 safe 过滤器是告诉 Django 该数据是安全的，不必对其进行转义，可以让该数据语义生效。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render

<span class="token keyword">def</span> <span class="token function">runoob</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>
    views_str <span class="token operator">=</span> <span class="token string">&quot;&lt;a href=&#39;https://www.runoob.com/&#39;&gt;点击跳转&lt;/a&gt;&quot;</span>
    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">&quot;runoob.html&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;views_str&quot;</span><span class="token punctuation">:</span> views_str<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{{ views_str|safe }}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>对比</p></blockquote><figure><img src="https://qiniu.waite.wang/202406011619757.png" alt="image-20240601161931407" tabindex="0" loading="lazy"><figcaption>image-20240601161931407</figcaption></figure><figure><img src="https://qiniu.waite.wang/202406011619704.png" alt="image-20240601161951788" tabindex="0" loading="lazy"><figcaption>image-20240601161951788</figcaption></figure><h3 id="if-else-标签" tabindex="-1"><a class="header-anchor" href="#if-else-标签" aria-hidden="true">#</a> if/else 标签</h3><p>基本语法格式如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{% if condition %}
     ... display
{% endif %}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{% if condition1 %}
   ... display 1
{% elif condition2 %}
   ... display 2
{% else %}
   ... display 3
{% endif %}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据条件判断是否输出。if/else 支持嵌套。</p><p>{% if %} 标签接受 and ， or 或者 not 关键字来对多个变量做判断 ，或者对变量取反（ not )，例如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{% if athlete_list and coach_list %}
     athletes 和 coaches 变量都是可用的。
{% endif %}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="for-标签" tabindex="-1"><a class="header-anchor" href="#for-标签" aria-hidden="true">#</a> for 标签</h3><p>{% for %} 允许我们在一个序列上迭代。</p><p>与 Python 的 for 语句的情形类似，循环语法是 for X in Y ，Y 是要迭代的序列而 X 是在每一个特定的循环中使用的变量名称。</p><p>每一次循环中，模板系统会渲染在 <strong>{% for %}</strong> 和 <strong>{% endfor %}</strong> 之间的所有内容。</p><p>例如，给定一个运动员列表 athlete_list 变量，我们可以使用下面的代码来显示这个列表：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;ul&gt;
{% for athlete in athlete_list %}
    &lt;li&gt;{{ athlete.name }}&lt;/li&gt;
{% endfor %}
&lt;/ul&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>给标签增加一个 reversed 使得该列表被反向迭代：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{% for athlete in athlete_list reversed %}
...
{% endfor %}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>遍历字典</strong>: 可以直接用字典 <strong>.items</strong> 方法，用变量的解包分别获取键和值。</p>`,65),u=n(`<ul><li>forloop.counter: 顺序获取循环序号，从 1 开始计算</li><li>forloop.counter0: 顺序获取循环序号，从 0 开始计算</li><li>forloop.revcounter: 倒序获取循环序号，结尾序号为 1</li><li>forloop.revcounter0: 倒序获取循环序号，结尾序号为 0</li><li>forloop.first（一般配合if标签使用）: 第一条数据返回 True，其他数据返回 False</li><li>forloop.last（一般配合if标签使用）: 最后一条数据返回 True，其他数据返回 False</li></ul><h2 id="模块化" tabindex="-1"><a class="header-anchor" href="#模块化" aria-hidden="true">#</a> 模块化</h2><figure><img src="https://qiniu.waite.wang/202406051509154.png" alt="image-20240605150947706" tabindex="0" loading="lazy"><figcaption>image-20240605150947706</figcaption></figure><p>调整 <code>djangoProject/urls.py</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path<span class="token punctuation">,</span> include

<span class="token keyword">from</span> app <span class="token keyword">import</span> views

<span class="token comment"># from . import views</span>

urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
  path<span class="token punctuation">(</span><span class="token string">&#39;book/&#39;</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span><span class="token string">&quot;app.urls&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>app/urls.py</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path
<span class="token keyword">from</span> app <span class="token keyword">import</span> views

urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
  path<span class="token punctuation">(</span><span class="token string">&quot;home&quot;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>home<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;home&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  path<span class="token punctuation">(</span><span class="token string">&quot;add&quot;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>add_book<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;add_book&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  path<span class="token punctuation">(</span><span class="token string">&quot;query&quot;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>query_book<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;query_book&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  path<span class="token punctuation">(</span><span class="token string">&quot;delete&quot;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>delete_book<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;delete_book&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  path<span class="token punctuation">(</span><span class="token string">&quot;update&quot;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>update_book<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;update_book&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://qiniu.waite.wang/202406051511917.png" alt="image-20240605151102668" tabindex="0" loading="lazy"><figcaption>image-20240605151102668</figcaption></figure>`,8);function d(s,r){return i(),p("div",null,[l,a("p",null,e(s.name)+" 变量被过滤器 lower 处理后，文档大写转换文本为小写。",1),c,a("p",null,"在 {% for %} 标签里可以通过 "+e(s.forloop)+" 变量获取循环序号。",1),u])}const g=t(o,[["render",d],["__file","模板.html.vue"]]);export{g as default};
