const e=JSON.parse('{"key":"v-0d302623","path":"/web/vue/learn/cli/Webpack.html","title":"Webpack","lang":"zh-CN","frontmatter":{"title":"Webpack","icon":"post","order":1,"date":"2023-11-15T00:00:00.000Z","description":"认识webpack 事实上随着前端的快速发展，目前前端的开发已经变的越来越复杂了： 比如开发过程中我们需要通过模块化的方式来开发； 比如也会使用一些高级的特性来加快我们的开发效率或者安全性，比如通过ES6+、TypeScript开发脚本逻辑， 通过sass、less等方式来编写 css 样式代码； 比如开发过程中，我们还希望实时的监听文件的变化来并且反映到浏览器上，提高开发的效率； 比如开发完成后我们还需要将代码进行压缩、合并以及其他相关的优化； 但是对于很多的前端开发者来说，并不需要思考这些问题，日常的开发中根本就没有面临这些问题： 这是因为目前前端开发我们通常都会直接使用三大框架来开发：Vue、React、Angular； 但是事实上，这三大框架的创建过程我们都是借助于脚手架（CLI）的； 事实上Vue-CLI、create-react-app、Angular-CLI都是基于webpack来帮助我们支持模块化、less、 TypeScript、打包优化等的；","head":[["meta",{"property":"og:url","content":"https://brain.sunguoqi.com/web/vue/learn/cli/Webpack.html"}],["meta",{"property":"og:site_name","content":"Waite Wang"}],["meta",{"property":"og:title","content":"Webpack"}],["meta",{"property":"og:description","content":"认识webpack 事实上随着前端的快速发展，目前前端的开发已经变的越来越复杂了： 比如开发过程中我们需要通过模块化的方式来开发； 比如也会使用一些高级的特性来加快我们的开发效率或者安全性，比如通过ES6+、TypeScript开发脚本逻辑， 通过sass、less等方式来编写 css 样式代码； 比如开发过程中，我们还希望实时的监听文件的变化来并且反映到浏览器上，提高开发的效率； 比如开发完成后我们还需要将代码进行压缩、合并以及其他相关的优化； 但是对于很多的前端开发者来说，并不需要思考这些问题，日常的开发中根本就没有面临这些问题： 这是因为目前前端开发我们通常都会直接使用三大框架来开发：Vue、React、Angular； 但是事实上，这三大框架的创建过程我们都是借助于脚手架（CLI）的； 事实上Vue-CLI、create-react-app、Angular-CLI都是基于webpack来帮助我们支持模块化、less、 TypeScript、打包优化等的；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-14T17:36:47.000Z"}],["meta",{"property":"article:published_time","content":"2023-11-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-14T17:36:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Webpack\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-15T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-14T17:36:47.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"认识webpack","slug":"认识webpack","link":"#认识webpack","children":[]},{"level":2,"title":"Webpack到底是什么呢？","slug":"webpack到底是什么呢","link":"#webpack到底是什么呢","children":[]},{"level":2,"title":"Vue项目加载的文件有哪些呢？","slug":"vue项目加载的文件有哪些呢","link":"#vue项目加载的文件有哪些呢","children":[]},{"level":2,"title":"Webpack的使用","slug":"webpack的使用","link":"#webpack的使用","children":[{"level":3,"title":"Webpack的安装","slug":"webpack的安装","link":"#webpack的安装","children":[]},{"level":3,"title":"Webpack的默认打包","slug":"webpack的默认打包","link":"#webpack的默认打包","children":[]},{"level":3,"title":"webpack 局部安装","slug":"webpack-局部安装","link":"#webpack-局部安装","children":[]}]},{"level":2,"title":"Webpack配置","slug":"webpack配置","link":"#webpack配置","children":[{"level":3,"title":"Webpack 配置文件","slug":"webpack-配置文件","link":"#webpack-配置文件","children":[]},{"level":3,"title":"指定配置文件","slug":"指定配置文件","link":"#指定配置文件","children":[]}]},{"level":2,"title":"Webpack的依赖","slug":"webpack的依赖","link":"#webpack的依赖","children":[]},{"level":2,"title":"loader的使用","slug":"loader的使用","link":"#loader的使用","children":[{"level":3,"title":"css-loader 的使用","slug":"css-loader-的使用","link":"#css-loader-的使用","children":[]},{"level":3,"title":"style-loader","slug":"style-loader","link":"#style-loader","children":[]},{"level":3,"title":"Less工具处理","slug":"less工具处理","link":"#less工具处理","children":[]},{"level":3,"title":"postcss-loader(认识)","slug":"postcss-loader-认识","link":"#postcss-loader-认识","children":[]},{"level":3,"title":"file-loader","slug":"file-loader","link":"#file-loader","children":[]},{"level":3,"title":"url-loader","slug":"url-loader","link":"#url-loader","children":[]},{"level":3,"title":"字体文件加载","slug":"字体文件加载","link":"#字体文件加载","children":[]}]},{"level":2,"title":"文件命名规则","slug":"文件命名规则","link":"#文件命名规则","children":[{"level":3,"title":"设置文件名称","slug":"设置文件名称","link":"#设置文件名称","children":[]},{"level":3,"title":"设置文件的存放路径","slug":"设置文件的存放路径","link":"#设置文件的存放路径","children":[]}]},{"level":2,"title":"asset module type","slug":"asset-module-type","link":"#asset-module-type","children":[{"level":3,"title":"asset module type的使用","slug":"asset-module-type的使用","link":"#asset-module-type的使用","children":[]}]},{"level":2,"title":"Plugin","slug":"plugin","link":"#plugin","children":[{"level":3,"title":"CleanWebpackPlugin","slug":"cleanwebpackplugin","link":"#cleanwebpackplugin","children":[]},{"level":3,"title":"HtmlWebpackPlugin","slug":"htmlwebpackplugin","link":"#htmlwebpackplugin","children":[]},{"level":3,"title":"DefinePlugin","slug":"defineplugin","link":"#defineplugin","children":[]},{"level":3,"title":"CopyWebpackPlugin","slug":"copywebpackplugin","link":"#copywebpackplugin","children":[]}]},{"level":2,"title":"Mode配置列表","slug":"mode配置列表","link":"#mode配置列表","children":[]}],"git":{"createdTime":1699983407000,"updatedTime":1699983407000,"contributors":[{"name":"waite0603","email":"waite@waite.wang","commits":1}]},"readingTime":{"minutes":19.82,"words":5946},"filePathRelative":"web/vue/learn/cli/Webpack.md","localizedDate":"2023年11月15日","excerpt":"<h2> 认识webpack</h2>\\n<ul>\\n<li>\\n<p>事实上随着前端的快速发展，目前前端的开发已经变的越来越复杂了：</p>\\n<ul>\\n<li>比如开发过程中我们需要通过模块化的方式来开发；</li>\\n<li>比如也会使用一些高级的特性来加快我们的开发效率或者安全性，比如通过ES6+、TypeScript开发脚本逻辑， 通过sass、less等方式来编写 css 样式代码；</li>\\n<li>比如开发过程中，我们还希望实时的监听文件的变化来并且反映到浏览器上，提高开发的效率；</li>\\n<li>比如开发完成后我们还需要将代码进行压缩、合并以及其他相关的优化；</li>\\n</ul>\\n</li>\\n<li>\\n<p>但是对于很多的前端开发者来说，并不需要思考这些问题，日常的开发中根本就没有面临这些问题：</p>\\n<ul>\\n<li>这是因为目前前端开发我们通常都会直接使用三大框架来开发：Vue、React、Angular；</li>\\n<li>但是事实上，这三大框架的创建过程我们都是借助于脚手架（CLI）的；</li>\\n<li>事实上Vue-CLI、create-react-app、Angular-CLI都是基于webpack来帮助我们支持模块化、less、 TypeScript、打包优化等的；</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
