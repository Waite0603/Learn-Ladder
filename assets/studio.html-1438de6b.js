import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as g,o as n,c as o,a as i,b as a,d as p,e as r}from"./app-a3fb137b.js";const l={},c=i("h2",{id:"安装",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),a(" 安装")],-1),f={href:"https://developer.huawei.com/consumer/cn/deveco-studio/#download",target:"_blank",rel:"noopener noreferrer"},d=i("li",null,"正常安装包, 下一步安装",-1),s=r('<figure><img src="https://qiniu.waite.wang/202404171217774.png" alt="image-20240417121723826" tabindex="0" loading="lazy"><figcaption>image-20240417121723826</figcaption></figure><ol start="3"><li>配置开发环境</li></ol><figure><img src="https://qiniu.waite.wang/202404171218425.png" alt="image-20240417121810196" tabindex="0" loading="lazy"><figcaption>image-20240417121810196</figcaption></figure><p>选择 Agree, 进入配置选择页面, 选择不导入配置</p><figure><img src="https://qiniu.waite.wang/202404171218109.png" alt="image-20240417121841096" tabindex="0" loading="lazy"><figcaption>image-20240417121841096</figcaption></figure><p>选择要安装的Node.is和hpm位置，其中ohpm是Open Harmony Package Management的缩写，也就是类似npm的包管理工具。这里有几点注意事项:</p><ul><li>如果电脑上已经有Node.js，但是版本不一致，建议选择让工具重新安装</li><li>如果电脑上已经有Node.js，并且版本一致，可以选择Local，指定node目录即可</li><li>如果电脑上对Node.is做了一些特殊的options配置，建议先移除</li><li>配置目录中不要出现中文、特殊字符，建议用默认路径</li></ul><figure><img src="https://qiniu.waite.wang/202404171219038.png" alt="image-20240417121951184" tabindex="0" loading="lazy"><figcaption>image-20240417121951184</figcaption></figure><p>选择Next后，进入HarmonyOs的SDK安装目录选择页面以及同意协议, 配置目录/ 同意协议后下一步即可</p><h2 id="环境错误处理" tabindex="-1"><a class="header-anchor" href="#环境错误处理" aria-hidden="true">#</a> 环境错误处理</h2><p>在安装的过程中，如果出现类似下面的错误</p><figure><img src="https://qiniu.waite.wang/202404171221142.png" alt="image-20240417122147373" tabindex="0" loading="lazy"><figcaption>image-20240417122147373</figcaption></figure><p>一般就是因为你本地原本的Node.is配置异常导致的，建议清理环境变量中对于Node.is的配置之后再重试 重试时无需重新安装，而是再次打开DevEco Studio，点击界面左下方的 ? 按钮: 选择第一个 Diagnose Development Environment 进入诊断页面, 这里会提示安装出现问题的选项，点击异常项后面的set it up now即可重新安装 如果所有问题都已经解决，最终重试后等待所有项都是 √即可</p><figure><img src="https://qiniu.waite.wang/202404171222747.png" alt="image-20240417122238577" tabindex="0" loading="lazy"><figcaption>image-20240417122238577</figcaption></figure><figure><img src="https://qiniu.waite.wang/202404171223032.png" alt="image-20240417122305876" tabindex="0" loading="lazy"><figcaption>image-20240417122305876</figcaption></figure><h2 id="中文设置" tabindex="-1"><a class="header-anchor" href="#中文设置" aria-hidden="true">#</a> 中文设置</h2><p>设置-&gt;插件-&gt;已安装-&gt;其他工具-&gt;chinese-&gt;启用即可</p><figure><img src="https://qiniu.waite.wang/202404171224670.png" alt="image-20240417122439395" tabindex="0" loading="lazy"><figcaption>image-20240417122439395</figcaption></figure><h2 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目" aria-hidden="true">#</a> 创建项目</h2><p>Create Project -&gt; Empty Ability -&gt; 按要求填写目录即可</p><p>此时项目内已有 Hello World 基础代码, 点右侧预览器即可预览效果</p><figure><img src="https://qiniu.waite.wang/202404171229268.png" alt="image-20240417122904349" tabindex="0" loading="lazy"><figcaption>image-20240417122904349</figcaption></figure><h2 id="模拟器安装" tabindex="-1"><a class="header-anchor" href="#模拟器安装" aria-hidden="true">#</a> 模拟器安装</h2><p>我们也可以利用设备模拟器来查看更真实的效果。不过需要先配置模拟器</p><p>首先，选择主菜单中的Tools，找到其中的Device Manager，即设备管理</p><figure><img src="https://qiniu.waite.wang/202404171229476.png" alt="image-20240417122932610" tabindex="0" loading="lazy"><figcaption>image-20240417122932610</figcaption></figure><p>设备可以是 远端设备 ，也可以是 本地设备 ，我们以本地设备为例。</p><p>默认本地没有任何设备，选择install来安装一个</p><figure><img src="https://qiniu.waite.wang/202404171229123.png" alt="image-20240417122953229" tabindex="0" loading="lazy"><figcaption>image-20240417122953229</figcaption></figure><p>首次点击时，会弹出一个窗口，下载必要的SDK依赖, 安装完下一步即可</p><p>进入创建模拟器页面，选择New Emulator:</p><figure><img src="https://qiniu.waite.wang/202404171230423.png" alt="image-20240417123032281" tabindex="0" loading="lazy"><figcaption>image-20240417123032281</figcaption></figure><figure><img src="https://qiniu.waite.wang/202404171230731.png" alt="image-20240417123043858" tabindex="0" loading="lazy"><figcaption>image-20240417123043858</figcaption></figure><p>选择api9版本，不过需要注意，首次进入此页面，需要下载手机设备需要的系统，大概2.2G，需要耐心等待:</p><figure><img src="https://qiniu.waite.wang/202404171231835.png" alt="image-20240417123103057" tabindex="0" loading="lazy"><figcaption>image-20240417123103057</figcaption></figure><figure><img src="https://qiniu.waite.wang/202404171231885.png" alt="image-20240417123115419" tabindex="0" loading="lazy"><figcaption>image-20240417123115419</figcaption></figure><p>创建完成后，在设备列表中会出现一个本地设备，点击后面的运行按钮即可启动设备模拟器</p><figure><img src="https://qiniu.waite.wang/202404171231949.png" alt="image-20240417123136573" tabindex="0" loading="lazy"><figcaption>image-20240417123136573</figcaption></figure><p>启动后如下</p><figure><img src="https://qiniu.waite.wang/202404171231029.png" alt="image-20240417123155182" tabindex="0" loading="lazy"><figcaption>image-20240417123155182</figcaption></figure><p>然后，在应用启动位置选择刚刚添加的模拟器, 然后点击启动即可</p><figure><img src="https://qiniu.waite.wang/202404171232015.png" alt="image-20240417123220059" tabindex="0" loading="lazy"><figcaption>image-20240417123220059</figcaption></figure><figure><img src="https://qiniu.waite.wang/202404171232136.png" alt="image-20240417123227197" tabindex="0" loading="lazy"><figcaption>image-20240417123227197</figcaption></figure><p>效果如下</p><figure><img src="https://qiniu.waite.wang/202404171232051.png" alt="image-20240417123240912" tabindex="0" loading="lazy"><figcaption>image-20240417123240912</figcaption></figure>',45);function u(m,h){const e=g("ExternalLinkIcon");return n(),o("div",null,[c,i("ol",null,[i("li",null,[i("a",f,[a("下载安装包"),p(e)])]),d]),s])}const b=t(l,[["render",u],["__file","studio.html.vue"]]);export{b as default};
