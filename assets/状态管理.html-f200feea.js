const e=JSON.parse('{"key":"v-ccac41e8","path":"/web/harmony/%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86.html","title":"状态管理","lang":"zh-CN","frontmatter":{"title":"状态管理","icon":"post","order":4,"date":"2024-04-21T00:00:00.000Z","description":"在声明式UI编程框架中，UI是程序状态的运行结果，用户构建了一个UI模型，其中应用的运行时的状态是参数。当参数改变时，UI作为返回结果，也将进行对应的改变。这些运行时的状态变化所带来的UI的重新渲染，在ArkUI中统称为状态管理机制。 自定义组件拥有变量，变量必须被装饰器装饰才可以成为状态变量，状态变量的改变会引起UI的渲染刷新。如果不使用状态变量，UI只能在初始化时渲染，后续将不会再刷新。 下图展示了State和View（UI）之间的关系。 https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-state-management-overview-0000001524537145-V2","head":[["meta",{"property":"og:url","content":"https://brain.sunguoqi.com/web/harmony/%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"Waite Wang"}],["meta",{"property":"og:title","content":"状态管理"}],["meta",{"property":"og:description","content":"在声明式UI编程框架中，UI是程序状态的运行结果，用户构建了一个UI模型，其中应用的运行时的状态是参数。当参数改变时，UI作为返回结果，也将进行对应的改变。这些运行时的状态变化所带来的UI的重新渲染，在ArkUI中统称为状态管理机制。 自定义组件拥有变量，变量必须被装饰器装饰才可以成为状态变量，状态变量的改变会引起UI的渲染刷新。如果不使用状态变量，UI只能在初始化时渲染，后续将不会再刷新。 下图展示了State和View（UI）之间的关系。 https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-state-management-overview-0000001524537145-V2"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-25T14:31:41.000Z"}],["meta",{"property":"article:published_time","content":"2024-04-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-25T14:31:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"状态管理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-25T14:31:41.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":2,"title":"管理组件拥有的状态","slug":"管理组件拥有的状态","link":"#管理组件拥有的状态","children":[{"level":3,"title":"@State装饰器：组件内状态","slug":"state装饰器-组件内状态","link":"#state装饰器-组件内状态","children":[]},{"level":3,"title":"@Prop/ @Link 装饰器","slug":"prop-link-装饰器","link":"#prop-link-装饰器","children":[]},{"level":3,"title":"@Observed装饰器和@ObjectLink装饰器：嵌套类对象属性变化","slug":"observed装饰器和-objectlink装饰器-嵌套类对象属性变化","link":"#observed装饰器和-objectlink装饰器-嵌套类对象属性变化","children":[]}]}],"git":{"createdTime":1713795436000,"updatedTime":1714055501000,"contributors":[{"name":"Waite Wang","email":"waite@waite.wang","commits":3}]},"readingTime":{"minutes":9.04,"words":2712},"filePathRelative":"web/harmony/状态管理.md","localizedDate":"2024年4月21日","excerpt":"<p>在声明式UI编程框架中，UI是程序状态的运行结果，用户构建了一个UI模型，其中应用的运行时的状态是参数。当参数改变时，UI作为返回结果，也将进行对应的改变。这些运行时的状态变化所带来的UI的重新渲染，在ArkUI中统称为状态管理机制。</p>\\n<p>自定义组件拥有变量，变量必须被装饰器装饰才可以成为状态变量，状态变量的改变会引起UI的渲染刷新。如果不使用状态变量，UI只能在初始化时渲染，后续将不会再刷新。 下图展示了State和View（UI）之间的关系。</p>\\n<p>https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-state-management-overview-0000001524537145-V2</p>","autoDesc":true}');export{e as data};
