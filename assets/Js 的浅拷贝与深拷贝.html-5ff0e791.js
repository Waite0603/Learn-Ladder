const e=JSON.parse('{"key":"v-2e689c92","path":"/web/js/Js%20%E7%9A%84%E6%B5%85%E6%8B%B7%E8%B4%9D%E4%B8%8E%E6%B7%B1%E6%8B%B7%E8%B4%9D.html","title":"Js 的浅拷贝与深拷贝","lang":"zh-CN","frontmatter":{"title":"Js 的浅拷贝与深拷贝","icon":"post","order":1,"date":"2023-10-30T00:00:00.000Z","description":"数据类型 在探讨深浅拷贝之前，我们先梳理一下js中的数据类型，js的数据类型分为两类：基本数据类型和引用数据类型 前者是存储在栈内存中，后者是将其地址存在栈内存中，而真实数据存储在堆内存中。 如下图所示，基本类型如number、string、boolean、Null和 undefined 等存储在栈内存中，而引用数据类型如 Array、Object 和函数等则是分别存储数据1的地址、数据2的地址和数据3的地址。","head":[["meta",{"property":"og:url","content":"https://brain.sunguoqi.com/web/js/Js%20%E7%9A%84%E6%B5%85%E6%8B%B7%E8%B4%9D%E4%B8%8E%E6%B7%B1%E6%8B%B7%E8%B4%9D.html"}],["meta",{"property":"og:site_name","content":"Waite Wang"}],["meta",{"property":"og:title","content":"Js 的浅拷贝与深拷贝"}],["meta",{"property":"og:description","content":"数据类型 在探讨深浅拷贝之前，我们先梳理一下js中的数据类型，js的数据类型分为两类：基本数据类型和引用数据类型 前者是存储在栈内存中，后者是将其地址存在栈内存中，而真实数据存储在堆内存中。 如下图所示，基本类型如number、string、boolean、Null和 undefined 等存储在栈内存中，而引用数据类型如 Array、Object 和函数等则是分别存储数据1的地址、数据2的地址和数据3的地址。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-30T11:56:24.000Z"}],["meta",{"property":"article:published_time","content":"2023-10-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-30T11:56:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Js 的浅拷贝与深拷贝\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-30T11:56:24.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[]},{"level":2,"title":"深浅拷贝","slug":"深浅拷贝","link":"#深浅拷贝","children":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]}]},{"level":2,"title":"Js 中的深浅拷贝","slug":"js-中的深浅拷贝","link":"#js-中的深浅拷贝","children":[{"level":3,"title":"浅拷贝","slug":"浅拷贝","link":"#浅拷贝","children":[]},{"level":3,"title":"深拷贝","slug":"深拷贝","link":"#深拷贝","children":[]}]},{"level":2,"title":"Vue 中的深拷贝实现","slug":"vue-中的深拷贝实现","link":"#vue-中的深拷贝实现","children":[]}],"git":{"createdTime":1698666984000,"updatedTime":1698666984000,"contributors":[{"name":"waite0603","email":"waite@waite.wang","commits":1}]},"readingTime":{"minutes":4.41,"words":1323},"filePathRelative":"web/js/Js 的浅拷贝与深拷贝.md","localizedDate":"2023年10月30日","excerpt":"<h2> 数据类型</h2>\\n<ol>\\n<li>在探讨深浅拷贝之前，我们先梳理一下js中的数据类型，js的数据类型分为两类：基本数据类型和引用数据类型</li>\\n<li>前者是存储在栈内存中，后者是将其地址存在栈内存中，而真实数据存储在堆内存中。</li>\\n<li>如下图所示，基本类型如number、string、boolean、Null和 undefined 等存储在栈内存中，而引用数据类型如 Array、Object 和函数等则是分别存储数据1的地址、数据2的地址和数据3的地址。</li>\\n</ol>\\n<figure><img src=\\"https://qiniu.waite.wang/202310301908367.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>","autoDesc":true}');export{e as data};
