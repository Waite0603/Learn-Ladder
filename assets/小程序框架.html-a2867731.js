import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as i,b as n,d as a,e,a as t}from"./app-547f1f11.js";const c={},u=n("p",null,"​ 小程序依赖于微信客户端提供的环境--宿主环境，小程序借助这个宿注环境提供的功能，可以实现网页无法实现的功能。让小程序更接近原生的app体验。",-1),r=n("p",null,"小程序开发框架的目标是通过尽可能简单、高效的方式让开发者可以在微信中开发具有原生 APP 体验的服务。",-1),d=n("figure",null,[n("img",{src:"https://qiniu.waite.wang/202401222127287.png",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),k={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/view/",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"WXML",-1),g=n("code",null,"WXSS",-1),h=n("code",null,"JavaScript",-1),b=t(`<p>​ 小程序的渲染层和逻辑层分别由2个线程管理：渲染层的界面使用了WebView 进行渲染；逻辑层采用JsCore线程运行JS脚本。一个小程序存在多个界面，所以渲染层存在多个WebView线程，这两个线程的通信会经由微信客户端（下文中也会采用Native来代指微信客户端）做中转，逻辑层发送网络请求也经由Native转发，小程序的通信模型下图所示。</p><figure><img src="https://qiniu.waite.wang/202401222127418.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="响应的数据绑定" tabindex="-1"><a class="header-anchor" href="#响应的数据绑定" aria-hidden="true">#</a> 响应的数据绑定</h2><p>框架的核心是一个响应的数据绑定系统，可以让数据与视图非常简单地保持同步。当做数据修改的时候，只需要在逻辑层修改数据，视图层就会做相应的更新。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- This is our View --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span> Hello {{name}}! <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>changeName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Click me! <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// This is our App Service.</span>
<span class="token comment">// This is our data.</span>
<span class="token keyword">var</span> helloData <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Weixin&#39;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Register a Page.</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> helloData<span class="token punctuation">,</span>
  <span class="token function-variable function">changeName</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// sent data change to view</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;MINA&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>开发者通过框架将逻辑层数据中的 <code>name</code> 与视图层的 <code>name</code> 进行了绑定，所以在页面一打开的时候会显示 <code>Hello Weixin!</code>；</li><li>当点击按钮的时候，视图层会发送 <code>changeName</code> 的事件给逻辑层，逻辑层找到并执行对应的事件处理函数；</li><li>回调函数触发后，逻辑层执行 <code>setData</code> 的操作，将 <code>data</code> 中的 <code>name</code> 从 <code>Weixin</code> 变为 <code>MINA</code>，因为该数据和视图层已经绑定了，从而视图层会自动改变为 <code>Hello MINA!</code>。</li></ul><h2 id="逻辑层" tabindex="-1"><a class="header-anchor" href="#逻辑层" aria-hidden="true">#</a> 逻辑层</h2><p>小程序开发框架的逻辑层使用 <code>JavaScript</code> 引擎为小程序提供开发 <code>JavaScript</code> 代码的运行环境以及微信小程序的特有功能。</p><p>逻辑层将数据进行处理后发送给视图层，同时接受视图层的事件反馈。</p>`,10),f=n("code",null,"JavaScript",-1),_={href:"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API",target:"_blank",rel:"noopener noreferrer"},x=n("p",null,[a("在 "),n("code",null,"JavaScript"),a(" 的基础上，我们增加了一些功能，以方便小程序的开发：")],-1),y=n("code",null,"App",-1),q=n("code",null,"Page",-1),w={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/app.html",target:"_blank",rel:"noopener noreferrer"},j={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page.html",target:"_blank",rel:"noopener noreferrer"},A=n("li",null,[a("增加 "),n("code",null,"getApp"),a(" 和 "),n("code",null,"getCurrentPages"),a(" 方法，分别用来获取 "),n("code",null,"App"),a(" 实例和当前页面栈。")],-1),N={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/api.html",target:"_blank",rel:"noopener noreferrer"},P={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/module.html#%E6%A8%A1%E5%9D%97%E5%8C%96",target:"_blank",rel:"noopener noreferrer"},S={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/module.html#%E6%96%87%E4%BB%B6%E4%BD%9C%E7%94%A8%E5%9F%9F",target:"_blank",rel:"noopener noreferrer"},W=t(`<p><strong>注意：小程序框架的逻辑层并非运行在浏览器中，因此 <code>JavaScript</code> 在 web 中一些能力都无法使用，如 <code>window</code>，<code>document</code> 等。</strong></p><h3 id="注册小程序" tabindex="-1"><a class="header-anchor" href="#注册小程序" aria-hidden="true">#</a> 注册小程序</h3><p>每个小程序都需要在 <code>app.js</code> 中调用 <code>App</code> 方法注册小程序实例，绑定生命周期回调函数、错误监听和页面不存在监听函数等。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// app.js</span>
<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">onLaunch</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something initial when launch.</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onShow</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something when show.</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onHide</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something when hide.</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onError</span> <span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">globalData</span><span class="token operator">:</span> <span class="token string">&#39;I am global data&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),D=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"属性"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"默认值"),n("th",{style:{"text-align":"left"}},"必填"),n("th",{style:{"text-align":"left"}},"说明"),n("th",{style:{"text-align":"left"}},"最低版本")])],-1),I={style:{"text-align":"left"}},V={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onLaunch-Object-object",target:"_blank",rel:"noopener noreferrer"},M=n("td",{style:{"text-align":"left"}},"function",-1),C=n("td",{style:{"text-align":"left"}},null,-1),R=n("td",{style:{"text-align":"left"}},"否",-1),X=n("td",{style:{"text-align":"left"}},"生命周期回调——监听小程序初始化。",-1),L=n("td",{style:{"text-align":"left"}},null,-1),E={style:{"text-align":"left"}},H={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onShow-Object-object",target:"_blank",rel:"noopener noreferrer"},B=n("td",{style:{"text-align":"left"}},"function",-1),T=n("td",{style:{"text-align":"left"}},null,-1),J=n("td",{style:{"text-align":"left"}},"否",-1),O=n("td",{style:{"text-align":"left"}},"生命周期回调——监听小程序启动或切前台。",-1),G=n("td",{style:{"text-align":"left"}},null,-1),z={style:{"text-align":"left"}},F={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onHide",target:"_blank",rel:"noopener noreferrer"},U=n("td",{style:{"text-align":"left"}},"function",-1),Y=n("td",{style:{"text-align":"left"}},null,-1),$=n("td",{style:{"text-align":"left"}},"否",-1),K=n("td",{style:{"text-align":"left"}},"生命周期回调——监听小程序切后台。",-1),Q=n("td",{style:{"text-align":"left"}},null,-1),Z={style:{"text-align":"left"}},nn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onError-String-error",target:"_blank",rel:"noopener noreferrer"},an=n("td",{style:{"text-align":"left"}},"function",-1),sn=n("td",{style:{"text-align":"left"}},null,-1),en=n("td",{style:{"text-align":"left"}},"否",-1),tn=n("td",{style:{"text-align":"left"}},"错误监听函数。",-1),pn=n("td",{style:{"text-align":"left"}},null,-1),on={style:{"text-align":"left"}},ln={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onPageNotFound-Object-object",target:"_blank",rel:"noopener noreferrer"},cn=n("td",{style:{"text-align":"left"}},"function",-1),un=n("td",{style:{"text-align":"left"}},null,-1),rn=n("td",{style:{"text-align":"left"}},"否",-1),dn=n("td",{style:{"text-align":"left"}},"页面不存在监听函数。",-1),kn={style:{"text-align":"left"}},vn={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html",target:"_blank",rel:"noopener noreferrer"},mn={style:{"text-align":"left"}},gn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onUnhandledRejection-Object-object",target:"_blank",rel:"noopener noreferrer"},hn=n("td",{style:{"text-align":"left"}},"function",-1),bn=n("td",{style:{"text-align":"left"}},null,-1),fn=n("td",{style:{"text-align":"left"}},"否",-1),_n=n("td",{style:{"text-align":"left"}},"未处理的 Promise 拒绝事件监听函数。",-1),xn={style:{"text-align":"left"}},yn={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html",target:"_blank",rel:"noopener noreferrer"},qn={style:{"text-align":"left"}},wn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onThemeChange-Object-object",target:"_blank",rel:"noopener noreferrer"},jn=n("td",{style:{"text-align":"left"}},"function",-1),An=n("td",{style:{"text-align":"left"}},null,-1),Nn=n("td",{style:{"text-align":"left"}},"否",-1),Pn=n("td",{style:{"text-align":"left"}},"监听系统主题变化",-1),Sn={style:{"text-align":"left"}},Wn={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html",target:"_blank",rel:"noopener noreferrer"},Dn=n("tr",null,[n("td",{style:{"text-align":"left"}},"其他"),n("td",{style:{"text-align":"left"}},"any"),n("td",{style:{"text-align":"left"}}),n("td",{style:{"text-align":"left"}},"否"),n("td",{style:{"text-align":"left"}},[a("开发者可以添加任意的函数或数据变量到 "),n("code",null,"Object"),a(" 参数中，用 "),n("code",null,"this"),a(" 可以访问")]),n("td",{style:{"text-align":"left"}})],-1),In=t(`<p>整个小程序只有一个 App 实例，是全部页面共享的。开发者可以通过 <code>getApp</code> 方法获取到全局唯一的 App 实例，获取App上的数据或调用开发者注册在 <code>App</code> 上的函数。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// xxx.js</span>
<span class="token keyword">const</span> appInstance <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>appInstance<span class="token punctuation">.</span>globalData<span class="token punctuation">)</span> <span class="token comment">// I am global data</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注册页面" tabindex="-1"><a class="header-anchor" href="#注册页面" aria-hidden="true">#</a> 注册页面</h3><p>对于小程序中的每个页面，都需要在页面对应的 <code>js</code> 文件中进行注册，指定页面的初始数据、生命周期回调、事件处理函数等。</p><h4 id="使用-page-构造器注册页" tabindex="-1"><a class="header-anchor" href="#使用-page-构造器注册页" aria-hidden="true">#</a> 使用 Page 构造器注册页</h4><p>简单的页面可以使用 <code>Page()</code> 进行构造。</p><p><strong>代码示例：</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//index.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;This is page data.&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onLoad</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 页面创建时执行</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onShow</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 页面出现在前台时执行</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onReady</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 页面首次渲染完毕时执行</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onHide</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 页面从前台变为后台时执行</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onUnload</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 页面销毁时执行</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onPullDownRefresh</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 触发下拉刷新时执行</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onReachBottom</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 页面触底时执行</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onShareAppMessage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 页面被用户分享时执行</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onPageScroll</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 页面滚动时执行</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onResize</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 页面尺寸变化时执行</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onTabItemTap</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// tab 点击时执行</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>pagePath<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 事件响应函数</span>
  <span class="token function-variable function">viewTap</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Set some data for updating view.&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// this is setData callback</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 自由数据</span>
  <span class="token literal-property property">customData</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">hi</span><span class="token operator">:</span> <span class="token string">&#39;MINA&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),Vn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html",target:"_blank",rel:"noopener noreferrer"},Mn=t('<h3 id="页面生命周期" tabindex="-1"><a class="header-anchor" href="#页面生命周期" aria-hidden="true">#</a> 页面生命周期</h3><figure><img src="https://qiniu.waite.wang/202401222133494.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="模块化" tabindex="-1"><a class="header-anchor" href="#模块化" aria-hidden="true">#</a> 模块化</h3>',3),Cn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/module.html",target:"_blank",rel:"noopener noreferrer"},Rn=n("code",null,"module.exports",-1),Xn=n("code",null,"exports",-1),Ln=n("p",null,"注意：",-1),En=n("code",null,"exports",-1),Hn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/module.html",target:"_blank",rel:"noopener noreferrer"},Bn=n("code",null,"module.exports",-1),Tn=n("code",null,"exports",-1),Jn=n("code",null,"module.exports",-1),On=n("code",null,"node_modules",-1),Gn=n("code",null,"node_modules",-1),zn={href:"https://developers.weixin.qq.com/miniprogram/dev/devtools/npm.html",target:"_blank",rel:"noopener noreferrer"},Fn=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// common.js</span>
<span class="token keyword">function</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> !</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">sayGoodbye</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Goodbye </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> !</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>sayHello <span class="token operator">=</span> sayHello
exports<span class="token punctuation">.</span>sayGoodbye <span class="token operator">=</span> sayGoodbye
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在需要使用这些模块的文件中，使用 <code>require</code> 将公共代码引入</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> common <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;common.js&#39;</span><span class="token punctuation">)</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">helloMINA</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    common<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token string">&#39;MINA&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">goodbyeMINA</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    common<span class="token punctuation">.</span><span class="token function">sayGoodbye</span><span class="token punctuation">(</span><span class="token string">&#39;MINA&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文件作用域" tabindex="-1"><a class="header-anchor" href="#文件作用域" aria-hidden="true">#</a> 文件作用域</h3><p>在 JavaScript 文件中声明的变量和函数只在该文件中有效；不同的文件中可以声明相同名字的变量和函数，不会互相影响。</p><p>通过全局函数 <code>getApp</code> 可以获取全局的应用实例，如果需要全局的数据可以在 <code>App()</code> 中设置，如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// app.js</span>
<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">globalData</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// a.js</span>
<span class="token comment">// The localValue can only be used in file a.js.</span>
<span class="token keyword">var</span> localValue <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span>
<span class="token comment">// Get the app instance.</span>
<span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// Get the global data and change it.</span>
app<span class="token punctuation">.</span>globalData<span class="token operator">++</span>
<span class="token comment">// b.js</span>
<span class="token comment">// You can redefine localValue in file b.js, without interference with the localValue in a.js.</span>
<span class="token keyword">var</span> localValue <span class="token operator">=</span> <span class="token string">&#39;b&#39;</span>
<span class="token comment">// If a.js it run before b.js, now the globalData shoule be 2.</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>globalData<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h3><blockquote><p>详细见 https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/api.html#API</p></blockquote><h2 id="视图层" tabindex="-1"><a class="header-anchor" href="#视图层" aria-hidden="true">#</a> 视图层</h2><h3 id="wxml" tabindex="-1"><a class="header-anchor" href="#wxml" aria-hidden="true">#</a> WXML</h3><h4 id="数据绑定" tabindex="-1"><a class="header-anchor" href="#数据绑定" aria-hidden="true">#</a> 数据绑定</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span> {{message}} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
// page.js
Page({
  data: {
    message: &#39;Hello MINA!&#39;
  }
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="列表渲染" tabindex="-1"><a class="header-anchor" href="#列表渲染" aria-hidden="true">#</a> 列表渲染</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{array}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> {{item}} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
// page.js
Page({
  data: {
    array: [1, 2, 3, 4, 5]
  }
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="条件渲染" tabindex="-1"><a class="header-anchor" href="#条件渲染" aria-hidden="true">#</a> 条件渲染</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{view == &#39;WEBVIEW&#39;}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> WEBVIEW <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>elif</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{view == &#39;APP&#39;}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> APP <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>else</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{view == &#39;MINA&#39;}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> MINA <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
// page.js
Page({
  data: {
    view: &#39;MINA&#39;
  }
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="模板" tabindex="-1"><a class="header-anchor" href="#模板" aria-hidden="true">#</a> 模板</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>staffName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>
    FirstName: {{firstName}}, LastName: {{lastName}}
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>staffName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{...staffA}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>staffName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{...staffB}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>staffName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{...staffC}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
// page.js
Page({
  data: {
    staffA: {firstName: &#39;Hulk&#39;, lastName: &#39;Hu&#39;},
    staffB: {firstName: &#39;Shang&#39;, lastName: &#39;You&#39;},
    staffC: {firstName: &#39;Gideon&#39;, lastName: &#39;Lin&#39;}
  }
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="三目运算符" tabindex="-1"><a class="header-anchor" href="#三目运算符" aria-hidden="true">#</a> 三目运算符</h4><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>//<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{flag?&#39;red&#39;:&#39;green&#39;}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>是否加样式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
data: {
    flag: false,
},
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Register a Page.</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">data</span><span class="token operator">:</span> helloData<span class="token punctuation">,</span>
	<span class="token function-variable function">changeName</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// sent data change to view</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;Weixin&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;xxx&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;Weixin&#39;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>name
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),Un=n("p",null,"具体的能力以及使用方式在以下章节查看：",-1),Yn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/data.html",target:"_blank",rel:"noopener noreferrer"},$n={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/list.html",target:"_blank",rel:"noopener noreferrer"},Kn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/conditional.html",target:"_blank",rel:"noopener noreferrer"},Qn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/template.html",target:"_blank",rel:"noopener noreferrer"},Zn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/import.html",target:"_blank",rel:"noopener noreferrer"},na=n("h3",{id:"wxs",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#wxs","aria-hidden":"true"},"#"),a(" WXS")],-1),aa={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/view/interactive-animation.html",target:"_blank",rel:"noopener noreferrer"},sa={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/wxs/",target:"_blank",rel:"noopener noreferrer"},ea=t(`<p>以下是一些使用 WXS 的简单示例。</p><h4 id="页面渲染" tabindex="-1"><a class="header-anchor" href="#页面渲染" aria-hidden="true">#</a> 页面渲染</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wxs</span> <span class="token attr-name">module</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
var msg = &quot;hello world&quot;;

module.exports.message = msg;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>wxs</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span> {{m1.message}} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数据处理" tabindex="-1"><a class="header-anchor" href="#数据处理" aria-hidden="true">#</a> 数据处理</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>// page.js
Page({
  data: {
    array: [1, 2, 3, 4, 5, 1, 2, 3, 4]
  }
})
<span class="token comment">&lt;!--wxml--&gt;</span>
<span class="token comment">&lt;!-- 下面的 getMax 函数，接受一个数组，且返回数组中最大的元素的值 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wxs</span> <span class="token attr-name">module</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
var getMax = function(array) {
  var max = undefined;
  for (var i = 0; i &lt; array.length; ++i) {
    max = max === undefined ?
      array[i] :
      (max &gt;= array[i] ? max : array[i]);
  }
  return max;
}

module.exports.getMax = getMax;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>wxs</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 调用 wxs 里面的 getMax 函数，参数为 page.js 里面的 array --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span> {{m1.getMax(array)}} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="简易双向绑定" tabindex="-1"><a class="header-anchor" href="#简易双向绑定" aria-hidden="true">#</a> 简易双向绑定</h3><p>在 WXML 中，普通的属性的绑定是单向的。例如：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{value}}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果使用 <code>this.setData({ value: &#39;leaf&#39; })</code> 来更新 <code>value</code> ，<code>this.data.value</code> 和输入框的中显示的值都会被更新为 <code>leaf</code> ；但如果用户修改了输入框里的值，却不会同时改变 <code>this.data.value</code> 。</p><p>如果需要在用户输入的同时改变 <code>this.data.value</code> ，需要借助简易双向绑定机制。此时，可以在对应项目之前加入 <code>model:</code> 前缀：</p><p>如果使用 <code>this.setData({ value: &#39;leaf&#39; })</code> 来更新 <code>value</code> ，<code>this.data.value</code> 和输入框的中显示的值都会被更新为 <code>leaf</code> ；但如果用户修改了输入框里的值，却不会同时改变 <code>this.data.value</code> 。</p><p>如果需要在用户输入的同时改变 <code>this.data.value</code> ，需要借助简易双向绑定机制。此时，可以在对应项目之前加入 <code>model:</code> 前缀：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name"><span class="token namespace">model:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{value}}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,13),ta=n("code",null,"this.data.value",-1),pa=n("code",null,"value",-1),oa={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/observer.html",target:"_blank",rel:"noopener noreferrer"},la={href:"https://developers.weixin.qq.com/s/8jXvobmV7vcj",target:"_blank",rel:"noopener noreferrer"},ia=t(`<p>用于双向绑定的表达式有如下限制：</p><ol><li>只能是一个单一字段的绑定，如</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>input model<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">&quot;值为 {{value}}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>input model<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">&quot;{{ a + b }}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>都是非法的；</p><ol><li>目前，尚不能 data 路径，如</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>input model<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">&quot;{{ a.b }}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样的表达式目前暂不支持。</p><blockquote><p>关于微信小程序警告“Do not have handler in component: pages/xxx/xxx. “的解决方法</p></blockquote><p>通过资料查询和微信开发者社区询问，原因是没有绑定bindinput方法，因此我们可以为表单绑定一个空的方法，来解决这个警告</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name"><span class="token namespace">model:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{name}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindinput</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textCallback<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

<span class="token comment">&lt;!-- js --&gt;</span>
Page({
	data: helloData,
	changeName: function (e) {
		// sent data change to view
		console.log(this.data)
		this.data.name = this.data.name === &#39;Weixin&#39; ? &#39;xxx&#39; : &#39;Weixin&#39;
		this.setData({
			name: this.data.name
		})
	},
	textCallback: function () {}
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="在自定义组件中传递双向绑定" tabindex="-1"><a class="header-anchor" href="#在自定义组件中传递双向绑定" aria-hidden="true">#</a> 在自定义组件中传递双向绑定</h4><p>双向绑定同样可以使用在自定义组件上。如下的自定义组件：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// custom-component.js</span>
<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">myValue</span><span class="token operator">:</span> String
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> custom<span class="token operator">-</span>component<span class="token punctuation">.</span>wxml <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>input model<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">&quot;{{myValue}}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个自定义组件将自身的 <code>myValue</code> 属性双向绑定到了组件内输入框的 <code>value</code> 属性上。这样，如果页面这样使用这个组件：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>custom-component</span> <span class="token attr-name"><span class="token namespace">model:</span>my-value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{pageValue}}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当输入框的值变更时，自定义组件的 <code>myValue</code> 属性会同时变更，这样，页面的 <code>this.data.pageValue</code> 也会同时变更，页面 WXML 中所有绑定了 <code>pageValue</code> 的位置也会被一同更新。</p><h4 id="在自定义组件中触发双向绑定更新" tabindex="-1"><a class="header-anchor" href="#在自定义组件中触发双向绑定更新" aria-hidden="true">#</a> 在自定义组件中触发双向绑定更新</h4><p>自定义组件还可以自己触发双向绑定更新，做法就是：使用 setData 设置自身的属性。例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// custom-component.js</span>
<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">myValue</span><span class="token operator">:</span> String
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">update</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 更新 myValue</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">myValue</span><span class="token operator">:</span> <span class="token string">&#39;leaf&#39;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果页面这样使用这个组件：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>custom-component</span> <span class="token attr-name"><span class="token namespace">model:</span>my-value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{pageValue}}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当组件使用 <code>setData</code> 更新 <code>myValue</code> 时，页面的 <code>this.data.pageValue</code> 也会同时变更，页面 WXML 中所有绑定了 <code>pageValue</code> 的位置也会被一同更新。</p><h3 id="响应显示区域变化" tabindex="-1"><a class="header-anchor" href="#响应显示区域变化" aria-hidden="true">#</a> 响应显示区域变化</h3><blockquote><p>具体看 https://developers.weixin.qq.com/miniprogram/dev/framework/view/resizable.html</p></blockquote>`,24),ca={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html",target:"_blank",rel:"noopener noreferrer"},ua=n("code",null,"app.json",-1),ra=n("code",null,"window",-1),da=n("code",null,'"pageOrientation": "auto"',-1),ka=n("code",null,'"pageOrientation": "auto"',-1),va=t(`<p>以下是在单个页面 json 文件中启用屏幕旋转的示例。</p><p><strong>代码示例：</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;pageOrientation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;auto&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果页面添加了上述声明，则在屏幕旋转时，这个页面将随之旋转，显示区域尺寸也会随着屏幕旋转而变化。</p>`,4),ma={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html",target:"_blank",rel:"noopener noreferrer"},ga=n("code",null,"pageOrientation",-1),ha=n("code",null,"landscape",-1),ba=t(`<h3 id="动画" tabindex="-1"><a class="header-anchor" href="#动画" aria-hidden="true">#</a> 动画</h3><blockquote><p>https://developers.weixin.qq.com/miniprogram/dev/framework/view/animation.html</p></blockquote><h3 id="初始渲染缓存" tabindex="-1"><a class="header-anchor" href="#初始渲染缓存" aria-hidden="true">#</a> 初始渲染缓存</h3><p>小程序页面的初始化分为两个部分。</p><ul><li>逻辑层初始化：载入必需的小程序代码、初始化页面 this 对象（也包括它涉及到的所有自定义组件的 this 对象）、将相关数据发送给视图层。</li><li>视图层初始化：载入必需的小程序代码，然后等待逻辑层初始化完毕并接收逻辑层发送的数据，最后渲染页面。</li></ul><p>在启动页面时，尤其是小程序冷启动、进入第一个页面时，逻辑层初始化的时间较长。在页面初始化过程中，用户将看到小程序的标准载入画面（冷启动时）或可能看到轻微的白屏现象（页面跳转过程中）。</p><p>启用初始渲染缓存，可以使视图层不需要等待逻辑层初始化完毕，而直接提前将页面初始 data 的渲染结果展示给用户，这可以使得页面对用户可见的时间大大提前。它的工作原理如下：</p><ul><li>在小程序页面第一次被打开后，将页面初始数据渲染结果记录下来，写入一个持久化的缓存区域（缓存可长时间保留，但可能因为小程序更新、基础库更新、储存空间回收等原因被清除）；</li><li>在这个页面被第二次打开时，检查缓存中是否还存有这个页面上一次初始数据的渲染结果，如果有，就直接将渲染结果展示出来；</li><li>如果展示了缓存中的渲染结果，这个页面暂时还不能响应用户事件，等到逻辑层初始化完毕后才能响应用户事件。</li></ul><p>利用初始渲染缓存，可以：</p><ul><li>快速展示出页面中永远不会变的部分，如导航栏；</li><li>预先展示一个骨架页，提升用户体验；</li><li>展示自定义的加载提示；</li><li>提前展示广告，等等。</li></ul><h4 id="支持的组件" tabindex="-1"><a class="header-anchor" href="#支持的组件" aria-hidden="true">#</a> 支持的组件</h4><p>在初始渲染缓存阶段中，复杂组件不能被展示或不能响应交互。</p><p>目前支持的内置组件：</p><ul><li><code>&lt;view /&gt;</code></li><li><code>&lt;text /&gt;</code></li><li><code>&lt;button /&gt;</code></li><li><code>&lt;image /&gt;</code></li><li><code>&lt;scroll-view /&gt;</code></li><li><code>&lt;rich-text /&gt;</code></li></ul><p>自定义组件本身可以被展示（但它们里面用到的内置组件也遵循上述限制）。</p><h4 id="静态初始渲染缓存" tabindex="-1"><a class="header-anchor" href="#静态初始渲染缓存" aria-hidden="true">#</a> 静态初始渲染缓存</h4><p>若想启用初始渲染缓存，最简单的方法是在页面的 <code>json</code> 文件中添加配置项 <code>&quot;initialRenderingCache&quot;: &quot;static&quot;</code> ：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;initialRenderingCache&quot;</span><span class="token operator">:</span> <span class="token string">&quot;static&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果想要对所有页面启用，可以在 <code>app.json</code> 的 <code>window</code> 配置段中添加这个配置：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;window&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;initialRenderingCache&quot;</span><span class="token operator">:</span> <span class="token string">&quot;static&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加这个配置项之后，在手机中预览小程序首页，然后杀死小程序再次进入，就会通过初始渲染缓存来渲染首页。</p><p>注意：这种情况下，初始渲染缓存记录的是页面 data 应用在页面 WXML 上的结果，不包含任何 setData 的结果。</p><p>例如，如果想要在页面中展示出“正在加载”几个字，这几个字受到 <code>loading</code> 数据字段控制：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{loading}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>正在加载<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这种情况下， <code>loading</code> 应当在 <code>data</code> 中指定为 <code>true</code> ，如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 正确的做法</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">loading</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而不能通过 <code>setData</code> 将 <code>loading</code> 置为 <code>true</code> ：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 错误的做法！不要这么做！</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onLoad</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">loading</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>换而言之，这种做法只包含页面 <code>data</code> 的渲染结果，即页面的纯静态成分。</p><h4 id="在初始渲染缓存中添加动态内容" tabindex="-1"><a class="header-anchor" href="#在初始渲染缓存中添加动态内容" aria-hidden="true">#</a> 在初始渲染缓存中添加动态内容</h4><p>有些场景中，只是页面 <code>data</code> 的渲染结果会比较局限。有时会想要额外展示一些可变的内容，如展示的广告图片 URL 等。</p><p>这种情况下可以使用“动态”初始渲染缓存的方式。首先，配置 <code>&quot;initialRenderingCache&quot;: &quot;dynamic&quot;</code> ：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;initialRenderingCache&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dynamic&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，初始渲染缓存不会被自动启用，还需要在页面中调用 <code>this.setInitialRenderingCache(dynamicData)</code> 才能启用。其中， <code>dynamicData</code> 是一组数据，与 <code>data</code> 一起参与页面 WXML 渲染。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">loading</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onReady</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setInitialRenderingCache</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">loadingHint</span><span class="token operator">:</span> <span class="token string">&#39;正在加载&#39;</span> <span class="token comment">// 这一部分数据将被应用于界面上，相当于在初始 data 基础上额外进行一次 setData</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span>view wx<span class="token operator">:</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;{{loading}}&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>loadingHint<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从原理上说，在动态生成初始渲染缓存的方式下，页面会在后台使用动态数据重新渲染一次，因而开销相对较大。因而要尽量避免频繁调用 <code>this.setInitialRenderingCache</code> ，如果在一个页面内多次调用，仅最后一次调用生效。</p><p>注意：</p><ul><li><code>this.setInitialRenderingCache</code> 调用时机不能早于 <code>Page</code> 的 <code>onReady</code> 或 <code>Component</code> 的 <code>ready</code> 生命周期，否则可能对性能有负面影响。</li><li>如果想禁用初始渲染缓存，调用 <code>this.setInitialRenderingCache(null)</code> 。</li></ul>`,38);function fa(_a,xa){const s=o("ExternalLinkIcon");return l(),i("div",null,[u,r,d,n("p",null,[a("​ 首先，我们来简单了解下小程序的运行环境。整个小程序框架系统分为两部分："),n("strong",null,[n("a",k,[a("逻辑层"),e(s)])]),a("（App Service）和 "),n("strong",null,[n("a",v,[a("视图层"),e(s)])]),a("（View）。小程序提供了自己的视图层描述语言 "),m,a(" 和 "),g,a("，以及基于 "),h,a(" 的逻辑层框架，并在视图层与逻辑层间提供了数据传输和事件系统，让开发者能够专注于数据与逻辑。")]),b,n("p",null,[a("开发者写的所有代码最终将会打包成一份 "),f,a(" 文件，并在小程序启动的时候运行，直到小程序销毁。这一行为类似 "),n("a",_,[a("ServiceWorker"),e(s)]),a("，所以逻辑层也称之为 App Service。")]),x,n("ul",null,[n("li",null,[a("增加 "),y,a(" 和 "),q,a(" 方法，进行"),n("a",w,[a("程序注册"),e(s)]),a("和"),n("a",j,[a("页面注册"),e(s)]),a("。")]),A,n("li",null,[a("提供丰富的 "),n("a",N,[a("API"),e(s)]),a("，如微信用户数据，扫一扫，支付等微信特有能力。")]),n("li",null,[a("提供"),n("a",P,[a("模块化"),e(s)]),a("能力，每个页面有独立的"),n("a",S,[a("作用域"),e(s)]),a("。")])]),W,n("table",null,[D,n("tbody",null,[n("tr",null,[n("td",I,[n("a",V,[a("onLaunch"),e(s)])]),M,C,R,X,L]),n("tr",null,[n("td",E,[n("a",H,[a("onShow"),e(s)])]),B,T,J,O,G]),n("tr",null,[n("td",z,[n("a",F,[a("onHide"),e(s)])]),U,Y,$,K,Q]),n("tr",null,[n("td",Z,[n("a",nn,[a("onError"),e(s)])]),an,sn,en,tn,pn]),n("tr",null,[n("td",on,[n("a",ln,[a("onPageNotFound"),e(s)])]),cn,un,rn,dn,n("td",kn,[n("a",vn,[a("1.9.90"),e(s)])])]),n("tr",null,[n("td",mn,[n("a",gn,[a("onUnhandledRejection"),e(s)])]),hn,bn,fn,_n,n("td",xn,[n("a",yn,[a("2.10.0"),e(s)])])]),n("tr",null,[n("td",qn,[n("a",wn,[a("onThemeChange"),e(s)])]),jn,An,Nn,Pn,n("td",Sn,[n("a",Wn,[a("2.11.0"),e(s)])])]),Dn])]),In,n("p",null,[a("详细的参数含义和使用请参考 "),n("a",Vn,[a("Page 参考文档"),e(s)])]),Mn,n("p",null,[a("可以将一些公共的代码抽离成为一个单独的 js 文件，作为一个模块。模块只有通过 "),n("a",Cn,[Rn,e(s)]),a(" 或者 "),Xn,a(" 才能对外暴露接口。")]),Ln,n("ul",null,[n("li",null,[En,a(" 是 "),n("a",Hn,[Bn,e(s)]),a(" 的一个引用，因此在模块里边随意更改 "),Tn,a(" 的指向会造成未知的错误。所以更推荐开发者采用 "),Jn,a(" 来暴露模块接口，除非你已经清晰知道这两者的关系。")]),n("li",null,[a("小程序目前不支持直接引入 "),On,a(" , 开发者需要使用到 "),Gn,a(" 时候建议拷贝出相关的代码到小程序的目录中，或者使用小程序支持的 "),n("a",zn,[a("npm"),e(s)]),a(" 功能。")])]),Fn,n("blockquote",null,[Un,n("p",null,[n("a",Yn,[a("数据绑定"),e(s)]),a("、"),n("a",$n,[a("列表渲染"),e(s)]),a("、"),n("a",Kn,[a("条件渲染"),e(s)]),a("、"),n("a",Qn,[a("模板"),e(s)]),a("、"),n("a",Zn,[a("引用"),e(s)])])]),na,n("p",null,[a("WXS（WeiXin Script）是内联在 WXML 中的脚本段。通过 WXS 可以在模版中内联少量处理脚本，丰富模板的数据预处理能力。另外， WXS 还可以用来编写简单的 "),n("a",aa,[a("WXS 事件响应函数"),e(s)]),a("。")]),n("p",null,[a("从语法上看， WXS 类似于有少量限制的 JavaScript 。要完整了解 WXS 语法，请参考"),n("a",sa,[a("WXS 语法参考"),e(s)]),a("。")]),ea,n("p",null,[a("这样，如果输入框的值被改变了， "),ta,a(" 也会同时改变。同时， WXML 中所有绑定了 "),pa,a(" 的位置也会被一同更新， "),n("a",oa,[a("数据监听器"),e(s)]),a(" 也会被正常触发。")]),n("p",null,[n("a",la,[a("在开发者工具中预览效果"),e(s)])]),ia,n("p",null,[a("从小程序基础库版本 "),n("a",ca,[a("2.4.0"),e(s)]),a(" 开始，小程序在手机上支持屏幕旋转。使小程序中的页面支持屏幕旋转的方法是：在 "),ua,a(" 的 "),ra,a(" 段中设置 "),da,a(" ，或在页面 json 文件中配置 "),ka,a(" 。")]),va,n("p",null,[a("从小程序基础库版本 "),n("a",ma,[a("2.5.0"),e(s)]),a(" 开始， "),ga,a(" 还可以被设置为 "),ha,a(" ，表示固定为横屏显示。")]),ba])}const wa=p(c,[["render",fa],["__file","小程序框架.html.vue"]]);export{wa as default};
