import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as i,b as n,t,d as o,a as p}from"./app-c5ca5b9d.js";const l={},c=n("blockquote",null,[n("p",null,"https://uniapp.dcloud.net.cn/")],-1),u=n("figure",null,[n("img",{src:"https://qiniu.waite.wang/202403262157283.png",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),d=n("h2",{id:"uni-和-原生小程序开发区别",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#uni-和-原生小程序开发区别","aria-hidden":"true"},"#"),o(" uni 和 原生小程序开发区别")],-1),r=n("p",null,"每个页面是一个 .vue 文件，数据绑定及事件处理同 Vue.js 规范：",-1),g=n("li",null,'事件绑定 bindtap="eventName" 升级成 @tap="eventName"，支持（）传参',-1),v=n("li",null,"支持 Vue 常用指令 v-for、 v-if、v-show、v-model 等",-1),k=p(`<blockquote><p>温馨提示：调用接口能力，建议前缀 wx 替换为 uni ，养成好习惯，这样支持多端开发。</p></blockquote><h2 id="创建项目-运行项目" tabindex="-1"><a class="header-anchor" href="#创建项目-运行项目" aria-hidden="true">#</a> 创建项目/ 运行项目</h2><p>uni-app 支持两种方式创建项目：</p><ol><li>通过 HBuilderX 创建</li><li>通过命令行创建</li></ol><h3 id="通过-hbuilderx-创建-运行" tabindex="-1"><a class="header-anchor" href="#通过-hbuilderx-创建-运行" aria-hidden="true">#</a> 通过 HBuilderX 创建/ 运行</h3><ol><li>下载安装 HBuilderX https://hx.dcloud.net.cn/Tutorial/install/windows</li></ol><blockquote><p>HBuilderX是通用的前端开发工具，但为uni-app做了特别强化。</p></blockquote><ol start="2"><li>在点击工具栏里的文件 -&gt; 新建 -&gt; 项目（快捷键Ctrl+N）：</li></ol><figure><img src="https://qiniu.waite.wang/202403262144531.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>uni-app自带的模板有 默认的空项目模板、Hello uni-app 官方组件和API示例，还有一个重要模板是 uni ui项目模板，日常开发推荐使用该模板，已内置大量常用组件。</p><figure><img src="https://qiniu.waite.wang/202403262145716.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li><p>选择模板后，点击下一步，填写项目名称、项目路径、Appid（小程序）、Appname（小程序名称）等信息，点击完成即可创建项目。</p></li><li><p>创建完成后，工具 -&gt; 插件安装 -&gt; uni-app编译器</p></li><li><p>运行项目：点击工具栏里的运行按钮，选择运行到小程序模拟器或者手机端，即可看到效果。</p></li><li><p>在微信开发者工具里运行：进入hello-uniapp项目，点击工具栏的运行 -&gt; 运行到小程序模拟器 -&gt; 微信开发者工具，即可在微信开发者工具里面体验uni-app。</p></li></ol><figure><img src="https://qiniu.waite.wang/202403262148740.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>注意：如果是第一次使用，需要先配置小程序ide的相关路径，才能运行成功。如下图，需在输入框输入微信开发者工具的安装路径。</p></blockquote><figure><img src="https://qiniu.waite.wang/202403262148979.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>注意: 在微信小程序运行需要开启 设置 -&gt; 安全设置 -&gt; 服务端口 -&gt; 开启服务端口, 并且关闭 设置 -&gt; 编译器设置 -&gt; 修改文件时自动保存</p></blockquote><p>这样在 HbuilderX 保存文件后，微信开发者工具会自动刷新。</p><h3 id="通过命令行创建-运行" tabindex="-1"><a class="header-anchor" href="#通过命令行创建-运行" aria-hidden="true">#</a> 通过命令行创建/ 运行</h3><blockquote><p>https://uniapp.dcloud.net.cn/quickstart-cli.html</p></blockquote><ol><li><p>全局安装 vue-cli<code>npm install -g @vue/cli</code></p></li><li><p>创建uni-app</p><ul><li>使用正式版（对应HBuilderX最新正式版）</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vue create -p dcloudio/uni-preset-vue my-project
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>使用alpha版（对应HBuilderX最新alpha版）</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vue create -p dcloudio/uni-preset-vue#alpha my-alpha-project
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>使用Vue3/Vite版 <ul><li>创建以 javascript 开发的工程（如命令行创建失败，请直接访问 gitee 下载模板）</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npx degit dcloudio/uni-preset-vue#vite my-vue3-project

npx degit dcloudio/uni-preset-vue#vite-alpha my-vue3-project
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建以 typescript 开发的工程（如命令行创建失败，请直接访问 gitee 下载模板）</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npx degit dcloudio/uni-preset-vue#vite-ts my-vue3-project
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ol><p>此时，会提示选择项目模板（使用Vue3/Vite版不会提示，目前只支持创建默认模板），初次体验建议选择 hello uni-app 项目模板，如下所示：</p><figure><img src="https://qiniu.waite.wang/202403262211245.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>注意</p><p>Vue3/Vite版要求 node 版本^14.18.0 || &gt;=16.0.0 如果使用 HBuilderX（3.6.7以下版本）运行 Vue3/Vite 创建的最新的 cli 工程，需要在 HBuilderX 运行配置最底部设置 node路径 为自己本机高版本 node 路径（注意需要重启 HBuilderX 才可以生效）</p><ul><li>HBuilderX Mac 版本菜单栏左上角 HBuilderX-&gt;偏好设置-&gt;运行配置-&gt;node路径</li><li>HBuilderX Windows 版本菜单栏 工具-&gt;设置-&gt;运行配置-&gt;node路径</li></ul></blockquote><p>国内特殊情况</p><ul><li><p>模板项目存放于 Github，由于国内网络环境问题，可能下载失败。针对此问题可以尝试如下措施：</p><ul><li>更换网络重试，比如使用 4g 网络</li><li>在设备或路由器的网络设置中增加 DNS（如：8.8.8.8）</li><li>在设备中增加固定的 hosts（如：140.82.113.4 github.com）</li></ul></li></ul><h4 id="运行项目" tabindex="-1"><a class="header-anchor" href="#运行项目" aria-hidden="true">#</a> 运行项目</h4><ol><li><p>更改项目中 <code>manifest.json</code> 中的 <code>appid</code> 为自己的小程序appid</p></li><li><p>进入项目目录，运行命令 <code>npm run dev:%PLATFORM%</code>，其中 <code>%PLATFORM%</code> 为平台名称，如 <code>h5</code>、<code>mp-weixin</code>、<code>mp-alipay</code>、<code>mp-baidu</code>、<code>mp-toutiao</code>、<code>mp-qq</code>、<code>quickapp-webview</code>、<code>quickapp-webview-union</code>、<code>quickapp-webview-huawei</code>、<code>quickapp-webview-oppo</code>、<code>quickapp-webview-vivo</code>、<code>quickapp-webview-xiaomi</code>、<code>quickapp-webview-meizu</code>、<code>quickapp-webview-leshi</code>、<code>quickapp-webview-haier</code>、<code>quickapp-webview-samsung</code>、<code>quickapp-webview-smartisan</code>、<code>quickapp-webview-nubia</code>、<code>quickapp-webview-oneplus</code>、<code>quickapp-webview-360</code>、<code>quickapp-webview-letv</code>、<code>quickapp-webview-coolpad</code>、<code>quickapp-webview-gionee</code>、<code>quickapp-webview-sony</code>、\`quickapp-webview-htc</p></li><li><p>运行成功后，会在项目目录下生成 <code>dist</code> 目录，里面包含了编译后的代码，在微信小程序开发者工具中导入 <code>dist/dev/mp-weixin</code> 目录即可查看效果。</p></li></ol><h2 id="用-vs-code-编辑-uni-app-项目" tabindex="-1"><a class="header-anchor" href="#用-vs-code-编辑-uni-app-项目" aria-hidden="true">#</a> 用 VS Code 编辑 uni-app 项目</h2><p>为什么要用 VS Code 编辑 uni-app 项目？</p><ol><li>HBuilderX 是基于 Eclipse 的 IDE，对于一些习惯了 VS Code 的开发者来说，可能不太适应。</li><li>HbuilderX 对 TS 支持不够友好，而 VS Code 对 TS 支持非常好。</li></ol><h3 id="安装插件" tabindex="-1"><a class="header-anchor" href="#安装插件" aria-hidden="true">#</a> 安装插件</h3><figure><img src="https://qiniu.waite.wang/202403262238212.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>建议勾选以下</p></blockquote><figure><img src="https://qiniu.waite.wang/202403262241594.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="安装-ts-类型校验" tabindex="-1"><a class="header-anchor" href="#安装-ts-类型校验" aria-hidden="true">#</a> 安装 ts 类型校验</h3><blockquote><p>https://uni-helper.js.org/uni-app-types</p></blockquote><figure><img src="https://qiniu.waite.wang/202403262253552.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> @types/wechat-miniprogram @uni-helper/uni-app-types
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@vue/tsconfig/tsconfig.json&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;sourceMap&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;@/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/*&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dom&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;@dcloudio/types&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;@types/wechat-miniprogram&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;@uni-helper/uni-app-types&quot;</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;vueCompilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 原配置 \`experimentalRuntimeMode\` 现调整为 \`nativeTags\`</span>
    <span class="token property">&quot;nativeTags&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;block&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;component&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;template&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;slot&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src/**/*.ts&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;src/**/*.d.ts&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;src/**/*.tsx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;src/**/*.vue&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="json-注释问题" tabindex="-1"><a class="header-anchor" href="#json-注释问题" aria-hidden="true">#</a> json 注释问题</h3><blockquote><p>uni-app 只有在 HBuilderX 中才支持 json 注释，而在 VS Code 中不支持，所以在 VS Code 中编辑 json 文件时，会有报错提示。 只有这两个文件支持 json 注释，其他文件不支持。 <img src="https://qiniu.waite.wang/202403262306083.png" alt="" loading="lazy"></p></blockquote>`,41);function b(e,h){return s(),i("div",null,[c,u,d,n("blockquote",null,[r,n("ol",null,[n("li",null,'属性绑定 src="'+t(e.url)+'" 升级成 :src="url"',1),g,v])]),k])}const w=a(l,[["render",b],["__file","入门.html.vue"]]);export{w as default};
