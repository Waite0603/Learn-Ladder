const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const l of e.keys())if(l===F){const a=o[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=u;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=o[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=o[f+y]+ +b,A=o[f+y+1]+1,w=o[p+y]+1,L=o[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}W(e.get(l),t,s,n,o,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const l=new Map;l.set(u.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(u),e=l}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const l of Object.keys(u)){const a=u[l],h=e._fieldIds[l],m=o.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:N(n.boost,g)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,o,u,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f==null||f.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,o,u,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,o,u,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(u),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=k(u),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(u,d)),u=l,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),l=u.includes("#"),[a,h]=u.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>o.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(o.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in o)for(const c of o.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":712,\"nextId\":712,\"documentIds\":{\"0\":\"v-39b2439d\",\"1\":\"v-39b2439d#arkts语言\",\"2\":\"v-39b2439d#基本语法\",\"3\":\"v-39b2439d#arkts-基本组成\",\"4\":\"v-e8a2ad8a\",\"5\":\"v-e8a2ad8a#基础组件\",\"6\":\"v-e8a2ad8a#text\",\"7\":\"v-e8a2ad8a#textinput\",\"8\":\"v-e8a2ad8a#button\",\"9\":\"v-e8a2ad8a#image\",\"10\":\"v-e8a2ad8a#从网络加载图片\",\"11\":\"v-e8a2ad8a#从本地加载\",\"12\":\"v-e8a2ad8a#slider\",\"13\":\"v-e8a2ad8a#容器组件\",\"14\":\"v-e8a2ad8a#column\",\"15\":\"v-e8a2ad8a#row\",\"16\":\"v-e8a2ad8a#案例\",\"17\":\"v-e8a2ad8a#循环控制\",\"18\":\"v-e8a2ad8a#补充-list-listitem\",\"19\":\"v-1480f792\",\"20\":\"v-1480f792#自定义组件的基本结构\",\"21\":\"v-1480f792#自定义组件的基本用法\",\"22\":\"v-1480f792#自定义组件的参数规定\",\"23\":\"v-1480f792#build-函数\",\"24\":\"v-1480f792#自定义组件通用样式\",\"25\":\"v-c56dba34\",\"26\":\"v-c56dba34#安装\",\"27\":\"v-c56dba34#环境错误处理\",\"28\":\"v-c56dba34#中文设置\",\"29\":\"v-c56dba34#创建项目\",\"30\":\"v-c56dba34#模拟器安装\",\"31\":\"v-c56dba34#stage-与-fa-模型的区别\",\"32\":\"v-c56dba34#fa模型-早期的探索\",\"33\":\"v-c56dba34#stage模型-未来的主流\",\"34\":\"v-c56dba34#stage模型-目录结构\",\"35\":\"v-ccac41e8\",\"36\":\"v-ccac41e8#基本概念\",\"37\":\"v-ccac41e8#管理组件拥有的状态\",\"38\":\"v-ccac41e8#state装饰器-组件内状态\",\"39\":\"v-ccac41e8#案例\",\"40\":\"v-ccac41e8#prop-link-装饰器\",\"41\":\"v-2e689c92\",\"42\":\"v-2e689c92#数据类型\",\"43\":\"v-2e689c92#深浅拷贝\",\"44\":\"v-2e689c92#概念\",\"45\":\"v-2e689c92#js-中的深浅拷贝\",\"46\":\"v-2e689c92#浅拷贝\",\"47\":\"v-2e689c92#手写递归\",\"48\":\"v-2e689c92#展开语法\",\"49\":\"v-2e689c92#object-assign\",\"50\":\"v-2e689c92#slice\",\"51\":\"v-2e689c92#concat\",\"52\":\"v-2e689c92#深拷贝\",\"53\":\"v-2e689c92#手写递归-1\",\"54\":\"v-2e689c92#object-entries-obj-遍历对象\",\"55\":\"v-2e689c92#json-parse-json-stringify-待拷贝对象-常用\",\"56\":\"v-2e689c92#其他方法\",\"57\":\"v-2e689c92#vue-中的深拷贝实现\",\"58\":\"v-3d305642\",\"59\":\"v-3d305642#配置eslint代码检查\",\"60\":\"v-3d305642#prettier\",\"61\":\"v-3d305642#配置-package-json\",\"62\":\"v-3d305642#husky\",\"63\":\"v-3d305642#问题\",\"64\":\"v-1b7b6434\",\"65\":\"v-1b7b6434#uni-和-原生小程序开发区别\",\"66\":\"v-1b7b6434#创建项目-运行项目\",\"67\":\"v-1b7b6434#通过-hbuilderx-创建-运行\",\"68\":\"v-1b7b6434#通过命令行创建-运行\",\"69\":\"v-1b7b6434#运行项目\",\"70\":\"v-1b7b6434#用-vs-code-编辑-uni-app-项目\",\"71\":\"v-1b7b6434#安装插件\",\"72\":\"v-1b7b6434#安装-ts-类型校验\",\"73\":\"v-1b7b6434#json-注释问题\",\"74\":\"v-430b1f9a\",\"75\":\"v-430b1f9a#微信小程序介绍\",\"76\":\"v-430b1f9a#微信小程序介绍-1\",\"77\":\"v-430b1f9a#小程序特点\",\"78\":\"v-430b1f9a#小程序的优缺点\",\"79\":\"v-430b1f9a#小程序开发需求\",\"80\":\"v-430b1f9a#微信小程序的注册\",\"81\":\"v-430b1f9a#开发工具\",\"82\":\"v-430b1f9a#开发者工具的使用\",\"83\":\"v-430b1f9a#项目目录结构介绍\",\"84\":\"v-430b1f9a#pages目录\",\"85\":\"v-430b1f9a#app-js文件\",\"86\":\"v-430b1f9a#app-json文件\",\"87\":\"v-430b1f9a#app-wxss文件\",\"88\":\"v-430b1f9a#project-config-json文件\",\"89\":\"v-430b1f9a#sitemap-json\",\"90\":\"v-623acf25\",\"91\":\"v-623acf25#响应的数据绑定\",\"92\":\"v-623acf25#逻辑层\",\"93\":\"v-623acf25#注册小程序\",\"94\":\"v-623acf25#注册页面\",\"95\":\"v-623acf25#使用-page-构造器注册页\",\"96\":\"v-623acf25#页面生命周期\",\"97\":\"v-623acf25#模块化\",\"98\":\"v-623acf25#文件作用域\",\"99\":\"v-623acf25#api\",\"100\":\"v-623acf25#视图层\",\"101\":\"v-623acf25#wxml\",\"102\":\"v-623acf25#数据绑定\",\"103\":\"v-623acf25#列表渲染\",\"104\":\"v-623acf25#条件渲染\",\"105\":\"v-623acf25#模板\",\"106\":\"v-623acf25#三目运算符\",\"107\":\"v-623acf25#wxs\",\"108\":\"v-623acf25#页面渲染\",\"109\":\"v-623acf25#数据处理\",\"110\":\"v-623acf25#简易双向绑定\",\"111\":\"v-623acf25#在自定义组件中传递双向绑定\",\"112\":\"v-623acf25#在自定义组件中触发双向绑定更新\",\"113\":\"v-623acf25#响应显示区域变化\",\"114\":\"v-623acf25#动画\",\"115\":\"v-623acf25#初始渲染缓存\",\"116\":\"v-623acf25#支持的组件\",\"117\":\"v-623acf25#静态初始渲染缓存\",\"118\":\"v-623acf25#在初始渲染缓存中添加动态内容\",\"119\":\"v-60dbb84a\",\"120\":\"v-60dbb84a#视图-基础组件\",\"121\":\"v-60dbb84a#view\",\"122\":\"v-60dbb84a#text\",\"123\":\"v-60dbb84a#swiper\",\"124\":\"v-60dbb84a#scroll-view\",\"125\":\"v-60dbb84a#icon\",\"126\":\"v-60dbb84a#progress-进度条\",\"127\":\"v-60dbb84a#表单组件\",\"128\":\"v-60dbb84a#button\",\"129\":\"v-60dbb84a#导航组件\",\"130\":\"v-60dbb84a#navigator\",\"131\":\"v-60dbb84a#媒体组件\",\"132\":\"v-60dbb84a#image\",\"133\":\"v-60dbb84a#地图组件\",\"134\":\"v-3345f117\",\"135\":\"v-3345f117#自定义tabbar\",\"136\":\"v-3345f117#使用\",\"137\":\"v-3345f117#skyline-模式\",\"138\":\"v-38043e6e\",\"139\":\"v-38043e6e#全局配置\",\"140\":\"v-38043e6e#entrypagepath\",\"141\":\"v-38043e6e#pages\",\"142\":\"v-38043e6e#window\",\"143\":\"v-38043e6e#tabbar\",\"144\":\"v-38043e6e#networktimeout\",\"145\":\"v-38043e6e#debug\",\"146\":\"v-38043e6e#页面配置\",\"147\":\"v-38043e6e#wxss\",\"148\":\"v-38043e6e#尺寸单位\",\"149\":\"v-38043e6e#样式导入\",\"150\":\"v-38043e6e#内联样式\",\"151\":\"v-38043e6e#选择器\",\"152\":\"v-38043e6e#全局样式与局部样式\",\"153\":\"v-4305b9a0\",\"154\":\"v-4305b9a0#认识动画\",\"155\":\"v-4305b9a0#vue的-transition-动画\",\"156\":\"v-4305b9a0#基于-css-的过渡效果\",\"157\":\"v-4305b9a0#css-过渡-class\",\"158\":\"v-4305b9a0#为过渡效果命名\",\"159\":\"v-4305b9a0#css-的-transition\",\"160\":\"v-4305b9a0#css-的-animation\",\"161\":\"v-4305b9a0#自定义过渡-class\",\"162\":\"v-4305b9a0#同时设置过渡和动画\",\"163\":\"v-4305b9a0#深层级过渡与显式过渡时长\",\"164\":\"v-4305b9a0#过渡模式\",\"165\":\"v-4305b9a0#出现时过渡\",\"166\":\"v-4305b9a0#元素间过渡\",\"167\":\"v-4305b9a0#示例\",\"168\":\"v-4305b9a0#javascript-钩子\",\"169\":\"v-4305b9a0#第三方库的使用\",\"170\":\"v-4305b9a0#animate-css\",\"171\":\"v-4305b9a0#gsap\",\"172\":\"v-4305b9a0#gsap-数字递增效果\",\"173\":\"v-4305b9a0#认识列表的过渡\",\"174\":\"v-4305b9a0#基本使用\",\"175\":\"v-4305b9a0#列表过渡的移动动画\",\"176\":\"v-4305b9a0#演练-列表的交替动画\",\"177\":\"v-04fdd484\",\"178\":\"v-04fdd484#什么是-vite\",\"179\":\"v-04fdd484#vite的主要特性\",\"180\":\"v-04fdd484#主流构建工具对比\",\"181\":\"v-04fdd484#为什么使用-vite\",\"182\":\"v-04fdd484#开发环境⚡️速度的提升\",\"183\":\"v-04fdd484#使用简单-开箱即用\",\"184\":\"v-04fdd484#vite-的安装与使用\",\"185\":\"v-04fdd484#安装\",\"186\":\"v-04fdd484#vite构建vue3项目\",\"187\":\"v-04fdd484#vite-支持\",\"188\":\"v-04fdd484#css-支持\",\"189\":\"v-04fdd484#全局导入\",\"190\":\"v-04fdd484#别名\",\"191\":\"v-04fdd484#ts-支持\",\"192\":\"v-04fdd484#vue支持\",\"193\":\"v-04fdd484#vite-原理\",\"194\":\"v-04fdd484#esm-esbuild\",\"195\":\"v-04fdd484#esm\",\"196\":\"v-04fdd484#esbuild\",\"197\":\"v-04fdd484#依赖处理\",\"198\":\"v-04fdd484#静态资源加载\",\"199\":\"v-04fdd484#vue文件缓存\",\"200\":\"v-04fdd484#js-ts处理\",\"201\":\"v-04fdd484#热更新原理\",\"202\":\"v-0d302623\",\"203\":\"v-0d302623#认识webpack\",\"204\":\"v-0d302623#webpack到底是什么呢\",\"205\":\"v-0d302623#vue项目加载的文件有哪些呢\",\"206\":\"v-0d302623#webpack的使用\",\"207\":\"v-0d302623#webpack的安装\",\"208\":\"v-0d302623#webpack的默认打包\",\"209\":\"v-0d302623#webpack-局部安装\",\"210\":\"v-0d302623#webpack配置\",\"211\":\"v-0d302623#webpack-配置文件\",\"212\":\"v-0d302623#指定配置文件\",\"213\":\"v-0d302623#webpack的依赖\",\"214\":\"v-0d302623#loader的使用\",\"215\":\"v-0d302623#css-loader-的使用\",\"216\":\"v-0d302623#style-loader\",\"217\":\"v-0d302623#less工具处理\",\"218\":\"v-0d302623#less-loader处理\",\"219\":\"v-0d302623#postcss-loader-认识\",\"220\":\"v-0d302623#命令行使用postcss\",\"221\":\"v-0d302623#插件autoprefixer\",\"222\":\"v-0d302623#postcss-loader\",\"223\":\"v-0d302623#postcss-preset-env\",\"224\":\"v-0d302623#file-loader\",\"225\":\"v-0d302623#url-loader\",\"226\":\"v-0d302623#url-loader的limit\",\"227\":\"v-0d302623#字体文件加载\",\"228\":\"v-0d302623#文件命名规则\",\"229\":\"v-0d302623#设置文件名称\",\"230\":\"v-0d302623#设置文件的存放路径\",\"231\":\"v-0d302623#asset-module-type\",\"232\":\"v-0d302623#asset-module-type的使用\",\"233\":\"v-0d302623#plugin\",\"234\":\"v-0d302623#cleanwebpackplugin\",\"235\":\"v-0d302623#htmlwebpackplugin\",\"236\":\"v-0d302623#自定义html模板\",\"237\":\"v-0d302623#defineplugin\",\"238\":\"v-0d302623#copywebpackplugin\",\"239\":\"v-0d302623#mode配置列表\",\"240\":\"v-c69fcd34\",\"241\":\"v-c69fcd34#什么是-babel\",\"242\":\"v-c69fcd34#babel-命令行使用\",\"243\":\"v-c69fcd34#插件\",\"244\":\"v-c69fcd34#预设-preset\",\"245\":\"v-c69fcd34#原理\",\"246\":\"v-c69fcd34#底层原理\",\"247\":\"v-c69fcd34#执行原理\",\"248\":\"v-c69fcd34#babel-loader\",\"249\":\"v-c69fcd34#配置文件\",\"250\":\"v-c69fcd34#在-webpack-中使用-vue\",\"251\":\"v-c69fcd34#补充\",\"252\":\"v-187aeed8\",\"253\":\"v-187aeed8#webpack-watch\",\"254\":\"v-187aeed8#webpack-dev-server\",\"255\":\"v-187aeed8#认识模块热替换-hmr\",\"256\":\"v-187aeed8#开启-hmr\",\"257\":\"v-187aeed8#框架-的-hmr\",\"258\":\"v-187aeed8#hmr的原理\",\"259\":\"v-187aeed8#devserver-配置信息\",\"260\":\"v-187aeed8#hotonly、host-配置\",\"261\":\"v-187aeed8#port、open、compress\",\"262\":\"v-187aeed8#proxy\",\"263\":\"v-187aeed8#historyapifallback\",\"264\":\"v-187aeed8#resolve模块解析\",\"265\":\"v-187aeed8#区分开发-生产环境\",\"266\":\"v-034a7808\",\"267\":\"v-034a7808#vue-cli-安装\",\"268\":\"v-034a7808#创建一个项目\",\"269\":\"v-034a7808#项目结构\",\"270\":\"v-034a7808#vue-cli-service-serve\",\"271\":\"v-034a7808#vue-cli-service-build\",\"272\":\"v-034a7808#vue-cli-service-inspect\",\"273\":\"v-3738cb9f\",\"274\":\"v-3738cb9f#切换组件案例\",\"275\":\"v-3738cb9f#v-if显示不同的组件\",\"276\":\"v-3738cb9f#动态组件\",\"277\":\"v-3738cb9f#动态组件的传值\",\"278\":\"v-3738cb9f#keep-alive\",\"279\":\"v-3738cb9f#包含-排除\",\"280\":\"v-3738cb9f#最大缓存实例数\",\"281\":\"v-5280b43a\",\"282\":\"v-5280b43a#基本用法\",\"283\":\"v-5280b43a#搭配-suspense-使用\",\"284\":\"v-5280b43a#和其他组件结合\",\"285\":\"v-171421b2\",\"286\":\"v-171421b2#认识组件-slot\",\"287\":\"v-171421b2#如何使用插槽slot\",\"288\":\"v-171421b2#插槽的基本使用\",\"289\":\"v-171421b2#插槽的默认内容\",\"290\":\"v-171421b2#多个插槽的效果\",\"291\":\"v-171421b2#具名插槽的使用\",\"292\":\"v-171421b2#动态插槽名\",\"293\":\"v-171421b2#渲染作用域\",\"294\":\"v-171421b2#作用域插槽\",\"295\":\"v-171421b2#具名作用域插槽\",\"296\":\"v-171421b2#独占默认插槽的缩写\",\"297\":\"v-171421b2#默认插槽和具名插槽混合\",\"298\":\"v-3ddad9fa\",\"299\":\"v-3ddad9fa#认识组件的嵌套\",\"300\":\"v-3ddad9fa#组件的拆分\",\"301\":\"v-3ddad9fa#组件的通信\",\"302\":\"v-3ddad9fa#父传子\",\"303\":\"v-3ddad9fa#props-的定义\",\"304\":\"v-3ddad9fa#字符串数组\",\"305\":\"v-3ddad9fa#对象类型\",\"306\":\"v-3ddad9fa#其他\",\"307\":\"v-3ddad9fa#非-prop-的attribute\",\"308\":\"v-3ddad9fa#禁用-attribute-继承\",\"309\":\"v-3ddad9fa#多个根节点的attribute\",\"310\":\"v-3ddad9fa#子传父\",\"311\":\"v-3ddad9fa#emits\",\"312\":\"v-3ddad9fa#非父子组件之间的通信\",\"313\":\"v-3ddad9fa#provide-inject\",\"314\":\"v-3ddad9fa#全局事件总线-mitt-库\",\"315\":\"v-3ddad9fa#认识组件的嵌套-1\",\"316\":\"v-3ddad9fa#组件的拆分-1\",\"317\":\"v-3ddad9fa#组件的通信-1\",\"318\":\"v-3ddad9fa#父传子-1\",\"319\":\"v-3ddad9fa#props-的定义-1\",\"320\":\"v-3ddad9fa#字符串数组-1\",\"321\":\"v-3ddad9fa#对象类型-1\",\"322\":\"v-3ddad9fa#其他-1\",\"323\":\"v-3ddad9fa#非-prop-的attribute-1\",\"324\":\"v-3ddad9fa#禁用-attribute-继承-1\",\"325\":\"v-3ddad9fa#多个根节点的attribute-1\",\"326\":\"v-3ddad9fa#子传父-1\",\"327\":\"v-3ddad9fa#emits-1\",\"328\":\"v-3ddad9fa#动态组件\",\"329\":\"v-3ddad9fa#非父子组件之间的通信-1\",\"330\":\"v-3ddad9fa#provide-inject-1\",\"331\":\"v-3ddad9fa#全局事件总线-mitt-库-1\",\"332\":\"v-1aacc34f\",\"333\":\"v-1aacc34f#认识组件化开发\",\"334\":\"v-1aacc34f#vue的组件化\",\"335\":\"v-1aacc34f#组件名称\",\"336\":\"v-1aacc34f#注册组件的方式\",\"337\":\"v-1aacc34f#注册全局组件\",\"338\":\"v-1aacc34f#注册局部组件\",\"339\":\"v-1aacc34f#vue的开发模式\",\"340\":\"v-1aacc34f#如何支持sfc\",\"341\":\"v-1aacc34f#组件实例\",\"342\":\"v-1aacc34f#refs\",\"343\":\"v-1aacc34f#组件的-v-model\",\"344\":\"v-1aacc34f#多个-v-model-绑定\",\"345\":\"v-c2dc457e\",\"346\":\"v-c2dc457e#options-api的弊端\",\"347\":\"v-c2dc457e#认识-组合式-api-composition-api\",\"348\":\"v-c2dc457e#setup\",\"349\":\"v-c2dc457e#setup函数的参数\",\"350\":\"v-c2dc457e#setup函数的返回值\",\"351\":\"v-c2dc457e#补充-为什么-setup-不能使用-this\",\"352\":\"v-c2dc457e#定义响应式数据的两种方式\",\"353\":\"v-c2dc457e#reactive-api\",\"354\":\"v-c2dc457e#reactive判断的api\",\"355\":\"v-c2dc457e#ref-api\",\"356\":\"v-c2dc457e#基本使用\",\"357\":\"v-c2dc457e#ref自动解包\",\"358\":\"v-c2dc457e#ref判断的api\",\"359\":\"v-c2dc457e#自定义ref-customref\",\"360\":\"v-c2dc457e#readonly\",\"361\":\"v-c2dc457e#概念\",\"362\":\"v-c2dc457e#torefs-toref\",\"363\":\"v-c2dc457e#torefs\",\"364\":\"v-c2dc457e#toref\",\"365\":\"v-c2dc457e#computed\",\"366\":\"v-c2dc457e#方式一\",\"367\":\"v-c2dc457e#方式二\",\"368\":\"v-c2dc457e#生命周期钩子\",\"369\":\"v-c2dc457e#setup中使用ref获取元素或组件\",\"370\":\"v-c2dc457e#获取元素\",\"371\":\"v-c2dc457e#获取组件\",\"372\":\"v-c2dc457e#侦听数据的变化\",\"373\":\"v-c2dc457e#watcheffect\",\"374\":\"v-c2dc457e#基本使用-1\",\"375\":\"v-c2dc457e#停止监听\",\"376\":\"v-c2dc457e#清除副作用\",\"377\":\"v-c2dc457e#watcheffect的执行时机\",\"378\":\"v-c2dc457e#watch\",\"379\":\"v-c2dc457e#侦听单个数据源\",\"380\":\"v-c2dc457e#侦听多个数据源\",\"381\":\"v-c2dc457e#watch的选项\",\"382\":\"v-c2dc457e#停止侦听\",\"383\":\"v-c2dc457e#副作用清理\",\"384\":\"v-c2dc457e#provide-inject\",\"385\":\"v-c2dc457e#h函数\",\"386\":\"v-c2dc457e#参数\",\"387\":\"v-c2dc457e#基本使用-2\",\"388\":\"v-c2dc457e#在render函数选项中\",\"389\":\"v-c2dc457e#在setup函数选项中\",\"390\":\"v-c2dc457e#在setup语法糖中\",\"391\":\"v-c2dc457e#其他写法\",\"392\":\"v-c2dc457e#函数组件和插槽的使用\",\"393\":\"v-c2dc457e#jsx\",\"394\":\"v-c2dc457e#配置\",\"395\":\"v-c2dc457e#vue-cli环境\",\"396\":\"v-c2dc457e#vite环境\",\"397\":\"v-c2dc457e#基本使用-3\",\"398\":\"v-c2dc457e#在render函数中\",\"399\":\"v-c2dc457e#在setup函数中\",\"400\":\"v-c2dc457e#在setup语法糖中-1\",\"401\":\"v-c2dc457e#script-setup语法糖\",\"402\":\"v-c2dc457e#顶层的绑定会被暴露给模板\",\"403\":\"v-c2dc457e#defineprops\",\"404\":\"v-c2dc457e#defineemits\",\"405\":\"v-c2dc457e#defineexpose\",\"406\":\"v-c2dc457e#自定义组件\",\"407\":\"v-c2dc457e#指令的生命周期\",\"408\":\"v-c2dc457e#指令钩子\",\"409\":\"v-c2dc457e#简单使用\",\"410\":\"v-c2dc457e#默认实现方式\",\"411\":\"v-c2dc457e#使用局部指令\",\"412\":\"v-c2dc457e#自定义全局指令\",\"413\":\"v-c2dc457e#进行抽取\",\"414\":\"v-c2dc457e#setup-1\",\"415\":\"v-c2dc457e#函数\",\"416\":\"v-c2dc457e#语法糖\",\"417\":\"v-c2dc457e#内置组件\",\"418\":\"v-c2dc457e#teleport\",\"419\":\"v-c2dc457e#基本使用-4\",\"420\":\"v-c2dc457e#挂载到-app之外的指定元素上\",\"421\":\"v-c2dc457e#多个teleport\",\"422\":\"v-c2dc457e#其他\",\"423\":\"v-c2dc457e#vue插件\",\"424\":\"v-c2dc457e#对象类型\",\"425\":\"v-c2dc457e#函数类型\",\"426\":\"v-c2dc457e#改写自定义指令\",\"427\":\"v-65bb3ddf\",\"428\":\"v-65bb3ddf#vscode-代码片段\",\"429\":\"v-65bb3ddf#模板语法\",\"430\":\"v-65bb3ddf#mustache-语法-双大括号语法\",\"431\":\"v-65bb3ddf#不常用指令\",\"432\":\"v-65bb3ddf#v-once指令\",\"433\":\"v-65bb3ddf#v-html\",\"434\":\"v-65bb3ddf#v-text\",\"435\":\"v-65bb3ddf#v-pre\",\"436\":\"v-65bb3ddf#v-cloak\",\"437\":\"v-65bb3ddf#v-bind\",\"438\":\"v-65bb3ddf#基本使用\",\"439\":\"v-65bb3ddf#绑定-class\",\"440\":\"v-65bb3ddf#对象语法\",\"441\":\"v-65bb3ddf#数组语法\",\"442\":\"v-65bb3ddf#绑定-style\",\"443\":\"v-65bb3ddf#对象语法-1\",\"444\":\"v-65bb3ddf#数组语法-1\",\"445\":\"v-65bb3ddf#动态绑定属性\",\"446\":\"v-65bb3ddf#属性直接绑定一个对象\",\"447\":\"v-65bb3ddf#v-on\",\"448\":\"v-65bb3ddf#基本使用-1\",\"449\":\"v-65bb3ddf#参数传递\",\"450\":\"v-65bb3ddf#v-on-的修饰符\",\"451\":\"v-65bb3ddf#条件渲染\",\"452\":\"v-65bb3ddf#基本使用-2\",\"453\":\"v-65bb3ddf#template-和-v-if-结合使用\",\"454\":\"v-65bb3ddf#v-show\",\"455\":\"v-65bb3ddf#v-show和v-if的区别\",\"456\":\"v-65bb3ddf#列表渲染\",\"457\":\"v-65bb3ddf#基本使用-3\",\"458\":\"v-65bb3ddf#template元素使用\",\"459\":\"v-65bb3ddf#数组更新检测\",\"460\":\"v-65bb3ddf#v-for-中的-key-是什么作用\",\"461\":\"v-65bb3ddf#认识-vnode\",\"462\":\"v-65bb3ddf#虚拟-dom\",\"463\":\"v-65bb3ddf#插入-f-的案例\",\"464\":\"v-65bb3ddf#vue源码对于key的判断\",\"465\":\"v-65bb3ddf#有无key的结论\",\"466\":\"v-735040ba\",\"467\":\"v-735040ba#computed\",\"468\":\"v-735040ba#认识计算属性\",\"469\":\"v-735040ba#基本使用\",\"470\":\"v-735040ba#在模板语法中直接使用表达式\",\"471\":\"v-735040ba#使用method对逻辑进行抽取\",\"472\":\"v-735040ba#computed-实现\",\"473\":\"v-735040ba#计算属性-vs-methods\",\"474\":\"v-735040ba#计算属性的-setter-和-getter\",\"475\":\"v-735040ba#侦听器-watch\",\"476\":\"v-735040ba#简单案例\",\"477\":\"v-735040ba#配置选项\",\"478\":\"v-735040ba#其他方式\",\"479\":\"v-735040ba#watch-的api\",\"480\":\"v-735040ba#阶段案例\",\"481\":\"v-735040ba#v-model\",\"482\":\"v-735040ba#内部实现\",\"483\":\"v-735040ba#绑定其他表单\",\"484\":\"v-735040ba#修饰符\",\"485\":\"v-735040ba#内置修饰符\",\"486\":\"v-735040ba#lazy\",\"487\":\"v-735040ba#number\",\"488\":\"v-735040ba#trim\",\"489\":\"v-735040ba#自定义的修饰符\",\"490\":\"v-735040ba#多个-v-model-绑定\",\"491\":\"v-0de85fe2\",\"492\":\"v-0de85fe2#什么是生命周期\",\"493\":\"v-0de85fe2#注册周期钩子\",\"494\":\"v-0de85fe2#组件的生命周期\",\"495\":\"v-2e83353f\",\"496\":\"v-2e83353f#认识-mixin\",\"497\":\"v-2e83353f#基本使用\",\"498\":\"v-2e83353f#mixin的合并规则\",\"499\":\"v-2e83353f#全局混入-mixin\",\"500\":\"v-2e83353f#externds\",\"501\":\"v-2e83353f#组合式函数\",\"502\":\"v-2e83353f#什么是-组合式函数\",\"503\":\"v-2e83353f#鼠标跟踪器示例\",\"504\":\"v-2e83353f#异步状态示例\",\"505\":\"v-2e83353f#接收响应式状态\",\"506\":\"v-2e83353f#约定和最佳实践\",\"507\":\"v-2e83353f#命名\",\"508\":\"v-2e83353f#输入参数\",\"509\":\"v-2e83353f#返回值\",\"510\":\"v-2e83353f#副作用\",\"511\":\"v-2e83353f#使用限制\",\"512\":\"v-2e83353f#通过抽取组合式函数改善代码结构\",\"513\":\"v-2e83353f#在选项式-api-中使用组合式函数\",\"514\":\"v-2e83353f#对比\",\"515\":\"v-2e83353f#和无渲染组件的对比\",\"516\":\"v-45b1c858\",\"517\":\"v-45b1c858#认识-vue\",\"518\":\"v-45b1c858#什么是-vue\",\"519\":\"v-45b1c858#vue3带来的变化\",\"520\":\"v-45b1c858#性能方面\",\"521\":\"v-45b1c858#新的api\",\"522\":\"v-45b1c858#如何使用-vue\",\"523\":\"v-45b1c858#cdn-引入\",\"524\":\"v-45b1c858#下载和引入\",\"525\":\"v-45b1c858#声明式编程和命令式编程\",\"526\":\"v-45b1c858#mvvm模型\",\"527\":\"v-45b1c858#template属性\",\"528\":\"v-45b1c858#data属性\",\"529\":\"v-45b1c858#methods属性-重点\",\"530\":\"v-45b1c858#编写dom元素的模板方式\",\"531\":\"v-45b1c858#vscode对sfc文件的支持\",\"532\":\"v-45b1c858#如何阅读vue源码\",\"533\":\"v-1cc4ba3b\",\"534\":\"v-1cc4ba3b#关于路由\",\"535\":\"v-1cc4ba3b#认识前端路由\",\"536\":\"v-1cc4ba3b#后端路由阶段\",\"537\":\"v-1cc4ba3b#前后端分离阶段\",\"538\":\"v-1cc4ba3b#单页面富应用-spa\",\"539\":\"v-1cc4ba3b#vue-router-简介\",\"540\":\"v-1cc4ba3b#路由初体验\",\"541\":\"v-1cc4ba3b#router-link\",\"542\":\"v-1cc4ba3b#router-view\",\"543\":\"v-1cc4ba3b#安装以及使用\",\"544\":\"v-1cc4ba3b#带参数的动态路由匹配\",\"545\":\"v-1cc4ba3b#声明式导航\",\"546\":\"v-1cc4ba3b#基础使用-命名路由\",\"547\":\"v-1cc4ba3b#跳转传参\",\"548\":\"v-1cc4ba3b#捕获所有路由或-404-not-found-路由\",\"549\":\"v-1cc4ba3b#编程式导航\",\"550\":\"v-1cc4ba3b#导航到不同的位置\",\"551\":\"v-1cc4ba3b#基础使用\",\"552\":\"v-1cc4ba3b#横跨历史\",\"553\":\"v-1cc4ba3b#替换当前位置\",\"554\":\"v-1cc4ba3b#重定向\",\"555\":\"v-1cc4ba3b#别名\",\"556\":\"v-14af6f67\",\"557\":\"v-14af6f67#路由嵌套\",\"558\":\"v-14af6f67#导航守卫\",\"559\":\"v-14af6f67#全局前置守卫\",\"560\":\"v-14af6f67#全局后置钩子\",\"561\":\"v-14af6f67#路由独享的守卫\",\"562\":\"v-14af6f67#组件内的守卫\",\"563\":\"v-14af6f67#可用的配置-api\",\"564\":\"v-14af6f67#使用组合-ap\",\"565\":\"v-14af6f67#完整的导航解析流程\",\"566\":\"v-14af6f67#路由案例\",\"567\":\"v-14af6f67#登录拦截\",\"568\":\"v-14af6f67#权限判断\",\"569\":\"v-14af6f67#路由原信息\",\"570\":\"v-14af6f67#过渡动效\",\"571\":\"v-14af6f67#滚动行为\",\"572\":\"v-14af6f67#动态路由\",\"573\":\"v-14af6f67#添加路由\",\"574\":\"v-14af6f67#删除路由\",\"575\":\"v-14af6f67#查看现有路由\",\"576\":\"v-14af6f67#动态路由案例\",\"577\":\"v-14af6f67#后端代码-python-flask\",\"578\":\"v-14af6f67#前端代码\",\"579\":\"v-71097562\",\"580\":\"v-71097562#为什么使用-pinia\",\"581\":\"v-71097562#简单使用\",\"582\":\"v-71097562#state\",\"583\":\"v-71097562#getters\",\"584\":\"v-71097562#actions\",\"585\":\"v-71097562#模块化\",\"586\":\"v-391f94bd\",\"587\":\"v-391f94bd#今日学习目标-边讲边练\",\"588\":\"v-391f94bd#_1-vuex介绍\",\"589\":\"v-391f94bd#目标\",\"590\":\"v-391f94bd#通信方案\",\"591\":\"v-391f94bd#vuex是什么\",\"592\":\"v-391f94bd#vuex为何学\",\"593\":\"v-391f94bd#vuex中存什么\",\"594\":\"v-391f94bd#小结\",\"595\":\"v-391f94bd#_2-vuex学习内容\",\"596\":\"v-391f94bd#目标-1\",\"597\":\"v-391f94bd#核心概念\",\"598\":\"v-391f94bd#图示关系\",\"599\":\"v-391f94bd#小结-1\",\"600\":\"v-391f94bd#_3-vuex例子准备\",\"601\":\"v-391f94bd#目标-2\",\"602\":\"v-391f94bd#工程准备\",\"603\":\"v-391f94bd#app-vue\",\"604\":\"v-391f94bd#additem-vue\",\"605\":\"v-391f94bd#subitem-vue\",\"606\":\"v-391f94bd#小结-2\",\"607\":\"v-391f94bd#_4-vuex-store准备\",\"608\":\"v-391f94bd#目标-3\",\"609\":\"v-391f94bd#store概念\",\"610\":\"v-391f94bd#vuex目录\",\"611\":\"v-391f94bd#使用步骤\",\"612\":\"v-391f94bd#小结-3\",\"613\":\"v-391f94bd#_5-vuex-state数据源\",\"614\":\"v-391f94bd#目标-4\",\"615\":\"v-391f94bd#定义state\",\"616\":\"v-391f94bd#使用state2种方式\",\"617\":\"v-391f94bd#additem直接用\",\"618\":\"v-391f94bd#app-vue直接用\",\"619\":\"v-391f94bd#subitem映射用\",\"620\":\"v-391f94bd#注意\",\"621\":\"v-391f94bd#小结-4\",\"622\":\"v-391f94bd#_6-vuex-mutations定义-同步修改\",\"623\":\"v-391f94bd#目标-5\",\"624\":\"v-391f94bd#定义mutations\",\"625\":\"v-391f94bd#注意-1\",\"626\":\"v-391f94bd#小结-5\",\"627\":\"v-391f94bd#_7-vuex-mutations使用\",\"628\":\"v-391f94bd#目标-6\",\"629\":\"v-391f94bd#使用mutations的2种方式\",\"630\":\"v-391f94bd#additem直接用-1\",\"631\":\"v-391f94bd#app-vue直接用-1\",\"632\":\"v-391f94bd#subitem映射用-1\",\"633\":\"v-391f94bd#注意-2\",\"634\":\"v-391f94bd#小结-6\",\"635\":\"v-391f94bd#_8-vuex-actions定义-异步修改\",\"636\":\"v-391f94bd#目标-7\",\"637\":\"v-391f94bd#定义actions\",\"638\":\"v-391f94bd#小结-7\",\"639\":\"v-391f94bd#_9-vuex-actions使用\",\"640\":\"v-391f94bd#目标-8\",\"641\":\"v-391f94bd#使用actions的2种方式\",\"642\":\"v-391f94bd#additem直接用-2\",\"643\":\"v-391f94bd#subitem映射用-2\",\"644\":\"v-391f94bd#小结-8\",\"645\":\"v-391f94bd#_10-vuex-重构购物车-准备store\",\"646\":\"v-391f94bd#目标-9\",\"647\":\"v-391f94bd#store准备\",\"648\":\"v-391f94bd#小结-9\",\"649\":\"v-391f94bd#_11-vuex-重构购物车-配置项-上午结束\",\"650\":\"v-391f94bd#目标-10\",\"651\":\"v-391f94bd#配置项准备\",\"652\":\"v-391f94bd#app-vue使用vuex\",\"653\":\"v-391f94bd#小结-10\",\"654\":\"v-391f94bd#_12-vuex-getters定义-计算属性\",\"655\":\"v-391f94bd#目标-11\",\"656\":\"v-391f94bd#getters概念\",\"657\":\"v-391f94bd#定义getters\",\"658\":\"v-391f94bd#小结-11\",\"659\":\"v-391f94bd#_13-vuex-getters使用\",\"660\":\"v-391f94bd#目标-12\",\"661\":\"v-391f94bd#使用getters的2种方式\",\"662\":\"v-391f94bd#myfooter-vue里使用\",\"663\":\"v-391f94bd#小结-12\",\"664\":\"v-391f94bd#_14-vuex-modules定义-分模块\",\"665\":\"v-391f94bd#目标-13\",\"666\":\"v-391f94bd#为何分模块\",\"667\":\"v-391f94bd#代码上的对比\",\"668\":\"v-391f94bd#创建modules模块对象\",\"669\":\"v-391f94bd#定义modules\",\"670\":\"v-391f94bd#小结-13\",\"671\":\"v-391f94bd#_15-分模块-影响state取值方式\",\"672\":\"v-391f94bd#目的\",\"673\":\"v-391f94bd#state使用方式修改\",\"674\":\"v-391f94bd#app-vue-修改\",\"675\":\"v-391f94bd#小结-14\",\"676\":\"v-391f94bd#_16-分模块-命名空间\",\"677\":\"v-391f94bd#目标-14\",\"678\":\"v-391f94bd#开启命名空间\",\"679\":\"v-391f94bd#state使用方式修改-1\",\"680\":\"v-391f94bd#mutations使用方式修改\",\"681\":\"v-391f94bd#actions使用方式修改\",\"682\":\"v-391f94bd#getters使用方式修改\",\"683\":\"v-391f94bd#小结-15\",\"684\":\"v-391f94bd#扩展-使用devtools调试vuex数据\",\"685\":\"v-391f94bd#目标-15\",\"686\":\"v-0db140eb\",\"687\":\"v-0db140eb#vuex介绍\",\"688\":\"v-0db140eb#vuex是什么\",\"689\":\"v-0db140eb#vuex为何学\",\"690\":\"v-0db140eb#vuex中存什么\",\"691\":\"v-0db140eb#基本使用\",\"692\":\"v-0db140eb#state\",\"693\":\"v-0db140eb#使用\",\"694\":\"v-0db140eb#mutations\",\"695\":\"v-0db140eb#actions\",\"696\":\"v-0db140eb#getters\",\"697\":\"v-0db140eb#用getters的2种方式\",\"698\":\"v-0db140eb#myfooter-vue里使用\",\"699\":\"v-39b0a1bd\",\"700\":\"v-744e6dd4\",\"701\":\"v-9a3f249c\",\"702\":\"v-1ce916bf\",\"703\":\"v-3473f556\",\"704\":\"v-103db713\",\"705\":\"v-659323e8\",\"706\":\"v-ad9a6986\",\"707\":\"v-5e3d92f7\",\"708\":\"v-7862baf1\",\"709\":\"v-44825889\",\"710\":\"v-02510dc4\",\"711\":\"v-3e328d54\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,42],\"2\":[1],\"3\":[2,44],\"4\":[2],\"5\":[1],\"6\":[1,12],\"7\":[1],\"8\":[1,13],\"9\":[1,34],\"10\":[1,22],\"11\":[1,9],\"12\":[1,32],\"13\":[1,15],\"14\":[1,36],\"15\":[1,38],\"16\":[1,83],\"17\":[1,150],\"18\":[3,58],\"19\":[2],\"20\":[1,33],\"21\":[1,31],\"22\":[1,28],\"23\":[2,78],\"24\":[1,20],\"25\":[2],\"26\":[1,38],\"27\":[1,28],\"28\":[1,8],\"29\":[1,13],\"30\":[1,48],\"31\":[4],\"32\":[2,15],\"33\":[2,33],\"34\":[3,56],\"35\":[1,45],\"36\":[1,54],\"37\":[1],\"38\":[3,73],\"39\":[1,122],\"40\":[4,147],\"41\":[2],\"42\":[1,20],\"43\":[1,16],\"44\":[1,22],\"45\":[2],\"46\":[1,7],\"47\":[1,32],\"48\":[1,26],\"49\":[3,19],\"50\":[2,17],\"51\":[2,20],\"52\":[1,5],\"53\":[1,35],\"54\":[4,37],\"55\":[6,36],\"56\":[1,5],\"57\":[2,29],\"58\":[1,20],\"59\":[1,355],\"60\":[1,66],\"61\":[3,16],\"62\":[1,18],\"63\":[1,51],\"64\":[2,6],\"65\":[3,33],\"66\":[2,7],\"67\":[4,72],\"68\":[2,107],\"69\":[1,51],\"70\":[7,22],\"71\":[1,1],\"72\":[3,41],\"73\":[2,18],\"74\":[1],\"75\":[1],\"76\":[1,18],\"77\":[1,8],\"78\":[1,12],\"79\":[1,7],\"80\":[1,7],\"81\":[1,13],\"82\":[1,10],\"83\":[1,2],\"84\":[1,21],\"85\":[2,5],\"86\":[2,25],\"87\":[2,20],\"88\":[3,12],\"89\":[2,16],\"90\":[1,39],\"91\":[1,58],\"92\":[1,45],\"93\":[1,77],\"94\":[1,8],\"95\":[3,56],\"96\":[1,1],\"97\":[1,47],\"98\":[1,51],\"99\":[1,14],\"100\":[1],\"101\":[1],\"102\":[1,13],\"103\":[1,19],\"104\":[1,19],\"105\":[1,30],\"106\":[1,36],\"107\":[1,22],\"108\":[1,18],\"109\":[1,44],\"110\":[1,79],\"111\":[1,36],\"112\":[1,36],\"113\":[1,41],\"114\":[1,11],\"115\":[1,51],\"116\":[1,15],\"117\":[1,57],\"118\":[1,64],\"119\":[1,26],\"120\":[2],\"121\":[1,115],\"122\":[1,6],\"123\":[1,162],\"124\":[2,176],\"125\":[1,49],\"126\":[2,75],\"127\":[1,1],\"128\":[1,31],\"129\":[1],\"130\":[1,84],\"131\":[1],\"132\":[1,97],\"133\":[1,24],\"134\":[1,13],\"135\":[1,51],\"136\":[1,153],\"137\":[2,44],\"138\":[1],\"139\":[1,160],\"140\":[1,10],\"141\":[1,28],\"142\":[1,106],\"143\":[1,99],\"144\":[1,18],\"145\":[1,15],\"146\":[1,161],\"147\":[1,22],\"148\":[1,40],\"149\":[1,17],\"150\":[1,24],\"151\":[1,25],\"152\":[1,13],\"153\":[2],\"154\":[1,48],\"155\":[3,77],\"156\":[3],\"157\":[3,35],\"158\":[1,36],\"159\":[3,48],\"160\":[3,57],\"161\":[2,72],\"162\":[1,26],\"163\":[1,72],\"164\":[1,35],\"165\":[1,9],\"166\":[1,24],\"167\":[1,74],\"168\":[2,134],\"169\":[1],\"170\":[2,60],\"171\":[1,109],\"172\":[2,37],\"173\":[1,26],\"174\":[1,95],\"175\":[1,47],\"176\":[3,80],\"177\":[1,6],\"178\":[2,62],\"179\":[1,22],\"180\":[1,62],\"181\":[2],\"182\":[1,64],\"183\":[2,23],\"184\":[2],\"185\":[1,25],\"186\":[1,63],\"187\":[2],\"188\":[2,33],\"189\":[1,17],\"190\":[1,17],\"191\":[2,10],\"192\":[1,28],\"193\":[2],\"194\":[2],\"195\":[1,100],\"196\":[1,25],\"197\":[1,179],\"198\":[1,70],\"199\":[1,15],\"200\":[2,12],\"201\":[1,160],\"202\":[1],\"203\":[1,35],\"204\":[2,30],\"205\":[2,17],\"206\":[1,9],\"207\":[1,21],\"208\":[1,47],\"209\":[2,48],\"210\":[1],\"211\":[2,30],\"212\":[1,21],\"213\":[1,55],\"214\":[1,41],\"215\":[3,72],\"216\":[2,30],\"217\":[1,12],\"218\":[2,15],\"219\":[4,16],\"220\":[1,18],\"221\":[1,30],\"222\":[2,34],\"223\":[3,55],\"224\":[2,34],\"225\":[2,35],\"226\":[2,14],\"227\":[1,19],\"228\":[1,37],\"229\":[1,3],\"230\":[1,7],\"231\":[3,34],\"232\":[3,22],\"233\":[1,7],\"234\":[1,23],\"235\":[1,16],\"236\":[1,106],\"237\":[1,28],\"238\":[1,47],\"239\":[1,18],\"240\":[2],\"241\":[3,70],\"242\":[2,25],\"243\":[1,66],\"244\":[2,54],\"245\":[1],\"246\":[1,53],\"247\":[1,42],\"248\":[2,59],\"249\":[1,46],\"250\":[4,189],\"251\":[1,116],\"252\":[2,61],\"253\":[2,31],\"254\":[3,50],\"255\":[3,35],\"256\":[2,38],\"257\":[3,44],\"258\":[1,95],\"259\":[2,45],\"260\":[3,39],\"261\":[3,36],\"262\":[1,98],\"263\":[1,97],\"264\":[1,99],\"265\":[2,91],\"266\":[1,54],\"267\":[3,88],\"268\":[1,158],\"269\":[1,92],\"270\":[4,56],\"271\":[4,69],\"272\":[4,40],\"273\":[1],\"274\":[1,12],\"275\":[2,35],\"276\":[1,57],\"277\":[1,26],\"278\":[2,41],\"279\":[2,38],\"280\":[1,22],\"281\":[1,8],\"282\":[1,121],\"283\":[3,78],\"284\":[1,59],\"285\":[1,8],\"286\":[2,30],\"287\":[2,16],\"288\":[1,84],\"289\":[1,34],\"290\":[1,34],\"291\":[1,126],\"292\":[1,22],\"293\":[1,21],\"294\":[1,80],\"295\":[1,49],\"296\":[1,14],\"297\":[1,6],\"298\":[1,2],\"299\":[1,48],\"300\":[1,64],\"301\":[1,25],\"302\":[1,16],\"303\":[2,10],\"304\":[1,37],\"305\":[1,59],\"306\":[1,118],\"307\":[3,43],\"308\":[3,32],\"309\":[1,17],\"310\":[1,60],\"311\":[1,29],\"312\":[1,9],\"313\":[2,83],\"314\":[3,92],\"315\":[1,48],\"316\":[1,64],\"317\":[1,25],\"318\":[1,16],\"319\":[2,10],\"320\":[1,37],\"321\":[1,59],\"322\":[1,118],\"323\":[3,43],\"324\":[3,32],\"325\":[1,17],\"326\":[1,60],\"327\":[1,29],\"328\":[1,57],\"329\":[1,9],\"330\":[2,83],\"331\":[3,91],\"332\":[1],\"333\":[1,45],\"334\":[1,12],\"335\":[1,54],\"336\":[1,28],\"337\":[1,59],\"338\":[1,82],\"339\":[1,77],\"340\":[1,17],\"341\":[1],\"342\":[1,79],\"343\":[3,79],\"344\":[4,46],\"345\":[2],\"346\":[2,47],\"347\":[5,96],\"348\":[2,20],\"349\":[1,164],\"350\":[1,84],\"351\":[5,20],\"352\":[1],\"353\":[2,59],\"354\":[1,94],\"355\":[2,33],\"356\":[1,49],\"357\":[1,42],\"358\":[1,47],\"359\":[3,58],\"360\":[1],\"361\":[1,72],\"362\":[2],\"363\":[1,65],\"364\":[1,19],\"365\":[1,27],\"366\":[1,39],\"367\":[1,46],\"368\":[1,59],\"369\":[1,4],\"370\":[1,39],\"371\":[1,48],\"372\":[1,10],\"373\":[1],\"374\":[1,49],\"375\":[1,51],\"376\":[1,66],\"377\":[1,65],\"378\":[1,14],\"379\":[1,75],\"380\":[1,52],\"381\":[1,29],\"382\":[1,8],\"383\":[1,22],\"384\":[2,62],\"385\":[1,22],\"386\":[1,42],\"387\":[1,6],\"388\":[1,46],\"389\":[1,36],\"390\":[1,41],\"391\":[1,65],\"392\":[1,44],\"393\":[1,23],\"394\":[1],\"395\":[2,11],\"396\":[1,27],\"397\":[1],\"398\":[1,41],\"399\":[1,35],\"400\":[1,44],\"401\":[2,20],\"402\":[1,53],\"403\":[2,43],\"404\":[2,43],\"405\":[2,53],\"406\":[1],\"407\":[1,24],\"408\":[1,99],\"409\":[1,22],\"410\":[1,45],\"411\":[1,39],\"412\":[1,22],\"413\":[1,41],\"414\":[1],\"415\":[1,78],\"416\":[1,78],\"417\":[1],\"418\":[1,25],\"419\":[1,42],\"420\":[2,54],\"421\":[1,48],\"422\":[1,6],\"423\":[1,39],\"424\":[1,13],\"425\":[1,11],\"426\":[1,20],\"427\":[2],\"428\":[2,23],\"429\":[1,33],\"430\":[3,80],\"431\":[1],\"432\":[2,50],\"433\":[2,47],\"434\":[2,13],\"435\":[2,17],\"436\":[2,33],\"437\":[2,93],\"438\":[1,45],\"439\":[2,11],\"440\":[1,68],\"441\":[1,46],\"442\":[2,22],\"443\":[1,57],\"444\":[1,41],\"445\":[1,56],\"446\":[1,52],\"447\":[2,61],\"448\":[1,62],\"449\":[1,68],\"450\":[3,92],\"451\":[1,8],\"452\":[1,46],\"453\":[5,60],\"454\":[2,17],\"455\":[3,36],\"456\":[1,9],\"457\":[1,86],\"458\":[1,54],\"459\":[1,84],\"460\":[6,34],\"461\":[2,19],\"462\":[2,12],\"463\":[3,71],\"464\":[1,49],\"465\":[1,8],\"466\":[3],\"467\":[1],\"468\":[1,45],\"469\":[1,36],\"470\":[1,35],\"471\":[1,55],\"472\":[2,56],\"473\":[3,95],\"474\":[4,62],\"475\":[2,30],\"476\":[1,65],\"477\":[1,103],\"478\":[1,62],\"479\":[3,35],\"480\":[1,176],\"481\":[2,41],\"482\":[1,1],\"483\":[1,138],\"484\":[1],\"485\":[1],\"486\":[2,20],\"487\":[2,33],\"488\":[2,12],\"489\":[1,78],\"490\":[4,36],\"491\":[1],\"492\":[2,16],\"493\":[1,28],\"494\":[1,85],\"495\":[3],\"496\":[2,26],\"497\":[1,60],\"498\":[1,26],\"499\":[2,23],\"500\":[1,83],\"501\":[1,8],\"502\":[3,27],\"503\":[1,85],\"504\":[1,56],\"505\":[1,96],\"506\":[1],\"507\":[1,5],\"508\":[1,40],\"509\":[1,34],\"510\":[1,28],\"511\":[1,27],\"512\":[1,30],\"513\":[3,34],\"514\":[1,39],\"515\":[1,10],\"516\":[1],\"517\":[2],\"518\":[2,13],\"519\":[1,30],\"520\":[1,47],\"521\":[1,37],\"522\":[2,12],\"523\":[2,10],\"524\":[1,14],\"525\":[1,13],\"526\":[1,16],\"527\":[1,81],\"528\":[1,20],\"529\":[3,58],\"530\":[1,76],\"531\":[1,68],\"532\":[1,26],\"533\":[1],\"534\":[1],\"535\":[1,19],\"536\":[1,30],\"537\":[1,28],\"538\":[3,18],\"539\":[3,57],\"540\":[1,129],\"541\":[2,17],\"542\":[2,8],\"543\":[1,85],\"544\":[1,114],\"545\":[1],\"546\":[2,75],\"547\":[1,123],\"548\":[5,67],\"549\":[1,11],\"550\":[1,107],\"551\":[1,72],\"552\":[1,22],\"553\":[1,25],\"554\":[1,44],\"555\":[1,31],\"556\":[1],\"557\":[1,91],\"558\":[1,18],\"559\":[1,109],\"560\":[1,25],\"561\":[1,53],\"562\":[1,4],\"563\":[2,90],\"564\":[2,15],\"565\":[1,29],\"566\":[1,40],\"567\":[1,59],\"568\":[1,23],\"569\":[1,82],\"570\":[1,83],\"571\":[1,114],\"572\":[1,12],\"573\":[1,65],\"574\":[1,36],\"575\":[1,9],\"576\":[1],\"577\":[4,58],\"578\":[1,133],\"579\":[1],\"580\":[3,50],\"581\":[1,70],\"582\":[1,88],\"583\":[1,61],\"584\":[1,119],\"585\":[1,44],\"586\":[2],\"587\":[3,4],\"588\":[2],\"589\":[1,2],\"590\":[1,11],\"591\":[1,7],\"592\":[1,24],\"593\":[1,12],\"594\":[1,7],\"595\":[2],\"596\":[1,1],\"597\":[1,26],\"598\":[1,3],\"599\":[1,6],\"600\":[2],\"601\":[1,14],\"602\":[1,14],\"603\":[2,47],\"604\":[2,17],\"605\":[2,18],\"606\":[1,2],\"607\":[3],\"608\":[1,2],\"609\":[1,6],\"610\":[1,10],\"611\":[1,55],\"612\":[1,12],\"613\":[3],\"614\":[1,5],\"615\":[1,18],\"616\":[1,24],\"617\":[1,15],\"618\":[2,23],\"619\":[1,45],\"620\":[1,3],\"621\":[1,14],\"622\":[4],\"623\":[1,1],\"624\":[1,30],\"625\":[1,7],\"626\":[1,4],\"627\":[3],\"628\":[1,2],\"629\":[1,23],\"630\":[1,19],\"631\":[2,28],\"632\":[1,31],\"633\":[1,4],\"634\":[1,12],\"635\":[4],\"636\":[1,1],\"637\":[1,30],\"638\":[1,11],\"639\":[3],\"640\":[1,1],\"641\":[1,24],\"642\":[1,20],\"643\":[1,33],\"644\":[1,16],\"645\":[4],\"646\":[1,1],\"647\":[1,9],\"648\":[1,3],\"649\":[6],\"650\":[1,1],\"651\":[1,34],\"652\":[2,30],\"653\":[1,7],\"654\":[4],\"655\":[1,2],\"656\":[1,7],\"657\":[1,34],\"658\":[1,4],\"659\":[3],\"660\":[1,1],\"661\":[1,23],\"662\":[2,18],\"663\":[1,10],\"664\":[4],\"665\":[1,2],\"666\":[1],\"667\":[1],\"668\":[1,63],\"669\":[1,25],\"670\":[1,18],\"671\":[3],\"672\":[1,3],\"673\":[1,17],\"674\":[3,18],\"675\":[1,8],\"676\":[3],\"677\":[1,4],\"678\":[1,12],\"679\":[1,10],\"680\":[1,16],\"681\":[1,16],\"682\":[1,15],\"683\":[1,4],\"684\":[2,4],\"685\":[1,3],\"686\":[2,45],\"687\":[1],\"688\":[1,14],\"689\":[1,24],\"690\":[1,12],\"691\":[1,51],\"692\":[1,32],\"693\":[1,27],\"694\":[1,102],\"695\":[1,38],\"696\":[1,38],\"697\":[1,23],\"698\":[2,18],\"699\":[1],\"700\":[1],\"701\":[1],\"702\":[2],\"703\":[2],\"704\":[1],\"705\":[1],\"706\":[1],\"707\":[1],\"708\":[1],\"709\":[1],\"710\":[1],\"711\":[1]},\"averageFieldLength\":[1.470505617977528,41.84763351072012],\"storedFields\":{\"0\":{\"h\":\"初识ArkTS语言\"},\"1\":{\"h\":\"ArkTS语言\",\"t\":[\"ArkTS是HarmonyOS优选的主力应用开发语言。ArkTS围绕应用开发在TypeScript（简称TS）生态基础上做了进一步扩展，继承了TS的所有特性，是TS的超集。因此，在学习ArkTS语言之前，建议开发者具备TS语言开发能力。\",\"当前，ArkTS在TS的基础上主要扩展了如下能力：\",\"基本语法：ArkTS定义了声明式UI描述、自定义组件和动态扩展UI元素的能力，再配合ArkUI开发框架中的系统组件及其相关的事件方法、属性方法等共同构成了UI开发的主体。\",\"状态管理：ArkTS提供了多维度的状态管理机制。在UI开发框架中，与UI相关联的数据可以在组件内使用，也可以在不同组件层级间传递，比如父子组件之间、爷孙组件之间，还可以在应用全局范围内传递或跨设备传递。另外，从数据的传递形式来看，可分为只读的单向传递和可变更的双向传递。开发者可以灵活地利用这些能力来实现数据和UI的联动。\",\"渲染控制：ArkTS提供了渲染控制的能力。条件渲染可根据应用的不同状态，渲染对应状态下的UI内容。循环渲染可从数据源中迭代获取数据，并在每次迭代过程中创建相应的组件。数据懒加载从数据源中按需迭代数据，并在每次迭代过程中创建相应的组件。\",\"未来，ArkTS会结合应用开发/运行的需求持续演进，逐步提供并行和并发能力增强、系统类型增强、分布式开发范式等更多特性。\"]},\"2\":{\"h\":\"基本语法\"},\"3\":{\"h\":\"ArkTS 基本组成\",\"t\":[\"自定义变量不能与基础通用属性/事件名重复。\",\"装饰器： 用于装饰类、结构、方法以及变量，并赋予其特殊的含义。如上述示例中@Entry、@Component和@State都是装饰器，@Component表示自定义组件，@Entry表示该自定义组件为入口组件，@State表示组件中的状态变量，状态变量变化会触发UI刷新。\",\"UI描述：以声明式的方式来描述UI的结构，例如build()方法中的代码块。\",\"自定义组件：可复用的UI单元，可组合其他组件，如上述被@Component装饰的struct Hello。\",\"系统组件：ArkUI框架中默认内置的基础和容器组件，可直接被开发者调用，比如示例中的Column、Text、Divider、Button。\",\"属性方法：组件可以通过链式调用配置多项属性，如fontSize()、width()、height()、backgroundColor()等。\",\"事件方法：组件可以通过链式调用设置多个事件的响应逻辑，如跟随在Button后面的onClick()。\",\"系统组件、属性方法、事件方法具体使用可参考基于ArkTS的声明式开发范式。\"]},\"4\":{\"h\":\"ArkUI 基础组件\"},\"5\":{\"h\":\"基础组件\"},\"6\":{\"h\":\"Text\",\"t\":[\"Text($r(\\\"app.string.module_desc\\\")) \",\"文本会先在对应国家的资源文件中查找，如果没有找到，会在 base 全局资源文件中查找。\"]},\"7\":{\"h\":\"TextInput\"},\"8\":{\"h\":\"Button\",\"t\":[\"方法1： Button(options?: {type?: ButtonType, stateEffect?: boolean})\",\"方法2： Button(label?: ResourceStr, options?: { type?: ButtonType, stateEffect?: boolean })\",\"使用文本内容创建相应的按钮组件，此时Button无法包含子组件。\"]},\"9\":{\"h\":\"Image\",\"t\":[\"图片组件，支持本地图片和网络图片的渲染展示。\",\"Image(src: string | PixelMap | Resource) 图片的数据源，支持本地图片和网络图片。当使用相对路径引用图片资源时，例如Image(\\\"common/test.jpg\\\")，不支持该Image组件被跨包/跨模块调用，建议使用$r方式来管理需全局使用的图片资源。\",\"支持的图片格式包括png、jpg、bmp、svg和gif。\",\"支持Base64字符串。格式data:image/[png|jpeg|bmp|webp];base64,[base64 data], 其中[base64 data]为Base64字符串数据。\",\"支持dataability://路径前缀的字符串，用于访问通过data ability提供的图片路径。\"]},\"10\":{\"h\":\"从网络加载图片\",\"t\":[\"使用网络图片时，需要申请权限ohos.permission.INTERNET。具体申请方式请参考权限申请声明。\",\"// entry/src/main/module.json5 { \\\"module\\\": { \\\"reqPermissions\\\": [ { \\\"name\\\": \\\"ohos.permission.INTERNET\\\", } ] } } \",\"通过以下代码，可以加载网络图片：\",\"Image(\\\"https://example.com/image.jpg\\\") \"]},\"11\":{\"h\":\"从本地加载\",\"t\":[\"Image($r(\\\"app.media.icon\\\")) Image($rawfile(\\\"abstract.png\\\")) \"]},\"12\":{\"h\":\"Slider\",\"t\":[\"Slider({ min: 0, // 最小值 max: 100, // 最大值 value: 40, // 当前值 step: 10, // 步长 style: SliderStyle.InSet, // Outer Slider direction: Axis.Horizontal, // 方向 reverse: false // 方向滑动 }) .showTips(true) // 展示 value 百分比 .margin({ top: 20 }) \"]},\"13\":{\"h\":\"容器组件\",\"t\":[\"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V3/arkui-ts-container-components-0000001334734185-V3\"]},\"14\":{\"h\":\"Column\",\"t\":[\"沿垂直方向布局的容器。\",\"@Entry @Component struct ColumnExample { build() { Column() { Text('space').fontSize(9).fontColor(0xCCCCCC).width('90%') Column({ space: 5 }) { Column().width('100%').height(30).backgroundColor(0xAFEEEE) Column().width('100%').height(30).backgroundColor(0x00FFFF) }.width('90%').height(100).border({ width: 1 }) Text('alignItems(Start)').fontSize(9).fontColor(0xCCCCCC).width('90%') Column() { Column().width('50%').height(30).backgroundColor(0xAFEEEE) Column().width('50%').height(30).backgroundColor(0x00FFFF) }.alignItems(HorizontalAlign.Start).width('90%').border({ width: 1 }) Text('alignItems(End)').fontSize(9).fontColor(0xCCCCCC).width('90%') Column() { Column().width('50%').height(30).backgroundColor(0xAFEEEE) Column().width('50%').height(30).backgroundColor(0x00FFFF) }.alignItems(HorizontalAlign.End).width('90%').border({ width: 1 }) Text('justifyContent(Center)').fontSize(9).fontColor(0xCCCCCC).width('90%') Column() { Column().width('30%').height(30).backgroundColor(0xAFEEEE) Column().width('30%').height(30).backgroundColor(0x00FFFF) }.height('15%').border({ width: 1 }).justifyContent(FlexAlign.Center) Text('justifyContent(End)').fontSize(9).fontColor(0xCCCCCC).width('90%') Column() { Column().width('30%').height(30).backgroundColor(0xAFEEEE) Column().width('30%').height(30).backgroundColor(0x00FFFF) }.height('15%').border({ width: 1 }).justifyContent(FlexAlign.End) }.width('100%').padding({ top: 5 }) } } \"]},\"15\":{\"h\":\"Row\",\"t\":[\"沿水平方向布局容器。\",\"// xxx.ets @Entry @Component struct RowExample { build() { Column({ space: 5 }) { Text('space').fontSize(9).fontColor(0xCCCCCC).width('90%') Row({ space: 5 }) { Row().width('30%').height(50).backgroundColor(0xAFEEEE) Row().width('30%').height(50).backgroundColor(0x00FFFF) }.width('90%').height(107).border({ width: 1 }) Text('alignItems(Top)').fontSize(9).fontColor(0xCCCCCC).width('90%') Row() { Row().width('30%').height(50).backgroundColor(0xAFEEEE) Row().width('30%').height(50).backgroundColor(0x00FFFF) }.alignItems(VerticalAlign.Top).height('15%').border({ width: 1 }) Text('alignItems(Center)').fontSize(9).fontColor(0xCCCCCC).width('90%') Row() { Row().width('30%').height(50).backgroundColor(0xAFEEEE) Row().width('30%').height(50).backgroundColor(0x00FFFF) }.alignItems(VerticalAlign.Center).height('15%').border({ width: 1 }) Text('justifyContent(End)').fontSize(9).fontColor(0xCCCCCC).width('90%') Row() { Row().width('30%').height(50).backgroundColor(0xAFEEEE) Row().width('30%').height(50).backgroundColor(0x00FFFF) }.width('90%').border({ width: 1 }).justifyContent(FlexAlign.End) Text('justifyContent(Center)').fontSize(9).fontColor(0xCCCCCC).width('90%') Row() { Row().width('30%').height(50).backgroundColor(0xAFEEEE) Row().width('30%').height(50).backgroundColor(0x00FFFF) }.width('90%').border({ width: 1 }).justifyContent(FlexAlign.Center) }.width('100%') } } \"]},\"16\":{\"h\":\"案例\",\"t\":[\"// xxx.ets @Entry @Component struct Index { @State imgWidth: number = 30 build() { Row() { Column() { Image($r(\\\"app.media.icon\\\")) .width(this.imgWidth) .interpolation(ImageInterpolation.High) Text(`图片宽度: ${this.imgWidth}`) .margin(20) TextInput({ placeholder: \\\"请输入图片宽度\\\", text: this.imgWidth.toString() }) .width(200) .type(InputType.Number) .onChange(value => { this.imgWidth = parseInt(value) }) Row() { Button(\\\"缩小\\\") .width(80) .onClick(() => { if (this.imgWidth >= 10) { this.imgWidth -= 10 } }) Button(\\\"放大\\\") .width(80) .onClick(() => { if (this.imgWidth <= 300) { this.imgWidth += 10 } }) } .margin({ top: 20 }) Slider({ min: 0, // 最小值 max: 100, // 最大值 value: 40, // 当前值 step: 10, // 步长 style: SliderStyle.InSet, // Outer Slider direction: Axis.Horizontal, // 方向 reverse: false // 方向滑动 }) .showTips(true) // 展示 value 百分比 .margin({ top: 20 }) .width(\\\"80%\\\") } .width(\\\"100%\\\") } .height(\\\"100%\\\") } } \"]},\"17\":{\"h\":\"循环控制\",\"t\":[\"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-rendering-control-foreach-0000001524537153-V2\",\"ForEach( arr: Array, itemGenerator: (item: any, index: number) => void, keyGenerator?: (item: any, index: number) => string ) \",\"在ForEach循环渲染过程中，系统会为每个数组元素生成一个唯一且持久的键值，用于标识对应的组件。当这个键值变化时，ArkUI框架将视为该数组元素已被替换或修改，并会基于新的键值创建一个新的组件。\",\"ForEach提供了一个名为keyGenerator的参数，这是一个函数，开发者可以通过它自定义键值的生成规则。如果开发者没有定义keyGenerator函数，则ArkUI框架会使用默认的键值生成函数，即(item: any, index: number) => { return index + '__' + JSON.stringify(item); }。\",\"ArkUI框架对于ForEach的键值生成有一套特定的判断规则，这主要与itemGenerator函数的第二个参数index以及keyGenerator函数的第二个参数index有关，具体的键值生成规则判断逻辑如下图所示。\",\"以下是一个简单例子, 具体可以到官方文档查看\",\"class Item { name: string image: string price: number discount: number constructor(name: string, image: string, price: number, discount: number = 0) { this.name = name this.image = image this.price = price this.discount = discount } } @Entry @Component struct Second { private items: Array<Item> = [ new Item(\\\"华为Mate1\\\", \\\"https://qiniu.waite.wang/202404182317729.png\\\", 1666, 1000), new Item(\\\"华为Mate2\\\", \\\"https://qiniu.waite.wang/202404182317729.png\\\", 1999), new Item(\\\"华为Mate3\\\", \\\"https://qiniu.waite.wang/202404182317729.png\\\", 2666), new Item(\\\"华为Mate4\\\", \\\"https://qiniu.waite.wang/202404182317729.png\\\", 2999), new Item(\\\"华为Mate5\\\", \\\"https://qiniu.waite.wang/202404182317729.png\\\", 3666), new Item(\\\"华为Mate6\\\", \\\"https://qiniu.waite.wang/202404182317729.png\\\", 3999), ] @State message: string = 'Hi there' build() { Column({ space: 10 }) { Row() { Text(\\\"商品列表\\\") .fontSize(30) .fontWeight(FontWeight.Bold) } .width(\\\"100%\\\") ForEach( this.items, (item: Item) => { Row({ space: 10 }) { Image(item.image) .width(100) Column() { Text(item.name) .fontSize(20) .fontWeight(FontWeight.Bold) if (item.discount) { Text(`原价$ ${item.price}`) .fontColor(\\\"#ccc\\\") .fontSize(18) .decoration({ type: TextDecorationType.LineThrough }) Text(`折扣价$ ${item.discount}`) .fontColor(\\\"red\\\") .fontSize(18) } else { Text(`$ ${item.price}`) .fontColor(\\\"red\\\") .fontSize(18) } } .height(\\\"100%\\\") .alignItems(HorizontalAlign.Start) } .width(\\\"100%\\\") .backgroundColor(\\\"#f8f8f8\\\") .borderRadius(20) .height(120) .padding(10) } ) } .padding(20) } } \",\"注意 当不同数组项按照键值生成规则生成的键值相同时，框架的行为是未定义的。例如，在以下代码中，ForEach渲染相同的数据项two时，只创建了一个ChildItem组件，而没有创建多个具有相同键值的组件。\",\"@Entry @Component struct Parent { @State simpleList: Array<string> = ['one', 'two', 'two', 'three']; build() { Row() { Column() { ForEach(this.simpleList, (item: string) => { ChildItem({ 'item': item } as Record<string, string>) }, (item: string) => item) } .width('100%') .height('100%') } .height('100%') .backgroundColor(0xF1F3F5) } } @Component struct ChildItem { @Prop item: string; build() { Text(this.item) .fontSize(50) } } \"]},\"18\":{\"h\":\"补充: List/ ListItem\",\"t\":[\"在以上案例中, 超出屏幕的内容无法滚动查看(会隐藏), 可以使用 List/ ListItem 组件来实现\",\"// xxx.ets @Entry @Component struct ListItemExample { private arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] @State editFlag: boolean = false build() { Column() { List({ space: 20, initialIndex: 0 }) { ForEach(this.arr, (item) => { ListItem() { Text('' + item) .width('100%').height(100).fontSize(16) .textAlign(TextAlign.Center).borderRadius(10).backgroundColor(0xFFFFFF) } }, item => item) } }.width('100%').height('100%').backgroundColor(0xDCDCDC).padding({ top: 5 }) } } \"]},\"19\":{\"h\":\"ArkUI 自定义组件\"},\"20\":{\"h\":\"自定义组件的基本结构\",\"t\":[\"struct：自定义组件基于struct实现，struct + 自定义组件名 + {...}的组合构成自定义组件，不能有继承关系。对于struct的实例化，可以省略new。\",\"自定义组件名、类名、函数名不能和系统组件名相同。\",\"@Component：@Component装饰器仅能装饰struct关键字声明的数据结构。struct被@Component装饰后具备组件化的能力，需要实现build方法描述UI，一个struct只能被一个@Component装饰。\",\"从API version 9开始，该装饰器支持在ArkTS卡片中使用。\",\"@Component struct MyComponent { } \",\"build()函数：build()函数用于定义自定义组件的声明式UI描述，自定义组件必须定义build()函数。\",\"@Component struct MyComponent { build() { } } \",\"@Entry：@Entry装饰的自定义组件将作为UI页面的入口。在单个UI页面中，最多可以使用@Entry装饰一个自定义组件。@Entry可以接受一个可选的LocalStorage的参数。\",\"从API version 9开始，该装饰器支持在ArkTS卡片中使用。\",\"@Entry @Component struct MyComponent { } \"]},\"21\":{\"h\":\"自定义组件的基本用法\",\"t\":[\"@Entry @Component struct ParentComponent { build() { Column() { Text('ArkUI message') HelloComponent({ message: 'Hello, World!' }); HelloComponent({ message: '你好!' }); } } } @Component struct HelloComponent { @State message: string = 'Hello, World!'; build() { // HelloComponent自定义组件组合系统组件Row和Text Row() { Text(this.message) .onClick(() => { // 状态变量message的改变驱动UI刷新，UI从'Hello, World!'刷新为'Hello, ArkUI!' this.message = 'Hello, ArkUI!'; }) } } } \",\"如果在另外的文件中引用该自定义组件，需要使用export关键字导出，并在使用的页面import该自定义组件。\",\"@Component export struct HelloComponent { @State message: string = 'Hello, World!'; build() { // HelloComponent自定义组件组合系统组件Row和Text Row() { Text(this.message) .onClick(() => { // 状态变量message的改变驱动UI刷新，UI从'Hello, World!'刷新为'Hello, ArkUI!' this.message = 'Hello, ArkUI!'; }) } } } \",\"import { HelloComponent } from './HelloComponent' @Entry @Component struct ParentComponent { build() { Column() { Text('ArkUI message') HelloComponent({ message: 'Hello, World!' }); HelloComponent({ message: '你好!' }); } } } \"]},\"22\":{\"h\":\"自定义组件的参数规定\",\"t\":[\"从上文的示例中，我们已经了解到，可以在build方法里创建自定义组件，在创建自定义组件的过程中，根据装饰器的规则来初始化自定义组件的参数。\",\"@Component struct MyComponent { private countDownFrom: number = 0; private color: Color = Color.Blue; build() { } } @Entry @Component struct ParentComponent { private someColor: Color = Color.Pink; build() { Column() { // 创建MyComponent实例，并将创建MyComponent成员变量countDownFrom初始化为10，将成员变量color初始化为this.someColor MyComponent({ countDownFrom: 10, color: this.someColor }) } } } \"]},\"23\":{\"h\":\"build()函数\",\"t\":[\"所有声明在build()函数的语言，我们统称为UI描述，UI描述需要遵循以下规则：\",\"@Entry装饰的自定义组件，其build()函数下的根节点唯一且必要，且必须为容器组件，其中ForEach禁止作为根节点。\",\"@Component装饰的自定义组件，其build()函数下的根节点唯一且必要，可以为非容器组件，其中ForEach禁止作为根节点。\",\"@Entry @Component struct MyComponent { build() { // 根节点唯一且必要，必须为容器组件 Row() { ChildComponent() } } } @Component struct ChildComponent { build() { // 根节点唯一且必要，可为非容器组件 Image('test.jpg') } } \",\"不允许声明本地变量，反例如下。\",\"build() { // 反例：不允许声明本地变量 let a: number = 1; } \",\"不允许在UI描述里直接使用console.info，但允许在方法或者函数里使用，反例如下。\",\"build() { // 反例：不允许console.info console.info('print debug log'); } \",\"不允许创建本地的作用域，反例如下。\",\"build() { // 反例：不允许本地作用域 { ... } } \",\"不允许调用没有用@Builder装饰的方法，允许系统组件的参数是TS方法的返回值。\",\"@Component struct ParentComponent { doSomeCalculations() { } calcTextValue(): string { return 'Hello World'; } @Builder doSomeRender() { Text(`Hello World`) } build() { Column() { // 反例：不能调用没有用@Builder装饰的方法 this.doSomeCalculations(); // 正例：可以调用 this.doSomeRender(); // 正例：参数可以为调用TS方法的返回值 Text(this.calcTextValue()) } } } \",\"不允许switch语法，如果需要使用条件判断，请使用if。反例如下。\",\"build() { Column() { // 反例：不允许使用switch语法 switch (expression) { case 1: Text('...') break; case 2: Image('...') break; default: Text('...') break; } } } \",\"不允许使用表达式，反例如下。\",\"build() { Column() { // 反例：不允许使用表达式 (this.aVar > 10) ? Text('...') : Image('...') } } \"]},\"24\":{\"h\":\"自定义组件通用样式\",\"t\":[\"自定义组件通过“.”链式调用的形式设置通用样式。\",\"@Component struct MyComponent2 { build() { Button(`Hello World`) } } @Entry @Component struct MyComponent { build() { Row() { MyComponent2() .width(200) .height(300) .backgroundColor(Color.Red) } } } \"]},\"25\":{\"h\":\"安装 DevEcoStudio\"},\"26\":{\"h\":\"安装\",\"t\":[\"下载安装包\",\"正常安装包, 下一步安装\",\"image-20240417121723826\",\"配置开发环境\",\"image-20240417121810196\",\"选择 Agree, 进入配置选择页面, 选择不导入配置\",\"image-20240417121841096\",\"选择要安装的Node.is和hpm位置，其中ohpm是Open Harmony Package Management的缩写，也就是类似npm的包管理工具。这里有几点注意事项:\",\"如果电脑上已经有Node.js，但是版本不一致，建议选择让工具重新安装\",\"如果电脑上已经有Node.js，并且版本一致，可以选择Local，指定node目录即可\",\"如果电脑上对Node.is做了一些特殊的options配置，建议先移除\",\"配置目录中不要出现中文、特殊字符，建议用默认路径\",\"image-20240417121951184\",\"选择Next后，进入HarmonyOs的SDK安装目录选择页面以及同意协议, 配置目录/ 同意协议后下一步即可\"]},\"27\":{\"h\":\"环境错误处理\",\"t\":[\"在安装的过程中，如果出现类似下面的错误\",\"image-20240417122147373\",\"一般就是因为你本地原本的Node.is配置异常导致的，建议清理环境变量中对于Node.is的配置之后再重试 重试时无需重新安装，而是再次打开DevEco Studio，点击界面左下方的 ? 按钮: 选择第一个 Diagnose Development Environment 进入诊断页面, 这里会提示安装出现问题的选项，点击异常项后面的set it up now即可重新安装 如果所有问题都已经解决，最终重试后等待所有项都是 √即可\",\"image-20240417122238577\",\"image-20240417122305876\"]},\"28\":{\"h\":\"中文设置\",\"t\":[\"设置->插件->已安装->其他工具->chinese->启用即可\",\"image-20240417122439395\"]},\"29\":{\"h\":\"创建项目\",\"t\":[\"Create Project -> Empty Ability -> 按要求填写目录即可\",\"此时项目内已有 Hello World 基础代码, 点右侧预览器即可预览效果\",\"image-20240417122904349\"]},\"30\":{\"h\":\"模拟器安装\",\"t\":[\"我们也可以利用设备模拟器来查看更真实的效果。不过需要先配置模拟器\",\"首先，选择主菜单中的Tools，找到其中的Device Manager，即设备管理\",\"image-20240417122932610\",\"设备可以是 远端设备 ，也可以是 本地设备 ，我们以本地设备为例。\",\"默认本地没有任何设备，选择install来安装一个\",\"image-20240417122953229\",\"首次点击时，会弹出一个窗口，下载必要的SDK依赖, 安装完下一步即可\",\"进入创建模拟器页面，选择New Emulator:\",\"image-20240417123032281\",\"image-20240417123043858\",\"选择api9版本，不过需要注意，首次进入此页面，需要下载手机设备需要的系统，大概2.2G，需要耐心等待:\",\"image-20240417123103057\",\"image-20240417123115419\",\"创建完成后，在设备列表中会出现一个本地设备，点击后面的运行按钮即可启动设备模拟器\",\"image-20240417123136573\",\"启动后如下\",\"image-20240417123155182\",\"然后，在应用启动位置选择刚刚添加的模拟器, 然后点击启动即可\",\"image-20240417123220059\",\"image-20240417123227197\",\"效果如下\",\"image-20240417123240912\"]},\"31\":{\"h\":\"Stage 与 FA 模型的区别\"},\"32\":{\"h\":\"FA模型：早期的探索\",\"t\":[\"FA模型是HarmonyOS早期版本开始支持的应用模型。它通过PageAbility、ServiceAbility和DataAbility三种组件，为开发者提供了构建应用的基础。FA模型的特点是每个组件运行在自己的进程中，拥有独立的JS VM引擎实例，这使得组件之间相互隔离，但也带来了一定的内存占用。\",\"随着HarmonyOS的演进，特别是1+8+N的战略被提出，多设备和多窗口形态成为主流，此时FA模型在处理复杂应用时存在一定的局限性， FA模型逐渐不再被主推。\"]},\"33\":{\"h\":\"Stage模型：未来的主流\",\"t\":[\"为了更好地适应复杂应用的开发需求，HarmonyOS 3.1 Developer Preview版本引入了Stage模型。Stage模型通过AbilityStage、WindowStage等类，将应用组件和Window窗口作为“舞台”进行管理，从而提供了更加灵活和高效的开发方式。\",\"Stage模型的设计出发点是为了复杂应用而设计，它通过以下几个方面实现了对复杂应用的优化：\",\"共享ArkTS引擎实例：在Stage模型中，多个应用组件共享同一个ArkTS引擎实例，这使得组件之间可以方便地共享对象和状态，同时减少了内存占用。\",\"面向对象的开发方式：Stage模型采用面向对象的开发方式，提高了代码的可读性、易维护性和可扩展性。\",\"支持多设备和多窗口形态：应用组件管理和窗口管理在架构层面解耦，使得应用组件可以在不同设备上使用同一套生命周期，便于系统扩展窗口形态。\",\"平衡应用能力和系统管控成本：Stage模型重新定义了应用能力的边界，提供了特定场景的应用组件，规范化了后台进程管理，防止了恶意应用行为。\"]},\"34\":{\"h\":\"（Stage模型）目录结构\",\"t\":[\"AppScope > app.json5：应用的全局配置信息。\",\"entry：HarmonyOS工程模块，编译构建生成一个HAP包。 \",\"src > main > ets：用于存放ArkTS源码。 src > main > ets > entryability：应用/服务的入口。\",\"src > main > ets > pages：应用/服务包含的页面\",\"src > main > resources：用于存放应用/服务所用到的资源文件，如图形、多媒体、字符串、布局文件等。关于资源文件，详见资源分类与访问。\",\"src > main > module.json5：Stage模型模块配置文件。主要包含HAP包的配置信息、应用/服务在具体设备上的配置信息以及应用/服务的全局配置信息。具体的配置文件说明，详见module.json5配置文件。\",\"build-profile.json5：当前的模块信息、编译信息配置项，包括buildOption、targets配置等。其中targets中可配置当前运行环境，默认为HarmonyOS。\",\"hvigorfile.ts：模块级编译构建任务脚本，开发者可以自定义相关任务和代码实现。\",\"oh_modules：用于存放三方库依赖信息。关于原npm工程适配ohpm操作，请参考历史工程迁移。\",\"build-profile.json5：应用级配置信息，包括签名、产品配置等。\",\"hvigorfile.ts：应用级编译构建任务脚本。\"]},\"35\":{\"h\":\"状态管理\",\"t\":[\"在声明式UI编程框架中，UI是程序状态的运行结果，用户构建了一个UI模型，其中应用的运行时的状态是参数。当参数改变时，UI作为返回结果，也将进行对应的改变。这些运行时的状态变化所带来的UI的重新渲染，在ArkUI中统称为状态管理机制。\",\"自定义组件拥有变量，变量必须被装饰器装饰才可以成为状态变量，状态变量的改变会引起UI的渲染刷新。如果不使用状态变量，UI只能在初始化时渲染，后续将不会再刷新。 下图展示了State和View（UI）之间的关系。\",\"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-state-management-overview-0000001524537145-V2\",\"View(UI)：UI渲染，指将build方法内的UI描述和@Builder装饰的方法内的UI描述映射到界面。\",\"State：状态，指驱动UI更新的数据。用户通过触发组件的事件方法，改变状态数据。状态数据的改变，引起UI的重新渲染。\"]},\"36\":{\"h\":\"基本概念\",\"t\":[\"状态变量：被状态装饰器装饰的变量，状态变量值的改变会引起UI的渲染更新。示例：@State num: number = 1,其中，@State是状态装饰器，num是状态变量。\",\"常规变量：没有被状态装饰器装饰的变量，通常应用于辅助计算。它的改变永远不会引起UI的刷新。以下示例中increaseBy变量为常规变量。\",\"数据源/同步源：状态变量的原始来源，可以同步给不同的状态数据。通常意义为父组件传给子组件的数据。以下示例中数据源为count: 1。\",\"命名参数机制：父组件通过指定参数传递给子组件的状态变量，为父子传递同步参数的主要手段。示例：CompA: ({ aProp: this.aProp })。\",\"从父组件初始化：父组件使用命名参数机制，将指定参数传递给子组件。子组件初始化的默认值在有父组件传值的情况下，会被覆盖。示例：\",\"@Component struct MyComponent { @State count: number = 0; private increaseBy: number = 1; build() { } } @Component struct Parent { build() { Column() { // 从父组件初始化，覆盖本地定义的默认值 MyComponent({ count: 1, increaseBy: 2 }) } } } \",\"初始化子节点：父组件中状态变量可以传递给子组件，初始化子组件对应的状态变量。示例同上。\",\"本地初始化：在变量声明的时候赋值，作为变量的默认值。示例：@State count: number = 0。\"]},\"37\":{\"h\":\"管理组件拥有的状态\"},\"38\":{\"h\":\"@State装饰器：组件内状态\",\"t\":[\"@state 装饰器标记的变量必须初始化, 不能为空值\",\"@state 支持Object、class、string、number、boolean、enum类型，以及这些类型的数组。不支持any，不支持简单类型和复杂类型的联合类型，不允许使用undefined和null。\",\"嵌套类型以及数组中的对象属性无法触发视图更新\",\"class Person { name: string age: number gf: Person constructor(name: string, age: number, gf?: Person) { this.age = age this.name = name this.gf = gf } } @Entry @Component struct Second { @State p: Person = new Person('jack', 21, new Person('aaa', 11)) build() { Column() { Text(`${this.p.name}: ${this.p.age}`) .fontSize(50) .onClick(() => { this.p.age ++ }) Text(`${this.p.gf.name}: ${this.p.gf.age}`) .fontSize(50) .onClick(() => { console.log(`${this.p.gf.name}: ${this.p.gf.age}`) this.p.gf.age ++ }) } .width(\\\"100%\\\") } } \",\"当点击下面时，不会触发视图更新, 只有点击上面非嵌套属性时才会触发视图整体更新\",\"@State装饰的变量，或称为状态变量，一旦变量拥有了状态属性，就和自定义组件的渲染绑定起来。当状态改变时，UI会发生对应的渲染改变。\",\"在状态变量相关装饰器中，@State是最基础的，使变量拥有状态属性的装饰器，它也是大部分状态变量的数据源。\",\"@State装饰的变量，与声明式范式中的其他被装饰变量一样，是私有的，只能从组件内部访问，在声明时必须指定其类型和本地初始化。初始化也可选择使用命名参数机制从父组件完成初始化。\",\"@State装饰的变量拥有以下特点：\",\"@State装饰的变量与子组件中的@Prop装饰变量之间建立单向数据同步，与@Link、@ObjectLink装饰变量之间建立双向数据同步。\",\"@State装饰的变量生命周期与其所属自定义组件的生命周期相同。\"]},\"39\":{\"h\":\"案例\",\"t\":[\"class Task { static id: number = 1 name: string = `Task${Task.id++}` finished: boolean = false } @Styles function card() { .width(\\\"95%\\\") .padding(20) .backgroundColor(Color.White) .borderRadius(15) .shadow( { radius: 6, color: \\\"#1F000000\\\", offsetX: 2, offsetY: 4 } ) } @Extend(Text) function finishedTask() { .decoration({ type: TextDecorationType.LineThrough }) .fontSize(\\\"##B1B2B1\\\") } @Entry @Component struct Second { @State totalTask: number = 0 @State finishTask: number = 0 @State task: Task[] = [] handTaskChange() { this.totalTask = this.task.length this.finishTask = this.task.filter(item => item.finished).length } build() { Column({ space: 10 }) { // 任务进度卡片 Row() { Text(\\\"任务进度: \\\") .fontSize(30) .fontWeight(FontWeight.Bold) Stack() { Progress({ value: this.finishTask, total: this.totalTask, type: ProgressType.Ring }) .width(100) Row() { Text(this.finishTask.toString()) .fontSize(24) .fontColor(\\\"#36D\\\") Text(\\\"/\\\" + this.totalTask.toString()) .fontSize(24) } } } .card() .margin({ top: 20, bottom: 10 }) .justifyContent(FlexAlign.SpaceEvenly) // 新增任务按钮 Button(\\\"添加任务\\\") .width(200) .onClick(() => { this.task.push(new Task()) this.handTaskChange() }) // 渲染任务列表 List({ space: 10 }) { ForEach( this.task, (item: Task, index) => { ListItem() { Row() { Text(item.name) .fontSize(24) Checkbox() .select(item.finished) .onChange(value => { item.finished = value this.handTaskChange() }) } .card() .justifyContent(FlexAlign.SpaceBetween) } .swipeAction({ end: this.DeleteButton(index) }) } ) } .width(\\\"100%\\\") .alignListItem(ListItemAlign.Center) .layoutWeight(1) } .width(\\\"100%\\\") .height(\\\"100%\\\") .backgroundColor(\\\"#F1F2F3\\\") } // 构建函数 @Builder DeleteButton(index: number) { Text(\\\"Del\\\") .fontColor(Color.White) .padding(20) .backgroundColor(Color.Red) .borderRadius(\\\"50%\\\") .margin(5) .onClick(() => { this.task.splice(index, 1) this.handTaskChange() }) } } \"]},\"40\":{\"h\":\"@Prop/ @Link 装饰器\",\"t\":[\"@Prop 父子组件单向同步: @Prop装饰的变量可以和父组件建立单向的同步关系。@Prop装饰的变量是可变的，但是变化不会同步回其父组件。 @Link 父子组件双向同步: 子组件中被@Link装饰的变量与其父组件中对应的数据源建立双向数据绑定。@Link装饰的变量与其父组件中的数据源共享相同的值。\",\"在最新版本中, @Prop 可以在子组件初始化, 但是编辑器 eslint 会报错\",\"@Component struct Child { @Prop value: number; build() { Text(`${this.value}`) .fontSize(50) .onClick(() => { console.log(`${this.value}`) this.value++ }) } } @Entry @Component struct Index { @State arr: number[] = [1, 2, 3]; build() { Row() { Column() { Child({ value: this.arr[0] }) Child({ value: this.arr[1] }) Child({ value: this.arr[2] }) Divider().height(5) ForEach(this.arr, item => { Child({ 'value': item } as Record<string, number>) }, item => item.toString() ) Text('replace entire arr') .fontSize(50) .onClick(() => { // 两个数组都包含项“3”。 this.arr = this.arr[0] == 1 ? [3, 4, 5] : [1, 2, 3]; }) } } } } \",\"如果点击界面上的“1”六次、“2”五次、“3”四次，将所有变量的本地取值都变为“7”。\",\"7 7 7 ---- 7 7 7 \",\"单击replace entire arr后，屏幕将显示以下信息，为什么？\",\"3 4 5 ---- 7 4 5 \",\"在子组件Child中做的所有的修改都不会同步回父组件Index组件，所以即使6个组件显示都为7，但在父组件Index中，this.arr保存的值依旧是[1,2,3]。\",\"点击replace entire arr，this.arr[0] == 1成立，将this.arr赋值为[3, 4, 5]；\",\"因为this.arr[0]已更改，Child({value: this.arr[0]})组件将this.arr[0]更新同步到实例@Prop装饰的变量。Child({value: this.arr[1]})和Child({value: this.arr[2]})的情况也类似。\",\"this.arr的更改触发ForEach更新，this.arr更新的前后都有数值为3的数组项：[3, 4, 5] 和[1, 2, 3]。根据diff算法，数组项“3”将被保留，删除“1”和“2”的数组项，添加为“4”和“5”的数组项。这就意味着，数组项“3”的组件不会重新生成，而是将其移动到第一位。所以“3”对应的组件不会更新，此时“3”对应的组件数值为“7”，ForEach最终的渲染结果是“7”，“4”，“5”。\",\"diff算法是一种用于比较两个数据结构（比如两个数组或两个树）之间差异的算法。在前端开发中，diff算法通常用于虚拟DOM的更新和渲染优化。\",\"在React等前端框架中，当数据发生变化时，diff算法可以帮助确定哪些DOM节点需要被更新，哪些需要被添加或删除，以及哪些可以被保留而不进行重新渲染。这可以提高性能并减少不必要的DOM操作。\",\"diff算法通常包括以下步骤：\",\"比较两个数据结构的差异，找出新增、删除和更新的部分。\",\"标记需要进行更新的部分，并记录其变化。\",\"应用这些变化，更新DOM或其他视图。\",\"@Styles function btn() { .margin(12) .width(312) .height(40) } @Component struct Child { @Link items: number[]; build() { Column() { Button(`Button1: push`) .btn() .onClick(() => { this.items.push(this.items.length + 1); }) Button(`Button2: replace whole item`) .btn() .onClick(() => { this.items = [100, 200, 300]; }) } } } @Entry @Component struct Parent { @State arr: number[] = [1, 2, 3]; build() { Column() { Button('Button Parent push') .btn() .onClick(() => { this.arr.push(this.arr.length + 1); }) Child({ items: $arr }) .margin(12) ForEach(this.arr, (item: number) => { Button(`${item}`) .margin(12) .width(312) .height(40) .backgroundColor('#11a2a2a2') .fontColor('#e6000000') }, (item: ForEachInterface) => item.toString() ) } } } \"]},\"41\":{\"h\":\"Js 的浅拷贝与深拷贝\"},\"42\":{\"h\":\"数据类型\",\"t\":[\"在探讨深浅拷贝之前，我们先梳理一下js中的数据类型，js的数据类型分为两类：基本数据类型和引用数据类型\",\"前者是存储在栈内存中，后者是将其地址存在栈内存中，而真实数据存储在堆内存中。\",\"如下图所示，基本类型如number、string、boolean、Null和 undefined 等存储在栈内存中，而引用数据类型如 Array、Object 和函数等则是分别存储数据1的地址、数据2的地址和数据3的地址。\"]},\"43\":{\"h\":\"深浅拷贝\",\"t\":[\"js中的基本数据类型：String Number Boolean Null Undefined，在赋值的过程中都是深拷贝。\",\"例如，let a = 10 ; b = a , 修改其中一个变量的值，不会影响到另一个变量的值。\"]},\"44\":{\"h\":\"概念\",\"t\":[\"浅拷贝：会在栈中开辟另一块空间，并将被拷贝对象的栈内存数据完全拷贝到该块空间中，即基本数据类型的值会被完全拷贝，而引用类型的值则是拷贝了“指向堆内存的地址”。因此，当修改其中一个变量的值时，会影响到另一个变量的值。\",\"深拷贝：不仅会在栈中开辟另一块空间，若被拷贝对象中有引用类型，则还会在堆内存中开辟另一块空间存储引用类型的真实数据。因此，当修改其中一个变量的值时，不会影响到另一个变量的值。\",\"两者示意图如下：\",\"浅拷贝是拷贝一层，属性为对象时，浅拷贝是复制，两个对象指向同一个地址\",\"深拷贝是递归拷贝深层次，属性为对象时，深拷贝是新开栈，两个对象指向不同的地址\"]},\"45\":{\"h\":\"Js 中的深浅拷贝\"},\"46\":{\"h\":\"浅拷贝\",\"t\":[\"浅拷贝，指的是创建新的数据，这个数据有着原始数据属性值的一份精确拷贝\",\"如果属性是基本类型，拷贝的就是基本类型的值。如果属性是引用类型，拷贝的就是内存地址\"]},\"47\":{\"h\":\"手写递归\",\"t\":[\"function shallowClone(obj) { if (typeof obj !== 'object') return; let newObj = obj instanceof Array ? [] : {}; for (let key in obj) { if (obj.hasOwnProperty(key)) { newObj[key] = obj[key]; } } return newObj; } const person = { name: 'cxk', hobby: ['sing', 'rap', 'basketball'] } const person1 = shallowClone(person); person1.name = 'xkc'; person1.hobby[0] = 'dance'; console.log(person); // {name: \\\"cxk\\\", hobby: [\\\"dance\\\", \\\"rap\\\", \\\"basketball\\\"]} console.log(person1); // {name: \\\"xkc\\\", hobby: [\\\"dance\\\", \\\"rap\\\", \\\"basketball\\\"]} \"]},\"48\":{\"h\":\"展开语法\",\"t\":[\"展开语法(spread syntax)允许一个表达式在期望多个参数(用于函数调用)或多个元素(用于数组字面量)或多个变量(用于解构赋值)的位置扩展。\",\"let obj = { name: \\\"cxk\\\", lessons: [\\\"语文\\\", \\\"数学\\\", \\\"英语\\\"] } let hd1 = { ...obj }; hd1.name = \\\"hdx\\\"; hd1.lessons[0] = \\\"物理\\\"; console.log(obj); // {name: \\\"cxk\\\", lessons: [\\\"物理\\\", \\\"数学\\\", \\\"英语\\\"]} console.log(hd1); // {name: \\\"hdx\\\", lessons: [\\\"物理\\\", \\\"数学\\\", \\\"英语\\\"]} \"]},\"49\":{\"h\":\"Object.assign()\",\"t\":[\"Object.assign() 方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象。它将返回目标对象。\",\"let info = { name: 'cxk', hobbies: ['唱', '跳', '篮球'] }; let obj = Object.assign({}, info); obj.hobbies[0] = 'rap'; console.log(info); console.log(obj); // {name: \\\"cxk\\\", hobbies: [\\\"rap\\\", \\\"跳\\\", \\\"篮球\\\"]} \"]},\"50\":{\"h\":\"slice()\",\"t\":[\"slice() 方法可从已有的数组中返回选定的元素。\",\"let arr1 = [1, 42, [3, 4]] let arr1Copy = arr1.slice() arr1Copy[0] = 10 arr1Copy[2][0] = 100 console.log(arr1) // [1, 42, [100, 4]] console.log(arr1Copy) // [10, 42, [100, 4]] \"]},\"51\":{\"h\":\"concat()\",\"t\":[\"concat() 方法用于连接两个或多个数组。\",\"let arr2 = ['cat', 'dog', 'pig', { 'name': 'xia', 'age': 18 }] let arr2Copy = [].concat(arr2) arr2Copy[2] = 'big pig' arr2Copy[3]['name'] = 'aa' console.log(arr2) console.log(arr2Copy) \"]},\"52\":{\"h\":\"深拷贝\",\"t\":[\"深拷贝开辟一个新的栈，两个对象属性完成相同，但是对应两个不同的地址，修改一个对象的属性，不会改变另一个对象的属性\"]},\"53\":{\"h\":\"手写递归\",\"t\":[\"function deepClone(obj) { let newObj = obj instanceof Array ? [] : {}; for (let i in obj) { if (obj.hasOwnProperty(i)) { if (obj[i] && typeof obj[i] == 'object') { // 若对象属性还是引用类型，进行递归 newObj[i] = deepClone(obj[i]); } else { // 对象属性为基础数据类型，直接赋值 newObj[i] = obj[i]; } } } return newObj; } const obj = { name: 'zs', hobby: ['排球', '网球', '乒乓球'], }; const newObj = deepClone(obj); newObj.name = 'lisi'; newObj.hobby[0] = '篮球'; console.log(obj); // { name: 'zs', hobby: [ '排球', '网球', '乒乓球' ] } console.log(newObj); // { name: 'lisi', hobby: [ '篮球', '网球', '乒乓球' ] } \"]},\"54\":{\"h\":\"Object.entries(obj) 遍历对象\",\"t\":[\"Object.entries() 方法返回一个给定对象自身可枚举属性的键值对数组\",\"比如：Object.entries({ foo: 'bar', baz: 42 }); // [ ['foo', 'bar'], ['baz', 42] ]\",\"function deepClone(obj) { let newObj = obj instanceof Array ? [] : {}; for (const [k, v] of Object.entries(obj)) { newObj[k] = typeof v == 'object' ? deepClone(v) : v; } return newObj; } const obj = { name: 'zs', hobby: ['排球', '网球', '乒乓球'], }; const newObj = deepClone(obj); newObj.name = 'lisi'; newObj.hobby[0] = '篮球'; console.log(obj); console.log(newObj); \"]},\"55\":{\"h\":\"JSON.parse(JSON.stringify(待拷贝对象) -> 常用\",\"t\":[\"JSON.stringify() 方法用于将 JavaScript 值转换为 JSON 字符串。\",\"比如: JSON.stringify({ x: 5, y: 6 }); // \\\"{\\\"x\\\":5,\\\"y\\\":6}\\\" -> string\",\"JSON.parse() 方法用于将一个 JSON 字符串转换为对象。\",\"比如: JSON.parse('{\\\"name\\\":\\\"cxk\\\",\\\"age\\\":18}'); // {name: \\\"cxk\\\", age: 18} -> object\",\"const obj = { name: 'zs', hobby: ['排球', '网球', '乒乓球'], }; const newObj = JSON.parse(JSON.stringify(obj)); newObj.name = 'lisi'; newObj.hobby[0] = '篮球'; console.log(obj); console.log(newObj); \"]},\"56\":{\"h\":\"其他方法\",\"t\":[\"_.cloneDeep()\",\"jQuery.extend()\",\"手写循环递归\"]},\"57\":{\"h\":\"Vue 中的深拷贝实现\",\"t\":[\"引入loadsh,提供 cloneDeep 实现深拷贝\",\"安装loadsh npm i --save lodash\",\"引入loadsh import _ from 'lodash'\",\"直接调用 loadsh 库的方法 const newObj = _.cloneDeep(this.obj)\",\"_clone 实现浅拷贝\",\"const obj = _.clone(info); info.name = \\\"kobe\\\"; console.log(obj.name); info.friend.name = \\\"james\\\"; console.log(obj.friend.name); \"]},\"58\":{\"h\":\"uniapp+vite+vue3+ts配置eslint代码检查及prettier规范检查\",\"t\":[\"可以参考 https://waite.wang/archives/vue-xiang-mu-da-jian-gui-fan 参考: https://blog.csdn.net/u011296285/article/details/136597099\"]},\"59\":{\"h\":\"配置eslint代码检查\",\"t\":[\"npm i eslint -D \",\"初始化\",\"npx eslint --init \",\"选择配置(根据自己需求选择)\",\"? How would you like to use ESLint? To check syntax and find problems ? What type of modules does your project use? JavaScript modules (import/export) ? Which framework does your project use? Vue.js ? Does your project use TypeScript? Yes ? Where does your code run? None ? How would you like to define a style for your project? Use a popular style guide ? Which style guide do you want to follow? Airbnb ? What format do you want your config file to be in? JavaScript \",\"修改.eslintrc.js\",\"// @see https://eslint.bootcss.com/docs/rules/ ​ module.exports = { env: { browser: true, es2021: true, node: true, }, globals: {}, /* 指定如何解析语法 */ parser: 'vue-eslint-parser', /** 优先级低于 parse 的语法解析配置 */ parserOptions: { ecmaVersion: 'latest', sourceType: 'module', parser: '@typescript-eslint/parser', jsxPragma: 'React', ecmaFeatures: { jsx: true, }, }, /* 继承已有的规则 */ extends: ['eslint:recommended', 'plugin:vue/vue3-essential', 'plugin:@typescript-eslint/recommended', 'plugin:prettier/recommended'], plugins: ['vue', '@typescript-eslint'], overrides: [ { files: ['*.ts', '*.tsx', '*.vue'], rules: { 'no-undef': 0, }, }, ], /* * 'off' 或 0 ==> 关闭规则 * 'warn' 或 1 ==> 打开的规则作为警告（不影响代码执行） * 'error' 或 2 ==> 规则作为一个错误（代码不能执行，界面报错） */ rules: { // typeScript (https://typescript-eslint.io/rules) '@typescript-eslint/no-unused-vars': 2, // 禁止定义未使用的变量 '@typescript-eslint/prefer-ts-expect-error': 2, // 禁止使用 @ts-ignore '@typescript-eslint/no-explicit-any': 0, // 禁止使用 any 类型 '@typescript-eslint/no-non-null-assertion': 0, '@typescript-eslint/no-namespace': 0, // 禁止使用自定义 TypeScript 模块和命名空间。 '@typescript-eslint/semi': 0, 'no-prototype-builtins': 0, // 可以使用obj.hasOwnProperty() '@typescript-eslint/no-var-requires': 0, // 不允许在import 中使用require '@typescript-eslint/no-empty-function': 2, // 关闭空方法检查 // eslint-plugin-vue (https://eslint.vuejs.org/rules/) 'vue/multi-word-component-names': 0, // 要求组件名称始终为 “-” 链接的单词 'vue/script-setup-uses-vars': 2, // 防止<script setup>使用的变量<template>被标记为未使用 'vue/no-mutating-props': 0, // 不允许组件 prop的改变 'vue/no-v-html': 0, // 禁止使用 v-html 'vue/no-setup-props-destructure': 0, // 禁止 props 解构传递给 setup 'vue/no-v-model-argument': 0, // 不允许添加要在 v-model 自定义组件中使用的参数 'vue/component-definition-name-casing': [2, 'PascalCase'], // 强制使用组件定义名称的特定大小写 PascalCase | kebab-case 'vue/attribute-hyphenation': [2, 'always', { ignore: [] }], // 对模板中的自定义组件强制实施属性命名样式 'vue/no-dupe-keys': [2, { groups: [] }], // 不允许重复字段名称 'vue/no-dupe-v-else-if': 2, // 不允许 / v-else-if 链中的 v-if 重复条件 'vue/no-duplicate-attributes': 2, // 禁止属性重复 'vue/no-ref-as-operand': 2, // 使用ref对象必须.value 'vue/first-attribute-linebreak': [ 2, { singleline: 'ignore', multiline: 'below', }, ], // 强制设置第一个属性的位置 ​ '@typescript-eslint/no-this-alias': [ 'warn', { allowDestructuring: false, // Disallow `const { props, state } = this`; true by default allowedNames: ['_this'], // this的別名可以为_this }, ], // eslint（https://eslint.bootcss.com/docs/rules/） 'no-unexpected-multiline': 2, // 禁止空余的多行 'no-await-in-loop': 2, // 该规则不允许在循环体中使用 await 'no-dupe-else-if': 2, // 禁止 if-else-if 链中的重复条件 'no-const-assign': 2, // 禁止重新分配 const 变量 'no-dupe-keys': 2, // 禁止对象字面量中的重复键 'no-multiple-empty-lines': ['warn', { max: 1 }], // 不允许多个空行 'no-unused-vars': 2, // 禁止未使用的变量 'use-isnan': 2, // 检查 NaN 时需要调用 isNaN() 'valid-typeof': 2, // 强制将 typeof 表达式与有效字符串进行比较 'no-var': 2, // 要求使用 let 或 const 而不是 var 'no-extra-semi': 2, // 禁止不必要的分号 'no-multi-str': 2, // 禁止多行字符串 'no-unused-labels': 2, // 禁止未使用的标签 // 在打开数组括号之后和关闭数组括号之前强制换行 'array-bracket-newline': [2, 'consistent'], eqeqeq: [2, 'smart'], // 必须使用全等 'arrow-spacing': 2, // 在箭头函数中的箭头前后强制执行一致的间距 // 在函数调用的参数之间强制换行 'function-call-argument-newline': [2, 'consistent'], 'no-undef': 2, // 禁止使用未声明的变量，除非在 /*global */ 注释中提及 complexity: [2, 15], indent: [2, 4, { SwitchCase: 1 }], 'valid-jsdoc': 0, //jsdoc规则 'no-console': process.env.NODE_ENV === 'production' ? 2 : 0, 'no-debugger': process.env.NODE_ENV === 'production' ? 2 : 0, 'no-useless-escape': 0, // 禁止不必要的转义字符 '@typescript-eslint/ban-types': 0, // 允许使用function 声明函数 'prettier/prettier': [ 2, { //在单独的箭头函数参数周围包括括号 always：(x) => x \\\\ avoid：x => x arrowParens: 'always', // 开始标签的右尖括号是否跟随在最后一行属性末尾，默认false bracketSameLine: false, // 对象字面量的括号之间打印空格 bracketSpacing: true, // 是否格式化一些文件中被嵌入的代码片段的风格(auto|off;默认auto) embeddedLanguageFormatting: 'auto', // 指定 HTML 文件的空格敏感度 (css|strict|ignore;默认css) htmlWhitespaceSensitivity: 'ignore', // 一行最多多少个字符 printWidth: 150, // 超出打印宽度 (always | never | preserve ) proseWrap: 'preserve', // 对象属性是否使用引号(as-needed | consistent | preserve; quoteProps: 'as-needed', // 指定要使用的解析器，不需要写文件开头的 @prettier requirePragma: false, // 不需要自动在文件开头插入 @prettier insertPragma: false, // 最后不需要引号 semi: false, // 使用单引号 (true:单引号;false:双引号) singleQuote: true, // 缩进空格数，默认2个空格 tabWidth: 4, // 多行时尽可能打印尾随逗号。 trailingComma: 'es5', // 使用制表符而不是空格缩进行 useTabs: false, // Vue文件脚本和样式标签缩进 vueIndentScriptAndStyle: false, // 换行符使用 lf 结尾是 可选值\\\"<auto|lf|crlf|cr>\\\" endOfLine: 'auto', }, ], }, } \",\".eslintignore忽略文件\",\"/dist/* \"]},\"60\":{\"h\":\"Prettier\",\"t\":[\"npm install -D eslint-plugin-prettier prettier eslint-config-prettier \",\"prettier.config.ts\",\"module.exports = { // 一行最多多少个字符 printWidth: 150, // 超出打印宽度 (always | never | preserve ) proseWrap: 'preserve', // 对象属性是否使用引号(as-needed | consistent | preserve; quoteProps: 'as-needed', // 指定要使用的解析器，不需要写文件开头的 @prettier requirePragma: false, // 不需要自动在文件开头插入 @prettier insertPragma: false, // 最后不需要引号 semi: false, // 使用单引号 (true:单引号;false:双引号) singleQuote: true, // 缩进空格数，默认2个空格 tabWidth: 4, // 多行时尽可能打印尾随逗号。 trailingComma: 'es5', // 使用制表符而不是空格缩进行 useTabs: false, // Vue文件脚本和样式标签缩进 vueIndentScriptAndStyle: false, // 换行符使用 lf 结尾是 可选值\\\"<auto|lf|crlf|cr>\\\" endOfLine: 'auto', } \",\"prettierignore忽略文件\",\"/dist/* /html/* .local /node_modules/** **/*.svg **/*.sh /public/* \"]},\"61\":{\"h\":\"配置 package.json\",\"t\":[\"{ \\\"scripts\\\": { \\\"lint\\\": \\\"eslint --ext .js,.vue,.ts src\\\", \\\"prettier\\\": \\\"prettier --write .\\\", } } \",\"运行 npm run lint 和 npm run prettier 检查代码\"]},\"62\":{\"h\":\"Husky\",\"t\":[\"npm install -D husky \",\"package.json\",\"{ \\\"husky\\\": { \\\"hooks\\\": { \\\"pre-commit\\\": \\\"npm run lint && npm run prettier\\\" } } } \",\"会在根目录生成.husky文件夹，里面有pre-commit文件，里面有执行的命令, 可以执行修订\"]},\"63\":{\"h\":\"问题\",\"t\":[\"解决uniapp开发过程中view、image等标签出现诸如“类型{ class: string； }的参数不能赋给类型......”的问题?\",\"在对插件等各方面检查后发现了问题所在，主要问题是在开发过程中这些标签被认为了是 Vue 组件，所以某些属性并没有出现在相关interface上，所以忽略掉这这些原生内容即可。具体操作如下：\",\"{ \\\"extends\\\": \\\"@vue/tsconfig/tsconfig.json\\\", \\\"compilerOptions\\\": { \\\"sourceMap\\\": true, \\\"baseUrl\\\": \\\".\\\", \\\"ignoreDeprecations\\\": \\\"5.0\\\", \\\"paths\\\": { \\\"@/*\\\": [\\\"./src/*\\\"] }, \\\"lib\\\": [\\\"esnext\\\", \\\"dom\\\"], \\\"types\\\": [ \\\"@dcloudio/types\\\", \\\"@types/wechat-miniprogram\\\", \\\"@uni-helper/uni-ui-types\\\", \\\"@uni-helper/uni-app-types\\\", ] }, //加入配置，将标签视为原始组件 \\\"vueCompilerOptions\\\": { \\\"nativeTags\\\": [\\\"block\\\", \\\"component\\\", \\\"template\\\", \\\"slot\\\"] }, \\\"include\\\": [\\\"src/**/*.ts\\\", \\\"src/**/*.d.ts\\\", \\\"src/**/*.tsx\\\", \\\"src/**/*.vue\\\"] } \"]},\"64\":{\"h\":\"uni-app入门\",\"t\":[\"https://uniapp.dcloud.net.cn/\"]},\"65\":{\"h\":\"uni 和 原生小程序开发区别\",\"t\":[\"每个页面是一个 .vue 文件，数据绑定及事件处理同 Vue.js 规范：\",\"属性绑定 src=\\\"{{ url }}\\\" 升级成 :src=\\\"url\\\"\",\"事件绑定 bindtap=\\\"eventName\\\" 升级成 @tap=\\\"eventName\\\"，支持（）传参\",\"支持 Vue 常用指令 v-for、 v-if、v-show、v-model 等\",\"温馨提示：调用接口能力，建议前缀 wx 替换为 uni ，养成好习惯，这样支持多端开发。\"]},\"66\":{\"h\":\"创建项目/ 运行项目\",\"t\":[\"uni-app 支持两种方式创建项目：\",\"通过 HBuilderX 创建\",\"通过命令行创建\"]},\"67\":{\"h\":\"通过 HBuilderX 创建/ 运行\",\"t\":[\"下载安装 HBuilderX https://hx.dcloud.net.cn/Tutorial/install/windows\",\"HBuilderX是通用的前端开发工具，但为uni-app做了特别强化。\",\"在点击工具栏里的文件 -> 新建 -> 项目（快捷键Ctrl+N）：\",\"uni-app自带的模板有 默认的空项目模板、Hello uni-app 官方组件和API示例，还有一个重要模板是 uni ui项目模板，日常开发推荐使用该模板，已内置大量常用组件。\",\"选择模板后，点击下一步，填写项目名称、项目路径、Appid（小程序）、Appname（小程序名称）等信息，点击完成即可创建项目。\",\"创建完成后，工具 -> 插件安装 -> uni-app编译器\",\"运行项目：点击工具栏里的运行按钮，选择运行到小程序模拟器或者手机端，即可看到效果。\",\"在微信开发者工具里运行：进入hello-uniapp项目，点击工具栏的运行 -> 运行到小程序模拟器 -> 微信开发者工具，即可在微信开发者工具里面体验uni-app。\",\"注意：如果是第一次使用，需要先配置小程序ide的相关路径，才能运行成功。如下图，需在输入框输入微信开发者工具的安装路径。\",\"注意: 在微信小程序运行需要开启 设置 -> 安全设置 -> 服务端口 -> 开启服务端口, 并且关闭 设置 -> 编译器设置 -> 修改文件时自动保存\",\"这样在 HbuilderX 保存文件后，微信开发者工具会自动刷新。\"]},\"68\":{\"h\":\"通过命令行创建/ 运行\",\"t\":[\"https://uniapp.dcloud.net.cn/quickstart-cli.html\",\"全局安装 vue-clinpm install -g @vue/cli\",\"创建uni-app\",\"使用正式版（对应HBuilderX最新正式版）\",\"vue create -p dcloudio/uni-preset-vue my-project \",\"使用alpha版（对应HBuilderX最新alpha版）\",\"vue create -p dcloudio/uni-preset-vue#alpha my-alpha-project \",\"使用Vue3/Vite版 \",\"创建以 javascript 开发的工程（如命令行创建失败，请直接访问 gitee 下载模板）\",\"npx degit dcloudio/uni-preset-vue#vite my-vue3-project npx degit dcloudio/uni-preset-vue#vite-alpha my-vue3-project \",\"创建以 typescript 开发的工程（如命令行创建失败，请直接访问 gitee 下载模板）\",\"npx degit dcloudio/uni-preset-vue#vite-ts my-vue3-project \",\"此时，会提示选择项目模板（使用Vue3/Vite版不会提示，目前只支持创建默认模板），初次体验建议选择 hello uni-app 项目模板，如下所示：\",\"注意\",\"Vue3/Vite版要求 node 版本^14.18.0 || >=16.0.0 如果使用 HBuilderX（3.6.7以下版本）运行 Vue3/Vite 创建的最新的 cli 工程，需要在 HBuilderX 运行配置最底部设置 node路径 为自己本机高版本 node 路径（注意需要重启 HBuilderX 才可以生效）\",\"HBuilderX Mac 版本菜单栏左上角 HBuilderX->偏好设置->运行配置->node路径\",\"HBuilderX Windows 版本菜单栏 工具->设置->运行配置->node路径\",\"国内特殊情况\",\"模板项目存放于 Github，由于国内网络环境问题，可能下载失败。针对此问题可以尝试如下措施：\",\"更换网络重试，比如使用 4g 网络\",\"在设备或路由器的网络设置中增加 DNS（如：8.8.8.8）\",\"在设备中增加固定的 hosts（如：140.82.113.4 github.com）\"]},\"69\":{\"h\":\"运行项目\",\"t\":[\"更改项目中 manifest.json 中的 appid 为自己的小程序appid\",\"进入项目目录，运行命令 npm run dev:%PLATFORM%，其中 %PLATFORM% 为平台名称，如 h5、mp-weixin、mp-alipay、mp-baidu、mp-toutiao、mp-qq、quickapp-webview、quickapp-webview-union、quickapp-webview-huawei、quickapp-webview-oppo、quickapp-webview-vivo、quickapp-webview-xiaomi、quickapp-webview-meizu、quickapp-webview-leshi、quickapp-webview-haier、quickapp-webview-samsung、quickapp-webview-smartisan、quickapp-webview-nubia、quickapp-webview-oneplus、quickapp-webview-360、quickapp-webview-letv、quickapp-webview-coolpad、quickapp-webview-gionee、quickapp-webview-sony、`quickapp-webview-htc\",\"运行成功后，会在项目目录下生成 dist 目录，里面包含了编译后的代码，在微信小程序开发者工具中导入 dist/dev/mp-weixin 目录即可查看效果。\"]},\"70\":{\"h\":\"用 VS Code 编辑 uni-app 项目\",\"t\":[\"为什么要用 VS Code 编辑 uni-app 项目？\",\"HBuilderX 是基于 Eclipse 的 IDE，对于一些习惯了 VS Code 的开发者来说，可能不太适应。\",\"HbuilderX 对 TS 支持不够友好，而 VS Code 对 TS 支持非常好。\"]},\"71\":{\"h\":\"安装插件\",\"t\":[\"建议勾选以下\"]},\"72\":{\"h\":\"安装 ts 类型校验\",\"t\":[\"https://uni-helper.js.org/uni-app-types\",\"npm i -D @types/wechat-miniprogram @uni-helper/uni-app-types \",\"{ \\\"extends\\\": \\\"@vue/tsconfig/tsconfig.json\\\", \\\"compilerOptions\\\": { \\\"sourceMap\\\": true, \\\"baseUrl\\\": \\\".\\\", \\\"paths\\\": { \\\"@/*\\\": [\\\"./src/*\\\"] }, \\\"lib\\\": [\\\"esnext\\\", \\\"dom\\\"], \\\"types\\\": [ \\\"@dcloudio/types\\\", \\\"@types/wechat-miniprogram\\\", \\\"@uni-helper/uni-app-types\\\" ] }, \\\"vueCompilerOptions\\\": { // 原配置 `experimentalRuntimeMode` 现调整为 `nativeTags` \\\"nativeTags\\\": [\\\"block\\\", \\\"component\\\", \\\"template\\\", \\\"slot\\\"] }, \\\"include\\\": [\\\"src/**/*.ts\\\", \\\"src/**/*.d.ts\\\", \\\"src/**/*.tsx\\\", \\\"src/**/*.vue\\\"] } \"]},\"73\":{\"h\":\"json 注释问题\",\"t\":[\"uni-app 只有在 HBuilderX 中才支持 json 注释，而在 VS Code 中不支持，所以在 VS Code 中编辑 json 文件时，会有报错提示。\\n只有这两个文件支持 json 注释，其他文件不支持。\\n\"]},\"74\":{\"h\":\"微信小程序介绍\"},\"75\":{\"h\":\"微信小程序介绍\"},\"76\":{\"h\":\"微信小程序介绍\",\"t\":[\"​ 微信小程序，简称小程序，是一种不需要下载安装即可使用的应用，它实现了应用”触手可及”的梦想，用户扫一扫或搜一下即可打开应用。\",\"​ 说明：\",\"小程序是需要下载的，小程序的占用大小很小，感觉不到下载\",\"目前大小限制2M （最终开发的小程序打包压缩后的大小），如果超过2M,就得做分包上传.之后再合并\",\"进入小程序后继续网络请求数据\"]},\"77\":{\"h\":\"小程序特点\",\"t\":[\"微信小程序的特点：\",\"免安装\",\"接近原生（IOS，Android ）的app操作基于微信开发。使用wx提供的api开发\",\"必须在微信里面使用\"]},\"78\":{\"h\":\"小程序的优缺点\",\"t\":[\"方便快捷，即用即走\",\"速度快、不占内存\",\"安全稳定、保密性强\",\"功能丰富，场景丰富\",\"开发成本低、维护简便\",\"开发周期比较短\",\"体验好\"]},\"79\":{\"h\":\"小程序开发需求\",\"t\":[\"不注册可以开发小程序(不能发布)\",\"注册小程序 \",\"企业注册(公司内部人员注册好了，给一个APPID)\",\"个人注册\"]},\"80\":{\"h\":\"微信小程序的注册\",\"t\":[\"微信公众平台：https://mp.weixin.qq.com/\"]},\"81\":{\"h\":\"开发工具\",\"t\":[\"开发工具下载地址：https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html\",\"image-20220122170116175\"]},\"82\":{\"h\":\"开发者工具的使用\",\"t\":[\"image-20220122201456358\",\"image-20220608183526635\",\"以下就是微信小程序开发工具的界面，主要有：微信小程序模拟器、项目目录、代码编写区域、控制台。\"]},\"83\":{\"h\":\"项目目录结构介绍\",\"t\":[\"image-20240119215440525\"]},\"84\":{\"h\":\"pages目录\",\"t\":[\"​ pages目录下放的就是小程序中的各个页面。\",\"​ 在pages中创建页面的时候，会出现4个文件：\",\"xxx.js：页面相关的js代码可以写在这里\",\"xxx.wxml：这个就是页面文件，相当于我们之前的HTML，所以页面结构内容写在这里\",\"xxx.wxss：页面的样式内容，相当于之前的css，所以页面相关的样式可以写在这里\",\"xxx.json：页面有关的配置，比如页面导航栏的背景色、内容等等\",\"比如： \"]},\"85\":{\"h\":\"app.js文件\",\"t\":[\"​ app.js文件是整个项目的一个总体配置。里面包含了项目运行生命周期的回调函数。\"]},\"86\":{\"h\":\"app.json文件\",\"t\":[\"​ 小程序根目录下的 app.json 文件用来对微信小程序进行全局配置，决定页面文件的路径、窗口表现、设置网络超时时间、设置多 tab 等。\",\"小程序根目录下的 app.json 文件用来对微信小程序进行全局配置。文件内容为一个 JSON 对象，有以下属性：\",\"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html\"]},\"87\":{\"h\":\"app.wxss文件\",\"t\":[\"app.wxss 文件是微信小程序项目的全局样式表，它可以应用到所有的wxml文件中。\",\"微信小程序中使用 rpx 作为长度单位。1rpx = 1/750 屏幕宽度。也就是屏幕宽度等于 750rpx。\",\"px 也可以使用，表示的是设备独立像素。\",\"建议使用长度单位 rpx。它自动做了适配。\"]},\"88\":{\"h\":\"project.config.json文件\",\"t\":[\"​ project.config.json文件是小程序项目的配置文件（如开发工具的外观配置），一般不需要修改，我们目前就改一个地方：\",\"11\",\"\\\"checkSiteMap\\\":false 作用是控制台不要有一些没用的警告。\"]},\"89\":{\"h\":\"Sitemap.json\",\"t\":[\"https://developers.weixin.qq.com/miniprogram/dev/framework/sitemap.html\",\"搜索功能文件，指定哪些页面可以被搜索，可被配置。是在搜索小程序的时候，指定哪些页面允许被搜索到。\"]},\"90\":{\"h\":\"微信小程序框架\",\"t\":[\"​ 小程序依赖于微信客户端提供的环境--宿主环境，小程序借助这个宿注环境提供的功能，可以实现网页无法实现的功能。让小程序更接近原生的app体验。\",\"小程序开发框架的目标是通过尽可能简单、高效的方式让开发者可以在微信中开发具有原生 APP 体验的服务。\",\"​ 首先，我们来简单了解下小程序的运行环境。整个小程序框架系统分为两部分：逻辑层（App Service）和 视图层（View）。小程序提供了自己的视图层描述语言 WXML 和 WXSS，以及基于 JavaScript 的逻辑层框架，并在视图层与逻辑层间提供了数据传输和事件系统，让开发者能够专注于数据与逻辑。\",\"​ 小程序的渲染层和逻辑层分别由2个线程管理：渲染层的界面使用了WebView 进行渲染；逻辑层采用JsCore线程运行JS脚本。一个小程序存在多个界面，所以渲染层存在多个WebView线程，这两个线程的通信会经由微信客户端（下文中也会采用Native来代指微信客户端）做中转，逻辑层发送网络请求也经由Native转发，小程序的通信模型下图所示。\"]},\"91\":{\"h\":\"响应的数据绑定\",\"t\":[\"框架的核心是一个响应的数据绑定系统，可以让数据与视图非常简单地保持同步。当做数据修改的时候，只需要在逻辑层修改数据，视图层就会做相应的更新。\",\"<!-- This is our View --> <view> Hello {{name}}! </view> <button bindtap=\\\"changeName\\\"> Click me! </button> \",\"// This is our App Service. // This is our data. var helloData = { name: 'Weixin' } // Register a Page. Page({ data: helloData, changeName: function(e) { // sent data change to view this.setData({ name: 'MINA' }) } }) \",\"开发者通过框架将逻辑层数据中的 name 与视图层的 name 进行了绑定，所以在页面一打开的时候会显示 Hello Weixin!；\",\"当点击按钮的时候，视图层会发送 changeName 的事件给逻辑层，逻辑层找到并执行对应的事件处理函数；\",\"回调函数触发后，逻辑层执行 setData 的操作，将 data 中的 name 从 Weixin 变为 MINA，因为该数据和视图层已经绑定了，从而视图层会自动改变为 Hello MINA!。\"]},\"92\":{\"h\":\"逻辑层\",\"t\":[\"小程序开发框架的逻辑层使用 JavaScript 引擎为小程序提供开发 JavaScript 代码的运行环境以及微信小程序的特有功能。\",\"逻辑层将数据进行处理后发送给视图层，同时接受视图层的事件反馈。\",\"开发者写的所有代码最终将会打包成一份 JavaScript 文件，并在小程序启动的时候运行，直到小程序销毁。这一行为类似 ServiceWorker，所以逻辑层也称之为 App Service。\",\"在 JavaScript 的基础上，我们增加了一些功能，以方便小程序的开发：\",\"增加 App 和 Page 方法，进行程序注册和页面注册。\",\"增加 getApp 和 getCurrentPages 方法，分别用来获取 App 实例和当前页面栈。\",\"提供丰富的 API，如微信用户数据，扫一扫，支付等微信特有能力。\",\"提供模块化能力，每个页面有独立的作用域。\",\"注意：小程序框架的逻辑层并非运行在浏览器中，因此 JavaScript 在 web 中一些能力都无法使用，如 window，document 等。\"]},\"93\":{\"h\":\"注册小程序\",\"t\":[\"每个小程序都需要在 app.js 中调用 App 方法注册小程序实例，绑定生命周期回调函数、错误监听和页面不存在监听函数等。\",\"// app.js App({ onLaunch (options) { // Do something initial when launch. }, onShow (options) { // Do something when show. }, onHide () { // Do something when hide. }, onError (msg) { console.log(msg) }, globalData: 'I am global data' } \",\"属性\",\"类型\",\"默认值\",\"必填\",\"说明\",\"最低版本\",\"onLaunch\",\"function\",\"否\",\"生命周期回调——监听小程序初始化。\",\"onShow\",\"function\",\"否\",\"生命周期回调——监听小程序启动或切前台。\",\"onHide\",\"function\",\"否\",\"生命周期回调——监听小程序切后台。\",\"onError\",\"function\",\"否\",\"错误监听函数。\",\"onPageNotFound\",\"function\",\"否\",\"页面不存在监听函数。\",\"1.9.90\",\"onUnhandledRejection\",\"function\",\"否\",\"未处理的 Promise 拒绝事件监听函数。\",\"2.10.0\",\"onThemeChange\",\"function\",\"否\",\"监听系统主题变化\",\"2.11.0\",\"其他\",\"any\",\"否\",\"开发者可以添加任意的函数或数据变量到 Object 参数中，用 this 可以访问\",\"整个小程序只有一个 App 实例，是全部页面共享的。开发者可以通过 getApp 方法获取到全局唯一的 App 实例，获取App上的数据或调用开发者注册在 App 上的函数。\",\"// xxx.js const appInstance = getApp() console.log(appInstance.globalData) // I am global data \"]},\"94\":{\"h\":\"注册页面\",\"t\":[\"对于小程序中的每个页面，都需要在页面对应的 js 文件中进行注册，指定页面的初始数据、生命周期回调、事件处理函数等。\"]},\"95\":{\"h\":\"使用 Page 构造器注册页\",\"t\":[\"简单的页面可以使用 Page() 进行构造。\",\"代码示例：\",\"//index.js Page({ data: { text: \\\"This is page data.\\\" }, onLoad: function(options) { // 页面创建时执行 }, onShow: function() { // 页面出现在前台时执行 }, onReady: function() { // 页面首次渲染完毕时执行 }, onHide: function() { // 页面从前台变为后台时执行 }, onUnload: function() { // 页面销毁时执行 }, onPullDownRefresh: function() { // 触发下拉刷新时执行 }, onReachBottom: function() { // 页面触底时执行 }, onShareAppMessage: function () { // 页面被用户分享时执行 }, onPageScroll: function() { // 页面滚动时执行 }, onResize: function() { // 页面尺寸变化时执行 }, onTabItemTap(item) { // tab 点击时执行 console.log(item.index) console.log(item.pagePath) console.log(item.text) }, // 事件响应函数 viewTap: function() { this.setData({ text: 'Set some data for updating view.' }, function() { // this is setData callback }) }, // 自由数据 customData: { hi: 'MINA' } }) \",\"详细的参数含义和使用请参考 Page 参考文档\"]},\"96\":{\"h\":\"页面生命周期\",\"t\":[\"img\"]},\"97\":{\"h\":\"模块化\",\"t\":[\"可以将一些公共的代码抽离成为一个单独的 js 文件，作为一个模块。模块只有通过 module.exports 或者 exports 才能对外暴露接口。\",\"注意：\",\"exports 是 module.exports 的一个引用，因此在模块里边随意更改 exports 的指向会造成未知的错误。所以更推荐开发者采用 module.exports 来暴露模块接口，除非你已经清晰知道这两者的关系。\",\"小程序目前不支持直接引入 node_modules , 开发者需要使用到 node_modules 时候建议拷贝出相关的代码到小程序的目录中，或者使用小程序支持的 npm 功能。\",\"// common.js function sayHello(name) { console.log(`Hello ${name} !`) } function sayGoodbye(name) { console.log(`Goodbye ${name} !`) } module.exports.sayHello = sayHello exports.sayGoodbye = sayGoodbye \",\"在需要使用这些模块的文件中，使用 require 将公共代码引入\",\"var common = require('common.js') Page({ helloMINA: function() { common.sayHello('MINA') }, goodbyeMINA: function() { common.sayGoodbye('MINA') } }) \"]},\"98\":{\"h\":\"文件作用域\",\"t\":[\"在 JavaScript 文件中声明的变量和函数只在该文件中有效；不同的文件中可以声明相同名字的变量和函数，不会互相影响。\",\"通过全局函数 getApp 可以获取全局的应用实例，如果需要全局的数据可以在 App() 中设置，如：\",\"// app.js App({ globalData: 1 }) // a.js // The localValue can only be used in file a.js. var localValue = 'a' // Get the app instance. var app = getApp() // Get the global data and change it. app.globalData++ // b.js // You can redefine localValue in file b.js, without interference with the localValue in a.js. var localValue = 'b' // If a.js it run before b.js, now the globalData shoule be 2. console.log(getApp().globalData) \"]},\"99\":{\"h\":\"API\",\"t\":[\"详细见 https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/api.html#API\"]},\"100\":{\"h\":\"视图层\"},\"101\":{\"h\":\"WXML\"},\"102\":{\"h\":\"数据绑定\",\"t\":[\"<!--wxml--> <view> {{message}} </view> // page.js Page({ data: { message: 'Hello MINA!' } }) \"]},\"103\":{\"h\":\"列表渲染\",\"t\":[\"<!--wxml--> <view wx:for=\\\"{{array}}\\\"> {{item}} </view> // page.js Page({ data: { array: [1, 2, 3, 4, 5] } }) \"]},\"104\":{\"h\":\"条件渲染\",\"t\":[\"<!--wxml--> <view wx:if=\\\"{{view == 'WEBVIEW'}}\\\"> WEBVIEW </view> <view wx:elif=\\\"{{view == 'APP'}}\\\"> APP </view> <view wx:else=\\\"{{view == 'MINA'}}\\\"> MINA </view> // page.js Page({ data: { view: 'MINA' } }) \"]},\"105\":{\"h\":\"模板\",\"t\":[\"<!--wxml--> <template name=\\\"staffName\\\"> <view> FirstName: {{firstName}}, LastName: {{lastName}} </view> </template> <template is=\\\"staffName\\\" data=\\\"{{...staffA}}\\\"></template> <template is=\\\"staffName\\\" data=\\\"{{...staffB}}\\\"></template> <template is=\\\"staffName\\\" data=\\\"{{...staffC}}\\\"></template> // page.js Page({ data: { staffA: {firstName: 'Hulk', lastName: 'Hu'}, staffB: {firstName: 'Shang', lastName: 'You'}, staffC: {firstName: 'Gideon', lastName: 'Lin'} } }) \"]},\"106\":{\"h\":\"三目运算符\",\"t\":[\"//<view class=\\\"{{flag?'red':'green'}}\\\">是否加样式</view> data: { flag: false, }, \",\"// Register a Page. Page({ data: helloData, changeName: function (e) { // sent data change to view console.log(this.data) this.data.name = this.data.name === 'Weixin' ? 'xxx' : 'Weixin' this.setData({ name: this.data.name }) } }) \",\"具体的能力以及使用方式在以下章节查看：\",\"数据绑定、列表渲染、条件渲染、模板、引用\"]},\"107\":{\"h\":\"WXS\",\"t\":[\"WXS（WeiXin Script）是内联在 WXML 中的脚本段。通过 WXS 可以在模版中内联少量处理脚本，丰富模板的数据预处理能力。另外， WXS 还可以用来编写简单的 WXS 事件响应函数。\",\"从语法上看， WXS 类似于有少量限制的 JavaScript 。要完整了解 WXS 语法，请参考WXS 语法参考。\",\"以下是一些使用 WXS 的简单示例。\"]},\"108\":{\"h\":\"页面渲染\",\"t\":[\"<!--wxml--> <wxs module=\\\"m1\\\"> var msg = \\\"hello world\\\"; module.exports.message = msg; </wxs> <view> {{m1.message}} </view> \"]},\"109\":{\"h\":\"数据处理\",\"t\":[\"// page.js Page({ data: { array: [1, 2, 3, 4, 5, 1, 2, 3, 4] } }) <!--wxml--> <!-- 下面的 getMax 函数，接受一个数组，且返回数组中最大的元素的值 --> <wxs module=\\\"m1\\\"> var getMax = function(array) { var max = undefined; for (var i = 0; i < array.length; ++i) { max = max === undefined ? array[i] : (max >= array[i] ? max : array[i]); } return max; } module.exports.getMax = getMax; </wxs> <!-- 调用 wxs 里面的 getMax 函数，参数为 page.js 里面的 array --> <view> {{m1.getMax(array)}} </view> \"]},\"110\":{\"h\":\"简易双向绑定\",\"t\":[\"在 WXML 中，普通的属性的绑定是单向的。例如：\",\"<input value=\\\"{{value}}\\\" /> \",\"如果使用 this.setData({ value: 'leaf' }) 来更新 value ，this.data.value 和输入框的中显示的值都会被更新为 leaf ；但如果用户修改了输入框里的值，却不会同时改变 this.data.value 。\",\"如果需要在用户输入的同时改变 this.data.value ，需要借助简易双向绑定机制。此时，可以在对应项目之前加入 model: 前缀：\",\"如果使用 this.setData({ value: 'leaf' }) 来更新 value ，this.data.value 和输入框的中显示的值都会被更新为 leaf ；但如果用户修改了输入框里的值，却不会同时改变 this.data.value 。\",\"如果需要在用户输入的同时改变 this.data.value ，需要借助简易双向绑定机制。此时，可以在对应项目之前加入 model: 前缀：\",\"<input model:value=\\\"{{value}}\\\" /> \",\"这样，如果输入框的值被改变了， this.data.value 也会同时改变。同时， WXML 中所有绑定了 value 的位置也会被一同更新， 数据监听器 也会被正常触发。\",\"在开发者工具中预览效果\",\"用于双向绑定的表达式有如下限制：\",\"只能是一个单一字段的绑定，如\",\"<input model:value=\\\"值为 {{value}}\\\" /> <input model:value=\\\"{{ a + b }}\\\" /> \",\"都是非法的；\",\"目前，尚不能 data 路径，如\",\"<input model:value=\\\"{{ a.b }}\\\" /> \",\"这样的表达式目前暂不支持。\",\"关于微信小程序警告“Do not have handler in component: pages/xxx/xxx. “的解决方法\",\"通过资料查询和微信开发者社区询问，原因是没有绑定bindinput方法，因此我们可以为表单绑定一个空的方法，来解决这个警告\",\"<input model:value=\\\"{{name}}\\\" bindinput=\\\"textCallback\\\"/> <!-- js --> Page({ data: helloData, changeName: function (e) { // sent data change to view console.log(this.data) this.data.name = this.data.name === 'Weixin' ? 'xxx' : 'Weixin' this.setData({ name: this.data.name }) }, textCallback: function () {} }) \"]},\"111\":{\"h\":\"在自定义组件中传递双向绑定\",\"t\":[\"双向绑定同样可以使用在自定义组件上。如下的自定义组件：\",\"// custom-component.js Component({ properties: { myValue: String } }) <!-- custom-component.wxml --> <input model:value=\\\"{{myValue}}\\\" /> \",\"这个自定义组件将自身的 myValue 属性双向绑定到了组件内输入框的 value 属性上。这样，如果页面这样使用这个组件：\",\"<custom-component model:my-value=\\\"{{pageValue}}\\\" /> \",\"当输入框的值变更时，自定义组件的 myValue 属性会同时变更，这样，页面的 this.data.pageValue 也会同时变更，页面 WXML 中所有绑定了 pageValue 的位置也会被一同更新。\"]},\"112\":{\"h\":\"在自定义组件中触发双向绑定更新\",\"t\":[\"自定义组件还可以自己触发双向绑定更新，做法就是：使用 setData 设置自身的属性。例如：\",\"// custom-component.js Component({ properties: { myValue: String }, methods: { update: function() { // 更新 myValue this.setData({ myValue: 'leaf' }) } } }) \",\"如果页面这样使用这个组件：\",\"<custom-component model:my-value=\\\"{{pageValue}}\\\" /> \",\"当组件使用 setData 更新 myValue 时，页面的 this.data.pageValue 也会同时变更，页面 WXML 中所有绑定了 pageValue 的位置也会被一同更新。\"]},\"113\":{\"h\":\"响应显示区域变化\",\"t\":[\"具体看 https://developers.weixin.qq.com/miniprogram/dev/framework/view/resizable.html\",\"从小程序基础库版本 2.4.0 开始，小程序在手机上支持屏幕旋转。使小程序中的页面支持屏幕旋转的方法是：在 app.json 的 window 段中设置 \\\"pageOrientation\\\": \\\"auto\\\" ，或在页面 json 文件中配置 \\\"pageOrientation\\\": \\\"auto\\\" 。\",\"以下是在单个页面 json 文件中启用屏幕旋转的示例。\",\"代码示例：\",\"{ \\\"pageOrientation\\\": \\\"auto\\\" } \",\"如果页面添加了上述声明，则在屏幕旋转时，这个页面将随之旋转，显示区域尺寸也会随着屏幕旋转而变化。\",\"从小程序基础库版本 2.5.0 开始， pageOrientation 还可以被设置为 landscape ，表示固定为横屏显示。\"]},\"114\":{\"h\":\"动画\",\"t\":[\"https://developers.weixin.qq.com/miniprogram/dev/framework/view/animation.html\"]},\"115\":{\"h\":\"初始渲染缓存\",\"t\":[\"小程序页面的初始化分为两个部分。\",\"逻辑层初始化：载入必需的小程序代码、初始化页面 this 对象（也包括它涉及到的所有自定义组件的 this 对象）、将相关数据发送给视图层。\",\"视图层初始化：载入必需的小程序代码，然后等待逻辑层初始化完毕并接收逻辑层发送的数据，最后渲染页面。\",\"在启动页面时，尤其是小程序冷启动、进入第一个页面时，逻辑层初始化的时间较长。在页面初始化过程中，用户将看到小程序的标准载入画面（冷启动时）或可能看到轻微的白屏现象（页面跳转过程中）。\",\"启用初始渲染缓存，可以使视图层不需要等待逻辑层初始化完毕，而直接提前将页面初始 data 的渲染结果展示给用户，这可以使得页面对用户可见的时间大大提前。它的工作原理如下：\",\"在小程序页面第一次被打开后，将页面初始数据渲染结果记录下来，写入一个持久化的缓存区域（缓存可长时间保留，但可能因为小程序更新、基础库更新、储存空间回收等原因被清除）；\",\"在这个页面被第二次打开时，检查缓存中是否还存有这个页面上一次初始数据的渲染结果，如果有，就直接将渲染结果展示出来；\",\"如果展示了缓存中的渲染结果，这个页面暂时还不能响应用户事件，等到逻辑层初始化完毕后才能响应用户事件。\",\"利用初始渲染缓存，可以：\",\"快速展示出页面中永远不会变的部分，如导航栏；\",\"预先展示一个骨架页，提升用户体验；\",\"展示自定义的加载提示；\",\"提前展示广告，等等。\"]},\"116\":{\"h\":\"支持的组件\",\"t\":[\"在初始渲染缓存阶段中，复杂组件不能被展示或不能响应交互。\",\"目前支持的内置组件：\",\"<view />\",\"<text />\",\"<button />\",\"<image />\",\"<scroll-view />\",\"<rich-text />\",\"自定义组件本身可以被展示（但它们里面用到的内置组件也遵循上述限制）。\"]},\"117\":{\"h\":\"静态初始渲染缓存\",\"t\":[\"若想启用初始渲染缓存，最简单的方法是在页面的 json 文件中添加配置项 \\\"initialRenderingCache\\\": \\\"static\\\" ：\",\"{ \\\"initialRenderingCache\\\": \\\"static\\\" } \",\"如果想要对所有页面启用，可以在 app.json 的 window 配置段中添加这个配置：\",\"{ \\\"window\\\": { \\\"initialRenderingCache\\\": \\\"static\\\" } } \",\"添加这个配置项之后，在手机中预览小程序首页，然后杀死小程序再次进入，就会通过初始渲染缓存来渲染首页。\",\"注意：这种情况下，初始渲染缓存记录的是页面 data 应用在页面 WXML 上的结果，不包含任何 setData 的结果。\",\"例如，如果想要在页面中展示出“正在加载”几个字，这几个字受到 loading 数据字段控制：\",\"<view wx:if=\\\"{{loading}}\\\">正在加载</view> \",\"这种情况下， loading 应当在 data 中指定为 true ，如：\",\"// 正确的做法 Page({ data: { loading: true } }) \",\"而不能通过 setData 将 loading 置为 true ：\",\"// 错误的做法！不要这么做！ Page({ data: {}, onLoad: function() { this.setData({ loading: true }) } }) \",\"换而言之，这种做法只包含页面 data 的渲染结果，即页面的纯静态成分。\"]},\"118\":{\"h\":\"在初始渲染缓存中添加动态内容\",\"t\":[\"有些场景中，只是页面 data 的渲染结果会比较局限。有时会想要额外展示一些可变的内容，如展示的广告图片 URL 等。\",\"这种情况下可以使用“动态”初始渲染缓存的方式。首先，配置 \\\"initialRenderingCache\\\": \\\"dynamic\\\" ：\",\"{ \\\"initialRenderingCache\\\": \\\"dynamic\\\" } \",\"此时，初始渲染缓存不会被自动启用，还需要在页面中调用 this.setInitialRenderingCache(dynamicData) 才能启用。其中， dynamicData 是一组数据，与 data 一起参与页面 WXML 渲染。\",\"Page({ data: { loading: true }, onReady: function() { this.setInitialRenderingCache({ loadingHint: '正在加载' // 这一部分数据将被应用于界面上，相当于在初始 data 基础上额外进行一次 setData }) } }) <view wx:if=\\\"{{loading}}\\\">{{loadingHint}}</view> \",\"从原理上说，在动态生成初始渲染缓存的方式下，页面会在后台使用动态数据重新渲染一次，因而开销相对较大。因而要尽量避免频繁调用 this.setInitialRenderingCache ，如果在一个页面内多次调用，仅最后一次调用生效。\",\"注意：\",\"this.setInitialRenderingCache 调用时机不能早于 Page 的 onReady 或 Component 的 ready 生命周期，否则可能对性能有负面影响。\",\"如果想禁用初始渲染缓存，调用 this.setInitialRenderingCache(null) 。\"]},\"119\":{\"h\":\"微信小程序组件\",\"t\":[\"https://developers.weixin.qq.com/miniprogram/dev/component/\",\"html 中有 div、span、ul、li 、img, 而小程序上面所有的标签都没有，只有组件, 微信小程序中的组件就相当于之前HTML中的标签。但是小程序中的组件除了包裹功能，还具有样式和 js 功能。\",\"image-20240120161419501\",\"以下会介绍一些常用的标签, 剩下的可以在官方文档中查看\"]},\"120\":{\"h\":\"视图/基础组件\"},\"121\":{\"h\":\"View\",\"t\":[\"​ 视图容器，view组件就相当于之前HTML中的div标签。\",\"属性\",\"类型\",\"默认值\",\"必填\",\"说明\",\"最低版本\",\"hover-class\",\"string\",\"none\",\"否\",\"指定按下去的样式类。当 hover-class=\\\"none\\\" 时，没有点击态效果\",\"1.0.0\",\"hover-stop-propagation\",\"boolean\",\"false\",\"否\",\"指定是否阻止本节点的祖先节点出现点击态\",\"1.5.0\",\"hover-start-time\",\"number\",\"50\",\"否\",\"按住后多久出现点击态，单位毫秒\",\"1.0.0\",\"hover-stay-time\",\"number\",\"400\",\"否\",\"手指松开后点击态保留时间，单位毫秒\",\"1.0.0\",\"<view class=\\\"wrapper\\\" hover-class=\\\"wrapper-hover\\\" hover-stay-time=\\\"1000\\\">我的第一个微信程序</view> \",\".wrapper{ width: 100%; height: 100rpx; text-align: center; line-height: 100rpx; background-color: skyblue; } .wrapper-hover { background-color: pink; } \",\"以下是一个 Flex 布局的例子\",\"<view class=\\\"container\\\"> <view class=\\\"page-body\\\"> <view class=\\\"page-section\\\"> <view class=\\\"page-section-title\\\"> <text>flex-direction: row</text> <text>横向布局</text> </view> <view class=\\\"page-section-spacing\\\"> <view class=\\\"flex-wrp\\\" style=\\\"flex-direction:row;\\\"> <view class=\\\"flex-item demo-text-1\\\"></view> <view class=\\\"flex-item demo-text-2\\\"></view> <view class=\\\"flex-item demo-text-3\\\"></view> </view> </view> </view> <view class=\\\"page-section\\\"> <view class=\\\"page-section-title\\\"> <text>flex-direction: column</text> <text>纵向布局</text> </view> <view class=\\\"flex-wrp\\\" style=\\\"flex-direction:column;\\\"> <view class=\\\"flex-item flex-item-V demo-text-1\\\"></view> <view class=\\\"flex-item flex-item-V demo-text-2\\\"></view> <view class=\\\"flex-item flex-item-V demo-text-3\\\"></view> </view> </view> </view> </view> \",\".container { margin-top: 80px; } .flex-wrp { display: flex; } .flex-item { width: 200rpx; height: 300rpx; font-size: 26rpx; } .flex-item-V { margin: 0 auto; width: 300rpx; height: 200rpx; } .page-section-title text { line-height: 36px; } .demo-text-1 { position: relative; align-items: center; justify-content: center; background-color: #1AAD19; color: #FFFFFF; font-size: 36rpx; } .demo-text-1:before { content: 'A'; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); } .demo-text-2 { position: relative; align-items: center; justify-content: center; background-color: #2782D7; color: #FFFFFF; font-size: 36rpx; } .demo-text-2:before { content: 'B'; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); } .demo-text-3 { position: relative; align-items: center; justify-content: center; background-color: #F1F1F1; color: #353535; font-size: 36rpx; } .demo-text-3:before { content: 'C'; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); } \",\"image-20240120162353536\"]},\"122\":{\"h\":\"text\",\"t\":[\"​ 文本组件，相当于HTML中的span标签。\",\"<text>啦啦啦啦</text> \"]},\"123\":{\"h\":\"swiper\",\"t\":[\"https://developers.weixin.qq.com/miniprogram/dev/component/swiper.html#%E6%B8%B2%E6%9F%93%E6%A8%A1%E5%BC%8F%E6%95%88%E6%9E%9C%E6%BC%94%E7%A4%BA\",\"滑块视图容器。其中只可放置swiper-item组件，否则会导致未定义的行为。也就是说swiper内部只能放swiper-item组件，而swiper-item组件中就可以随便放其它组件及内容了。\",\"<swiper class=\\\"banner\\\"> <swiper-item>item1</swiper-item> <swiper-item>item2</swiper-item> <swiper-item>item3</swiper-item> </swiper> \",\".banner{ height: 80rpx; text-align: center; line-height: 80rpx; } \",\"可以看到swiper组件有轮播图的效果。而且它有默认的高度(150px)。\",\"属性\",\"类型\",\"默认值\",\"必填\",\"说明\",\"最低版本\",\"indicator-dots\",\"boolean\",\"false\",\"否\",\"是否显示面板指示点\",\"1.0.0\",\"indicator-color\",\"color\",\"rgba(0, 0, 0, .3)\",\"否\",\"指示点颜色\",\"1.1.0\",\"indicator-active-color\",\"color\",\"#000000\",\"否\",\"当前选中的指示点颜色\",\"1.1.0\",\"autoplay\",\"boolean\",\"false\",\"否\",\"是否自动切换\",\"1.0.0\",\"current\",\"number\",\"0\",\"否\",\"当前所在滑块的 index\",\"1.0.0\",\"interval\",\"number\",\"5000\",\"否\",\"自动切换时间间隔\",\"1.0.0\",\"duration\",\"number\",\"500\",\"否\",\"滑动动画时长\",\"1.0.0\",\"circular\",\"boolean\",\"false\",\"否\",\"是否采用衔接滑动\",\"1.0.0\",\"vertical\",\"boolean\",\"false\",\"否\",\"滑动方向是否为纵向\",\"1.0.0\",\"display-multiple-items\",\"number\",\"1\",\"否\",\"同时显示的滑块数量\",\"1.9.0\",\"previous-margin\",\"string\",\"\\\"0px\\\"\",\"否\",\"前边距，可用于露出前一项的一小部分，接受 px 和 rpx 值\",\"1.9.0\",\"以下是一个简单的轮播图效果\",\"const food = [ 'https://img1.baidu.com/it/u=3033226715,2238019049&fm=253&fmt=auto&app=138&f=JPEG?w=800&h=500', 'https://img1.baidu.com/it/u=1948650034,2409824853&fm=253&fmt=auto&app=120&f=JPEG?w=1200&h=675', 'https://img2.baidu.com/it/u=3016274568,4110305242&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=313', 'https://img2.baidu.com/it/u=2364493189,83457107&fm=253&fmt=auto&app=138&f=JPEG?w=800&h=500' ] Page({ data: { food }, }) \",\"<view style=\\\"height: 400rpx;\\\"> <swiper class=\\\"banner\\\" indicator-dots> <swiper-item wx:for=\\\"{{food}}\\\" wx:key=\\\"*this\\\"> <image class=\\\"img\\\" src=\\\"{{item}}\\\" mode=\\\"aspectFill\\\" /> </swiper-item> </swiper> </view> \",\".banner { height: 100%; width: 100%; text-align: center; line-height: 80rpx; } \",\"当然, 在 Skyline 渲染模式下, 他也会有不同的表现, 具体可以看\",\"https://developers.weixin.qq.com/miniprogram/dev/component/swiper.html#%E6%8C%87%E7%A4%BA%E5%99%A8%E6%95%88%E6%9E%9C%E6%BC%94%E7%A4%BA\"]},\"124\":{\"h\":\"scroll-view\",\"t\":[\"https://developers.weixin.qq.com/miniprogram/dev/component/scroll-view.html\",\"可滚动视图区域。使用竖向滚动时，需要给scroll-view一个固定高度，通过 WXSS 设置 height。组件属性的长度单位默认为px，2.4.0起支持传入单位(rpx/px)。\",\"横向滚动需打开 enable-flex 以兼容 WebView，如 \",\"滚动条的长度是预估的，若直接子节点的高度差别较大，则滚动条长度可能会不准确\",\"使用 worklet 函数需要开启开发者工具 \\\"将 JS 编译成 ES5\\\" 或 \\\"编译 worklet 函数\\\" 选项。\",\"以下我会给出 纵向滚动 以及 横向滚动 两个效果, 具体属性可以在官方文档中查看\",\"<view class=\\\"container\\\"> <view class=\\\"page-body\\\"> <view class=\\\"page-section\\\"> <view class=\\\"page-section-title\\\"> <text>Vertical Scroll</text> <text>纵向滚动</text> </view> <view class=\\\"page-section-spacing\\\"> <scroll-view type=\\\"list\\\" scroll-y=\\\"true\\\" style=\\\"height: 300rpx;\\\"> <view id=\\\"demo1\\\" class=\\\"scroll-view-item demo-text-1\\\"></view> <view id=\\\"demo2\\\" class=\\\"scroll-view-item demo-text-2\\\"></view> <view id=\\\"demo3\\\" class=\\\"scroll-view-item demo-text-3\\\"></view> </scroll-view> </view> </view> <view class=\\\"page-section\\\"> <view class=\\\"page-section-title\\\"> <text>Horizontal Scroll</text> <text>横向滚动</text> </view> <view class=\\\"page-section-spacing\\\"> <scroll-view type=\\\"list\\\" class=\\\"scroll-view_H\\\" scroll-x=\\\"true\\\" bindscroll=\\\"scroll\\\" style=\\\"width: 100%;height: 300rpx;\\\"> <view id=\\\"demo1\\\" class=\\\"scroll-view-item_H demo-text-1\\\"></view> <view id=\\\"demo2\\\" class=\\\"scroll-view-item_H demo-text-2\\\"></view> <view id=\\\"demo3\\\" class=\\\"scroll-view-item_H demo-text-3\\\"></view> </scroll-view> </view> </view> </view> </view> \",\"Page({ tapMove() { this.setData({ scrollTop: this.data.scrollTop + 10 }) } }) \",\".container { margin-top: 80px; } .page-section-spacing { margin-top: 60rpx; } .scroll-view_H { white-space: nowrap; } .scroll-view-item { height: 300rpx; } .scroll-view-item_H { display: inline-block; width: 100%; height: 300rpx; } .demo-text-1 { position: relative; align-items: center; justify-content: center; background-color: #1AAD19; color: #FFFFFF; font-size: 36rpx; } .demo-text-1::before { content: 'A'; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); } .demo-text-2 { position: relative; align-items: center; justify-content: center; background-color: #2782D7; color: #FFFFFF; font-size: 36rpx; } .demo-text-2::before { content: 'B'; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); } .demo-text-3 { position: relative; align-items: center; justify-content: center; background-color: #F1F1F1; color: #353535; font-size: 36rpx; } .demo-text-3::before { content: 'C'; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); } \",\"https://developers.weixin.qq.com/miniprogram/dev/component/scroll-view.html#scroll-view-%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%8B%E6%8B%89%E5%88%B7%E6%96%B0%E7%A4%BA%E4%BE%8B\",\"以下是横向滚动案例\",\"<!-- scroll-view --> <scroll-view class=\\\"myScroll\\\" scroll-x> <view class=\\\"myScroll.row\\\">1</view> <view class=\\\"row\\\">2</view> <view class=\\\"row\\\">3</view> <view class=\\\"row\\\">4</view> <view class=\\\"row\\\">5</view> <view class=\\\"row\\\">6</view> <view class=\\\"row\\\">7</view> <view class=\\\"row\\\">8</view> </scroll-view> \",\".myScroll { width: 100%; height: 220rpx; background: #eee; /* 使文本在不换行的情况下继续显示 */ white-space: nowrap; } .myScroll .row { width: 220rpx; height: 220rpx; background: burlywood; margin-right: 20rpx; display: inline-block; } .myScroll .row:last-child { margin-right: 0; } \"]},\"125\":{\"h\":\"icon\",\"t\":[\"​ icon组件就是在页面可以显示一个图标。\",\"<icon type=\\\"success\\\"></icon> <icon type=\\\"success\\\" size=\\\"50\\\"></icon> <icon type=\\\"warn\\\"></icon> \",\"属性\",\"类型\",\"默认值\",\"必填\",\"说明\",\"最低版本\",\"type\",\"string\",\"是\",\"icon的类型，有效值：success, success_no_circle, info, warn, waiting, cancel, download, search, clear\",\"1.0.0\",\"size\",\"number/string\",\"23\",\"否\",\"icon的大小，单位默认为px，2.4.0起支持传入单位(rpx/px)，2.21.3起支持传入其余单位(rem 等)。\",\"1.0.0\",\"color\",\"string\",\"否\",\"icon的颜色，同css的color\",\"1.0.0\"]},\"126\":{\"h\":\"progress 进度条\",\"t\":[\"进度条。组件属性的长度单位默认为px，2.4.0起支持传入单位(rpx/px)。\",\"属性\",\"类型\",\"默认值\",\"必填\",\"说明\",\"最低版本\",\"percent\",\"number\",\"否\",\"百分比0~100\",\"1.0.0\",\"show-info\",\"boolean\",\"false\",\"否\",\"在进度条右侧显示百分比\",\"1.0.0\",\"border-radius\",\"number/string\",\"0\",\"否\",\"圆角大小\",\"2.3.1\",\"font-size\",\"number/string\",\"16\",\"否\",\"右侧百分比字体大小\",\"2.3.1\",\"stroke-width\",\"number/string\",\"6\",\"否\",\"进度条线的宽度\",\"1.0.0\",\"color\",\"string\",\"#09BB07\",\"否\",\"进度条颜色（请使用activeColor）\",\"1.0.0\",\"activeColor\",\"string\",\"#09BB07\",\"否\",\"已选择的进度条的颜色\",\"1.0.0\",\"backgroundColor\",\"string\",\"#EBEBEB\",\"否\",\"未选择的进度条的颜色\",\"1.0.0\",\"active\",\"boolean\",\"false\",\"否\",\"进度条从左往右的动画\",\"1.0.0\",\"active-mode\",\"string\",\"backwards\",\"否\",\"backwards: 动画从头播；forwards：动画从上次结束点接着播\",\"1.7.0\",\"duration\",\"number\",\"30\",\"否\",\"进度增加1%所需毫秒数\",\"2.8.2\",\"bindactiveend\",\"eventhandle\",\"否\",\"动画完成事件\",\"2.4.1\",\"<progress percent=\\\"20\\\" show-info /> <progress percent=\\\"40\\\" stroke-width=\\\"12\\\" /> <progress percent=\\\"60\\\" color=\\\"pink\\\" /> <progress percent=\\\"80\\\" active /> \",\"image-20240121004604493\"]},\"127\":{\"h\":\"表单组件\",\"t\":[\"具体可以在官方文档查看\"]},\"128\":{\"h\":\"Button\",\"t\":[\"https://developers.weixin.qq.com/miniprogram/dev/component/button.html\",\"具体属性看官方文档, 可以通过 open-type 配置分享, 打开交流窗口等等功能\",\"<button size=\\\"default\\\">按钮1</button> <button size=\\\"mini\\\">按钮2</button> <button size=\\\"mini\\\" type=\\\"primary\\\">按钮3</button> <button size=\\\"mini\\\" type=\\\"warn\\\">按钮3</button> <button size=\\\"mini\\\" type=\\\"primary\\\" open-type=\\\"share\\\">按钮4</button> \",\"image-20240121215332766\"]},\"129\":{\"h\":\"导航组件\"},\"130\":{\"h\":\"navigator\",\"t\":[\"https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html\",\"navigator组件相当于HTML的超链接标签。\",\"<!-- navigator组件相当于HTML的超链接标签。 target属性：在哪个目标上发生跳转，默认self-当前小程序； url属性：当前小程序内的跳转链接 open-type属性：指定跳转方式，默认是navigate navigate：保留当前页面，跳转到应用内的某个页面。但是不能跳到 tabbar 页面。 redirect：关闭当前页面，跳转到应用内的某个页面。但是不允许跳转到 tabbar 页面。 switchTab：跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面 reLaunch：关闭所有页面，打开到应用内的某个页面 navigateBack：关闭当前页面，返回上一页面或多级页面。 --> <navigator target=\\\"self\\\" url=\\\"../about/about\\\" open-type=\\\"switchTab\\\">点我跳转</navigator> \",\"<!-- 导航 跳转到页面，都不写后缀名 1、open-type='navigate' 跳转方式: 保留当前页面，跳转应用内的某个页面，但不跳转tabber页面 2、open-type=\\\"redirect 关闭当前页面，跳转到应用内的某个页面。但是不允许跳转到 tabbar 页面。 没返回，有返回首页 3、open-type=\\\"switchTab\\\" 跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面 4、reLaunch 关闭所有页面，打开到应用内的某个页面 5、navigateBack 关闭当前页面，返回上一页面或多级页面。标签的话，就是返回上一页。用方法的话，可以指定返回多少级 6、exit 退出小程序，`target=\\\"miniProgram\\\"`时生效 需要用真机去测 --> <navigator url=\\\"../detail/detail\\\">进入详情页</navigator> <navigator url=\\\"../detail/detail\\\" open-type=\\\"redirect\\\">redirect 进入详情页</navigator> <navigator url=\\\"../index/index\\\" open-type=\\\"switchTab\\\">跳转到首页</navigator> <!-- 还可以调tabBar --> <navigator url=\\\"../detail/detail\\\" open-type=\\\"reLaunch\\\">reLaunch 到详情页</navigator> <navigator open-type=\\\"exit\\\" target=\\\"miniProgram\\\">退出小程序</navigator> \"]},\"131\":{\"h\":\"媒体组件\"},\"132\":{\"h\":\"image\",\"t\":[\"https://developers.weixin.qq.com/miniprogram/dev/component/image.html\",\"为了保证大小, 可以使用裁剪或者缩放调整大小\",\"属性\",\"类型\",\"默认值\",\"必填\",\"说明\",\"最低版本\",\"show-menu-by-longpress\",\"boolean\",\"false\",\"否\",\"长按图片显示发送给朋友、收藏、保存图片、搜一搜、打开名片/前往群聊/打开小程序（若图片中包含对应二维码或小程序码）的菜单。\",\"2.7.0\",\"mode\",\"string\",\"scaleToFill\",\"否\",\"图片裁剪、缩放的模式\",\"1.0.0\",\"合法值\",\"说明\",\"最低版本\",\"scaleToFill\",\"缩放模式，不保持纵横比缩放图片，使图片的宽高完全拉伸至填满 image 元素\",\"aspectFit\",\"缩放模式，保持纵横比缩放图片，使图片的长边能完全显示出来。也就是说，可以完整地将图片显示出来。\",\"aspectFill\",\"缩放模式，保持纵横比缩放图片，只保证图片的短边能完全显示出来。也就是说，图片通常只在水平或垂直方向是完整的，另一个方向将会发生截取。\",\"widthFix\",\"缩放模式，宽度不变，高度自动变化，保持原图宽高比不变\",\"heightFix\",\"缩放模式，高度不变，宽度自动变化，保持原图宽高比不变\",\"2.10.3\",\"top\",\"裁剪模式，不缩放图片，只显示图片的顶部区域。仅 Webview 支持。\",\"bottom\",\"裁剪模式，不缩放图片，只显示图片的底部区域。仅 Webview 支持。\",\"center\",\"裁剪模式，不缩放图片，只显示图片的中间区域。仅 Webview 支持。\",\"left\",\"裁剪模式，不缩放图片，只显示图片的左边区域。仅 Webview 支持。\",\"right\",\"裁剪模式，不缩放图片，只显示图片的右边区域。仅 Webview 支持。\",\"top left\",\"裁剪模式，不缩放图片，只显示图片的左上边区域。仅 Webview 支持。\",\"top right\",\"裁剪模式，不缩放图片，只显示图片的右上边区域。仅 Webview 支持。\",\"bottom left\",\"裁剪模式，不缩放图片，只显示图片的左下边区域。仅 Webview 支持。\",\"bottom right\",\"裁剪模式，不缩放图片，只显示图片的右下边区域。仅 Webview 支持。\",\"可以在 https://developers.weixin.qq.com/miniprogram/dev/component/image.html#%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81 查看示例代码\"]},\"133\":{\"h\":\"地图组件\",\"t\":[\"https://developers.weixin.qq.com/miniprogram/dev/component/map.html\",\"<!-- latitude：维度 longitude：经度 --> <map longitude=\\\"115\\\" latitude=\\\"39\\\"></map> \"]},\"134\":{\"h\":\"微信小程序组件\",\"t\":[\"参考 https://developers.weixin.qq.com/miniprogram/dev/framework/ability/custom-tabbar.html\"]},\"135\":{\"h\":\"自定义tabBar\",\"t\":[\"自定义 tabBar 可以让开发者更加灵活地设置 tabBar 样式，以满足更多个性化的场景。\",\"在自定义 tabBar 模式下\",\"为了保证低版本兼容以及区分哪些页面是 tab 页，tabBar 的相关配置项需完整声明，但这些字段不会作用于自定义 tabBar 的渲染。 此时需要开发者提供一个自定义组件来渲染 tabBar，所有 tabBar 的样式都由该自定义组件渲染。推荐用 fixed 在底部的 cover-view + cover-image 组件渲染样式，以保证 tabBar 层级相对较高。 与 tabBar 样式相关的接口，如 wx.setTabBarItem 等将失效。 每个 tab 页下的自定义 tabBar 组件实例是不同的，可通过自定义组件下的 getTabBar 接口，获取当前页面的自定义 tabBar 组件实例。 注意：如需实现 tab 选中态，要在当前页面下，通过 getTabBar 接口获取组件实例，并调用 setData 更新选中态。可参考底部的代码示例。\"]},\"136\":{\"h\":\"使用\",\"t\":[\"配置信息\",\"在 app.json 中的 tabBar 项指定 custom 字段，同时其余 tabBar 相关配置也补充完整。\",\"所有 tab 页的 json 里需声明 usingComponents 项，也可以在 app.json 全局开启。\",\"{ \\\"tabBar\\\": { \\\"custom\\\": true, \\\"color\\\": \\\"#000000\\\", \\\"selectedColor\\\": \\\"#000000\\\", \\\"backgroundColor\\\": \\\"#000000\\\", \\\"list\\\": [{ \\\"pagePath\\\": \\\"page/component/index\\\", \\\"text\\\": \\\"组件\\\" }, { \\\"pagePath\\\": \\\"page/API/index\\\", \\\"text\\\": \\\"接口\\\" }] }, \\\"usingComponents\\\": {} } \",\"添加 tabBar 代码文件\",\"在代码根目录下添加入口文件:\",\"custom-tab-bar/index.js custom-tab-bar/index.json custom-tab-bar/index.wxml custom-tab-bar/index.wxss 3. 编写 tabBar 代码\",\"用自定义组件的方式编写即可，该自定义组件完全接管 tabBar 的渲染。另外，自定义组件新增 getTabBar 接口，可获取当前页面下的自定义 tabBar 组件实例\",\"以下是一个简单的自定义 tabBar 组件示例：\",\"<view class=\\\"tabbar\\\"> <view class=\\\"tabbar-item {{ select === index ? 'tabbar-select' : '' }}\\\" wx:for=\\\"{{ list }}\\\" wx:key=\\\"index\\\" data-page=\\\"{{ item.pagePath }}\\\" data-index=\\\"{{ index }}\\\" data-type=\\\"{{ item.type }}\\\" bindtap=\\\"selectPage\\\"> <block wx:if=\\\"{{ item.type === 0 }}\\\"> <image class=\\\"tabbar-image\\\" src=\\\"{{ select === index ? item.selectedIconPath : item.iconPath }}\\\"></image> <text class=\\\"tabbar-text\\\">{{ item.text }}</text> </block> <block wx:else> <view class=\\\"publish\\\"> <image class=\\\"tabbar-image\\\" src=\\\"../images/add.png\\\"></image> </view> </block> </view> </view> \",\"Component({ data: { select: 0, list: [ { iconPath: \\\"/images/index.png\\\", pagePath: \\\"/pages/index/index\\\", selectedIconPath: \\\"/images/index_fill.png\\\", text: \\\"首页\\\", type: 0 }, { iconPath: \\\"/images/classify.png\\\", pagePath: \\\"/pages/classify/classify\\\", selectedIconPath: \\\"/images/classify_fill.png\\\", text: \\\"分类\\\", type: 0 }, { type: 1, pagePath: \\\"/pages/publish/publish\\\", }, { iconPath: \\\"/images/collection.png\\\", pagePath: \\\"/pages/collection/collection\\\", selectedIconPath: \\\"/images/collection_fill.png\\\", text: \\\"收藏夹\\\", type: 0, }, { iconPath: \\\"/images/me.png\\\", pagePath: \\\"/pages/me/me\\\", selectedIconPath: \\\"/images/me_fill.png\\\", text: \\\"我的\\\", type: 0 } ] }, methods: { selectPage(e) { const { index, page, type } = e.currentTarget.dataset if (index !== this.data.select && type === 0) { wx.switchTab({ url: page, }) } if (type === 1) { wx.navigateTo({ url: '../../pages/publish/publish', }) } this.setData({ select: index }) } } }) \",\".tabbar { width: 100%; height: 80rpx; display: flex; background-color: #fff; position: fixed; bottom: 0; padding-bottom: env(safe-area-inset-bottom); padding-top: 10rpx; z-index: 9999; } .tabbar-item { flex: 1; display: flex; flex-direction: column; justify-content: center; align-items: center; } .tabbar-item .tabbar-image { width: 40rpx; height: 40rpx; } .tabbar-item .tabbar-text { font-size: 26rpx; margin-top: 10rpx; } .tabbar-item .publish { padding: 8px; background-color: #B2A4EC; border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-bottom: auto; } .tabbar-select { color: #B2A4EC; } \"]},\"137\":{\"h\":\"skyline 模式\",\"t\":[\"使用 skyline 渲染模式的时候，需要进行如下适配：\",\"tabBar 组件样式兼容 \",\"tabBar 根组件需要添加 pointer-events: auto\",\"tabBar 根组件定位需为 position: absolute\",\"<view class=\\\"tab-bar\\\"> <!-- tabbar item--> </view> \",\".tab-bar { pointer-events: auto; position: absolute; } \",\"getTabBar 回调函数 skyline 模式下，页面/组件上的 getTabBar 接口为异步回调的方式获取 tabBar 实例\",\"Page({ getInstance() { if (typeof this.getTabBar === 'function' ) { this.getTabBar((tabBar) => { tabBar.setData({ selected: 0 }) }) } } }) \",\"onShow() { if (typeof this.getTabBar === \\\"function\\\" && this.getTabBar()) { this.getTabBar().setData({ select: 4 }) } } \"]},\"138\":{\"h\":\"微信小程序配置项\"},\"139\":{\"h\":\"全局配置\",\"t\":[\"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#entryPagePath\",\"小程序根目录下的 app.json 文件用来对微信小程序进行全局配置。文件内容为一个 JSON 对象，有以下属性：\",\"属性\",\"类型\",\"必填\",\"描述\",\"最低版本\",\"entryPagePath\",\"string\",\"否\",\"小程序默认启动首页\",\"pages\",\"string[]\",\"是\",\"页面路径列表\",\"window\",\"Object\",\"否\",\"全局的默认窗口表现\",\"tabBar\",\"Object\",\"否\",\"底部 tab 栏的表现\",\"networkTimeout\",\"Object\",\"否\",\"网络超时时间\",\"debug\",\"boolean\",\"否\",\"是否开启 debug 模式，默认关闭\",\"functionalPages\",\"boolean\",\"否\",\"是否启用插件功能页，默认关闭\",\"2.1.0\",\"subpackages\",\"Object[]\",\"否\",\"分包结构配置\",\"1.7.3\",\"workers\",\"string\",\"否\",\"Worker 代码放置的目录\",\"1.9.90\",\"requiredBackgroundModes\",\"string[]\",\"否\",\"需要在后台使用的能力，如「音乐播放」\",\"requiredPrivateInfos\",\"string[]\",\"否\",\"调用的地理位置相关隐私接口\",\"plugins\",\"Object\",\"否\",\"使用到的插件\",\"1.9.6\",\"preloadRule\",\"Object\",\"否\",\"分包预下载规则\",\"2.3.0\",\"resizable\",\"boolean\",\"否\",\"PC 小程序是否支持用户任意改变窗口大小（包括最大化窗口）；iPad 小程序是否支持屏幕旋转。默认关闭\",\"2.3.0\",\"usingComponents\",\"Object\",\"否\",\"全局自定义组件配置\",\"开发者工具 1.02.1810190\",\"permission\",\"Object\",\"否\",\"小程序接口权限相关设置\",\"微信客户端 7.0.0\",\"sitemapLocation\",\"string\",\"是\",\"指明 sitemap.json 的位置\",\"style\",\"string\",\"否\",\"指定使用升级后的weui样式\",\"2.8.0\",\"useExtendedLib\",\"Object\",\"否\",\"指定需要引用的扩展库\",\"2.2.1\",\"entranceDeclare\",\"Object\",\"否\",\"微信消息用小程序打开\",\"微信客户端 7.0.9\",\"darkmode\",\"boolean\",\"否\",\"小程序支持 DarkMode\",\"2.11.0\",\"themeLocation\",\"string\",\"否\",\"指明 theme.json 的位置，darkmode为true为必填\",\"开发者工具 1.03.2004271\",\"lazyCodeLoading\",\"string\",\"否\",\"配置自定义组件代码按需注入\",\"2.11.1\",\"singlePage\",\"Object\",\"否\",\"单页模式相关配置\",\"2.12.0\",\"supportedMaterials\",\"Object\",\"否\",\"聊天素材小程序打开相关配置\",\"2.14.3\",\"serviceProviderTicket\",\"string\",\"否\",\"定制化型服务商票据\",\"embeddedAppIdList\",\"string[]\",\"否\",\"半屏小程序 appId\",\"2.20.1\",\"halfPage\",\"Object\",\"否\",\"视频号直播半屏场景设置\",\"2.18.0\",\"debugOptions\",\"Object\",\"否\",\"调试相关配置\",\"2.22.1\",\"enablePassiveEvent\",\"Object或boolean\",\"否\",\"touch 事件监听是否为 passive\",\"2.24.1\",\"resolveAlias\",\"Object\",\"否\",\"自定义模块映射规则\",\"renderer\",\"string\",\"否\",\"全局默认的渲染后端\",\"2.30.4\",\"rendererOptions\",\"Object\",\"否\",\"渲染后端选项\",\"2.31.1\",\"componentFramework\",\"string\",\"否\",\"组件框架，详见相关文档\",\"2.30.4\",\"miniApp\",\"Object\",\"否\",\"多端模式场景接入身份管理服务时开启小程序授权页相关配置，详见相关文档\",\"static\",\"Object\",\"否\",\"正常情况下默认所有资源文件都被打包发布到所有平台，可以通过 static 字段配置特定每个目录/文件只能发布到特定的平台(多端场景) 相关文档\",\"convertRpxToVw\",\"boolean\",\"否\",\"配置是否将 rpx 单位转换为 vw 单位，开启后能修复某些 rpx 下的精度问题\",\"3.3.0\",\"以下简单列举了一部分, 其他未列举可以在官方文档中查看\"]},\"140\":{\"h\":\"entryPagePath\",\"t\":[\"指定小程序的默认启动路径（首页），常见情景是从微信聊天列表页下拉启动、小程序列表启动等。如果不填，将默认为 pages 列表的第一项。不支持带页面路径参数。\"]},\"141\":{\"h\":\"pages\",\"t\":[\"用于指定小程序由哪些页面组成，每一项都对应一个页面的 路径（含文件名） 信息。文件名不需要写文件后缀，框架会自动去寻找对应位置的 .json, .js, .wxml, .wxss 四个文件进行处理。\",\"未指定 entryPagePath 时，数组的第一项代表小程序的初始页面（首页）。\",\"小程序中新增/减少页面，都需要对 pages 数组进行修改。\",\"则需要在 app.json 中写\",\"{ \\\"pages\\\": [\\\"pages/index/index\\\", \\\"pages/logs/logs\\\"] } \"]},\"142\":{\"h\":\"window\",\"t\":[\"用于设置小程序的状态栏、导航条、标题、窗口背景色。\",\"属性\",\"类型\",\"默认值\",\"描述\",\"最低版本\",\"navigationBarBackgroundColor\",\"HexColor\",\"#000000\",\"导航栏背景颜色，如 #000000\",\"navigationBarTextStyle\",\"string\",\"white\",\"导航栏标题、状态栏颜色，仅支持 black / white\",\"navigationBarTitleText\",\"string\",\"导航栏标题文字内容\",\"navigationStyle\",\"string\",\"default\",\"导航栏样式，仅支持以下值： default 默认样式 custom 自定义导航栏，只保留右上角胶囊按钮。参见注 2。\",\"iOS/Android 微信客户端 6.6.0，Windows 微信客户端不支持\",\"homeButton\",\"boolean\",\"default\",\"在非首页、非页面栈最底层页面或非tabbar内页面中的导航栏展示home键\",\"微信客户端 8.0.24\",\"backgroundColor\",\"HexColor\",\"#ffffff\",\"窗口的背景色\",\"backgroundTextStyle\",\"string\",\"dark\",\"下拉 loading 的样式，仅支持 dark / light\",\"backgroundColorTop\",\"string\",\"#ffffff\",\"顶部窗口的背景色，仅 iOS 支持\",\"微信客户端 6.5.16\",\"backgroundColorBottom\",\"string\",\"#ffffff\",\"底部窗口的背景色，仅 iOS 支持\",\"微信客户端 6.5.16\",\"enablePullDownRefresh\",\"boolean\",\"false\",\"是否开启全局的下拉刷新。 详见 Page.onPullDownRefresh\",\"onReachBottomDistance\",\"number\",\"50\",\"页面上拉触底事件触发时距页面底部距离，单位为 px。 详见 Page.onReachBottom\",\"pageOrientation\",\"string\",\"portrait\",\"屏幕旋转设置，支持 auto / portrait / landscape 详见 响应显示区域变化\",\"2.4.0 (auto) / 2.5.0 (landscape)\",\"restartStrategy\",\"string\",\"homePage\",\"重新启动策略配置\",\"2.8.0\",\"initialRenderingCache\",\"string\",\"页面初始渲染缓存配置，支持 static / dynamic\",\"2.11.1\",\"visualEffectInBackground\",\"string\",\"none\",\"切入系统后台时，隐藏页面内容，保护用户隐私。支持 hidden / none\",\"2.15.0\",\"handleWebviewPreload\",\"string\",\"static\",\"控制预加载下个页面的时机。支持 static / manual / auto\",\"2.15.0\",\"如：\",\"{ \\\"window\\\": { \\\"navigationBarBackgroundColor\\\": \\\"#ffffff\\\", \\\"navigationBarTextStyle\\\": \\\"black\\\", \\\"navigationBarTitleText\\\": \\\"微信接口功能演示\\\", \\\"backgroundColor\\\": \\\"#eeeeee\\\", \\\"backgroundTextStyle\\\": \\\"light\\\" } } \",\"img\"]},\"143\":{\"h\":\"tabBar\",\"t\":[\"如果小程序是一个多 tab 应用（客户端窗口的底部或顶部有 tab 栏可以切换页面），可以通过 tabBar 配置项指定 tab 栏的表现，以及 tab 切换时显示的对应页面。\",\"属性\",\"类型\",\"必填\",\"默认值\",\"描述\",\"最低版本\",\"color\",\"HexColor\",\"是\",\"tab 上的文字默认颜色，仅支持十六进制颜色\",\"selectedColor\",\"HexColor\",\"是\",\"tab 上的文字选中时的颜色，仅支持十六进制颜色\",\"backgroundColor\",\"HexColor\",\"是\",\"tab 的背景色，仅支持十六进制颜色\",\"borderStyle\",\"string\",\"否\",\"black\",\"tabbar 上边框的颜色， 仅支持 black / white\",\"list\",\"Array\",\"是\",\"tab 的列表，详见 list 属性说明，最少 2 个、最多 5 个 tab\",\"position\",\"string\",\"否\",\"bottom\",\"tabBar 的位置，仅支持 bottom / top\",\"custom\",\"boolean\",\"否\",\"false\",\"自定义 tabBar，见详情\",\"2.5.0\",\"其中 list 接受一个数组，只能配置最少 2 个、最多 5 个 tab。tab 按数组的顺序排序，每个项都是一个对象，其属性值如下：\",\"属性\",\"类型\",\"必填\",\"说明\",\"pagePath\",\"string\",\"是\",\"页面路径，必须在 pages 中先定义\",\"text\",\"string\",\"是\",\"tab 上按钮文字\",\"iconPath\",\"string\",\"否\",\"图片路径，icon 大小限制为 40kb，建议尺寸为 81px * 81px，不支持网络图片。 当 position 为 top 时，不显示 icon。\",\"selectedIconPath\",\"string\",\"否\",\"选中时的图片路径，icon 大小限制为 40kb，建议尺寸为 81px * 81px，不支持网络图片。 当 position 为 top 时，不显示 icon。\",\"img\",\"以下是一个简单示例\",\"\\\"tabBar\\\": { \\\"color\\\": \\\"#00A95E\\\", \\\"selectedColor\\\": \\\"#FA8072\\\", \\\"backgroundColor\\\": \\\"#f5f5f5\\\", \\\"borderStyle\\\": \\\"black\\\", \\\"list\\\": [ { \\\"pagePath\\\": \\\"pages/index/index\\\", \\\"text\\\": \\\"Index\\\", \\\"iconPath\\\": \\\"icon/_home.png\\\", \\\"selectedIconPath\\\": \\\"icon/home.png\\\" }, { \\\"pagePath\\\": \\\"pages/logs/logs\\\", \\\"text\\\": \\\"Logs\\\", \\\"iconPath\\\": \\\"icon/_search.png\\\", \\\"selectedIconPath\\\": \\\"icon/search.png\\\" }, { \\\"pagePath\\\": \\\"pages/demo/demo\\\", \\\"text\\\": \\\"Demo\\\", \\\"iconPath\\\": \\\"icon/_videocamera.png\\\", \\\"selectedIconPath\\\": \\\"icon/videocamera.png\\\" } ] } \",\"image-20240120160151572\"]},\"144\":{\"h\":\"networkTimeout\",\"t\":[\"各类网络请求的超时时间，单位均为毫秒。\",\"属性\",\"类型\",\"必填\",\"默认值\",\"说明\",\"request\",\"number\",\"否\",\"60000\",\"wx.request 的超时时间，单位：毫秒。\",\"connectSocket\",\"number\",\"否\",\"60000\",\"wx.connectSocket 的超时时间，单位：毫秒。\",\"uploadFile\",\"number\",\"否\",\"60000\",\"wx.uploadFile 的超时时间，单位：毫秒。\",\"downloadFile\",\"number\",\"否\",\"60000\",\"wx.downloadFile 的超时时间，单位：毫秒\"]},\"145\":{\"h\":\"debug\",\"t\":[\"可以在开发者工具中开启 debug 模式，在开发者工具的控制台面板，调试信息以 info 的形式给出，其信息有 Page 的注册，页面路由，数据更新，事件触发等。可以帮助开发者快速定位一些常见的问题。\"]},\"146\":{\"h\":\"页面配置\",\"t\":[\"app.json 中的部分配置，也支持对单个页面进行配置，可以在页面对应的 .json 文件来对本页面的表现进行配置。\",\"页面中配置项在当前页面会覆盖 app.json 中相同的配置项（样式相关的配置项属于 app.json 中的 window 属性，但这里不需要额外指定 window 字段），具体的取值和含义可参考全局配置文档中说明。\",\"文件内容为一个 JSON 对象，有以下属性：\",\"属性\",\"类型\",\"默认值\",\"描述\",\"最低版本\",\"navigationBarBackgroundColor\",\"HexColor\",\"#000000\",\"导航栏背景颜色，如 #000000\",\"navigationBarTextStyle\",\"string\",\"white\",\"导航栏标题、状态栏颜色，仅支持 black / white\",\"navigationBarTitleText\",\"string\",\"导航栏标题文字内容\",\"navigationStyle\",\"string\",\"default\",\"导航栏样式，仅支持以下值： default 默认样式 custom 自定义导航栏，只保留右上角胶囊按钮。\",\"iOS/Android 微信客户端 7.0.0，Windows 微信客户端不支持\",\"homeButton\",\"boolean\",\"false\",\"在非首页、非页面栈最底层页面或非tabbar内页面中的导航栏展示home键\",\"微信客户端 8.0.24\",\"backgroundColor\",\"HexColor\",\"#ffffff\",\"窗口的背景色\",\"backgroundColorContent\",\"HexColor\",\"#RRGGBBAA\",\"页面容器背景色，点击查看设置背景色详情\",\"backgroundTextStyle\",\"string\",\"dark\",\"下拉 loading 的样式，仅支持 dark / light\",\"backgroundColorTop\",\"string\",\"#ffffff\",\"顶部窗口的背景色，仅 iOS 支持\",\"微信客户端 6.5.16\",\"backgroundColorBottom\",\"string\",\"#ffffff\",\"底部窗口的背景色，仅 iOS 支持\",\"微信客户端 6.5.16\",\"enablePullDownRefresh\",\"boolean\",\"false\",\"是否开启当前页面下拉刷新。 详见 Page.onPullDownRefresh\",\"onReachBottomDistance\",\"number\",\"50\",\"页面上拉触底事件触发时距页面底部距离，单位为px。 详见 Page.onReachBottom\",\"pageOrientation\",\"string\",\"portrait\",\"屏幕旋转设置，支持 auto / portrait / landscape 详见 响应显示区域变化\",\"2.4.0 (auto) / 2.5.0 (landscape)\",\"disableScroll\",\"boolean\",\"false\",\"设置为 true 则页面整体不能上下滚动。 只在页面配置中有效，无法在 app.json 中设置\",\"usingComponents\",\"Object\",\"否\",\"页面自定义组件配置\",\"1.6.3\",\"initialRenderingCache\",\"string\",\"页面初始渲染缓存配置，支持 static / dynamic\",\"2.11.1\",\"style\",\"string\",\"default\",\"启用新版的组件样式\",\"2.10.2\",\"singlePage\",\"Object\",\"否\",\"单页模式相关配置\",\"2.12.0\",\"restartStrategy\",\"string\",\"homePage\",\"重新启动策略配置\",\"2.8.0\",\"handleWebviewPreload\",\"string\",\"static\",\"控制预加载下个页面的时机。支持 static / manual / auto\",\"2.15.0\",\"visualEffectInBackground\",\"string\",\"否\",\"切入系统后台时，隐藏页面内容，保护用户隐私。支持 hidden / none，若对页面单独设置则会覆盖全局的配置，详见 全局配置\",\"2.15.0\",\"enablePassiveEvent\",\"Object或boolean\",\"否\",\"事件监听是否为 passive，若对页面单独设置则会覆盖全局的配置，详见 全局配置\",\"2.24.1\",\"renderer\",\"string\",\"否\",\"渲染后端\",\"2.30.4\",\"rendererOptions\",\"Object\",\"否\",\"渲染后端选项，详情相关文档\",\"3.1.0\",\"componentFramework\",\"string\",\"否\",\"组件框架，详情相关文档\",\"2.30.4\",\"注：并不是所有 app.json 中的配置都可以在页面覆盖或单独指定，仅限于本文档包含的选项。\",\"注：iOS/Android 客户端 7.0.0 以下版本，navigationStyle 只在 app.json 中生效。\",\"image-20240120160819935\"]},\"147\":{\"h\":\"WXSS\",\"t\":[\"WXSS (WeiXin Style Sheets)是一套样式语言，用于描述 WXML 的组件样式。\",\"WXSS 用来决定 WXML 的组件应该怎么显示。\",\"为了适应广大的前端开发者，WXSS 具有 CSS 大部分特性。同时为了更适合开发微信小程序，WXSS 对 CSS 进行了扩充以及修改。\",\"与 CSS 相比，WXSS 扩展的特性有：\",\"尺寸单位\",\"样式导入\"]},\"148\":{\"h\":\"尺寸单位\",\"t\":[\"rpx（responsive pixel）: 可以根据屏幕宽度进行自适应。规定屏幕宽为750rpx。如在 iPhone6 上，屏幕宽度为375px，共有750个物理像素，则750rpx = 375px = 750物理像素，1rpx = 0.5px = 1物理像素。\",\"设备\",\"rpx换算px (屏幕宽度/750)\",\"px换算rpx (750/屏幕宽度)\",\"iPhone5\",\"1rpx = 0.42px\",\"1px = 2.34rpx\",\"iPhone6\",\"1rpx = 0.5px\",\"1px = 2rpx\",\"iPhone6 Plus\",\"1rpx = 0.552px\",\"1px = 1.81rpx\",\"建议： 开发微信小程序时设计师可以用 iPhone6 作为视觉稿的标准。\",\"注意： 在较小的屏幕上不可避免的会有一些毛刺，请在开发时尽量避免这种情况。\"]},\"149\":{\"h\":\"样式导入\",\"t\":[\"使用@import语句可以导入外联样式表，@import后跟需要导入的外联样式表的相对路径，用;表示语句结束。\",\"示例代码：\",\"/** common.wxss **/ .small-p { padding:5px; } /** app.wxss **/ @import \\\"common.wxss\\\"; .middle-p { padding:15px; } \"]},\"150\":{\"h\":\"内联样式\",\"t\":[\"框架组件上支持使用 style、class 属性来控制组件的样式。\",\"style：静态的样式统一写到 class 中。style 接收动态的样式，在运行时会进行解析，请尽量避免将静态的样式写进 style 中，以免影响渲染速度。\",\"<view style=\\\"color:{{color}};\\\" /> \",\"class：用于指定样式规则，其属性值是样式规则中类选择器名(样式类名)的集合，样式类名不需要带上.，样式类名之间用空格分隔。\",\"<view class=\\\"normal_view\\\" /> \"]},\"151\":{\"h\":\"选择器\",\"t\":[\"目前支持的选择器有：\",\"选择器\",\"样例\",\"样例描述\",\".class\",\".intro\",\"选择所有拥有 class=\\\"intro\\\" 的组件\",\"#id\",\"#firstname\",\"选择拥有 id=\\\"firstname\\\" 的组件\",\"element\",\"view\",\"选择所有 view 组件\",\"element, element\",\"view, checkbox\",\"选择所有文档的 view 组件和所有的 checkbox 组件\",\"::after\",\"view::after\",\"在 view 组件后边插入内容\",\"::before\",\"view::before\",\"在 view 组件前边插入内容\"]},\"152\":{\"h\":\"全局样式与局部样式\",\"t\":[\"定义在 app.wxss 中的样式为全局样式，作用于每一个页面。在 page 的 wxss 文件中定义的样式为局部样式，只作用在对应的页面，并会覆盖 app.wxss 中相同的选择器。\"]},\"153\":{\"h\":\"Vue 过渡与动画初体验\"},\"154\":{\"h\":\"认识动画\",\"t\":[\"在开发中，我们想要给一个组件的显示和消失添加某种过渡动画，可以很好的增加用户体验： \",\"React框架本身并没有提供任何动画相关的API，所以在React中使用过渡动画我们需要使用一个第三方库 react-transition-group；\",\"Vue中为我们提供一些内置组件和对应的API来完成动画，利用它们我们可以方便的实现过渡动画效果；\",\"我们来看一个案例： \",\"Hello World的显示和隐藏；\",\"通过下面的代码实现，是不会有任何动画效果的；\",\"<template> <div> <button @click=\\\"toggle\\\">显示/隐藏</button> <h2 v-if=\\\"show\\\">App组件</h2> </div> </template> <script> export default { data() { return { show: true } }, methods: { toggle() { this.show = !this.show; } } } </script> \",\"没有动画的情况下，整个内容的显示和隐藏会非常的生硬： \",\"如果我们希望给单元素或者组件实现过渡动画，可以使用 transition内置组件来完成动画；\"]},\"155\":{\"h\":\"Vue的 transition 动画\",\"t\":[\"https://cn.vuejs.org/guide/built-ins/transition.html#transition\",\"<Transition> 会在一个元素或组件进入和离开 DOM 时应用动画。\",\"<Transition> 是一个内置组件，这意味着它在任意别的组件中都可以被使用，无需注册。它可以将进入和离开动画应用到通过默认插槽传递给它的元素或组件上。进入或离开可以由以下的条件之一触发：\",\"由 v-if 所触发的切换\",\"由 v-show 所触发的切换\",\"由特殊元素 <component> 切换的动态组件\",\"改变特殊的 key 属性\",\"以下是最基本用法的示例：\",\"<button @click=\\\"show = !show\\\">Toggle</button> <Transition> <p v-if=\\\"show\\\">hello</p> </Transition> \",\"/* 下面我们会解释这些 class 是做什么的 */ .v-enter-active, .v-leave-active { transition: opacity 0.5s ease; } .v-enter-from, .v-leave-to { opacity: 0; } \",\"<Transition> 仅支持单个元素或组件作为其插槽内容。如果内容是一个组件，这个组件必须仅有一个根元素。\",\"当一个 <Transition> 组件中的元素被插入或移除时，会发生下面这些事情：\",\"Vue 会自动检测目标元素是否应用了 CSS 过渡或动画。如果是，则一些 CSS 过渡 class 会在适当的时机被添加和移除。\",\"如果有作为监听器的 JavaScript 钩子，这些钩子函数会在适当时机被调用。\",\"如果没有探测到 CSS 过渡或动画、也没有提供 JavaScript 钩子，那么 DOM 的插入、删除操作将在浏览器的下一个动画帧后执行。\"]},\"156\":{\"h\":\"基于 CSS 的过渡效果\"},\"157\":{\"h\":\"CSS 过渡 class\",\"t\":[\"一共有 6 个应用于进入与离开过渡效果的 CSS class。\",\"过渡图示\",\"v-enter-from：进入动画的起始状态。在元素插入之前添加，在元素插入完成后的下一帧移除。\",\"v-enter-active：进入动画的生效状态。应用于整个进入动画阶段。在元素被插入之前添加，在过渡或动画完成之后移除。这个 class 可以被用来定义进入动画的持续时间、延迟与速度曲线类型。\",\"v-enter-to：进入动画的结束状态。在元素插入完成后的下一帧被添加 (也就是 v-enter-from 被移除的同时)，在过渡或动画完成之后移除。\",\"v-leave-from：离开动画的起始状态。在离开过渡效果被触发时立即添加，在一帧后被移除。\",\"v-leave-active：离开动画的生效状态。应用于整个离开动画阶段。在离开过渡效果被触发时立即添加，在过渡或动画完成之后移除。这个 class 可以被用来定义离开动画的持续时间、延迟与速度曲线类型。\",\"v-leave-to：离开动画的结束状态。在一个离开动画被触发后的下一帧被添加 (也就是 v-leave-from 被移除的同时)，在过渡或动画完成之后移除。\"]},\"158\":{\"h\":\"为过渡效果命名\",\"t\":[\"我们可以给 <Transition> 组件传一个 name prop 来声明一个过渡效果名：\",\"<Transition name=\\\"fade\\\"> ... </Transition> \",\"对于一个有名字的过渡效果，对它起作用的过渡 class 会以其名字而不是 v 作为前缀。比如，上方例子中被应用的 class 将会是 fade-enter-active 而不是 v-enter-active。这个“fade”过渡的 class 应该是这样：\",\".fade-enter-active, .fade-leave-active { transition: opacity 0.5s ease; } .fade-enter-from, .fade-leave-to { opacity: 0; } \"]},\"159\":{\"h\":\"CSS 的 transition\",\"t\":[\"<Transition> 一般都会搭配原生 CSS 过渡一起使用，正如你在上面的例子中所看到的那样。这个 transition CSS 属性是一个简写形式，使我们可以一次定义一个过渡的各个方面，包括需要执行动画的属性、持续时间和速度曲线。\",\"下面是一个更高级的例子，它使用了不同的持续时间和速度曲线来过渡多个属性：\",\"<Transition name=\\\"slide-fade\\\"> <p v-if=\\\"show\\\">hello</p> </Transition> \",\"/* 进入和离开动画可以使用不同 持续时间和速度曲线。 */ .slide-fade-enter-active { transition: all 0.3s ease-out; } .slide-fade-leave-active { transition: all 0.8s cubic-bezier(1, 0.5, 0.8, 1); } .slide-fade-enter-from, .slide-fade-leave-to { transform: translateX(20px); opacity: 0; } \"]},\"160\":{\"h\":\"CSS 的 animation\",\"t\":[\"帧动画, 可以指定在什么时间是什么状态!\",\"原生 CSS 动画和 CSS transition 的应用方式基本上是相同的，只有一点不同，那就是 *-enter-from 不是在元素插入后立即移除，而是在一个 animationend 事件触发时被移除。\",\"对于大多数的 CSS 动画，我们可以简单地在 *-enter-active 和 *-leave-active class 下声明它们。下面是一个示例：\",\"<Transition name=\\\"bounce\\\"> <p v-if=\\\"show\\\" style=\\\"text-align: center;\\\"> Hello here is some bouncy text! </p> </Transition> \",\".bounce-enter-active { animation: bounce-in 0.5s; } .bounce-leave-active { animation: bounce-in 0.5s reverse; } @keyframes bounce-in { 0% { transform: scale(0); } 50% { transform: scale(1.25); } 100% { transform: scale(1); } } \"]},\"161\":{\"h\":\"自定义过渡 class\",\"t\":[\"你也可以向 <Transition> 传递以下的 props 来指定自定义的过渡 class：\",\"enter-from-class\",\"enter-active-class\",\"enter-to-class\",\"leave-from-class\",\"leave-active-class\",\"leave-to-class\",\"他们的优先级高于普通的类名，这对于 Vue 的过渡系统和其他第三方 CSS 动画库，如 Animate.css.\",\"你传入的这些 class 会覆盖相应阶段的默认 class 名。这个功能在你想要在 Vue 的动画机制下集成其他的第三方 CSS 动画库时非常有用，比如 Animate.css：\",\"<script> export default { data() { return { show: true } } } </script> <template> <button @click=\\\"show = !show\\\">Toggle</button> <Transition name=\\\"custom-classes\\\" enter-active-class=\\\"animate__animated animate__tada\\\" leave-active-class=\\\"animate__animated animate__bounceOutRight\\\" > <p v-if=\\\"show\\\">hello</p> </Transition> </template> <style> @import \\\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css\\\"; </style> \"]},\"162\":{\"h\":\"同时设置过渡和动画\",\"t\":[\"Vue为了知道过渡的完成，内部是在监听 transitionend 或 animationend，到底使用哪一个取决于元素应用的 CSS规则： \",\"如果我们只是使用了其中的一个，那么Vue能自动识别类型并设置监听；\",\"但是如果我们同时使用了过渡和动画呢？ \",\"并且在这个情况下可能某一个动画执行结束时，另外一个动画还没有结束；\",\"在这种情况下，我们可以设置 type 属性为 animation 或者 transition 来明确的告知Vue监听的类型；\",\"<Transition type=\\\"animation\\\">...</Transition> \"]},\"163\":{\"h\":\"深层级过渡与显式过渡时长\",\"t\":[\"尽管过渡 class 仅能应用在 <Transition> 的直接子元素上，我们还是可以使用深层级的 CSS 选择器，在深层级的元素上触发过渡效果。\",\"<Transition name=\\\"nested\\\"> <div v-if=\\\"show\\\" class=\\\"outer\\\"> <div class=\\\"inner\\\"> Hello </div> </div> </Transition> \",\"/* 应用于嵌套元素的规则 */ .nested-enter-active .inner, .nested-leave-active .inner { transition: all 0.3s ease-in-out; } .nested-enter-from .inner, .nested-leave-to .inner { transform: translateX(30px); opacity: 0; } /* ... 省略了其他必要的 CSS */ \",\"我们甚至可以在深层元素上添加一个过渡延迟，从而创建一个带渐进延迟的动画序列：\",\"/* 延迟嵌套元素的进入以获得交错效果 */ .nested-enter-active .inner { transition-delay: 0.25s; } \",\"然而，这会带来一个小问题。默认情况下，<Transition> 组件会通过监听过渡根元素上的第一个transitionend 或者 animationend 事件来尝试自动判断过渡何时结束。而在嵌套的过渡中，期望的行为应该是等待所有内部元素的过渡完成。\",\"在这种情况下，你可以通过向 <Transition> 组件传入 duration prop 来显式指定过渡的持续时间 (以毫秒为单位)。总持续时间应该匹配延迟加上内部元素的过渡持续时间：\",\"<Transition :duration=\\\"550\\\">...</Transition> \",\"如果有必要的话，你也可以用对象的形式传入，分开指定进入和离开所需的时间：\",\"<Transition :duration=\\\"{ enter: 500, leave: 800 }\\\">...</Transition> \"]},\"164\":{\"h\":\"过渡模式\",\"t\":[\"在之前的例子中，进入和离开的元素都是在同时开始动画的，因此我们不得不将它们设为 position: absolute 以避免二者同时存在时出现的布局问题。\",\"然而，很多情况下这可能并不符合需求。我们可能想要先执行离开动画，然后在其完成之后再执行元素的进入动画。手动编排这样的动画是非常复杂的，好在我们可以通过向 <Transition> 传入一个 mode prop 来实现这个行为：\",\"<Transition mode=\\\"out-in\\\"> ... </Transition> \",\"<Transition> 也支持 mode=\\\"in-out\\\"，虽然这并不常用。\",\"<Transition> 也可以作用于动态组件之间的切换：\",\"<Transition name=\\\"fade\\\" mode=\\\"out-in\\\"> <component :is=\\\"activeComponent\\\"></component> </Transition> \"]},\"165\":{\"h\":\"出现时过渡\",\"t\":[\"如果你想在某个节点初次渲染时应用一个过渡效果，你可以添加 appear prop：\",\"<Transition appear> ... </Transition> \"]},\"166\":{\"h\":\"元素间过渡\",\"t\":[\"除了通过 v-if / v-show 切换一个元素，我们也可以通过 v-if / v-else / v-else-if 在几个组件间进行切换，只要确保任一时刻只会有一个元素被渲染即可：\",\"<Transition> <button v-if=\\\"docState === 'saved'\\\">Edit</button> <button v-else-if=\\\"docState === 'edited'\\\">Save</button> <button v-else-if=\\\"docState === 'editing'\\\">Cancel</button> </Transition> \"]},\"167\":{\"h\":\"示例\",\"t\":[\"<template> <div class=\\\"app\\\"> <div><button @click=\\\"isShow = !isShow\\\">显示/隐藏</button></div> <transition name=\\\"why\\\" mode=\\\"out-in\\\" appear> <component :is=\\\"isShow ? 'home': 'about'\\\"></component> </transition> </div> </template> <script> import Home from './pages/Home.vue'; import About from './pages/About.vue'; export default { components: { Home, About }, data() { return { isShow: true } } } </script> <style scoped> .app { width: 200px; margin: 0 auto; } .title { display: inline-block; } .why-enter-from, .why-leave-to { opacity: 0; } .why-enter-active, .why-leave-active { transition: opacity 1s ease; } .why-enter-active { animation: bounce 1s ease; } .why-leave-active { animation: bounce 1s ease reverse; } @keyframes bounce { 0% { transform: scale(0) } 50% { transform: scale(1.2); } 100% { transform: scale(1); } } </style> \"]},\"168\":{\"h\":\"JavaScript 钩子\",\"t\":[\"你可以通过监听 <Transition> 组件事件的方式在过渡过程中挂上钩子函数：\",\"<Transition @before-enter=\\\"onBeforeEnter\\\" @enter=\\\"onEnter\\\" @after-enter=\\\"onAfterEnter\\\" @enter-cancelled=\\\"onEnterCancelled\\\" @before-leave=\\\"onBeforeLeave\\\" @leave=\\\"onLeave\\\" @after-leave=\\\"onAfterLeave\\\" @leave-cancelled=\\\"onLeaveCancelled\\\" > <!-- ... --> </Transition> \",\"export default { // ... methods: { // 在元素被插入到 DOM 之前被调用 // 用这个来设置元素的 \\\"enter-from\\\" 状态 onBeforeEnter(el) {}, // 在元素被插入到 DOM 之后的下一帧被调用 // 用这个来开始进入动画 onEnter(el, done) { // 调用回调函数 done 表示过渡结束 // 如果与 CSS 结合使用，则这个回调是可选参数 done() }, // 当进入过渡完成时调用。 onAfterEnter(el) {}, onEnterCancelled(el) {}, // 在 leave 钩子之前调用 // 大多数时候，你应该只会用到 leave 钩子 onBeforeLeave(el) {}, // 在离开过渡开始时调用 // 用这个来开始离开动画 onLeave(el, done) { // 调用回调函数 done 表示过渡结束 // 如果与 CSS 结合使用，则这个回调是可选参数 done() }, // 在离开过渡完成、 // 且元素已从 DOM 中移除时调用 onAfterLeave(el) {}, // 仅在 v-show 过渡中可用 onLeaveCancelled(el) {} } } \",\"<template> <div class=\\\"app\\\"> <div><button @click=\\\"isShow = !isShow\\\">显示/隐藏</button></div> <transition @before-enter=\\\"beforeEnter\\\" @enter=\\\"enter\\\" @after-enter=\\\"afterEnter\\\" @before-leave=\\\"beforeLeave\\\" @leave=\\\"leave\\\" @afterLeave=\\\"afterLeave\\\"> <h2 class=\\\"title\\\" v-if=\\\"isShow\\\">Hello World</h2> </transition> </div> </template> <script> export default { data() { return { isShow: true } }, methods: { beforeEnter() { console.log(\\\"beforeEnter\\\"); }, enter() { console.log(\\\"enter\\\"); }, afterEnter() { console.log(\\\"afterEnter\\\"); }, beforeLeave() { console.log(\\\"beforeLeave\\\"); }, leave() { console.log(\\\"leave\\\"); }, afterLeave() { console.log(\\\"afterLeave\\\"); } } } </script> <style scoped> .title { display: inline-block; } </style> \",\"这些钩子可以与 CSS 过渡或动画结合使用，也可以单独使用。\",\"在使用仅由 JavaScript 执行的动画时，最好是添加一个 :css=\\\"false\\\" prop。这显式地向 Vue 表明可以跳过对 CSS 过渡的自动探测。除了性能稍好一些之外，还可以防止 CSS 规则意外地干扰过渡效果。\",\"<Transition ... :css=\\\"false\\\" > ... </Transition> \",\"在有了 :css=\\\"false\\\" 后，我们就自己全权负责控制什么时候过渡结束了。这种情况下对于 @enter 和 @leave 钩子来说，回调函数 done 就是必须的。否则，钩子将被同步调用，过渡将立即完成。\",\"这里是使用 GreenSock 库执行动画的一个示例，你也可以使用任何你想要的库，比如 Anime.js 或者 Motion One。\"]},\"169\":{\"h\":\"第三方库的使用\"},\"170\":{\"h\":\"animate.css\",\"t\":[\"https://animate.style/\",\"如果我们手动一个个来编写这些动画，那么效率是比较低的，所以在开发中我们可能会引用一些第三方库的动画库， 比如animate.css。\",\"Animate.css是一个已经准备好的、跨平台的动画库为我们的web项目，对于强调、主页、滑动、注意力引导 非常有用；\",\"如何使用?\",\"安装animate.css：\",\"npm install animate.css \",\"在main.js中导入animate.css：\",\"import { createApp } from 'vue' import App from './test/App.vue' import 'animate.css' createApp(App).mount('#app') \",\"接下来在使用的时候我们有两种用法：\",\"用法一：直接使用animate库中定义的 keyframes 动画；\",\"用法二：直接使用animate库提供给我们的类；\",\"使用参考: 自定义过渡 class\",\"<transition enter-active-class=\\\"animate__animated animate__backInDown\\\" leave-active-class=\\\"animate__animated animate__bounceOutDown\\\"> <h2 class=\\\"title\\\" v-if=\\\"isShow\\\">Hello World</h2> </transition> \"]},\"171\":{\"h\":\"gsap\",\"t\":[\"https://gsap.com/docs/v3/Installation/\",\"https://gsap.framer.wiki/stated -- 中文文档\",\"某些情况下我们希望通过JavaScript来实现一些动画的效果，这个时候我们可以选择使用gsap库来完成。\",\"什么是gsap呢？ \",\"GSAP是The GreenSock Animation\",\"latform（GreenSock动画平台）的缩写；\",\"它可以通过JavaScript为CSS属性、SVG、Canvas等设置动画，并且是浏览器兼容的；\",\"如何使用\",\"安装\",\"npm install gsap \",\"调用 api\",\"<template> <div class=\\\"app\\\"> <div><button @click=\\\"isShow = !isShow\\\">显示/隐藏</button></div> <transition @enter=\\\"enter\\\" @leave=\\\"leave\\\" :css=\\\"false\\\"> <h2 class=\\\"title\\\" v-if=\\\"isShow\\\">Hello World</h2> </transition> </div> </template> <script> import gsap from 'gsap'; export default { data() { return { isShow: true, } }, methods: { enter(el, done) { console.log(\\\"enter\\\"); gsap.from(el, { scale: 0, x: 200, onComplete: done }) }, leave(el, done) { console.log(\\\"leave\\\"); gsap.to(el, { scale: 0, x: 200, onComplete: done }) } } } </script> <style scoped> .title { display: inline-block; } </style> \",\"enter函数接收两个参数：el和done。el是正在进入的元素，done是一个在进入过渡完成时应该被调用的函数。\",\"onComplete: done部分在动画完成时调用done函数。这是必要的，以便让Vue知道过渡已经完成。如果不调用done，Vue可能无法正确地确定过渡的结束，这可能会导致意外的行为。\",\"在使用仅由 JavaScript 执行的动画时，最好是添加一个 :css=\\\"false\\\" prop。这显式地向 Vue 表明可以跳过对 CSS 过渡的自动探测。除了性能稍好一些之外，还可以防止 CSS 规则意外地干扰过渡效果。\"]},\"172\":{\"h\":\"gsap 数字递增效果\",\"t\":[\"<template> <div class=\\\"app\\\"> <input type=\\\"number\\\" step=\\\"100\\\" v-model=\\\"counter\\\"> <h2>当前计数: {{showNumber.toFixed(0)}}</h2> </div> </template> <script> import { gsap } from 'gsap'; export default { data() { return { counter: 0, showNumber: 0 }; }, watch: { counter(newValue) { gsap.to(this, { duration: 1, showNumber: newValue }); } } }; </script> \"]},\"173\":{\"h\":\"认识列表的过渡\",\"t\":[\"目前为止，过渡动画我们只要是针对单个元素或者组件的： \",\"要么是单个节点；\",\"要么是同一时间渲染多个节点中的一个；\",\"那么如果希望渲染的是一个列表，并且该列表中添加删除数据也希望有动画执行呢？ \",\"这个时候我们要使用 组件来完成；\",\"使用 有如下的特点： \",\"默认情况下，它不会渲染一个元素的包裹器，但是你可以指定一个元素并以 tag attribute 进行渲染；\",\"过渡模式不可用，因为我们不再相互切换特有的元素；\",\"内部元素总是需要提供唯一的 key attribute 值；\",\"CSS 过渡的类将会应用在内部的元素中，而不是这个组/容器本身；\"]},\"174\":{\"h\":\"基本使用\",\"t\":[\"<template> <div> <button @click=\\\"addNum\\\">添加数字</button> <button @click=\\\"removeNum\\\">删除数字</button> <button @click=\\\"shuffleNum\\\">数字洗牌</button> <transition-group tag=\\\"p\\\" name=\\\"why\\\"> <span v-for=\\\"item in numbers\\\" :key=\\\"item\\\" class=\\\"item\\\"> {{item}} </span> </transition-group> </div> </template> <script> import _ from 'lodash'; export default { data() { return { numbers: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], numCounter: 10 } }, methods: { addNum() { // this.numbers.push(this.numCounter++) this.numbers.splice(this.randomIndex(), 0, this.numCounter++) }, removeNum() { this.numbers.splice(this.randomIndex(), 1) }, shuffleNum() { this.numbers = _.shuffle(this.numbers); }, randomIndex() { return Math.floor(Math.random() * this.numbers.length) } }, } </script> <style scoped> .item { margin-right: 10px; display: inline-block; /* 设置了元素为内联块级元素。 */ } .why-enter-from, .why-leave-to { opacity: 0; transform: translateY(30px); } .why-enter-active, .why-leave-active { transition: all 1s ease; } .why-leave-active { position: absolute; } .why-move { transition: transform 1s ease; } </style> \",\"methods对象定义了四个方法：\",\"addNum方法在numbers数组的随机位置插入一个新的数字，然后numCounter加1。\",\"removeNum方法从numbers数组的随机位置删除一个数字。\",\"shuffleNum方法使用lodash的shuffle函数打乱numbers数组的顺序。\",\"randomIndex方法返回一个numbers数组的随机索引\"]},\"175\":{\"h\":\"列表过渡的移动动画\",\"t\":[\"在上面的案例中虽然新增的或者删除的节点是有动画的，但是对于哪些其他需要移动的节点是没有动画的：\",\"我们可以通过使用一个新增的 v-move 的class来完成动画；\",\"它会在元素改变位置的过程中应用；\",\"像之前的名字一样，我们可以通过name来自定义前缀;\",\"<TransitionGroup> 支持通过 CSS transform 控制移动效果。当一个子节点在屏幕上的位置在更新之后发生变化时，它会被添加一个使其位移的 CSS class (基于 name attribute 推导，或使用 move-class prop 显式配置)。如果使其位移的 class 被添加时 CSS 的 transform 属性是“可过渡的”，那么该元素会基于 FLIP 技巧平滑地到达动画终点。\",\"https://cn.vuejs.org/api/built-in-components.html#transitiongroup\",\".why-move { transition: transform 1s ease; } \"]},\"176\":{\"h\":\"演练 => 列表的交替动画\",\"t\":[\"<template> <div> <input v-model=\\\"keyword\\\"> <transition-group tag=\\\"ul\\\" name=\\\"why\\\" :css=\\\"false\\\" @before-enter=\\\"beforeEnter\\\" @enter=\\\"enter\\\" @leave=\\\"leave\\\"> <li v-for=\\\"(item, index) in showNames\\\" :key=\\\"item\\\" :data-index=\\\"index\\\"> {{item}} </li> </transition-group> </div> </template> <script> import gsap from 'gsap'; export default { data() { return { names: [\\\"abc\\\", \\\"cba\\\", \\\"nba\\\", \\\"why\\\", \\\"lilei\\\", \\\"hmm\\\", \\\"kobe\\\", \\\"james\\\"], keyword: \\\"\\\" } }, computed: { showNames() { return this.names.filter(item => item.indexOf(this.keyword) !== -1) } }, methods: { beforeEnter(el) { el.style.opacity = 0; el.style.height = 0; }, enter(el, done) { gsap.to(el, { opacity: 1, height: \\\"1.5em\\\", delay: el.dataset.index * 0.5, onComplete: done }) }, leave(el, done) { gsap.to(el, { opacity: 0, height: 0, delay: el.dataset.index * 0.5, onComplete: done }) } } } </script> <style scoped> /* .why-enter-from, .why-leave-to { opacity: 0; } .why-enter-active, .why-leave-active { transition: opacity 1s ease; } */ </style> \"]},\"177\":{\"h\":\"Vite\",\"t\":[\"https://cn.vitejs.dev/guide/\"]},\"178\":{\"h\":\"什么是 Vite\",\"t\":[\"Vite（法语意为 \\\"快速的\\\"，发音 /vit/，发音同 \\\"veet\\\"）是一种新型前端构建工具，能够显著提升前端开发体验。它主要由两部分组成： \",\"一个开发服务器(dev server)，它基于 原生 ES 模块 提供了 丰富的内建功能，如速度快到惊人的 模块热更新（HMR）。\",\"一套构建指令，它使用 Rollup 打包你的代码，并且它是预配置的，可输出用于生产环境的高度优化过的静态资源。\",\"Vite 是一种具有明确建议的工具，具备合理的默认设置。您可以在 功能指南 中了解 Vite 的各种可能性。通过 插件，Vite 支持与其他框架或工具的集成。如有需要，您可以通过 配置部分 自定义适应你的项目。\",\"Vite 还提供了强大的扩展性，可通过其 插件 API 和 JavaScript API 进行扩展，并提供完整的类型支持。\",\"Vite作为一个基于浏览器原生ESM的构建工具，它省略了开发环境的打包过程，利用浏览器去解析imports，在服务端按需编译返回。同时，在开发环境拥有速度快到惊人的模块热更新，且热更新的速度不会随着模块增多而变慢。因此，使用Vite进行开发，至少会比Webpack快10倍左右。\",\"你可以在 为什么选 Vite 部分深入了解该项目的设计理念。\"]},\"179\":{\"h\":\"Vite的主要特性\",\"t\":[\"Instant Server Start —— 即时服务启动\",\"Lightning Fast HMR —— 闪电般快速的热更新\",\"Rich Features —— 丰富的功能\",\"Optimized Build —— 经过优化的构建\",\"Universal Plugin Interface —— 通用的Plugin接口\",\"Fully Typed APIs —— 类型齐全的API\"]},\"180\":{\"h\":\"主流构建工具对比\",\"t\":[\"Browserify\",\"预编译模块化方案（文件打包工具）\",\"Browserify基于流方式干净灵活\",\"遵循commonJS规范打包JS\",\"可引入插件打包CSS等其他资源（非原生能力）\",\"Gulp\",\"基于流的自动化构建工具（工程化）\",\"配置复杂度高，偏向编程式，需要定义task处理构建\",\"支持监听读写文件\",\"可搭配Browserify等模块化工具来使用\",\"Parcel\",\"极速打包（工程化：极速0配置）\",\"零配置，但造成了配置不灵活，内置常见场景的构建方案及其依赖，无需再次安装（babel等）\",\"以html入口，自动检测和打包依赖\",\"不支持SourceMap\",\"无法Tree-shaking\",\"Webpack\",\"预编译模块化方案（工程化：大而全）\",\"通过配置文件达到一站式配置\",\"loader进行资源转换，功能全面（css+js+icon+front）\",\"插件丰富，灵活扩展\",\"社群庞大\",\"大型项目构建慢\",\"Rollup\",\"基于ES6打包（模块打包工具）\",\"Tree-shaking\",\"打包文件小且干净，执行效率更高\",\"更专注于JS打包\",\"Snowpack\",\"基于ESM运行时编译（工程化：ESM运行时）\",\"无需递归循环依赖组装依赖树\",\"默认输出单独的构建模块（未打包），可选择不同打包器（webpack、rollup等）\",\"Vite\",\"基于ESM运行时打包\",\"借鉴了Snowpack\",\"生产环境使用Rollup，集成度更高，相比Snowpack支持多页面、库模式、动态导入自动polyfill等\"]},\"181\":{\"h\":\"为什么使用 Vite\"},\"182\":{\"h\":\"开发环境⚡️速度的提升\",\"t\":[\"使用JS开发的工具通常需要很长的时间才能启动开发服务器，且这个启动时间与代码量、代码复杂度正相关。即使使用HMR，文件修改后的效果也要几秒钟才能在浏览器中反应出来，代表如Webpack。那么Vite是如何解决如Webpack这样的构建工具一样，在复杂、多模块项目开发中启动慢、HMR慢的问题呢？\",\"我们详细对比了开发环境中的Vite和Webpack，发现主要有如下不同：\",\"Webpack\",\"Vite\",\"先打包生成bundle，再启动开发服务器\",\"先启动开发服务器，利用新一代浏览器的ESM能力，无需打包，直接请求所需模块并实时编译\",\"HMR时需要把改动模块及相关依赖全部编译\",\"HMR时只需让浏览器重新请求该模块，同时利用浏览器的缓存（源码模块协商缓存，依赖模块强缓存）来优化请求\",\"内存高效利用\",\"-\",\"因此，针对开发环境中的启动慢问题，Vite开发环境冷启动无需打包，无需分析模块之间的依赖，同时也无需在启动开发服务器前进行编译，启动时还会使用 esbuild 来进行预构建。而Webpack 启动后会做一堆事情，经历一条很长的编译打包链条，从入口开始需要逐步经历语法解析、依赖收集、代码转译、打包合并、代码优化，最终将高版本的、离散的源码编译打包成低版本、高兼容性的产物代码;\",\"针对HMR慢，即使只有很小的改动，Webpack依然需要构建完整的模块依赖图，并根据依赖图来进行转换。而Vite利用了ESM和浏览器缓存技术，更新速度与项目复杂度无关。可以看到，如Snowpack、Vite这类面相非打包的构建工具，在开发环境启动时只需要启动两个Server，一个用于页面加载，一个用于HMR的Websocket。当浏览器发出原生的ESM请求，Server收到请求只需要编译当前文件后返回给浏览器，不需要管理依赖。\",\"image-20231122171817220\",\"image-20231122171839049\"]},\"183\":{\"h\":\"使用简单，开箱即用\",\"t\":[\"相比Webpack需要对entry、loader、plugin等进行诸多配置，Vite的使用可谓是相当简单了。只需执行初始化命令，就可以得到一个预设好的开发环境，开箱即获得一堆功能，包括：CSS预处理、html预处理、异步加载、分包、压缩、HMR等。他使用复杂度介于Parcel和Webpack的中间，只是暴露了极少数的配置项和plugin接口，既不会像Parcel一样配置不灵活，又不会像Webpack一样需要了解庞大的loader、plugin生态，灵活适中、复杂度适中。适合前端新手。\"]},\"184\":{\"h\":\"Vite 的安装与使用\"},\"185\":{\"h\":\"安装\",\"t\":[\"Vite 需要 Node.js 版本 18+，20+。然而，有些模板需要依赖更高的 Node 版本才能正常运行，当你的包管理器发出警告时，请注意升级你的 Node 版本。\",\"首先，我们安装一下vite工具：\",\"npm install vite –g # 全局安装 npm install vite –D # 局部安装 12 \",\"通过vite来启动项目：\",\"npx vite \"]},\"186\":{\"h\":\"Vite构建Vue3项目\",\"t\":[\"使用 NPM:\",\"npm create vite@latest \",\"使用 Yarn:\",\"yarn create vite \",\"Need to install the following packages: create-vite@4.2.0 Ok to proceed? (y) y ✔ Project name: … vite-vue3 ? Select a framework: › - Use arrow-keys. Return to submit. Vanilla （如果你要使用Vue2可以用这个方式，然后再自己配置一下vite-plugin-vue2插件） ❯ Vue （默认是Vue3项目） React （React项目） Preact （比React项目轻量级的Preact项目） Lit Svelte Others \",\"因为我们要构建Vue3的项目，所以这里我们选择Vue就行了，然后下一步选择开发语言\",\"✔ Project name: … vite-vue3 ✔ Select a framework: › Vue ? Select a variant: › - Use arrow-keys. Return to submit. ❯ JavaScript TypeScript Customize with create-vue ↗ Nuxt ↗ \",\"cd 进项目路径, npm install, 然后 npm run dev 运行即可\"]},\"187\":{\"h\":\"Vite 支持\"},\"188\":{\"h\":\"Css 支持\",\"t\":[\"vite可以直接支持css的处理\",\"直接导入css即可；\",\"vite可以直接支持css预处理器，比如less\",\"直接导入less；\",\"之后安装less编译器；\",\" npm install less -D \",\"vite直接支持postcss的转换：\",\"只需要安装postcss，并且配置 postcss.config.js 的配置文件即可；\",\"npm install postcss postcss-preset-env -D // 在项目中创建 postcss.config.ts const postcssPresetEnv = require('postcss-preset-env'); module.exports = { // 安装了一个预设 预设就是相当于最佳实践，已经帮你安装好了很多东西 plugin: [postcssPresetEnv(/* pluginOptions */)] } \"]},\"189\":{\"h\":\"全局导入\",\"t\":[\"// vite.config.js import { defineConfig } from 'vite'; export default defineConfig({ // 其他配置项... css: { preprocessorOptions: { scss: { additionalData: ` @import \\\"@/style/globalVar.scss\\\"; `, }, }, }, }); \"]},\"190\":{\"h\":\"别名\",\"t\":[\"// vite.config.js import { defineConfig } from 'vite'; import vue from '@vitejs/plugin-vue'; export default defineConfig({ // 其他配置项... resolve: { alias: { '@': '/src' } }, plugins: [vue()] }); \"]},\"191\":{\"h\":\"Ts 支持\",\"t\":[\"vite对TypeScript是原生支持的，它会直接使用ESBuild来完成编译： \",\"只需要直接导入即可；\",\"如果我们查看浏览器中的请求，会发现请求的依然是ts的代码： \",\"这是因为vite中的服务器Connect会对我们的请求进行转发；\",\"获取ts编译后的代码，给浏览器返回，浏览器可以直接进行解析；\"]},\"192\":{\"h\":\"vue支持\",\"t\":[\"vite对vue提供第一优先级支持：\",\"Vue 3 单文件组件支持：@vitejs/plugin-vue\",\"Vue 3 JSX 支持：@vitejs/plugin-vue-jsx\",\"Vue 2 支持：underfin/vite-plugin-vue2\",\"安装支持vue的插件：\",\" npm install @vitejs/plugin-vue -D \",\"在vite.config.js中配置插件\",\"const vue = require('@vitejs/plugin-vue') module.exports = { plugins: [ vue() ] } \"]},\"193\":{\"h\":\"Vite 原理\"},\"194\":{\"h\":\"ESM&esbuild\"},\"195\":{\"h\":\"ESM\",\"t\":[\"在ES6没有出现之前，随着js代码日益膨胀，往往会对资源模块化来提效，这也就出现了多个模块化方案。如CommonJS常用于服务端，AMD、CMD规范常用在客户端。ES6出现后，紧接着出现了ESM。ESM是浏览器支持的一种模块化方案，允许在浏览器实现模块化。\",\"CommonJS：模块同步，如Browserify会对代码进行解析，整理出代码中的所有模块依赖关系，然后把nodejs的模块编译成浏览器可用的模块，相关的模块代码都打包在一起，形成一个完整的JS文件，这个文件中不会存在 require 这类的模块化语法，变成可以在浏览器中运行的普通JS，运行时加载\",\"AMD：模块异步，依赖前置，是requireJS在推广过程中对模块定义的规范化产出，加载完依赖后立即执行依赖模块，依赖加载成功后执行回调\",\"CMD：模块异步，延迟执行，是seaJS在推广过程中对模块定义的规范化产出，就近依赖，先加载所有依赖模块，运行时才执行require内容，按顺序执行\",\"与CommonJS、AMD不同，ESM的对外接口只是一种静态定义，为编译时加载，遇到模块加载命令import，就会生成一个只读引用。等脚本真正执行时，再根据这个只读引用，到被加载的那个模块内取值。由于ESM编译时就能确定模块的依赖关系，因此能够只包含要运行的代码，可以显著减少文件体积，降低浏览器压力。\",\"由于ESM是一个比较新的模块化方案，目前其浏览器能力支持如下：\",\"img\",\"可以看到，除了IE、Opera等，新一代浏览器中绝大部分都已支持。\",\"接下来以Vite创建的模板为例，看一下ESM的解析过程：\",\"<template> <img alt=\\\"Vue logo\\\" src=\\\"./assets/logo.png\\\" /> <HelloWorld msg=\\\"Hello Vue 3.0 + Vite\\\" /> </template> <script> import HelloWorld from './components/HelloWorld.vue' export default { name: 'App', components: { HelloWorld } } </script> \",\"当浏览器解析 import HelloWorld from './components/HelloWorld.vue' 时，会向当前域名发送一个请求获取对应的资源（ESM支持解析相对路径）\",\"浏览器下载对应的文件，然后解析成模块记录。接下来会进行实例化，为模块分配内存，然后按照导入、导出语句建立模块和内存的映射关系。最后，运行上述代码，把内存空间填充为真实的值。\"]},\"196\":{\"h\":\"esbuild\",\"t\":[\"ESBuild的特点： \",\"超快的构建速度，并且不需要缓存；\",\"支持ES6和CommonJS的模块化；\",\"支持ES6的Tree Shaking；\",\"支持Go、JavaScript的API；\",\"支持TypeScript、JSX等语法编译；\",\"支持SourceMap；\",\"支持代码压缩；\",\"支持扩展其他插件；\",\"ESBuild的构建速度和其他构建工具速度对比：\",\"在这里插入图片描述\",\"ESBuild为什么这么快呢？ \",\"使用Go语言编写的，可以直接转换成机器代码，而无需经过字节码；\",\"ESBuild可以充分利用CPU的多内核，尽可能让它们饱和运行；\",\"ESBuild的所有内容都是从零开始编写的，而不是使用第三方，所以从一开始就可以考虑各种性能问题；\"]},\"197\":{\"h\":\"依赖处理\",\"t\":[\"Vite 通过在一开始将应用中的模块区分为 依赖 和 源码 两类，改进了开发服务器启动时间。依赖 大多为在开发时不会变动的纯 JavaScript。一些较大的依赖（例如有上百个模块的组件库）处理的代价也很高。\",\"依赖解析\",\"以 Vite 官方 demo 为例，当我们请求 localhost:3000 时，Vite 默认返回 localhost:3000/index.html 的代码。而后发送请求 src/main.js。\",\"main.js 代码如下：\",\"import { createApp } from 'vue' import App from './App.vue' import './index.css' createApp(App).mount('#app') \",\"img\",\"可以观察到浏览器请求 vue.js 时， 请求路径是 @modules/vue.js。在 Vite 中约定若 path 的请求路径满足 /^/@modules// 格式时，被认为是一个 node_modules 模块。\",\"平时开发中，webpack & rollup(rollup有对应插件) 等打包工具会帮我们找到模块的路径，但浏览器只能通过相对路径去寻找，而如果是直接使用模块名比如：import vue from 'vue'，浏览器就会报错，这个时候就需要一个三方包进行处理。Vite 对ESM形式的 js 文件模块使用了 ES Module Lexer 处理。Lexer 会找到代码中以 import 语法导入的模块并以数组形式返回。Vite 通过该数组的值获取判断是否为一个 node_modules 模块。若是则进行对应改写成 @modules/:id 的写法。\",\"重写完路径后，浏览器会发送 path 为 /@modules/:id 的对应请求，接下来会被 Vite 客户端做一层拦截来解析模块的真实位置。\",\"首先正则匹配请求路径，如果是/@modules开头就进行后续处理，否则就跳过。若是，会设置响应类型为js，读取真实模块路径内容，返回给客户端。\",\"客户端注入本质上是创建一个script标签（type='module'），然后将其插入到head中，这样客户端在解析html是就可以执行代码了\",\"export const moduleRE = /^\\\\/@modules\\\\// // plugin for resolving /@modules/:id requests. app.use(async (ctx, next) => { if (!moduleRE.test(ctx.path)) { return next() } // path maybe contain encode chars const id = decodeURIComponent(ctx.path.replace(moduleRE, '')) ctx.type = 'js' const serve = async (id: string, file: string, type: string) => { // 在代码中做一个缓存，下次访问相同路径直接从 map 中获取 304 返回 moduleIdToFileMap.set(id, file) moduleFileToIdMap.set(file, ctx.path) debug(`(${type}) ${id} -> ${getDebugPath(root, file)}`) await ctx.read(file) return next() } } // 兼容 alias 情况 const importerFilePath = importer ? resolver.requestToFile(importer) : root const nodeModulePath = resolveNodeModuleFile(importerFilePath, id) // 如果是个 node_modules 的模块，读取文件。 if (nodeModulePath) { return serve(id, nodeModulePath, 'node_modules') } }) \",\"依赖预构建\",\"依赖预构建主要有两个目的：\",\"CommonJS 和 UMD 兼容性: 开发阶段中，Vite 的开发服务器将所有代码视为原生 ES 模块。因此，Vite 必须先将作为 CommonJS 或 UMD 发布的依赖项转换为 ESM。\",\"性能： Vite 将有许多内部模块的 ESM 依赖关系转换为单个模块，以提高后续页面加载性能。\",\"Vite使用esbuild在初次启动开发服务器前把检测到的依赖进行预构建。Vite 基于ESM，在使用某些模块时，由于模块依赖了另一些模块，依赖的模块又基于另一些模块。会出现页面初始化时一次发送数百个模块请求的情况。\",\"以 lodash-es 为例，代码中以 import { debounce } from 'lodash' 导入一个命名函数时候，并不是只下载包含这个函数的文件，而是有一个依赖图。\",\"img\",\"Vite 为了优化请求数量和速度，利用esbuild在启动的时候预先把debounce用到的所有内部模块全部打包成一个bundle，这样就浏览器在请求debounce时，便只需要发送一次请求了\"]},\"198\":{\"h\":\"静态资源加载\",\"t\":[\"当请求的路径符合 imageRE, mediaRE, fontsRE 或 JSON 格式，会被认为是一个静态资源。静态资源将处理成ESM模块返回。\",\"// src/node/utils/pathUtils.ts const imageRE = /\\\\.(png|jpe?g|gif|svg|ico|webp)(\\\\?.*)?$/ const mediaRE = /\\\\.(mp4|webm|ogg|mp3|wav|flac|aac)(\\\\?.*)?$/ const fontsRE = /\\\\.(woff2?|eot|ttf|otf)(\\\\?.*)?$/i export const isStaticAsset = (file: string) => { return imageRE.test(file) || mediaRE.test(file) || fontsRE.test(file) } // src/node/server/serverPluginAssets.ts app.use(async (ctx, next) => { if (isStaticAsset(ctx.path) && isImportRequest(ctx)) { ctx.type = 'js' ctx.body = export default ${JSON.stringify(ctx.path)} // 输出是path return } return next() }) export const jsonPlugin: ServerPlugin = ({ app }) => { app.use(async (ctx, next) => { await next() // handle .json imports // note ctx.body could be null if upstream set status to 304 if (ctx.path.endsWith('.json') && isImportRequest(ctx) && ctx.body) { ctx.type = 'js' ctx.body = dataToEsm(JSON.parse((await readBody(ctx.body))!), { namedExports: true, preferConst: true }) } }) } \"]},\"199\":{\"h\":\"vue文件缓存\",\"t\":[\"当 Vite 遇到一个 .vue 后缀的文件时。由于 .vue 模板文件的特殊性，它被拆分成 template, css, script 模块三个模块进行分别处理。最后会对 script, template, css 发送多个请求获取\",\"img\"]},\"200\":{\"h\":\"js/ts处理\",\"t\":[\"Vite使用esbuild将ts转译到js，约是tsc速度的20～30倍，同时HMR更新反应到浏览器的时间会小于50ms。但是，由于esbuild转换ts到js对于类型操作仅仅是擦除，所以完全保证不了类型正确，因此需要额外校验类型，比如使用tsc --noEmit。\",\"将ts转换成js后，浏览器便可以利用ESM直接拿到js资源。\"]},\"201\":{\"h\":\"热更新原理\",\"t\":[\"Vite 的热加载原理，其实就是在客户端与服务端建立了一个 websocket 连接，当代码被修改时，服务端发送消息通知客户端去请求修改模块的代码，完成热更新。\",\"服务端：服务端做的就是监听代码文件的改变，在合适的时机向客户端发送 websocket 信息通知客户端去请求新的模块代码。\",\"客户端：Vite 中客户端的 websocket 相关代码在处理 html 中时被写入代码中。可以看到在处理 html 时，vite/client 的相关代码已经被插入。\",\"export const clientPublicPath = `/vite/client` const devInjectionCode = `\\\\n<script type=\\\"module\\\">import \\\"${clientPublicPath}\\\"</script>\\\\n` async function rewriteHtml(importer: string, html: string) { return injectScriptToHtml(html, devInjectionCode) } \",\"当request.path 路径是 /vite/client 时，请求获取已经提前写好的关于 websocket 的代码。因此在客户端中我们创建了一个 websocket 服务并与服务端建立了连接。\",\"Vite 会接受到来自客户端的消息。通过不同的消息触发一些事件。做到浏览器端的即时热模块更换（热更新）。包括 connect、vue-reload、vue-rerender 等事件，分别触发组件vue 的重新加载，render等。\",\"// Listen for messages socket.addEventListener('message', async ({ data }) => { const payload = JSON.parse(data) as HMRPayload | MultiUpdatePayload if (payload.type === 'multi') { payload.updates.forEach(handleMessage) } else { handleMessage(payload) } }) async function handleMessage(payload: HMRPayload) { const { path, changeSrcPath, timestamp } = payload as UpdatePayload console.log(path) switch (payload.type) { case 'connected': console.log(`[vite] connected.`) break case 'vue-reload': queueUpdate( import(`${path}?t=${timestamp}`) .catch((err) => warnFailedFetch(err, path)) .then((m) => () => { __VUE_HMR_RUNTIME__.reload(path, m.default) console.log(`[vite] ${path} reloaded.`) }) ) break case 'vue-rerender': const templatePath = `${path}?type=template` import(`${templatePath}&t=${timestamp}`).then((m) => { __VUE_HMR_RUNTIME__.rerender(path, m.render) console.log(`[vite] ${path} template updated.`) }) break case 'style-update': // check if this is referenced in html via <link> const el = document.querySelector(`link[href*='${path}']`) if (el) { el.setAttribute( 'href', `${path}${path.includes('?') ? '&' : '?'}t=${timestamp}` ) break } const importQuery = path.includes('?') ? '&import' : '?import' await import(`${path}${importQuery}&t=${timestamp}`) console.log(`[vite] ${path} updated.`) break case 'js-update': queueUpdate(updateModule(path, changeSrcPath, timestamp)) break case 'custom': const cbs = customUpdateMap.get(payload.id) if (cbs) { cbs.forEach((cb) => cb(payload.customData)) } break case 'full-reload': if (path.endsWith('.html')) { // if html file is edited, only reload the page if the browser is // currently on that page. const pagePath = location.pathname if ( pagePath === path || (pagePath.endsWith('/') && pagePath + 'index.html' === path) ) { location.reload() } return } else { location.reload() } } } \"]},\"202\":{\"h\":\"Webpack\"},\"203\":{\"h\":\"认识webpack\",\"t\":[\"事实上随着前端的快速发展，目前前端的开发已经变的越来越复杂了：\",\"比如开发过程中我们需要通过模块化的方式来开发；\",\"比如也会使用一些高级的特性来加快我们的开发效率或者安全性，比如通过ES6+、TypeScript开发脚本逻辑， 通过sass、less等方式来编写 css 样式代码；\",\"比如开发过程中，我们还希望实时的监听文件的变化来并且反映到浏览器上，提高开发的效率；\",\"比如开发完成后我们还需要将代码进行压缩、合并以及其他相关的优化；\",\"但是对于很多的前端开发者来说，并不需要思考这些问题，日常的开发中根本就没有面临这些问题：\",\"这是因为目前前端开发我们通常都会直接使用三大框架来开发：Vue、React、Angular；\",\"但是事实上，这三大框架的创建过程我们都是借助于脚手架（CLI）的；\",\"事实上Vue-CLI、create-react-app、Angular-CLI都是基于webpack来帮助我们支持模块化、less、 TypeScript、打包优化等的；\"]},\"204\":{\"h\":\"Webpack到底是什么呢？\",\"t\":[\"https://webpack.docschina.org/\",\"本质上，webpack 是一个用于现代 JavaScript 应用程序的 静态模块打包工具。当 webpack 处理应用程序时，它会在内部从一个或多个入口点构建一个 依赖图(dependency graph)，然后将你项目中所需的每一个模块组合成一个或多个 bundles，它们均为静态资源，用于展示你的内容。\",\"打包bundler：webpack可以将帮助我们进行打包，所以它是一个打包工具\",\"模块化module：webpack默认支持各种模块化开发，ES Module、CommonJS、AMD等；\",\"image-20231102102926580\"]},\"205\":{\"h\":\"Vue项目加载的文件有哪些呢？\",\"t\":[\"JavaScript的打包： \",\"将ES6转换成ES5的语法；\",\"TypeScript的处理，将其转换成JavaScript；\",\"Css的处理： \",\"CSS文件模块的加载、提取；\",\"Less、Sass等预处理器的处理；\",\"资源文件img、font： \",\"图片img文件的加载；\",\"字体font文件的加载；\",\"HTML资源的处理： \",\"打包HTML资源文件；\",\"处理vue项目的SFC文件.vue文件\"]},\"206\":{\"h\":\"Webpack的使用\",\"t\":[\"webpack的官方文档是webpack\",\"webpack的中文官方文档是webpack\",\"Webpack的运行是依赖Node环境的，所以我们电脑上必须有Node环境 \",\"所以我们需要先安装Node.js，并且同时会安装npm；\",\"Node官方网站：Node.js\"]},\"207\":{\"h\":\"Webpack的安装\",\"t\":[\"webpack的安装目前分为两个：webpack、webpack-cli\",\"执行webpack命令，会执行node_modules下的.bin目录下的webpack；\",\"webpack在执行时是依赖webpack-cli的，如果没有安装就会报错；\",\"而webpack-cli中代码执行时，才是真正利用webpack进行编译和打包的过程；\",\"所以在安装webpack时，我们需要同时安装webpack-cli（第三方的脚手架事实上是没有使用webpack-cli的，而是类似于自 己的vue-service-cli的东西）\",\"img\"]},\"208\":{\"h\":\"Webpack的默认打包\",\"t\":[\"ES6、CommonJS等模块化语法在浏览器中是不被直接识别的，但是通过使用Webpack的打包功能，可以将这些语法转换为浏览器可以识别的语法。Webpack可以将多个模块打包成一个或多个浏览器可识别的文件，使得在浏览器中可以正常运行这些模块化代码。\",\"我们可以通过webpack进行打包，之后运行打包之后的代码\",\"在目录下直接执行 webpack 命令\",\"webpack \",\"生成一个 dist 文件夹，里面存放一个main.js的文件，就是我们打包之后的文件：\",\"这个文件中的代码被压缩和丑化了；\",\"另外我们发现代码中依然存在ES6的语法，比如箭头函数、const等，这是因为默认情况下webpack并不清楚我们打包后的文 件是否需要转成ES5之前的语法，后续我们需要通过babel来进行转换和设置；\",\"我们发现是可以正常进行打包的，但是有一个问题，webpack是如何确定我们的入口的呢？\",\"事实上，当我们运行webpack时，webpack会查找当前目录下的 src/index.js作为入口；\",\"所以，如果当前项目中没有存在 src/index.js 文件，那么会报错；\",\"当然，我们也可以通过配置来指定入口和出口\",\"npx webpack --entry ./src/main.js --output-path ./build \"]},\"209\":{\"h\":\"webpack 局部安装\",\"t\":[\"版本控制：通过在项目中局部安装Webpack，可以确保每个项目使用的Webpack版本是一致的，避免不同项目之间的版本冲突。\",\"简化部署：将Webpack安装在项目的本地目录中，可以简化项目的部署过程。只需要将整个项目目录复制到其他环境中，不需要再次安装全局的Webpack。\",\"隔离环境：每个项目可以拥有自己独立的Webpack配置和插件，不会受到其他项目的影响。这样可以更灵活地根据项目需求进行定制和配置。\",\"可移植性：通过局部安装Webpack，可以将整个项目打包成一个可移植的文件夹，方便在不同环境中进行迁移和共享。\",\"第一步：创建package.json文件，用于管理项目的信息、库依赖等\",\"npm init \",\"第二步：安装局部的webpack\",\"npm install webpack webpack-cli --save-dev // -D(--save-dev) 开发依赖 \",\"第三步：使用局部的webpack\",\"npx webpack \",\"第四步：在 package.json 中创建scripts脚本，执行脚本打包即可\",\"# package \\\"scripts\\\": { \\\"build\\\": \\\"webpack\\\" } # cmd npm run build \",\"image-20231105235229201\"]},\"210\":{\"h\":\"Webpack配置\"},\"211\":{\"h\":\"Webpack 配置文件\",\"t\":[\"在通常情况下，webpack需要打包的项目是非常复杂的，并且我们需要一系列的配置来满足要求，默认配置必然 是不可以的。\",\"我们可以在根目录下创建一个webpack.config.js文件，来作为webpack的配置文件：\",\"const path = require('path'); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"./build\\\"), filename: \\\"bundle.js\\\" } } \",\"继续执行webpack命令，依然可以正常打包\",\"npm run build \"]},\"212\":{\"h\":\"指定配置文件\",\"t\":[\"但是如果我们的配置文件并不是webpack.config.js的名字，而是其他的名字呢？\",\"比如我们将webpack.config.js修改成了 wk.config.js；\",\"这个时候我们可以通过 --config 来指定对应的配置文件；\",\"webpack --config wk.config.js \",\"但是每次这样执行命令来对源码进行编译，会非常繁琐，所以我们可以在package.json中增加一个新的脚本：\",\"\\\"build\\\": \\\"webpack --config wk.config.js\\\" \",\"之后我们执行 npm run build来打包即可。\"]},\"213\":{\"h\":\"Webpack的依赖\",\"t\":[\"Webpack通过以下步骤对项目进行打包：\",\"配置：创建一个Webpack配置文件（通常命名为webpack.config.js），在其中定义打包的入口文件、输出文件的路径、加载器和插件等。\",\"入口：在配置文件中指定打包的入口文件，可以是单个文件或多个文件, 从入口开始，会生成一个 依赖关系图，这个依赖关系图会包含应用程序中所需的所有模块（比如 js 文件、css 文件、图片、字体等), 然后遍历图结构，打包一个个模块（根据文件的不同使用不同的loader来解析）；\",\"加载器：根据需要，配置加载器来处理不同类型的文件。例如，使用babel-loader来转换ES6+代码，使用 css-loader 和 style-loader 来处理CSS文件。\",\"插件：根据需要，配置插件来执行额外的任务。例如，使用html-webpack-plugin生成HTML文件，使用mini-css-extract-plugin提取CSS文件。\",\"输出：在配置文件中指定打包输出的路径和文件名。\",\"运行：在命令行中运行webpack命令，Webpack将根据配置文件进行打包，并生成输出文件。\",\"在运行Webpack命令时，可以使用不同的参数和选项来控制打包的行为。例如，使用--mode参数指定打包的模式（开发模式或生产模式），使用--watch选项启用监听模式等。\",\"img\"]},\"214\":{\"h\":\"loader的使用\",\"t\":[\"https://webpack.docschina.org/loaders/\",\"在 Webpack5 以后会采用 asset module type 来替代 loader\",\"在Webpack中，Loader是用于对不同类型的文件进行转换和处理的模块。它们作为Webpack的一部分，用于在打包过程中对文件进行预处理。\",\"Loader可以将不同类型的文件（如JavaScript、CSS、图片等）转换为模块，以便在应用程序中使用。它们可以执行各种任务，例如将ES6+代码转换为ES5语法、处理CSS文件中的样式、压缩和优化图像等。\",\"Loader通常以链式调用的方式使用，可以根据需要配置多个Loader来处理文件。每个Loader都会对文件进行一次转换，并将转换后的结果传递给下一个Loader，直到最后一个Loader将最终的结果返回给Webpack进行打包。\",\"Loader的配置是通过Webpack的配置文件（通常是webpack.config.js）中的module.rules字段来完成。在这个字段中，可以指定不同类型文件的匹配规则和对应的Loader。\"]},\"215\":{\"h\":\"css-loader 的使用\",\"t\":[\"对于加载css文件来说，我们需要一个可以读取css文件的loader；\",\"这个loader最常用的是css-loader；\",\"css-loader的安装：\",\"npm install css-loader -D npm install css-loader --save-dev \",\"如何使用这个loader来加载css文件呢？有三种方式： \",\"内联方式；\",\"CLI方式（webpack5中不再使用）；\",\"配置方式；\",\"内联方式：内联方式使用较少，因为不方便管理；\",\"在引入的样式前加上使用的loader，并且使用 ! 分割；\",\"import \\\"css-loader!../css/style.css\\\" \",\"配置方式\",\"配置方式表示的意思是在我们的webpack.config.js文件中写明配置信息： \",\"module.rules中允许我们配置多个loader（因为我们也会继续使用其他的loader，来完成其他文件的加载)\",\"这种方式可以更好的表示loader的配置，也方便后期的维护，同时也让你对各个Loader有一个全局的概览\",\"module.rules的配置如下： \",\"rules属性对应的值是一个数组：[Rule]\",\"数组中存放的是一个个的Rule，Rule是一个对象，对象中可以设置多个属性： \",\"test属性：用于对 resource（资源）进行匹配的，通常会设置成正则表达式；\",\"use属性：对应的值时一个数组：[UseEntry] \",\"UseEntry是一个对象，可以通过对象的属性来设置一些其他属性 \",\"loader：必须有一个 loader属性，对应的值是一个字符串；\",\"options：可选的属性，值是一个字符串或者对象，值会被传入到loader中；\",\"query：目前已经使用options来替代；\",\"传递字符串（如：use: [ 'style-loader' ]）是 loader 属性的简写方式（如：use: [ { loader: 'style-loader'} ]）；\",\"loader属性： Rule.use: [ { loader } ] 的简写\",\"module.exports = { // ... module: { rules: [ { test: /\\\\.css$/, use: ['style-loader', 'css-loader'] } ] } }; \"]},\"216\":{\"h\":\"style-loader\",\"t\":[\"我们已经可以通过css-loader来加载css文件了\",\"但是你会发现这个css在我们的代码中并没有生效（页面没有效果）。\",\"因为css-loader只是负责将.css文件进行解析，并不会将解析之后的css插入到页面中；\",\"如果我们希望再完成插入style的操作，那么我们还需要另外一个loader，就是style-loader；\",\"安装style-loader：\",\"npm install style-loader -D \",\"那么我们应该如何使用style-loader： \",\"在配置文件中，添加style-loader；\",\"注意：因为loader的执行顺序是从右向左（或者说从下到上，或者说从后到前的），所以我们需要将style-loader写到 css-loader 的前面；\",\"use: ['style-loader', 'css-loader'] \"]},\"217\":{\"h\":\"Less工具处理\",\"t\":[\"我们可以使用less工具来完成它的编译转换：\",\"npm install less -D \",\"执行如下命令：\",\"npm install less -D npx lessc ./src/css/title.less title.css \"]},\"218\":{\"h\":\"less-loader处理\",\"t\":[\"但是在项目中我们会编写大量的css，它们如何可以自动转换呢？\",\"这个时候我们就可以使用less-loader，来自动使用less工具转换less到css；\",\"npm install less-loader -D \",\"{ test: /\\\\.less$/, use: [ \\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\" ] } \"]},\"219\":{\"h\":\"postcss-loader(认识)\",\"t\":[\"什么是PostCSS呢？ \",\"PostCSS是一个通过JavaScript来转换样式的工具；\",\"这个工具可以帮助我们进行一些CSS的转换和适配，比如自动添加浏览器前缀、css样式的重置； p但是实现这些功能，我们需要借助于PostCSS对应的插件；\",\"如何使用PostCSS呢？主要就是两个步骤： \",\"第一步：查找PostCSS在构建工具中的扩展，比如webpack中的postcss-loader；\",\"第二步：选择可以添加你需要的PostCSS相关的插件；\"]},\"220\":{\"h\":\"命令行使用postcss\",\"t\":[\"安装一下它们：postcss、postcss-cli\",\"npm install postcss postcss-cli -D \",\"我们编写一个需要添加前缀的css： \",\"Autoprefixer CSS online\",\"我们可以在上面的网站中查询一些添加css属性的样式；\",\"在Webpack中，PostCSS通常用于对CSS文件进行预处理和后处理。您可以使用PostCSS来编写现代CSS语法，然后使用各种插件对其进行处理，例如自动添加CSS前缀、压缩CSS等。\"]},\"221\":{\"h\":\"插件autoprefixer\",\"t\":[\"因为我们需要添加前缀，所以要安装autoprefixer：\",\"npm install autoprefixer -D \",\"直接使用使用postcss工具，并且制定使用autoprefixer\",\"npx postcss --use autoprefixer -o end.css ./src/css/style.css \",\"转化的结果如下\",\".title { user-select: none; } .title { -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } /*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQWlCO0tBQWpCLHNCQUFpQjtNQUFqQixxQkFBaUI7VUFBakIsaUJBQWlCO0FBQ25CIiwiZmlsZSI6ImRlbW8uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRpdGxlIHtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59Il19 */ \"]},\"222\":{\"h\":\"postcss-loader\",\"t\":[\"真实开发中我们必然不会直接使用命令行工具来对css进行处理，而是可以借助于构建工具：\",\"在webpack中使用postcss就是使用postcss-loader来处理的；\",\"我们来安装postcss-loader：\",\"npm install postcss-loader -D \",\"因为postcss需要有对应的插件才会起效果，所以我们需要配置它的plugin；\",\"use: [ { loading: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ require('autoprefixer') ] } } } ] \",\"我们可以将 postcss 配置分离, 根目录下新建 postcss.config.js\",\"module.exports = { plugins: [ require(\\\"postcss-preset-env\\\") ] } \",\"这样在 webpack.config 中只需要 添加 postcss-loader 即可\"]},\"223\":{\"h\":\"postcss-preset-env\",\"t\":[\"postcss-preset-env 是一个 PostCSS 插件，它允许您使用最新的 CSS 特性，同时它会根据您的目标环境自动添加必要的回退。\",\"这个插件包含了 autoprefixer（自动添加浏览器前缀），cssnano（压缩 CSS），以及一些其他的 PostCSS 插件。这意味着您可以在 CSS 中使用最新的特性，例如 CSS Grid，CSS Variables，等等，而不需要担心兼容性问题。\",\"在您的 postcss.config.js 文件中，您已经将 postcss-preset-env 添加为一个插件，这意味着当您运行 PostCSS 时，它将使用 postcss-preset-env 来处理您的 CSS 文件。\",\"事实上，在配置postcss-loader时，我们配置插件并不需要使用autoprefixer。\",\"我们可以使用另外一个插件：postcss-preset-env\",\"postcss-preset-env也是一个postcss的插件；\",\"它可以帮助我们将一些现代的CSS特性，转成大多数浏览器认识的CSS，并且会根据目标浏览器或者运行时环境 添加所需的polyfill；\",\"也包括会自动帮助我们添加 autoprefixer（所以相当于已经内置了 autoprefixer）；\",\"首先，我们需要安装 postcss-preset-env：\",\"npm install postcss-preset-env -D \",\"之后，我们直接修改掉之前的 autoprefixer 即可;\"]},\"224\":{\"h\":\"file-loader\",\"t\":[\"要处理jpg、png等格式的图片，我们也需要有对应的loader：file-loader\",\"file-loader的作用就是帮助我们处理import/require()方式引入的一个文件资源，并且会将它放到我们输出的文件夹中；\",\"当然我们待会儿可以学习如何修改它的名字和所在文件夹；\",\"安装file-loader：\",\"npm install file-loader -D \",\"配置处理图片的Rule：\",\"{ test: /\\\\.(jpe?g|png|gif|svg)$/, type: \\\"asset\\\", generator: { filename: \\\"img/[name]_[hash:6][ext]\\\" }, parser: { dataUrlCondition: { maxSize: 100 * 1024 } } } \"]},\"225\":{\"h\":\"url-loader\",\"t\":[\"url-loader和file-loader的工作方式是相似的，但是可以将较小的文件，转成base64的URI。\",\"安装url-loader：\",\"url-loader npm install url-loader -D \",\"显示结果是一样的，并且图片可以正常显示；\",\"image-20231111211324041\",\"但是在dist文件夹中，我们会看不到图片文件： \",\"这是因为我的两张图片的大小分别是38kb和295kb；\",\"默认情况下url-loader会将所有的图片文件转成base64编码\",\"{ test: /\\\\.(jpe?g|png|gif|svg)$/, use: { loader: \\\"url-loader\\\", options: { // outputPath: \\\"img\\\", name: \\\"img/[name]_[hash:6].[ext]\\\", limit: 100 * 1024 } } } \"]},\"226\":{\"h\":\"url-loader的limit\",\"t\":[\"但是开发中我们往往是小的图片需要转换，但是大的图片直接使用图片即可 \",\"这是因为小的图片转换base64之后可以和页面一起被请求，减少不必要的请求过程；\",\"而大的图片也进行转换，反而会影响页面的请求速度；\",\"那么，我们如何可以限制哪些大小的图片转换和不转换呢？ \",\"url-loader有一个options属性limit，可以用于设置转换的限制；\",\"下面的代码38kb的图片会进行base64编码，而295kb的不会；\"]},\"227\":{\"h\":\"字体文件加载\",\"t\":[\"{ test: /\\\\.(eot|ttf|woff2?)$/, use: { loader: \\\"file-loader\\\", options: { // outputPath: \\\"font\\\", name: \\\"font/[name]_[hash:6].[ext]\\\" } } }, { test: /\\\\.(eot|ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"font/[name]_[hash:6][ext]\\\" } } \"]},\"228\":{\"h\":\"文件命名规则\",\"t\":[\"有时候我们处理后的文件名称按照一定的规则进行显示： \",\"比如保留原来的文件名、扩展名，同时为了防止重复，包含一个hash值等；\",\"这个时候我们可以使用PlaceHolders来完成，webpack给我们提供了大量的PlaceHolders来显示不同的内容： \",\"https://webpack.js.org/loaders/file-loader/#placeholders\",\"我们这里介绍几个最常用的placeholder： \",\"[ext]： 处理文件的扩展名；\",\"[name]：处理文件的名称；\",\"[hash]：文件的内容，使用MD4的散列函数处理，生成的一个128位的hash值（32个十六进制）；\",\"[contentHash]：在file-loader中和[hash]结果是一致的（在webpack的一些其他地方不一样，后面会讲到）；\",\"[hash:<length>]：截图hash的长度，默认32个字符太长了；\",\"[path]：文件相对于webpack配置文件的路径；\"]},\"229\":{\"h\":\"设置文件名称\",\"t\":[\"那么我们可以按照如下的格式编写：\",\"这个也是vue的写法；\",\"img\"]},\"230\":{\"h\":\"设置文件的存放路径\",\"t\":[\"刚才通过 img/ 已经设置了文件夹，这个也是vue、react脚手架中常见的设置方式 \",\"其实按照这种设置方式就可以了；\",\"当然我们也可以通过outputPath来设置输出的文件夹；\",\"img\"]},\"231\":{\"h\":\"asset module type\",\"t\":[\"我们当前使用的webpack版本是webpack5： \",\"在webpack5之前，加载这些资源我们需要使用一些loader，比如raw-loader 、url-loader、file-loader；\",\"在webpack5开始，我们可以直接使用资源模块类型（asset module type），来替代上面的这些loader；\",\"资源模块类型(asset module type)，通过添加 4 种新的模块类型，来替换所有这些 loader： \",\"asset/resource 发送一个单独的文件并导出 URL。之前通过使用 file-loader 实现；\",\"asset/inline 导出一个资源的 data URI。之前通过使用 url-loader 实现；\",\"asset/source 导出资源的源代码。之前通过使用 raw-loader 实现；\",\"asset 在导出一个 data URI 和发送一个单独的文件之间自动选择。之前通过使用 url-loader，并且配置资源体积限制实现；\"]},\"232\":{\"h\":\"asset module type的使用\",\"t\":[\"比如加载图片，我们可以使用下面的方式：\",\"{ test: /\\\\.(jpe?g|png|gif|svg)$/, type: \\\"asset\\\", // 自定义文件的输出路径和文件名 generator: { filename: \\\"img/[name]_[hash:6][ext]\\\" }, parser: { dataUrlCondition: { maxSize: 100 * 1024 } } } \"]},\"233\":{\"h\":\"Plugin\",\"t\":[\"Loader是用于特定的模块类型进行转换；\",\"Plugin可以用于执行更加广泛的任务，比如打包优化、资源管理、环境变量注入等；\",\"image-20231112151429444\"]},\"234\":{\"h\":\"CleanWebpackPlugin\",\"t\":[\"每次修改了一些配置，重新打包时，都需要手动删除dist文件夹：\",\"我们可以借助于一个插件来帮助我们完成，这个插件就是CleanWebpackPlugin；\",\"首先，我们先安装这个插件：\",\" npm install clean-webpack-plugin -D \",\"之后在插件中配置：\",\"const { CleanWebpackPlugin } = require(\\\"clean-webpack-plugin\\\"); module.exports = { plugins: [ new CleanWebpackPlugin(); ] }; \"]},\"235\":{\"h\":\"HtmlWebpackPlugin\",\"t\":[\"我们的HTML文件是编写在根目录下的，而最终打包的dist文件夹中是没有index.html文件的。\",\"在进行项目部署的时，必然也是需要有对应的入口文件index.html；\",\"所以我们也需要对index.html进行打包处理；\",\"对HTML进行打包处理我们可以使用另外一个插件：HtmlWebpackPlugin；\",\"npm install html-webpack-plugin -D \"]},\"236\":{\"h\":\"自定义HTML模板\",\"t\":[\"如果我们想在自己的模块中加入一些比较特别的内容：\",\"比如添加一个noscript标签，在用户的JavaScript被关闭时，给予响应的提示；\",\"比如在开发vue或者react项目时，我们需要一个可以挂载后续组件的根标签\",\"这个我们需要一个属于自己的index.html模块：\",\"public/index.html\",\"<!DOCTYPE html> <html lang=\\\"\\\"> <head> <meta charset=\\\"utf-8\\\"> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1.0\\\"> <link rel=\\\"icon\\\" href=\\\"<%= BASE_URL %>favicon.ico\\\"> <title><%= htmlWebpackPlugin.options.title %></title> </head> <body> <noscript> <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled. Please enable it to continue.</strong> </noscript> <div id=\\\"app\\\"></div> <!-- built files will be auto injected --> </body> </html> \",\"上面的代码中，会有一些类似这样的语法<% 变量 %>，这个是EJS模块填充数据的方式。 \",\"在配置 HtmlWebpackPlugin 时，我们可以添加如下配置： \",\"template：指定我们要使用的模块所在的路径；\",\"title：在进行 htmlWebpackPlugin.options.title 读取时，就会读到该信息；\",\"const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { plugins: [ new HtmlWebpackPlugin({ template: \\\"./public/index.html\\\", title: \\\"哈哈哈哈\\\" }) ] }; \"]},\"237\":{\"h\":\"DefinePlugin\",\"t\":[\"https://github.com/jantimon/html-webpack-plugin\",\"因为在模板中使用了 BASE_URL, 但是我们并没有设置过这个常量值，所以会出现没有定义的错误 - BASE_URL is not defined\",\"这个时候我们可以使用DefinePlugin插件\",\"DefinePlugin允许在编译时创建配置的全局常量，是一个webpack内置的插件（不需要单独安装）：\",\"const { DefinePlugin } = require(\\\"webpack\\\"); module.exports = { plugins: [ new DefinePlugin({ BASE_URL: \\\"'./'\\\" }) ] }; \"]},\"238\":{\"h\":\"CopyWebpackPlugin\",\"t\":[\"CopyWebpackPlugin 是一个用于 webpack 的插件，它的主要功能是将单个文件或整个目录复制到构建目录。\",\"这个插件在以下情况下非常有用：\",\"当你有一些静态资源（例如图片、字体或公共库）需要包含在你的构建中，但是这些资源并不需要通过 webpack 处理时。\",\"当你需要将一些文件复制到构建目录，以便在部署应用程序时使用\",\"安装CopyWebpackPlugin插件：\",\"npm install copy-webpack-plugin -D \",\"接下来配置CopyWebpackPlugin即可： \",\"复制的规则在patterns中设置；\",\"from：设置从哪一个源中开始复制；\",\"to：复制到的位置，可以省略，会默认复制到打包的目录下；\",\"globOptions：设置一些额外的选项，其中可以编写需要忽略的文件： \",\".DS_Store：mac目录下回自动生成的一个文件；\",\"index.html：也不需要复制，因为我们已经通过HtmlWebpackPlugin完成了index.html的生成；\",\"const CopyWebpackPlugin = require('copy-webpack-plugin'); new CopyWebpackPlugin({ patterns: [ { from: \\\"public\\\", to: \\\"./\\\", globOptions: { ignore: [ \\\"**/index.html\\\" ] } } ] }) \"]},\"239\":{\"h\":\"Mode配置列表\",\"t\":[\"module.exports = { // 设置模式 // development 开发阶段, 会设置development // production 准备打包上线的时候, 设置production mode: \\\"development\\\", // 设置source-map, 建立js映射文件, 方便调试代码和错误 devtool: \\\"source-map\\\" } \"]},\"240\":{\"h\":\"Webpack_Babel\"},\"241\":{\"h\":\"什么是 Babel?\",\"t\":[\"https://babeljs.io/\",\"Babel 是一个 JavaScript 编译器，可以将 ECMAScript 2015+ 代码转换为向后兼容的 JavaScript 版本，以便在当前和旧版浏览器或环境中运行。它还支持将 JSX 转换为普通 JavaScript 代码。Babel 是一个非常流行的工具，许多现代的 JavaScript 应用程序都使用它来构建和部署。\",\"事实上，在开发中我们很少直接去接触babel，但是babel对于前端开发来说，目前是不可缺少的一部分：\",\"开发中，我们想要使用ES6+的语法，想要使用TypeScript，开发React项目，它们都是离不开Babel的；所以，学习Babel对于我们理解代码从编写到线上的转变过程至关重要；\",\"以下是一个使用 Babel 的示例：\",\"假设我们有一个使用箭头函数和 const 声明的简单 JavaScript 模块：\",\"const greet = (name) => { console.log(`Hello, ${name}!`); } export default greet; \",\"如果我们想要在旧版浏览器中运行它，我们可以使用 Babel 将其转换为 ES5：\",\"\\\"use strict\\\"; Object.defineProperty(exports, \\\"__esModule\\\", { value: true }); exports.default = void 0; var greet = function greet(name) { console.log(\\\"Hello, \\\".concat(name, \\\"!\\\")); }; var _default = greet; exports.default = _default; \",\"这个转换过的代码可以在大多数浏览器中运行，即使它们不支持箭头函数或 const 声明。\"]},\"242\":{\"h\":\"Babel 命令行使用\",\"t\":[\"babel本身可以作为一个独立的工具（和postcss一样），不和webpack等构建工具配置来单独使用。\",\"如果我们希望在命令行尝试使用babel，需要安装如下库： \",\"@babel/core：babel的核心代码，必须安装；\",\"@babel/cli：可以让我们在命令行使用babel；\",\"npm install @babel/cli @babel/core -D \",\"使用babel来处理我们的源代码： \",\"src：是源文件的目录；\",\"–out-dir：指定要输出的文件夹dist；\",\"--out-file: 指定要输出的文件dist；\",\"npx babel src --out-dir dist npx babel src --out-file dist \"]},\"243\":{\"h\":\"插件\",\"t\":[\"Babel 的插件是用于转换 JavaScript 代码的小型程序，可以添加到 Babel 配置中。Babel 插件可以执行各种任务，例如：\",\"转换语法：将新的 ECMAScript 特性转换为向后兼容的代码。\",\"转换 API：将使用新 API 的代码转换为旧 API。\",\"转换 JSX：将 JSX 转换为普通的 JavaScript 代码。\",\"以下是一些常见的 Babel 插件：\",\"@babel/plugin-transform-arrow-functions: 将箭头函数转换为普通函数。\",\"@babel/plugin-transform-block-scoping: 将 let 和 const 声明转换为 var 声明。\",\"@babel/plugin-transform-classes: 将类转换为 ES5 构造函数。\",\"@babel/plugin-transform-destructuring: 将解构赋值转换为普通赋值。\",\"@babel/plugin-transform-object-assign: 将 Object.assign() 转换为 ES5 兼容的代码。\",\"@babel/plugin-transform-react-jsx: 将 JSX 转换为普通的 JavaScript 代码。\",\"@babel/plugin-transform-runtime: 避免在每个文件中重复使用 Babel 运行时代码。\",\"如何使用?\",\"比如我们需要转换箭头函数, const 转成 var，那么我们就可以使用箭头函数转换相关的插件：\",\"npm install @babel/plugin-transform-arrow-functions -D npm install @babel/plugin-transform-block-scoping -D npx babel src --out-dir dist --plugins=@babel/plugin-transform-block-scoping ,@babel/plugin-transform-arrow-functions \"]},\"244\":{\"h\":\"预设 preset\",\"t\":[\"Babel 的预设（preset）是一组预先配置的转换规则，用于将特定版本的 JavaScript 代码转换为向后兼容的旧版本。以下是一些常用的 Babel 预设：\",\"@babel/preset-env: 根据目标环境自动确定需要的转换规则。它根据你在 .babelrc 或 babel.config.js 文件中的配置来确定需要转换的 JavaScript 特性。\",\"@babel/preset-react: 用于转换 React JSX 语法的预设。它可以将 JSX 转换为普通的 JavaScript 代码。\",\"@babel/preset-typescript: 用于转换 TypeScript 代码的预设。它可以将 TypeScript 的类型注解和其他特定语法转换为普通的 JavaScript 代码。\",\"@babel/preset-flow: 用于转换 Flow 类型注解的预设。它可以将 Flow 的类型注解转换为普通的 JavaScript 代码。\",\"这些预设可以根据你的项目需求进行选择和配置。你可以在 .babelrc 或 babel.config.js 文件中指定所需的预设，例如：\",\"module.exports = { presets: [ \\\"@babel/preset-env\\\" ] } \",\"也可以\",\"npm install @babel/preset-env -D npx babel src --out-dir dist --presets=@babel/preset-env \"]},\"245\":{\"h\":\"原理\"},\"246\":{\"h\":\"底层原理\",\"t\":[\"babel是如何做到将我们的一段代码（ES6、TypeScript、React）转成另外一段代码（ES5）的呢？\",\"从一种源代码（原生语言）转换成另一种源代码（目标语言），这是什么的工作呢？\",\"就是编译器，事实上我们可以将babel看成就是一个编译器。\",\"Babel编译器的作用就是将我们的源代码，转换成浏览器可以直接识别的另外一段源代码；\",\"Babel也拥有编译器的工作流程：\",\"解析（Parsing）：Babel首先将输入的JavaScript代码解析成抽象语法树（Abstract Syntax Tree，AST）。AST是一个用于表示代码结构的树状数据结构，它能够准确地描述代码的语法和语义。\",\"转换（Transformation）：在AST的基础上，Babel会应用一系列的插件和预设来进行代码转换。这些插件和预设可以执行各种转换操作，例如语法转换、代码优化、添加兼容性处理等。每个插件都负责处理AST中的特定节点，并根据需要进行修改或替换。\",\"生成（Generation）：转换完成后，Babel会将修改后的AST重新生成为JavaScript代码。这些生成的代码可以是与输入代码相同的版本，也可以是经过转换后的新代码。\",\"https://github.com/jamiebuilds/the-super-tiny-compiler: 非常简单的编译器实现，旨在教授编译器原理和实践。\"]},\"247\":{\"h\":\"执行原理\",\"t\":[\"Babel的执行阶段\",\"image-20231116205304599\",\"image-20231116205317664\",\"词法分析（Lexing）：将输入的源代码字符串转换为一个令牌（Token）序列。每个令牌代表源代码中的一个语法单元，例如标识符、运算符、括号等。\",\"语法分析（Parsing）：将令牌序列转换为抽象语法树（AST）。AST是一个用于描述代码结构的树状数据结构，它能够准确地描述源代码的语法和语义。\",\"转换（Transformation）：在AST的基础上，应用一系列的转换规则，以修改和优化AST。这些规则可以执行各种操作，例如语法转换、代码优化、添加兼容性处理等。\",\"代码生成（Code Generation）：将修改后的AST转换为目标语言的代码。在\\\"The Super Tiny Compiler\\\"中，目标语言是JavaScript。\",\"输出：输出生成的目标代码。\"]},\"248\":{\"h\":\"babel-loader\",\"t\":[\"babel-loader是一个用于在Webpack构建过程中将JavaScript代码转换的加载器（loader）。它是与Babel配合使用的常用工具之一。\",\"通过配置Webpack的规则，使用babel-loader可以将指定的JavaScript文件传递给Babel进行转换。Babel会根据配置的插件和预设，将源代码转换为目标浏览器或环境所支持的语法。\",\"指定使用的插件\",\"image-20231116220536704\",\"presets 预设: 如果我们一个个去安装使用插件，那么需要手动来管理大量的babel插件，我们可以直接给webpack提供一个 preset，webpack会根据我们的预设来加载对应的插件列表，并且将其传递给babel。以下使用 @babel/preset-env\",\"env\",\"react\",\"TypeScript\",\"使用 babel-loader 的一般步骤如下：\",\"安装 babel-loader 和相关的Babel插件和预设：\",\"npm install --save-dev babel-loader @babel/core @babel/preset-env webpack \",\"webpack.config.js，在其中配置 babel-loader：\",\"module.exports = { entry: './src/index.js', output: { filename: 'bundle.js', path: __dirname + '/dist' }, module: { rules: [ { test: /\\\\.js$/, exclude: /node_modules/, use: { loader: 'babel-loader', options: { presets: ['@babel/preset-env'] } } } ] } }; \"]},\"249\":{\"h\":\"配置文件\",\"t\":[\"我们可以将babel的配置信息放到一个独立的文件中，babel给我们提供了两种配置文件的编写： \",\"babel.config.json（或者.js，.cjs，.mjs）文件；\",\"babelrc.json（或者.babelrc，.js，.cjs，.mjs）文件；\",\"它们两个有什么区别呢？目前很多的项目都采用了多包管理的方式（babel本身、element-plus、umi等）； \",\".babelrc.json：早期使用较多的配置方式，但是对于配置Monorepos项目是比较麻烦的；\",\"babel.config.json（babel7）：可以直接作用于Monorepos项目的子包，更加推荐；\",\"补充: Monorepo 是一种项目代码管理方式,指单个仓库中管理多个项目,有助于简化代码共享、版本控制、构建和部署等方面的复杂性,并提供更好的可重用性和协作性, 类似 @babel/preset-env 这种写法大概率就是 Monorepo\",\"以下为 babel.config.js\",\"module.exports = { presets: [ \\\"@babel/preset-env\\\" ] } \",\"这样在 webpack.config.js 中只需要\",\"{ test: /\\\\.js$/, loader: \\\"babel-loader\\\" } \"]},\"250\":{\"h\":\"在 Webpack 中使用 Vue\",\"t\":[\"npm install vue \",\"import { createApp } from 'vue'; createApp({ template: \\\"<h2>{{title}} - {{message}}</h2>\\\", components: { }, data() { return { title: \\\"Hello World\\\", message: \\\"哈哈哈\\\" } } }).mount(\\\"#app\\\"); \",\"此时重新 build 运行后不显示, 报错如下\",\"runtime-core.esm-bundler.js:38 [Vue warn]: Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias \\\"vue\\\" to \\\"vue/dist/vue.esm-bundler.js\\\" at <App> -> runtime-core.esm-bundler.js:38\",\"这个错误是因为 Vue 3 默认不包含模板编译器，所以当你试图在组件中使用 template 选项时，你会看到这个警告。\",\"要解决这个问题，你需要在 webpack 配置中添加一个别名，将 \\\"vue\\\" 指向 \\\"vue/dist/vue.esm-bundler.js\\\"。这个版本的 Vue 包含了模板编译器。\",\"// 在 main.js 中更改应用, 重新部署即可 import { createApp } from 'vue/dist/vue.esm-bundler.js'; \",\"Vue打包后不同版本解析\",\"vue(.runtime).global(.prod).js 是用于直接在浏览器中引入的全局版本，可以通过 <script> 标签来使用。 + 我们之前通过CDN引入和下载的Vue版本就是这个版本； + 会暴露一个全局的Vue来使用；\",\"vue(.runtime).esm-browser(.prod).js 是用于原生 ES 模块导入的版本，在支持 ES 模块的浏览器中可以使用 <script type='module'> 来引入。\",\"vue(.runtime).esm-bundler.js 是用于构建工具（如webpack、rollup、parcel等）的版本，默认情况下会使用 vue.runtime.esm-bundler.js。如果需要解析模板（template），则需要手动指定 vue.esm-bundler.js。\",\"vue.cjs(.prod).js 是用于服务器端渲染的版本，在 Node.js 中可以使用 require() 来引入。 \",\"require 是 Node.js 中用于导入模块的函数。它是 CommonJS 模块系统的一部分，这是 Node.js 的默认模块系统。以下是一个 require 的基本用法示例：const fs = require('fs');在这个例子中，我们导入了 Node.js 的内置 fs（文件系统）模块。\",\"require 函数也可以用来导入你自己的模块。例如，如果你有一个名为 myModule.js 的文件，你可以这样导入它：const myModule = require('./myModule.js'); 注意，当导入自己的模块时，你需要提供模块的相对路径（以 ./ 开头）。\",\"然而，require 并不是 ECMAScript（JavaScript 的标准化规范）的一部分，因此它在浏览器环境中通常不可用。在浏览器环境中，你通常会使用 ECMAScript 的 import 和 export 语句来导入和导出模块。\",\"接下来我们把 main.js 中的 vue 代码抽离为单文件组件(SFC)\",\"<!-- /vue/App.vue --> <template> <h2>我是Vue渲染出来的</h2> <h2>{{title}}</h2> <hello-world></hello-world> </template> <script> import HelloWorld from './HelloWorld.vue'; export default { components: { HelloWorld }, data() { return { title: \\\"Hello World\\\", message: \\\"哈哈哈\\\" } }, methods: { } } </script> <style scoped> h2 { color: red; } </style> \",\"重新打包, 报错：我们需要合适的Loader来处理文件。\",\"npm install vue-loader -D \",\"配置 webpack.config.js\",\"{ test: /\\\\.vue$/, loader: \\\"vue-loader\\\" } \",\"重新 build 仍然报错 Error:vue-loader requires @vue/compiler present the dependency tree, 打包依然会报错，这是因为我们必须添加@vue/compiler-sfc来对template进行解析：\",\"npm install @vue/compiler-sfc -D \",\"重新打包即可支持App.vue的写法\"]},\"251\":{\"h\":\"补充\",\"t\":[\"当然此时控制台还有如下报错 You are running the csm-bundler bu1ld of Vue, It is recommended to contigure your bundler to expl1citly roplace featur flag globals with boolean literals to get proper tree-shaking in the fina bundle, See http://link,yuejs.org/feature-flags for more details.\",\"在官方解释如下: https://github.com/vuejs/core/tree/main/packages/vue#bundler-build-feature-flags\",\"image-20231117234618957\",\"Bundler Build Feature Flags是构建工具（Bundler）中的一种特性标志，用于控制Vue框架的不同特性的开启和关闭。从Vue 3.0.0-rc.3版本开始，esm-bundler构建工具现在公开了全局特性标志，可以在编译时进行覆盖。其中两个重要的特性标志包括： \",\"VUE_OPTIONS_API：启用/禁用Options API支持，默认为true。\",\"VUE_PROD_DEVTOOLS：启用/禁用生产环境下的devtools支持，默认为false。\",\"在没有配置这些特性标志的情况下，构建工具仍然可以正常工作，但强烈建议正确配置它们以便在最终的打包文件中实现正确的树摇效果。要配置这些特性标志： \",\"https://webpack.js.org/plugins/define-plugin/\",\"module.exports = { plugins: [ new DefinePlugin({ BASE_URL: \\\"'./'\\\", __VUE_OPTIONS_API__: true, __VUE_PROD_DEVTOOLS__: false }) ] } \",\"开启Bundler Build Feature Flags的好处在于能够更好地控制Vue框架的特性和功能，从而有效地减少最终打包文件的大小。通过正确配置特性标志，可以实现树摇（tree-shaking）效果，即只包含应用程序实际使用的代码，而不包含未使用的代码。这将有助于提高应用程序的性能和加载速度，并减少资源消耗。此外，通过禁用不需要的特性，还可以减少应用程序的复杂性，并提高代码的可维护性。因此，建议开发人员在使用Vue框架时正确配置Bundler Build Feature Flags，以获得更好的开发和部署体验。\"]},\"252\":{\"h\":\"Webpack_devServer\",\"t\":[\"devServer 是指开发服务器，通常用于前端开发环境。在前端开发中，开发者通常需要一个本地服务器来运行他们的应用程序，以便进行测试和调试。Webpack是一个流行的前端构建工具，而devServer就是Webpack提供的一个功能，用于在开发过程中提供一个简单的服务器。\",\"devServer 可以帮助开发者在本地启动一个服务器，监视文件的变化，并在文件发生更改时自动重新加载页面，以提高开发效率。此外，它还支持一些其他功能，比如模块热替换（Hot Module Replacement），允许在不刷新整个页面的情况下更新部分模块。\",\"在使用Webpack配置文件时，你可以配置 devServer 的各种选项，以满足你的开发需求。这包括设置服务器的端口、指定静态资源的路径、配置代理等。\",\"目前我们开发的代码，为了运行需要有两个操作： \",\"操作一：npm run build，编译相关的代码；\",\"操作二：通过live server或者直接通过浏览器，打开index.html代码，查看效果；\",\"这个过程经常操作会影响我们的开发效率，我们希望可以做到，当文件发生变化时，可以自动的完成编译和展示；\",\"为了完成自动编译，webpack提供了几种可选的方式： \",\"webpack watch mode：在文件发生变化时，Webpack会自动重新编译代码。\",\"webpack-dev-server（常用）：提供了一个开发服务器，可以在本地运行你的应用程序，并且在文件发生变化时自动重新加载页面。\",\"webpack-dev-middleware：结合其他服务器框架使用，将Webpack与服务器集成，实现在文件发生变化时自动重新编译\"]},\"253\":{\"h\":\"Webpack watch\",\"t\":[\"webpack给我们提供了watch模式：\",\"在该模式下，webpack依赖图中的所有文件，只要有一个发生了更新，那么代码将被重新编译；\",\"我们不需要手动去运行 npm run build指令了；\",\"开启watch模式有两种方式：\",\"通过在命令行中使用--watch参数来开启watch模式。例如，运行webpack --watch命令即可开启watch模式。\",\"// package.json \\\"scripts\\\": { \\\"build\\\": \\\"webpack --watch\\\" } \",\"在Webpack配置文件中添加``watch: true`选项来开启watch模式。例如，在Webpack配置文件中添加以下代码：\",\"// webpack.config.js module.exports = { watch: true } \"]},\"254\":{\"h\":\"webpack-dev-server\",\"t\":[\"上面的方式可以监听到文件的变化，但是事实上它本身是没有自动刷新浏览器的功能的： \",\"当然，目前我们可以在 VSCode 中使用 live-server 来完成这样的功能；\",\"但是，我们希望在不适用live-server的情况下，可以具备live reloading（实时重新加载）的功能；\",\"安装webpack-dev-server\",\"npm install webpack-dev-server -D \",\"修改配置文件\",\"// package.json \\\"scripts\\\": { \\\"build\\\": \\\"webpack\\\", \\\"serve\\\": \\\"webpack serve\\\" } \",\"运行 npm run serve, 在本地配置一个服务器, 使用 webpack cli 解析/ 启动本地服务\",\"image-20231119190420271\",\"在运行 npm run serve 命令时，如果没有指定输出目录，webpack会默认将打包后的文件输出到内存中，而不是硬盘上的某个目录中。因此即使没有指定输出目录，该命令仍然可以正常运行。这种方式称为内存编译，可以提高开发效率，因为不需要每次修改代码后都重新编译和写入磁盘。 使用 memfs 这一个库实现;\"]},\"255\":{\"h\":\"认识模块热替换（HMR）\",\"t\":[\"什么是HMR呢？ \",\"HMR的全称是Hot Module Replacement，翻译为模块热替换；\",\"模块热替换是指在 应用程序运行过程中，替换、添加、删除模块，而无需重新刷新整个页面；\",\"HMR通过如下几种方式，来提高开发的速度： \",\"不重新加载整个页面，这样可以保留某些应用程序的状态不丢失；\",\"只更新需要变化的内容，节省开发的时间；\",\"修改了css、js源代码，会立即在浏览器更新，相当于直接在浏览器的 devtools 中直接修改样式；\",\"如何使用HMR呢？ \",\"默认情况下，webpack-dev-server已经支持HMR，我们只需要开启即可；\",\"在不开启HMR的情况下，当我们修改了源代码之后，整个页面会自动刷新，使用的是live reloading；\"]},\"256\":{\"h\":\"开启 HMR\",\"t\":[\"修改webpack的配置：\",\"// webpack.config.js module.exports = { // target 用来指定打包后的代码在哪个环境下运行 target: \\\"web\\\", devServer: { // 1. static: 用来指定静态资源的根目录 // 如果有的资源没有在 Webpack 中加载, 那么就会去 static 中查找加载 static: \\\"./public\\\", // 2. hot: 是否开启热更新 hot: true } } \",\"image-20231119201428778\",\"指定哪些模块发生更新时，进行HMR；\",\"if(module.hot) { // module.hot.accept(moduleName, callback) module.hot.accept(\\\"./js/element\\\", () => { console.log(\\\"element模块发生了变化\\\"); }) } \"]},\"257\":{\"h\":\"框架 的 HMR\",\"t\":[\"大多数主流框架（如React、Vue和Angular）都对模块热替换（HMR）提供了内置的支持，以便在开发过程中实现更快的热更新。\",\"具体而言，这些框架通常会提供开发服务器或开发工具，用于在开发过程中启用HMR功能。通过使用这些工具，你可以在修改代码时实时查看更新后的效果，而无需手动刷新页面。\",\"以下是一些常见的框架的HMR支持方式：\",\"React：React 框架通常使用Webpack的 react-hot-loader 插件来实现HMR功能。你可以在Webpack配置文件中配置该插件，然后在开发服务器中启用HMR。\",\"Vue：Vue 框架内置了对HMR的支持。你可以使用 vue-loader 和 vue-style-loader 等相关插件，以及在Webpack配置文件中配置HMR选项，来启用Vue的HMR功能。\",\"Angular：Angular 框架使用Webpack的 @angular-builders/custom-webpack 插件来实现HMR功能。你可以在Angular项目的配置文件中进行相应的配置，以启用HMR。\",\"请注意，每个框架的具体配置方式可能会有所不同。建议查阅相应框架的官方文档或社区资源，以获取更详细的关于HMR的配置和使用说明。\"]},\"258\":{\"h\":\"HMR的原理\",\"t\":[\"HMR（Hot Module Replacement）的原理是通过在应用程序运行时，通过开发服务器向客户端发送更新的模块代码，然后使用热更新运行时（Hot Update Runtime）来替换旧的模块代码，从而实现模块的热替换，而无需重新加载整个页面。\",\"webpack-dev-server会创建两个服务：提供静态资源的服务（express）和Socket服务（net.Socket）； \",\"HMR Socket Server，是一个socket的长连接： \",\"长连接有一个最好的好处是建立连接后双方可以通信（服务器可以直接发送文件到客户端）；\",\"当服务器监听到对应的模块发生变化时，会生成两个文件.json（manifest文件）和.js文件（update chunk）；\",\"通过长连接，可以直接将这两个文件主动发送给客户端（浏览器）；\",\"浏览器拿到两个新的文件后，通过HMR runtime机制，加载这两个文件，并且针对修改的模块进行更新；\",\"Webpack-dev-server使用Node.js内置的net模块提供WebSocket服务。该服务与静态资源服务配合使用，用于与客户端进行实时通信。当客户端连接到WebSocket服务时，Webpack-dev-server会将更新的模块代码发送到客户端，并触发模块热替换（HMR）功能。客户端接收到更新后，会通过WebSocket与Webpack-dev-server建立连接，并将更新的模块代码应用到正在运行的应用程序中。\",\"express server负责直接提供静态资源的服务（打包后的资源直接被浏览器请求和解析）； \",\"Webpack-dev-server使用express框架提供静态资源服务。该服务可以将Webpack打包后的静态资源文件（如HTML、CSS、JavaScript等）提供给浏览器访问。同时，该服务还支持一些特殊的路由，如/__webpack_hmr，用于与客户端建立WebSocket通信。\",\"具体而言，HMR的原理可以分为以下几个步骤：\",\"构建过程中的注入：在Webpack构建过程中，会将特殊的HMR运行时代码注入到应用程序中的每个模块中。这些HMR运行时代码负责与开发服务器建立连接，并接收来自服务器的更新通知。\",\"开发服务器的更新通知：开发服务器会监视文件的变化，并在文件发生更改时，向连接的客户端发送更新通知。这些更新通知包含了被修改的模块的更新代码。\",\"客户端接收更新：当客户端接收到更新通知时，它会根据更新代码进行处理。这些更新代码会被热更新运行时处理，并将其应用于相应的模块。\",\"模块的热替换：热更新运行时会将新的模块代码与旧的模块代码进行比较，并尽可能地将新代码应用于正在运行的应用程序。如果新代码可以被成功替换，应用程序会保持运行状态，同时显示更新后的效果。\",\"总结起来，HMR利用了Webpack的构建能力和热更新运行时，使得在开发过程中可以实时地修改代码并查看更新后的效果，从而提高开发效率。\",\"image-20231119203330239\"]},\"259\":{\"h\":\"devServer 配置信息\",\"t\":[\"// webpack.config.js module.exports = { // target 用来指定打包后的代码在哪个环境下运行 target: \\\"web\\\", devServer: { // 1. contentBase: 用来指定静态资源的根目录 static: \\\"./public\\\", // 2. hot: 是否开启热更新 hot: true, // 3. host: 指定服务器的ip地址, 默认是localhost host: \\\"0.0.0.0\\\", port: 7777, // 4. open: 是否自动打开浏览器 open: true, // 5. compress: 是否启动gzip压缩 // compress: true, // 6. proxy: 用来配置代理 proxy: { \\\"/api\\\": { target: \\\"http://localhost:8888\\\", pathRewrite: { \\\"^/api\\\": \\\"\\\" }, secure: false, changeOrigin: true } } } } \"]},\"260\":{\"h\":\"hotOnly、host 配置\",\"t\":[\"host设置主机地址：\",\"默认值是localhost；\",\"如果希望其他地方也可以访问，可以设置为 0.0.0.0；\",\"localhost 和 0.0.0.0 的区别：\",\"localhost：localhost是一个主机名，表示本地计算机或设备自身。它通常映射到回环地址（loopback address）``127.0.0.1，也可以是IPv6的::1。当应用程序绑定到localhost`时，它只能通过本地计算机或设备上的回环接口进行访问。这意味着只有本地计算机或设备上的进程可以访问该应用程序，其他计算机或设备无法直接访问。\",\"0.0.0.0：0.0.0.0是一个特殊的IP地址，表示任意主机或所有主机。当应用程序绑定到0.0.0.0时，它将监听所有可用的网络接口，包括本地计算机上的回环接口和其他网络接口。这意味着其他计算机或设备可以通过网络访问该应用程序，前提是网络连接和防火墙允许。\",\"简而言之，localhost指的是本地计算机或设备自身，只能通过本地访问。而0.0.0.0表示任意主机或所有主机，可以通过网络访问。在开发过程中，通常将应用程序绑定到localhost以进行本地开发和测试，而将其绑定到0.0.0.0可以使其在局域网或公共网络上可访问。\"]},\"261\":{\"h\":\"port、open、compress\",\"t\":[\"port设置监听的端口，默认情况下是8080 \",\"这个选项用于指定Webpack开发服务器的端口号。通过设置port选项，你可以指定应用程序在开发服务器上监听的端口。\",\"open是否打开浏览器： \",\"默认值是false，设置为true会打开浏览器；\",\"这个选项用于指定是否在启动Webpack开发服务器后自动打开浏览器。通过设置open选项为true，开发服务器将在启动后自动打开默认浏览器，并加载应用程序\",\"也可以设置为类似于 Google Chrome等值；\",\"compress是否为静态文件开启gzip compression： \",\"默认值是false，可以设置为true；\",\"这个选项用于指定是否启用gzip压缩。通过设置compress选项为true，开发服务器将对传输到浏览器的资源进行gzip压缩，以减小文件大小，提高传输速度。\",\"module.exports = { // ... devServer: { port: 8080, // 指定端口号为8080 open: true, // 自动打开浏览器 compress: true, // 启用gzip压缩 }, }; \"]},\"262\":{\"h\":\"Proxy\",\"t\":[\"https://webpack.docschina.org/configuration/dev-server#devserverproxy\",\"proxy是我们开发中非常常用的一个配置选项，它的目的设置代理来解决跨域访问的问题：\",\"比如我们的一个api请求是 http://localhost:3000但是本地启动服务器的域名是 http://localhost:8000，这 个时候发送网络请求就会出现跨域的问题；\",\"那么我们可以将请求先发送到一个代理服务器，代理服务器和API服务器没有跨域的问题，就可以解决我们的跨域问题了\",\"代理（Proxy）是一种常见的网络应用程序架构，它可以将客户端的请求转发到另一个服务器进行处理。在开发环境中，我们通常会将应用程序和API服务分开部署，这时就需要使用代理将客户端的API请求转发到后端API服务器上。\",\"在 Webpack 的 devServer 中，可以使用proxy选项来配置代理设置。proxy选项可以是一个对象，也可以是一个函数。对象方式的proxy选项可以指定一个或多个代理规则，每个规则包含了要转发的请求路径和目标服务器地址。例如：\",\"module.exports = { // ... devServer: { proxy: { '/api': { target: 'http://localhost:3000', // 目标服务器地址 changeOrigin: true, // 改变请求头中的Origin字段 pathRewrite: { '^/api': '', // 将/api前缀替换为空 }, }, }, }, }; \",\"在这个示例中，我们将所有以/api开头的请求转发到http://localhost:3000服务器上。同时，我们还设置了changeOrigin选项为true，以改变请求头中的Origin字段，并使用pathRewrite选项将请求路径中的/api前缀替换为空。\",\"当 changeOrigin 设置为 true 时，代理服务器会将请求头中的 Origin 字段替换为目标服务器的地址，这样目标服务器就可以正确识别请求来源。否则，目标服务器可能会拒绝请求或返回错误的响应。\",\"除了对象方式的proxy选项外，还可以使用函数方式的proxy选项来进行更灵活的配置。例如：\",\"module.exports = { // ... devServer: { proxy: (req, res, proxyOptions) => { const target = 'http://localhost:3000'; if (req.url.startsWith('/api')) { return { target, changeOrigin: true, pathRewrite: { '^/api': '', }, }; } }, }, }; \",\"在这个示例中，我们使用函数方式的proxy选项来动态配置代理规则。如果请求路径以/api开头，则将其转发到http://localhost:3000服务器上，并使用相应的选项进行配置。\",\"默认情况下，将不接受在 HTTPS 上运行且证书无效的后端服务器。 如果需要，可以这样修改配置：\",\"module.exports = { //... devServer: { proxy: { '/api': { target: 'https://other-server.example.com', secure: false, }, }, }, }; \"]},\"263\":{\"h\":\"historyApiFallback\",\"t\":[\"historyApiFallback 是 webpack-dev-server 的一个配置项，用于控制当使用 HTML5 History API 时，如果找不到对应的资源应该返回什么页面。\",\"当浏览器使用 HTML5 History API 进行前端路由跳转时，例如从 /home 跳转到 /about，浏览器会向服务器发送一个 GET 请求，但是服务器上并没有对应的 /about 路径和资源，此时会返回 404 错误。为了避免这种情况，historyApiFallback 可以设置一个默认的页面，用于代替 404 错误页面。\",\"例如，设置 historyApiFallback: true 后，当访问一个不存在的路由时，webpack-dev-server 会返回一个默认的 HTML 页面，通常是 index.html。这个页面会包含前端路由所需的 JavaScript 和 CSS 资源，从而保证前端路由跳转的正常运行。\",\"需要注意的是，在生产环境中，historyApiFallback 应该由服务器来处理，而不是由前端框架或工具来处理。\",\"https://webpack.docschina.org/configuration/dev-server/#devserverhistoryapifallback\",\"module.exports = { // ...其他配置项 devServer: { port: 8080, proxy: { '/api': { target: 'http://localhost:3000', changeOrigin: true } }, historyApiFallback: true } } \",\"要将 404 错误跳转到一个名为 404.html 的页面，你可以通过 historyApiFallback 的 rewrites 选项来实现。以下是一个示例配置：\",\"module.exports = { //... devServer: { historyApiFallback: { rewrites: [ { from: /^\\\\/$/, to: '/views/landing.html' }, { from: /^\\\\/subpage/, to: '/views/subpage.html' }, { from: /./, to: '/views/404.html' }, ], }, }, }; \",\"在上述配置中，我们使用了 rewrites 数组来定义重写规则。第一个规则 { from: /^\\\\/$/, to: '/index.html' } 将根路径 / 重写到 index.html 页面，这样确保了默认路径的正确加载。第二个规则 { from: /./, to: '/404.html' } 将所有其他路径都重写到 404.html 页面，实现了将 404 错误跳转到指定页面的效果。\"]},\"264\":{\"h\":\"resolve模块解析\",\"t\":[\"https://webpack.docschina.org/configuration/resolve\",\"resolve 是 webpack 中的一个配置选项，用于配置模块解析的规则。 \",\"在开发中我们会有各种各样的模块依赖，这些模块可能来自于自己编写的代码，也可能来自第三方库；\",\"resolve可以帮助webpack从每个 require/import 语句中，找到需要引入到合适的模块代码；\",\"webpack 使用 enhanced-resolve 来解析文件路径；\",\"extensions extensions 用于配置在导入模块时可以省略的文件扩展名。例如，配置了 extensions: ['.js', '.jsx'] 后，当导入模块时可以省略文件扩展名，如 import MyComponent from './MyComponent'，webpack 会自动尝试解析 MyComponent.js 或 MyComponent.jsx。\",\"alias alias 用于创建模块的别名，可以简化模块导入的路径。例如，配置了 alias: { '@': path.resolve(__dirname, 'src') } 后，可以使用import MyComponent from '@/components/MyComponent'来导入位于 src/components/MyComponent 的模块。\",\"modules modules 用于配置 webpack 在解析模块时搜索的目录。默认情况下，webpack 只会搜索 node_modules 目录。通过配置 modules，可以告诉 webpack 在其他目录中查找模块。例如，配置了 modules: ['src', 'node_modules'] 后，webpack 会先在 src 目录中查找模块，然后再在 node_modules 目录中查找。\",\"mainFields mainFields 用于配置在导入模块时，webpack 优先使用的字段。当导入一个模块时，它可能在 package.json 文件中定义了多个入口字段（如 main, module, browser 等）。通过配置 mainFields，可以告诉 webpack 使用哪个字段作为模块的主入口。例如，配置了 mainFields: ['browser', 'module', 'main'] 后，webpack 会优先使用 browser 字段，然后是 module 字段，最后是 main 字段。\",\"module.exports = { // ...其他配置项 resolve: { extensions: ['.js', '.jsx'], alias: { // alias：创建了一个别名 @，指向项目根目录下的 src 目录。 '@': path.resolve(__dirname, 'src') }, modules: ['src', 'node_modules'], mainFields: ['browser', 'module', 'main'] } } \",\"webpack能解析三种文件路径： \",\"绝对路径 \",\"由于已经获得文件的绝对路径，因此不需要再做进一步解析。\",\"相对路径 \",\"在这种情况下，使用 import 或 require 的资源文件所处的目录，被认为是上下文目录；\",\"在 import/require 中给定的相对路径，会拼接此上下文路径，来生成模块的绝对路径；\",\"模块路径 \",\"在 resolve.modules中指定的所有目录检索模块； \",\"默认值是 [‘node_modules’]，所以默认会从node_modules中查找文件；\",\"我们可以通过设置别名的方式来替换初识模块路径，具体后面讲解alias的配置；\"]},\"265\":{\"h\":\"区分开发/ 生产环境\",\"t\":[\"目前我们所有的webpack配置信息都是放到一个配置文件中的：webpack.config.js \",\"当配置越来越多时，这个文件会变得越来越不容易维护；\",\"并且某些配置是在开发环境需要使用的，某些配置是在生成环境需要使用的，当然某些配置是在开发和生成环 境都会使用的；\",\"所以，我们最好对配置进行划分，方便我们维护和管理；\",\"方案一：编写两个不同的配置文件，开发和生成时，分别加载不同的配置文件即可；\",\"// package.json \\\"scripts\\\": { \\\"build\\\": \\\"webpack --config ./config/webpack.prod.config.js\\\", \\\"serve\\\": \\\"webpack serve --config ./config/webpack.dev.config.js\\\" } \",\"image-20231119222920881\",\"const { merge } = require('webpack-merge'); const commonConfig = require('./webpack.comm.config'); module.exports = merge(commonConfig, { mode: \\\"development\\\", devtool: \\\"source-map\\\", devServer: { contentBase: \\\"./public\\\", hot: true, // host: \\\"0.0.0.0\\\", port: 7777, open: true, // compress: true, proxy: { \\\"/api\\\": { target: \\\"http://localhost:8888\\\", pathRewrite: { \\\"^/api\\\": \\\"\\\" }, secure: false, changeOrigin: true } } }, }) \",\"方式二：使用相同的一个入口配置文件，通过设置参数来区分它们；\",\"const path = require('path'); module.exports = (env, argv) => { const isDev = argv.mode === 'development'; return { mode: argv.mode, entry: './src/index.js', output: { filename: isDev ? 'bundle.js' : 'bundle.[contenthash].js', path: path.resolve(__dirname, 'dist') }, devtool: isDev ? 'eval-source-map' : 'source-map', optimization: { minimize: !isDev }, // ...其他配置项 }; }; \",\"在命令行中，可以通过 --mode 参数来指定 webpack 的构建模式。例如：\",\"webpack --mode development \"]},\"266\":{\"h\":\"VueCLI\",\"t\":[\"https://cli.vuejs.org/zh/\",\"什么是Vue脚手架？\",\"我们前面学习了如何通过webpack配置Vue的开发环境，但是在真实开发中我们不可能每一个项目从头来完成 所有的webpack配置，这样显示开发的效率会大大的降低；\",\"所以在真实开发中，我们通常会使用脚手架来创建一个项目，Vue的项目我们使用的就是Vue的脚手架；\",\"脚手架其实是建筑工程中的一个概念，在我们软件工程中也会将一些帮助我们搭建项目的工具称之为脚手架；\",\"我们可以通过CLI选择项目的配置和创建出我们的项目；\",\"Vue CLI已经内置了webpack相关的配置，我们不需要从零来配置；\",\"Vue CLI 是一个基于 Vue.js 进行快速开发的完整系统，提供：\",\"通过 @vue/cli 实现的交互式的项目脚手架。\",\"通过 @vue/cli + @vue/cli-service-global 实现的零配置原型开发。\",\"一个运行时依赖 (@vue/cli-service)，该依赖： \",\"可升级；\",\"基于 webpack 构建，并带有合理的默认配置；\",\"可以通过项目内的配置文件进行配置；\",\"可以通过插件进行扩展。\",\"一个丰富的官方插件集合，集成了前端生态中最好的工具。\",\"一套完全图形化的创建和管理 Vue.js 项目的用户界面。\",\"Vue CLI 致力于将 Vue 生态中的工具基础标准化。它确保了各种构建工具能够基于智能的默认配置即可平稳衔接，这样你可以专注在撰写应用上，而不必花好几天去纠结配置的问题。与此同时，它也为每个工具提供了调整配置的灵活性，无需 eject。\"]},\"267\":{\"h\":\"Vue CLI 安装\",\"t\":[\"Node 版本要求\",\"Vue CLI 4.x 需要 Node.js v8.9 或更高版本 (推荐 v10 以上)。你可以使用 n，nvm 或 nvm-windows 在同一台电脑中管理多个 Node 版本。\",\"可以使用下列任一命令安装这个新的包：\",\"npm install -g @vue/cli # OR yarn global add @vue/cli \",\"安装之后，你就可以在命令行中访问 vue 命令。你可以通过简单运行 vue，看看是否展示出了一份所有可用命令的帮助信息，来验证它是否安装成功。你还可以用这个命令来检查其版本是否正确：\",\"vue --version \",\"如需升级全局的 Vue CLI 包，请运行：\",\"npm update -g @vue/cli # 或者 yarn global upgrade --latest @vue/cli \",\"上面列出来的命令是用于升级全局的 Vue CLI。如需升级项目中的 Vue CLI 相关模块（以 @vue/cli-plugin- 或 vue-cli-plugin- 开头），请在项目目录下运行 vue upgrade：\",\"用法： upgrade [options] [plugin-name] （试用）升级 Vue CLI 服务及插件 选项： -t, --to <version> 升级 <plugin-name> 到指定的版本 -f, --from <version> 跳过本地版本检测，默认插件是从此处指定的版本升级上来 -r, --registry <url> 使用指定的 registry 地址安装依赖 --all 升级所有的插件 --next 检查插件新版本时，包括 alpha/beta/rc 版本在内 -h, --help 输出帮助内容 \"]},\"268\":{\"h\":\"创建一个项目\",\"t\":[\"运行以下命令来创建一个新项目：\",\"vue create hello-world \",\"选择预设 \",\"Default ([Vue 3] babel, eslint): 选择 Vue3 版本, 并且默认选择 babel, eslint\",\"Default ([Vue 2] babel, eslint): 选择 Vue2 版本, 并且默认选择 babel, eslint\",\"Manually select features: 手动选择需要获取的特性\",\"image-20231122103332793\",\"我们选择 Manually select features\",\"Babel: Babel是一个JavaScript编译器，用于将新版本的JavaScript代码转换为向后兼容的旧版本，以便在不同浏览器和环境中运行。\",\"TypeScript: TypeScript是一种静态类型的JavaScript超集，它添加了类型注解和其他特性，以提供更强大的开发工具和更可靠的代码。\",\"Progressive Web App (PWA) Support: PWA是一种使用现代Web技术构建的应用程序，可以在各种设备和平台上提供类似原生应用的体验。\",\"Router: Vue Router是Vue.js官方提供的路由管理器，用于实现单页面应用程序（SPA）中的导航和路由功能。\",\"Vuex: Vuex是Vue.js官方提供的状态管理库，用于在大型应用程序中管理和共享状态。\",\"CSS Pre-processors: CSS预处理器（如Sass、Less）允许您在编写CSS时使用变量、嵌套规则、函数等高级功能，以提高样式表的可维护性和可重用性。\",\"Linter / Formatter: 代码检查工具（如ESLint）用于强制执行一致的代码风格和检测潜在的错误。代码格式化工具（如Prettier）可自动格式化代码，使其符合统一的样式规范。\",\"Unit Testing: 单元测试是一种软件测试方法，用于验证应用程序中各个部分的功能是否按预期工作。\",\"E2E Testing: 端到端（End-to-End）测试是一种测试方法，用于模拟用户在应用程序中执行的实际操作，以验证整个应用程序的功能和流程。\",\"image-20231122103618450\",\"选择 Vue 版本\",\"image-20231122103654515\",\"Pick a linter / formatter config: 选择的代码检查和格式化配置\",\"ESLint with error prevention only：仅使用ESLint进行错误检查，不应用其他格式化规则。\",\"ESLint + Airbnb config：使用ESLint进行错误检查，并应用Airbnb JavaScript风格指南的格式化规则。\",\"ESLint + Standard config：使用ESLint进行错误检查，并应用JavaScript Standard风格的格式化规则。\",\"ESLint + Prettier：使用ESLint进行错误检查，并与Prettier代码格式化工具集成，以实现一致的代码样式\",\"Pick additional lint features: 可供选择的附加代码检查功能\",\"Lint on save：在保存文件时运行代码检查，以及在编辑器中进行实时错误检测和提示。\",\"Lint and fix on commit：在提交代码时运行代码检查，并自动修复一些常见的问题，以确保提交的代码符合规范。\",\"Where do you prefer placing config for Babel, ESLint, etc.? 配置文件位置选择\",\"In dedicated config files：将Babel、ESLint等配置信息分别保存在它们各自的配置文件中（如.babelrc、.eslintrc等。\",\"In package.json：将Babel、ESLint等配置信息保存在package.json文件的特定字段中，如babel、eslintConfig等。\",\"Save this as a preset for future projects? (y/N) 这是一个保存预设供以后使用的选项，如果您希望将当前配置保存为预设，以便在将来的项目中重用，可以选择“y”，否则选择“N”。\",\"您还可以使用图形界面使用以下vue ui命令创建和管理项目：\",\"vue ui \",\"界面预览\"]},\"269\":{\"h\":\"项目结构\",\"t\":[\"|-node_modules -- 所有的项目依赖包都放在这个目录下 |-public -- 公共文件夹 ---|favicon.ico -- 网站的显示图标 ---|index.html -- 入口的html文件 |-src -- 源文件目录，编写的代码基本都在这个目录下 ---|assets -- 放置静态文件的目录，比如logo.png就放在这里 ---|components -- Vue的组件文件，自定义的组件都会放到这 ---|App.vue -- 根组件，这个在Vue2中也有 ---|main.ts -- 入口文件，因为采用了TypeScript所以是ts结尾 ---|shims-vue.d.ts -- 类文件(也叫定义文件)，因为.vue结尾的文件在ts中不认可，所以要有定义文件 |-.browserslistrc -- 在不同前端工具之间公用目标浏览器和node版本的配置文件，作用是设置兼容性 |-.eslintrc.js -- Eslint的配置文件，不用作过多介绍 |-.gitignore -- 用来配置那些文件不归git管理 |-package.json -- 命令配置和包管理文件 |-README.md -- 项目的说明文件，使用markdown语法进行编写 |-tsconfig.json -- 关于TypeScript的配置文件 |-yarn.lock -- 使用yarn后自动生成的文件，由Yarn管理，安装yarn包时的重要信息存储到yarn.lock文件中 \",\"在一个 Vue CLI 项目中，@vue/cli-service 安装了一个名为 vue-cli-service 的命令。你可以在 npm scripts 中以 vue-cli-service、或者从终端中以 ./node_modules/.bin/vue-cli-service 访问这个命令。\",\"\\\"scripts\\\": { \\\"serve\\\": \\\"vue-cli-service serve\\\", \\\"build\\\": \\\"vue-cli-service build\\\", \\\"lint\\\": \\\"vue-cli-service lint\\\" } \",\"你可以通过 npm 或 Yarn 调用这些 script：\",\"npm run serve # OR yarn serve \",\"如果你可以使用 npx (最新版的 npm 应该已经自带)，也可以直接这样调用命令：\",\"npx vue-cli-service serve \"]},\"270\":{\"h\":\"vue-cli-service serve\",\"t\":[\"用法：vue-cli-service serve [options] [entry] 选项： --open 在服务器启动时打开浏览器 --copy 在服务器启动时将 URL 复制到剪切版 --mode 指定环境模式 (默认值：development) --host 指定 host (默认值：0.0.0.0) --port 指定 port (默认值：8080) --https 使用 https (默认值：false) \",\"vue-cli-service serve 命令会启动一个开发服务器 (基于 webpack-dev-server) 并附带开箱即用的模块热重载 (Hot-Module-Replacement)。\",\"除了通过命令行参数，你也可以使用 vue.config.js 里的 devServer 字段配置开发服务器。\",\"命令行参数 [entry] 将被指定为唯一入口 (默认值：src/main.js，TypeScript 项目则为 src/main.ts)，而非额外的追加入口。尝试使用 [entry] 覆盖 config.pages 中的 entry 将可能引发错误。\"]},\"271\":{\"h\":\"vue-cli-service build\",\"t\":[\"用法：vue-cli-service build [options] [entry|pattern] 选项： --mode 指定环境模式 (默认值：production) --dest 指定输出目录 (默认值：dist) --modern 面向现代浏览器带自动回退地构建应用 --target app | lib | wc | wc-async (默认值：app) --name 库或 Web Components 模式下的名字 (默认值：package.json 中的 \\\"name\\\" 字段或入口文件名) --no-clean 在构建项目之前不清除目标目录的内容 --report 生成 report.html 以帮助分析包内容 --report-json 生成 report.json 以帮助分析包内容 --watch 监听文件变化 \",\"vue-cli-service build 会在 dist/ 目录产生一个可用于生产环境的包，带有 JS/CSS/HTML 的压缩，和为更好的缓存而做的自动的 vendor chunk splitting。它的 chunk manifest 会内联在 HTML 里。\",\"这里还有一些有用的命令参数：\",\"--modern 使用现代模式构建应用，为现代浏览器交付原生支持的 ES2015 代码，并生成一个兼容老浏览器的包用来自动回退。\",\"--target 允许你将项目中的任何组件以一个库或 Web Components 组件的方式进行构建。更多细节请查阅构建目标。\",\"--report 和 --report-json 会根据构建统计生成报告，它会帮助你分析包中包含的模块们的大小。\"]},\"272\":{\"h\":\"vue-cli-service inspect\",\"t\":[\"用法：vue-cli-service inspect [options] [...paths] 选项： --mode 指定环境模式 (默认值：development) \",\"如果你想要设置 inspect 命令的选项，可以在命令后面添加对应的参数。例如，如果你想要查看生产环境的 webpack 配置，可以运行以下命令：vue-cli-service inspect --mode production\",\"你也可以通过在 vue.config.js 文件中配置 configureWebpack 选项来修改 webpack 配置。这个选项允许你返回一个对象或函数来修改默认的 webpack 配置。例如：\",\"module.exports = { configureWebpack: { plugins: [ // 添加一个插件 ] } } \",\"你可以使用 vue-cli-service inspect 来审查一个 Vue CLI 项目的 webpack config。更多细节请查阅审查 webpack config。\"]},\"273\":{\"h\":\"动态组件\"},\"274\":{\"h\":\"切换组件案例\",\"t\":[\"比如我们现在想要实现了一个功能：\",\"点击一个tab-bar，切换不同的组件显示；\",\"这个案例我们可以通过两种不同的实现思路来实现：\",\"方式一：通过v-if来判断，显示不同的组件；\",\"方式二：动态组件的方式；\"]},\"275\":{\"h\":\"v-if显示不同的组件\",\"t\":[\"<template> <div> <button v-for=\\\"item in tabs\\\" :key=\\\"item\\\" @click=\\\"itemClick(item)\\\" :class=\\\"{ active: currentTab === item }\\\"> {{ item }} </button> <!-- 1.v-if的判断实现 --> <template v-if=\\\"currentTab === 'home'\\\"> <home></home> </template> <template v-else-if=\\\"currentTab === 'about'\\\"> <about></about> </template> <template v-else> <category></category> </template> </div> </template> \"]},\"276\":{\"h\":\"动态组件\",\"t\":[\"Vue.js 的动态组件是指可以根据不同的数据渲染不同的组件的功能。你可以使用 Vue.js 的 <component> 元素来实现动态组件。\",\"例如，你可以在父组件中定义一个数据属性，根据这个属性的值来决定渲染哪个子组件。然后，在模板中使用 <component> 元素，并将该数据属性绑定到 is 属性上，这样就可以动态地渲染不同的子组件了。\",\"<script> import Home from './Home.vue' import Posts from './Posts.vue' import Archive from './Archive.vue' export default { components: { Home, Posts, Archive }, data() { return { currentTab: 'Home', tabs: ['Home', 'Posts', 'Archive'] } } } </script> <template> <div class=\\\"demo\\\"> <button v-for=\\\"tab in tabs\\\" :key=\\\"tab\\\" :class=\\\"['tab-button', { active: currentTab === tab }]\\\" @click=\\\"currentTab = tab\\\" > {{ tab }} </button> <component :is=\\\"currentTab\\\" class=\\\"tab\\\"></component> </div> </template> \"]},\"277\":{\"h\":\"动态组件的传值\",\"t\":[\"<component :is=\\\"currentTab\\\" name=\\\"coderwhy\\\" :age=\\\"18\\\" @pageClick=\\\"pageClick\\\"> </component> \",\"pageClick() { console.log(\\\"page内部发生了点击\\\"); } \",\"export default { name: \\\"home\\\", props: { name: { type: String, default: \\\"\\\" }, age: { type: Number, default: 0 } } } \"]},\"278\":{\"h\":\"keep-alive\",\"t\":[\"https://cn.vuejs.org/guide/built-ins/keep-alive.html#keepalive\",\"<KeepAlive> 是一个内置组件，它的功能是在多个组件间动态切换时缓存被移除的组件实例。\",\"默认情况下，一个组件实例在被替换掉后会被销毁。这会导致它丢失其中所有已变化的状态——当这个组件再一次被显示时，会创建一个只带有初始状态的新实例。\",\"在切换时创建新的组件实例通常是有意义的，但在这个例子中，我们的确想要组件能在被“切走”的时候保留它们的状态。要解决这个问题，我们可以用 <KeepAlive> 内置组件将这些动态组件包装起来：\",\"<!-- 非活跃的组件将会被缓存！ --> <KeepAlive> <component :is=\\\"activeComponent\\\" /> </KeepAlive> \",\"在 DOM 内模板中使用时，它应该被写为 <keep-alive>。\"]},\"279\":{\"h\":\"包含/排除\",\"t\":[\"<KeepAlive> 默认会缓存内部的所有组件实例，但我们可以通过 include 和 exclude prop 来定制该行为。这两个 prop 的值都可以是一个以英文逗号分隔的字符串、一个正则表达式，或是包含这两种类型的一个数组：\",\"<!-- 以英文逗号分隔的字符串 --> <KeepAlive include=\\\"a,b\\\"> <component :is=\\\"view\\\" /> </KeepAlive> <!-- 正则表达式 (需使用 `v-bind`) --> <KeepAlive :include=\\\"/a|b/\\\"> <component :is=\\\"view\\\" /> </KeepAlive> <!-- 数组 (需使用 `v-bind`) --> <KeepAlive :include=\\\"['a', 'b']\\\"> <component :is=\\\"view\\\" /> </KeepAlive> \",\"它会根据组件的 name 选项进行匹配，所以组件如果想要条件性地被 KeepAlive 缓存，就必须显式声明一个 name 选项。\"]},\"280\":{\"h\":\"最大缓存实例数\",\"t\":[\"我们可以通过传入 max prop 来限制可被缓存的最大组件实例数。<KeepAlive> 的行为在指定了 max 后类似一个 LRU 缓存：如果缓存的实例数量即将超过指定的那个最大数量，则最久没有被访问的缓存实例将被销毁，以便为新的实例腾出空间。\",\"<KeepAlive :max=\\\"10\\\"> <component :is=\\\"activeComponent\\\" /> </KeepAlive> \"]},\"281\":{\"h\":\"异步组件\",\"t\":[\"https://cn.vuejs.org/guide/components/async.html#async-components\"]},\"282\":{\"h\":\"基本用法\",\"t\":[\"在大型项目中，我们可能需要拆分应用为更小的块，并仅在需要时再从服务器加载相关组件。Vue 提供了 defineAsyncComponent 方法来实现此功能：\",\"import { defineAsyncComponent } from 'vue' const AsyncComp = defineAsyncComponent(() => { return new Promise((resolve, reject) => { // ...从服务器获取组件 resolve(/* 获取到的组件 */) }) }) // ... 像使用其他一般组件一样使用 `AsyncComp` \",\"如你所见，defineAsyncComponent 方法接收一个返回 Promise 的加载函数。这个 Promise 的 resolve 回调方法应该在从服务器获得组件定义时调用。你也可以调用 reject(reason) 表明加载失败。\",\"ES 模块动态导入也会返回一个 Promise，所以多数情况下我们会将它和 defineAsyncComponent 搭配使用。类似 Vite 和 Webpack 这样的构建工具也支持此语法 (并且会将它们作为打包时的代码分割点)，因此我们也可以用它来导入 Vue 单文件组件：\",\"import { defineAsyncComponent } from 'vue' const AsyncComp = defineAsyncComponent(() => import('./components/MyComponent.vue') ) \",\"最后得到的 AsyncComp 是一个外层包装过的组件，仅在页面需要它渲染时才会调用加载内部实际组件的函数。它会将接收到的 props 和插槽传给内部组件，所以你可以使用这个异步的包装组件无缝地替换原始组件，同时实现延迟加载。\",\"defineAsyncComponent接受两种类型的参数：\",\"类型一：工厂函数，该工厂函数需要返回一个Promise对象；\",\"import { defineAsyncComponent } from 'vue'; const AsyncCategory = defineAsyncComponent(() => import(\\\"./AsyncCategory.vue\\\")) export default { components: { Home, AsyncCategory, Loading } } \",\"类型二：接受一个对象类型，对异步函数进行配置；\",\"异步操作不可避免地会涉及到加载和错误状态，因此 defineAsyncComponent() 也支持在高级选项中处理这些状态：\",\"const AsyncCategory = defineAsyncComponent({ loader: () => import(\\\"./AsyncCategory.vue\\\"), loadingComponent: Loading, // errorComponent, // 在显示loadingComponent组件之前, 等待多长时间 delay: 2000, // 加载失败后展示的组件 errorComponent: ErrorComponent, // 如果提供了一个 timeout 时间限制，并超时了 // 也会显示这里配置的报错组件，默认值是：Infinity timeout: 3000 }) \",\"function defineAsyncComponent( source: AsyncComponentLoader | AsyncComponentOptions ): Component type AsyncComponentLoader = () => Promise<Component> interface AsyncComponentOptions { loader: AsyncComponentLoader loadingComponent?: Component errorComponent?: Component delay?: number timeout?: number suspensible?: boolean onError?: ( error: Error, retry: () => void, fail: () => void, attempts: number ) => any } \",\"如果提供了一个加载组件，它将在内部组件加载时先行显示。在加载组件显示之前有一个默认的 200ms 延迟——这是因为在网络状况较好时，加载完成得很快，加载组件和最终组件之间的替换太快可能产生闪烁，反而影响用户感受。\",\"如果提供了一个报错组件，则它会在加载器函数返回的 Promise 抛错时被渲染。你还可以指定一个超时时间，在请求耗时超过指定时间时也会渲染报错组件。\"]},\"283\":{\"h\":\"搭配 Suspense 使用\",\"t\":[\"https://cn.vuejs.org/guide/built-ins/suspense.html\",\"<Suspense> 是一项实验性功能。它不一定会最终成为稳定功能，并且在稳定之前相关 API 也可能会发生变化。\",\"<Suspense> 是一个内置组件，用来在组件树中协调对异步依赖的处理。它让我们可以在组件树上层等待下层的多个嵌套异步依赖项解析完成，并可以在等待时渲染一个加载状态。\",\"<Suspense> 组件有两个插槽：#default 和 #fallback。两个插槽都只允许一个直接子节点。在可能的时候都将显示默认槽中的节点。否则将显示后备槽中的节点。\",\"<suspense> <!-- 具有深层异步依赖的组件 --> <template #default> <async-category></async-category> </template> <!-- 在 #fallback 插槽中显示 “正在加载中” --> <template #fallback> <loading></loading> </template> </suspense> \",\"在初始渲染时，<Suspense> 将在内存中渲染其默认的插槽内容。如果在这个过程中遇到任何异步依赖，则会进入挂起状态。在挂起状态期间，展示的是后备内容。当所有遇到的异步依赖都完成后，<Suspense> 会进入完成状态，并将展示出默认插槽的内容。\",\"如果在初次渲染时没有遇到异步依赖，<Suspense> 会直接进入完成状态。\",\"进入完成状态后，只有当默认插槽的根节点被替换时，<Suspense> 才会回到挂起状态。组件树中新的更深层次的异步依赖不会造成 <Suspense> 回退到挂起状态。\",\"发生回退时，后备内容不会立即展示出来。相反，<Suspense> 在等待新内容和异步依赖完成时，会展示之前 #default 插槽的内容。这个行为可以通过一个 timeout prop 进行配置：在等待渲染新内容耗时超过 timeout 之后，<Suspense> 将会切换为展示后备内容。若 timeout 值为 0 将导致在替换默认内容时立即显示后备内容。\"]},\"284\":{\"h\":\"和其他组件结合\",\"t\":[\"我们常常会将 <Suspense> 和 ](https://cn.vuejs.org/guide/built-ins/transition.html)、[ 等组件结合。要保证这些组件都能正常工作，嵌套的顺序非常重要。\",\"另外，这些组件都通常与 Vue Router 中的 <RouterView> 组件结合使用。\",\"下面的示例展示了如何嵌套这些组件，使它们都能按照预期的方式运行。若想组合得更简单，你也可以删除一些你不需要的组件：\",\"<RouterView v-slot=\\\"{ Component }\\\"> <template v-if=\\\"Component\\\"> <Transition mode=\\\"out-in\\\"> <KeepAlive> <Suspense> <!-- 主要内容 --> <component :is=\\\"Component\\\"></component> <!-- 加载中状态 --> <template #fallback> 正在加载... </template> </Suspense> </KeepAlive> </Transition> </template> </RouterView> \",\"Vue Router 使用动态导入对懒加载组件进行了内置支持。这些与异步组件不同，目前他们不会触发 <Suspense>。但是，它们仍然可以有异步组件作为后代，这些组件可以照常触发 <Suspense>。\"]},\"285\":{\"h\":\"插槽\",\"t\":[\"https://cn.vuejs.org/guide/components/slots.html#slots\"]},\"286\":{\"h\":\"认识组件 Slot\",\"t\":[\"在开发中，我们会经常封装一个个可复用的组件： \",\"前面我们会通过props传递给组件一些数据，让组件来进行展示；\",\"但是为了让这个组件具备更强的通用性，我们不能将组件中的内容限制为固定的div、span等等这些元素；\",\"比如某种情况下我们使用组件，希望组件显示的是一个按钮，某种情况下我们使用组件希望显示的是一张图片；\",\"我们应该让使用者可以决定某一块区域到底存放什么内容和元素；\",\"举个栗子：假如我们定制一个通用的导航组件 - NavBar\",\"这个组件分成三块区域：左边-中间-右边，每块区域的内容是不固定；\",\"左边区域可能显示一个菜单图标，也可能显示一个返回按钮，可能什么都不显示；\",\"中间区域可能显示一个搜索框，也可能是一个列表，也可能是一个标题，等等；\",\"右边可能是一个文字，也可能是一个图标，也可能什么都不显示；\",\"在这里插入图片描述\"]},\"287\":{\"h\":\"如何使用插槽slot？\",\"t\":[\"这个时候我们就可以来定义插槽slot： \",\"插槽的使用过程其实是抽取共性、预留不同；\",\"我们会将共同的元素、内容依然在组件内进行封装；\",\"同时会将不同的元素使用 slot 作为占位，让外部决定到底显示什么样的元素；\",\"如何使用slot呢？ \",\"Vue中将 元素作为承载分发内容的出口；\",\"在封装组件中，使用特殊的元素就可以为封装组件开启一个插槽；\",\"该插槽插入什么内容取决于父组件如何使用；\"]},\"288\":{\"h\":\"插槽的基本使用\",\"t\":[\"<script> import FancyButton from './FancyButton.vue' export default { components: { FancyButton } } </script> <template> <FancyButton> Click me <!-- slot content --> </FancyButton> <FancyButton> </FancyButton> </template> \",\"<template> <button class=\\\"fancy-btn\\\"> <slot> Hello </slot> </button> </template> <style> .fancy-btn { color: #fff; background: linear-gradient(315deg, #42d392 25%, #647eff); border: none; padding: 5px 10px; margin: 5px; border-radius: 8px; cursor: pointer; } </style> \",\"<slot> 元素是一个插槽出口 (slot outlet)，标示了父元素提供的插槽内容 (slot content) 将在哪里被渲染。\",\"image-20231205010910410\",\"通过使用插槽，<FancyButton> 仅负责渲染外层的 <button> (以及相应的样式)，而其内部的内容由父组件提供。\",\"理解插槽的另一种方式是和下面的 JavaScript 函数作类比，其概念是类似的：\",\"// 父元素传入插槽内容 FancyButton('Click me!') // FancyButton 在自己的模板中渲染插槽内容 function FancyButton(slotContent) { return `<button class=\\\"fancy-btn\\\"> ${slotContent} </button>` } \",\"插槽内容可以是任意合法的模板内容，不局限于文本。例如我们可以传入多个元素，甚至是组件：\",\"<FancyButton> <span style=\\\"color:red\\\">Click me!</span> <AwesomeIcon name=\\\"plus\\\" /> </FancyButton> \"]},\"289\":{\"h\":\"插槽的默认内容\",\"t\":[\"在外部没有提供任何内容的情况下，可以为插槽指定默认内容。比如有这样一个 <SubmitButton> 组件：\",\"<button type=\\\"submit\\\"> <slot></slot> </button> \",\"如果我们想在父组件没有提供任何插槽内容时在 <button> 内渲染“Submit”，只需要将“Submit”写在 <slot> 标签之间来作为默认内容：\",\"<button type=\\\"submit\\\"> <slot> Submit <!-- 默认内容 --> </slot> </button> \",\"现在，当我们在父组件中使用 <SubmitButton> 且没有提供任何插槽内容时：\",\"<SubmitButton /> \",\"“Submit”将会被作为默认内容渲染：\",\"<button type=\\\"submit\\\">Submit</button> \",\"但如果我们提供了插槽内容：\",\"<SubmitButton>Save</SubmitButton> \",\"那么被显式提供的内容会取代默认内容：\",\"<button type=\\\"submit\\\">Save</button> \"]},\"290\":{\"h\":\"多个插槽的效果\",\"t\":[\"<template> <div> <my-slot-cpn> <button>我是按钮</button> </my-slot-cpn> <my-slot-cpn> 我是普通的文本 </my-slot-cpn> <my-slot-cpn></my-slot-cpn> <my-slot-cpn> <h2>哈哈哈</h2> <button>我是按钮</button> <strong>我是strong</strong> </my-slot-cpn> </div> </template> <script> import MySlotCpn from './MySlotCpn.vue'; export default { components: { MySlotCpn, } } </script> \",\"<template> <div> <h2>组件开始</h2> <slot> <i>我是默认的i元素</i> </slot> <slot> <i>我是默认的i元素</i> </slot> <slot> <i>我是默认的i元素</i> </slot> <h2>组件结束</h2> </div> </template> \",\"image-20231205011717002\"]},\"291\":{\"h\":\"具名插槽的使用\",\"t\":[\"有时在一个组件中包含多个插槽出口是很有用的。举例来说，在一个 <BaseLayout> 组件中，有如下模板：\",\"<div class=\\\"container\\\"> <header> <!-- 标题内容放这里 --> </header> <main> <!-- 主要内容放这里 --> </main> <footer> <!-- 底部内容放这里 --> </footer> </div> \",\"对于这种场景，<slot> 元素可以有一个特殊的 attribute name，用来给各个插槽分配唯一的 ID，以确定每一处要渲染的内容：\",\"<div class=\\\"container\\\"> <header> <slot name=\\\"header\\\"></slot> </header> <main> <slot></slot> </main> <footer> <slot name=\\\"footer\\\"></slot> </footer> </div> \",\"这类带 name 的插槽被称为具名插槽 (named slots)。没有提供 name 的 <slot> 出口会隐式地命名为“default”。\",\"在父组件中使用 <BaseLayout> 时，我们需要一种方式将多个插槽内容传入到各自目标插槽的出口。此时就需要用到具名插槽了：\",\"要为具名插槽传入内容，我们需要使用一个含 v-slot 指令的 <template> 元素，并将目标插槽的名字传给该指令：\",\"<BaseLayout> <template v-slot:header> <!-- header 插槽的内容放这里 --> </template> </BaseLayout> \",\"v-slot 有对应的简写 #，因此 <template v-slot:header> 可以简写为 <template #header>。其意思就是“将这部分模板片段传入子组件的 header 插槽中”。\",\"image-20231205012048085\",\"<script> import BaseLayout from './BaseLayout.vue' export default { components: { BaseLayout } } </script> <template> <BaseLayout> <template #header> <h1>Here might be a page title</h1> </template> <template #default> <p>A paragraph for the main content.</p> <p>And another one.</p> </template> <template #footer> <p>Here's some contact info</p> </template> </BaseLayout> </template> \",\"<template> <div class=\\\"container\\\"> <header> <slot name=\\\"header\\\"></slot> </header> <main> <slot></slot> </main> <footer> <slot name=\\\"footer\\\"></slot> </footer> </div> </template> <style> footer { border-top: 1px solid #ccc; color: #666; font-size: 0.8em; } </style> \",\"使用 JavaScript 函数来类比可能更有助于你来理解具名插槽：\",\"// 传入不同的内容给不同名字的插槽 BaseLayout({ header: `...`, default: `...`, footer: `...` }) // <BaseLayout> 渲染插槽内容到对应位置 function BaseLayout(slots) { return `<div class=\\\"container\\\"> <header>${slots.header}</header> <main>${slots.default}</main> <footer>${slots.footer}</footer> </div>` } \"]},\"292\":{\"h\":\"动态插槽名\",\"t\":[\"在Vue 3中，动态插槽名可以使用v-slot指令来实现。你可以将插槽名作为一个变量来传递给v-slot指令，以实现动态插槽名的效果。\",\"例如，如果你有一个动态的插槽名变量slotName，你可以这样使用动态插槽名：\",\"<template v-slot:[slotName]> <!-- 插槽内容 --> </template> \",\"这样，slotName变量的值将作为插槽名来动态指定插槽的位置。\",\"image-20231205012902405\"]},\"293\":{\"h\":\"渲染作用域\",\"t\":[\"插槽内容可以访问到父组件的数据作用域，因为插槽内容本身是在父组件模板中定义的。举例来说：\",\"<span>{{ message }}</span> <FancyButton>{{ message }}</FancyButton> \",\"这里的两个 {{ message }} 插值表达式渲染的内容都是一样的。\",\"插槽内容无法访问子组件的数据。Vue 模板中的表达式只能访问其定义时所处的作用域，这和 JavaScript 的词法作用域规则是一致的。换言之：\",\"父组件模板中的表达式只能访问父组件的作用域；子组件模板中的表达式只能访问子组件的作用域。\"]},\"294\":{\"h\":\"作用域插槽\",\"t\":[\"然而在某些场景下插槽的内容可能想要同时使用父组件域内和子组件域内的数据。要做到这一点，我们需要一种方法来让子组件在渲染时将一部分数据提供给插槽。\",\"我们也确实有办法这么做！可以像对组件传递 props 那样，向一个插槽的出口上传递 attributes：\",\"<script> export default { data() { return { greetingMessage: 'hello' } } } </script> <template> <div> <slot :text=\\\"greetingMessage\\\" :count=\\\"1\\\"></slot> </div> </template> \",\"当需要接收插槽 props 时，默认插槽和具名插槽的使用方式有一些小区别。下面我们将先展示默认插槽如何接受 props，通过子组件标签上的 v-slot 指令，直接接收到了一个插槽 props 对象：\",\"<script> import MyComponent from './MyComponent.vue' export default { components: { MyComponent } } </script> <template> <MyComponent v-slot=\\\"slotProps\\\"> {{ slotProps.text }} {{ slotProps.count }} </MyComponent> </template> \",\"image-20231205013406501\",\"子组件传入插槽的 props 作为了 v-slot 指令的值，可以在插槽内的表达式中访问。\",\"你可以将作用域插槽类比为一个传入子组件的函数。子组件会将相应的 props 作为参数传给它：\",\"MyComponent({ // 类比默认插槽，将其想成一个函数 default: (slotProps) => { return `${slotProps.text} ${slotProps.count}` } }) function MyComponent(slots) { const greetingMessage = 'hello' return `<div>${ // 在插槽函数调用时传入 props slots.default({ text: greetingMessage, count: 1 }) }</div>` } \",\"实际上，这已经和作用域插槽的最终代码编译结果、以及手动编写渲染函数时使用作用域插槽的方式非常类似了。\",\"v-slot=\\\"slotProps\\\" 可以类比这里的函数签名，和函数的参数类似，我们也可以在 v-slot 中使用解构：\",\"<MyComponent v-slot=\\\"{ text, count }\\\"> {{ text }} {{ count }} </MyComponent> \"]},\"295\":{\"h\":\"具名作用域插槽\",\"t\":[\"具名作用域插槽的工作方式也是类似的，插槽 props 可以作为 v-slot 指令的值被访问到：v-slot:name=\\\"slotProps\\\"。\",\"<script> import MyComponent from './MyComponent.vue' export default { components: { MyComponent } } </script> <template> <div> <MyComponent> <template #header=\\\"slotProps\\\"> <h2>{{ slotProps.title }}</h2> </template> <template #content=\\\"slotProps\\\"> <p>{{ slotProps.text }}</p> </template> </MyComponent> </div> </template> \",\"<template> <div> <slot name=\\\"header\\\" :title=\\\"title\\\"></slot> <slot name=\\\"content\\\" :text=\\\"content\\\"></slot> </div> </template> <script> export default { data() { return { title: 'Hello', content: 'This is the content' }; } }; </script> \"]},\"296\":{\"h\":\"独占默认插槽的缩写\",\"t\":[\"如果我们的插槽是默认插槽default，那么在使用的时候 v-slot:default=\\\"slotProps\\\"可以简写为v-slot=“slotProps”\",\"在这里插入图片描述\",\"并且如果我们的插槽只有默认插槽时，组件的标签可以被当做插槽的模板来使用，这样，我们就可以将 v-slot 直接用在组件上\",\"在这里插入图片描述\"]},\"297\":{\"h\":\"默认插槽和具名插槽混合\",\"t\":[\"但是，如果我们有默认插槽和具名插槽，那么按照完整的template来编写。\",\"在这里插入图片描述\",\"只要出现多个插槽，请始终为所有的插槽使用完整的基于\",\"在这里插入图片描述\"]},\"298\":{\"h\":\"组件之间的通信\",\"t\":[\"[TOC]\"]},\"299\":{\"h\":\"认识组件的嵌套\",\"t\":[\"在之前的案例中，我们只是创建了一个组件App；\",\"如果我们一个应用程序将所有的逻辑都放在一个组件中，那么这个组件就会变成非常的臃肿和难以维护；\",\"所以组件化的核心思想应该是对组件进行拆分，拆分成一个个小的组件；\",\"再将这些组件组合嵌套在一起，最终形成我们的应用程序；\",\"我们来分析一下下面代码的嵌套逻辑，假如我们将所有的代码逻辑都放到一个App.vue组件中：\",\"<template> <div> <h2>Header</h2> <h2>NavBar</h2> </div> <div> <h2>Banner</h2> <ul> <li>商品列表1</li> <li>商品列表2</li> <li>商品列表3</li> <li>商品列表4</li> <li>商品列表5</li> </ul> </div> <div> <h2>Footer</h2> <h2>免责声明</h2> </div> </template> <script> export default { }; </script> <style scoped></style> \",\"我们会发现，将所有的代码逻辑全部放到一个组件中，代码是非常的臃肿和难以维护的。并且在真实开发中，我们会有更多的内容和代码逻辑，对于扩展性和可维护性来说都是非常差的。\",\"所有，在真实的开发中，我们会对组件进行拆分，拆分成一个个功能的小组件。\"]},\"300\":{\"h\":\"组件的拆分\",\"t\":[\"如上代码, 我们可以按照如下的方式进行拆分：\",\"App.vue\",\"<template> <div id=\\\"app\\\"> <VueHeader></VueHeader> <VueMain></VueMain> <VueFooter></VueFooter> </div> </template> <script> import VueHeader from './VueHeader.vue'; import VueMain from './VueMain.vue'; import VueFooter from './VueFooter.vue'; export default { name: 'App', components: { VueHeader, VueMain, VueFooter } }; </script> <style scoped></style> \",\"Header.vue组件\",\"<template> <div> <h2>Header</h2> <h2>NavBar</h2> </div> </template> \",\"Main.vue组件：\",\"<template> <div> <vue-banner></vue-banner> <vue-product-list></vue-product-list> </div> </template> <script> import VueBanner from './VueBanner.vue'; import VueProductList from './VueProductList.vue'; export default { name: 'VueMain', components: { VueBanner, VueProductList } }; </script> \",\"Banner.vue组件：\",\"<template> <h2>Banner</h2> </template> \",\"ProductList组件：\",\"<template> <ul> <li>商品列表1</li> <li>商品列表2</li> <li>商品列表3</li> <li>商品列表4</li> <li>商品列表5</li> </ul> </template> \",\"Footer.vue组件：\",\"<template> <div> <h2>Footer</h2> <h2>免责声明</h2> </div> </template> \",\"按照如上的拆分方式后，我们开发对应的逻辑只需要去对应的组件编写就可。\"]},\"301\":{\"h\":\"组件的通信\",\"t\":[\"上面的嵌套逻辑如下，它们存在如下关系：\",\"App组件是Header、Main、Footer组件的父组件；\",\"Main组件是Banner、ProductList组件的父组件；\",\"在开发过程中，我们会经常遇到需要组件之间相互进行通信：\",\"比如App可能使用了多个Header，每个地方的Header展示的内容不同，那么我们就需要使用者传递给Header一些数据，让其进行展示；\",\"又比如我们在Main中一次性请求了Banner数据和ProductList数据，那么就需要传递给他们来进行展示；\",\"也可能是子组件中发生了事件，需要有父组件来完成某些操作，那就需要子组件向父组件传递事件；\",\"父子组件之间如何进行通信呢？\",\"父组件传递给子组件：通过props属性；\",\"子组件传递给父组件：通过$emit触发事件；\",\"image-20231124000011715\"]},\"302\":{\"h\":\"父传子\",\"t\":[\"在开发中很常见的就是父子组件之间通信，比如父组件有一些数据，需要子组件来进行展示：\",\"这个时候我们可以通过props来完成组件之间的通信；\",\"什么是 props?\",\"在Vue3中，props是一种用于向组件传递数据的机制。它允许父组件向子组件传递数据，并在子组件中使用这些数据。\",\"在Vue3中，每个组件都可以定义自己的props，并指定每个prop的类型、默认值和其他验证规则。当父组件向子组件传递数据时，子组件可以使用这些props来访问传递过来的数据。\"]},\"303\":{\"h\":\"props 的定义\",\"t\":[\"在Vue3中，props可以使用两种方式来定义：\",\"字符串数组，数组中的字符串就是attribute的名称；\",\"对象类型，对象类型我们可以在指定attribute名称的同时，指定它需要传递的类型、是否是必须的、默认值等等；\"]},\"304\":{\"h\":\"字符串数组\",\"t\":[\"使用字符串数组的方式，可以简单地指定需要接收的属性名称。在这种情况下，属性类型默认为any。\",\"在下面的示例中，父组件使用message=\\\"Hello from parent\\\"将message属性作为字符串传递给子组件。在子组件中，使用props选项并传递一个字符串数组来定义message属性。这样子组件就可以使用message属性来访问父组件传递过来的数据了。\",\"<!-- App.vue --> <template> <div> <child-component message=\\\"Hello from parent\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue' export default { components: { ChildComponent } } </script> \",\"<!--ChildComponent.vue --> <template> <div> {{ message }} </div> </template> <script> export default { props: ['message'] } </script> \"]},\"305\":{\"h\":\"对象类型\",\"t\":[\"使用对象类型的方式，可以更详细地指定需要接收的属性名称、类型、是否必须、默认值等等。\",\"在下面的示例中，父组件使用:message=\\\"parentMessage\\\"将parentMessage属性作为字符串传递给子组件。在子组件中，使用props选项并传递一个对象来定义message属性。在这个对象中，我们指定了type为字符串、required为true、default为'Hello from child'、以及一个自定义的验证函数。\",\"这样子组件就可以使用message属性来访问父组件传递过来的数据了。\",\"<!-- App.vue --> <template> <div> <child-component :message=\\\"parentMessage\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue' export default { components: { ChildComponent }, data() { return { parentMessage: 'Hello from parent' } } } </script> \",\"<!--ChildComponent.vue --> <template> <div> {{ message }} </div> </template> <script> export default { props: { message: { type: String, // 必须传输? required: true, // 默认值 default: 'Hello from child', // 传递的数据是否符合要求? validator: (value) => { return value.length > 0 }, info: String } } } </script> \"]},\"306\":{\"h\":\"其他\",\"t\":[\"Type的类型都可以是哪些？\",\"String：用于指定字符串类型的属性。\",\"Number：用于指定数字类型的属性。\",\"Boolean：用于指定布尔类型的属性。\",\"Array：用于指定数组类型的属性。\",\"Object：用于指定对象类型的属性。\",\"Date：用于指定日期类型的属性。\",\"Function：用于指定函数类型的属性。\",\"Symbol：用于指定符号类型的属性。\",\"对象类型的其他写法\",\"props: { // 基础的类型检查 (`null` 和 `undefined` 会通过任何类型验证) propA: Number, // 多个可能的类型 propB: [String, Number], // 必填的字符串 propC: { type: String, required: true }, // 带有默认值的数字 propD: { type: Number, default: 100 }, // 带有默认值的对象 propE: { type: Object, // 对象或数组默认值必须从一个工厂函数获取, 因为每个实例需要维护一份被返回对象的独立的副本 default: function () { return { message: 'hello' } } }, // 自定义验证函数 propF: { validator: function (value) { // 这个值必须匹配下列字符串中的一个 return ['success', 'warning', 'danger'].indexOf(value) !== -1 } }, // 具有默认值的函数 propG: { type: Function, // 对象或数组默认值必须从一个工厂函数获取 default: function () { return { message: 'hello' } } } } \",\"Prop 的大小写命名(camelCase vs kebab-case)\",\"在Vue.js中，你可以使用驼峰式(camelCase)或短横线分隔(kebab-case)来命名你的props。然而，由于HTML属性不区分大小写，所以在模板中使用驼峰式命名的props时，需要转换为短横线分隔的形式。\",\"例如，如果你在JavaScript中定义了一个名为myProp的prop，你需要在模板中使用my-prop来引用它。\",\"这是一个例子：\",\"<template> <div> <!-- 在模板中使用短横线分隔的形式 --> <child-component :my-prop=\\\"parentValue\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue'; export default { components: { ChildComponent }, data() { return { parentValue: 'Hello from Parent Component' } } } </script> \",\"<!--ChildComponent.vue --> <template> <div> <!-- 使用prop的值 --> <h2>{{ myProp }}</h2> </div> </template> <script> export default { props: { // 在JavaScript中使用驼峰式命名 myProp: String } } </script> \",\"在这个例子中，父组件将其数据parentValue传递给子组件的myProp prop。注意在父组件模板中，我们使用短横线分隔的形式:my-prop，而在子组件的JavaScript代码中，我们使用驼峰式命名myProp, 这也是官方推荐的写法。\"]},\"307\":{\"h\":\"非 Prop 的Attribute\",\"t\":[\"在Vue.js中，非prop的attribute是指那些被绑定到组件，但没有对应的prop定义的attribute。这些attribute会被添加到组件的根元素上。\",\"例如，如果你有一个组件，它的模板是一个<div>元素，然后你在使用这个组件时添加了一个class或style属性，那么这个class或style属性就会被添加到<div>元素上，即使你没有在组件的props中定义它们。\",\"这是一个例子：\",\"<template> <div> <my-component id=\\\"abc\\\" class=\\\"my-class\\\" style=\\\"color: red;\\\"></my-component> </div> </template> <script> import MyComponent from './MyComponent.vue'; export default { components: { MyComponent } } </script> \",\"在这个例子中，id, class和style就是非prop的attribute。它们会被添加到MyComponent的根元素上。\"]},\"308\":{\"h\":\"禁用 Attribute 继承\",\"t\":[\"如果你不希望非prop的attribute被添加到根元素上，你可以在组件中定义一个inheritAttrs: false选项。这样，非prop的attribute将只能通过$attrs变量来访问，而不会被添加到根元素上。\",\"export default { inheritAttrs: false } \",\"禁用attribute继承的常见情况是需要将attribute应用于根元素之外的其他元素；\",\"我们可以通过 $attrs来访问所有的 非props的attribute；\",\"<template> <div> <h2 v-bind=\\\"$attrs\\\">{{title}}</h2> <p>{{content}}</p> </div> </template> \",\"如上, <h2> 仍然会继承非prop的attribute\"]},\"309\":{\"h\":\"多个根节点的attribute\",\"t\":[\"多个根节点的attribute如果没有显示的绑定，那么会报警告，我们必须手动的指定要绑定到哪一个属性上：\",\"<template> <div :class=\\\"$attrs.class\\\"> 我是NotPropAttribue组件1 </div> <div> 我是NotPropAttribue组件2 </div> <div> 我是NotPropAttribue组件3 </div> </template> \"]},\"310\":{\"h\":\"子传父\",\"t\":[\"什么情况下子组件需要传递内容到父组件呢？\",\"当子组件有一些事件发生的时候，比如在组件中发生了点击，父组件需要切换内容；\",\"子组件有一些内容想要传递给父组件的时候；\",\"我们如何完成上面的操作呢？\",\"首先，我们需要在子组件中定义好在某些情况下触发的事件名称；\",\"其次，在父组件中以v-on的方式传入要监听的事件名称，并且绑定到对应的方法中；\",\"最后，在子组件中发生某个事件的时候，根据事件名称触发对应的事件；\",\"以下是一个简单的示例\",\"<!-- 子组件 --> <template> <button @click=\\\"sendDataToParent\\\">传递数据给父组件</button> </template> <script> export default { methods: { sendDataToParent() { const data = 'Hello, parent!'; // 传递参数给父组件 this.$emit('data-to-parent', data); } } }; </script> \",\"<!-- 父组件 --> <template> <div> <child-component @data-to-parent=\\\"handleDataFromChild\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue'; export default { components: { ChildComponent }, methods: { handleDataFromChild(data) { console.log(data); // 在控制台打印子组件传递的数据 // 在这里处理从子组件接收到的数据 } } }; </script> \"]},\"311\":{\"h\":\"emits\",\"t\":[\"当使用Vue 3时，你可以使用emits选项来对子组件触发的自定义事件进行校验: 使用emits选项可以提供类型检查和错误提示，确保子组件只触发被允许的自定义事件。这有助于提高代码的可维护性和可靠性。以下是一个示例：\",\"export default { // 一般写法 emits: [\\\"add\\\", \\\"sub\\\", \\\"addN\\\"], // 对象写法的目的是为了进行参数的验证 emits: { add: null, sub: null, addN: (num, name, age) => { console.log(num, name, age); if (num > 10) { return true } return false; } } } \"]},\"312\":{\"h\":\"非父子组件之间的通信\",\"t\":[\"在开发中，我们构建了组件树之后，除了父子组件之间的通信之外，还会有非父子组件之间的通信。\",\"这里我们主要讲两种方式：\",\"Provide/Inject\",\"Mitt全局事件总线；\"]},\"313\":{\"h\":\"Provide/Inject\",\"t\":[\"Provide/Inject用于非父子组件之间共享数据：\",\"比如有一些深度嵌套的组件，子组件想要获取父组件的部分内容；\",\"在这种情况下，如果我们仍然将props沿着组件链逐级传递下去，就会非常的麻烦；\",\"对于这种情况下，我们可以使用 Provide 和 Inject ：\",\"无论层级结构有多深，父组件都可以作为其所有子组件的依赖提供者；\",\"父组件有一个 provide 选项来提供数据；\",\"子组件有一个 inject 选项来开始使用这些数据；\",\"image-20231130195805276\",\"实际上，你可以将依赖注入看作是“long range props”，除了：\",\"父组件不需要知道哪些子组件使用它 provide 的 property\",\"子组件不需要知道 inject 的 property 来自哪里\",\"<template> <div> <child-component></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue'; export default { components: { ChildComponent }, provide() { return { message: 'Hello from the parent component' }; } }; </script> \",\"<template> <div> <p>{{ message }}</p> </div> </template> <script> export default { inject: ['message'] }; </script> \",\"当然, 我们也可以通过 this 获取到当前组件定义的 data\",\"import VueHome from './VueHome.vue'; import { computed } from 'vue'; export default { components: { VueHome }, provide() { return { name: \\\"why\\\", age: 18, length: computed(() => this.names.length) // ref对象 .value } }, data() { return { names: [\\\"abc\\\", \\\"cba\\\", \\\"nba\\\"] } }, methods: { addName() { this.names.push(\\\"why\\\"); console.log(this.names); } } } \"]},\"314\":{\"h\":\"全局事件总线 mitt 库\",\"t\":[\"在 Vue 3 中，全局事件总线是一种用于在不同组件之间进行通信的机制。它允许你在任何组件中触发事件并在其他组件中监听和响应这些事件。\",\"https://cn.vuejs.org/api/application.html#app-config-globalproperties\",\"在 Vue 3 中，可以使用 app.config.globalProperties 来创建一个全局事件总线。通过将事件总线实例添加到全局属性中，你可以在任何组件中访问它，从而实现跨组件的事件通信。\",\"以下是一个示例：\",\"// 在 main.js 中创建全局事件总线 import { createApp } from 'vue'; const app = createApp(App); app.config.globalProperties.$bus = createEventBus(); app.mount('#app'); \",\"创建一个名为 createEventBus 的函数来创建事件总线实例：\",\"function createEventBus() { const listeners = {}; function on(event, callback) { if (!listeners[event]) { listeners[event] = []; } listeners[event].push(callback); } function emit(event, ...args) { if (listeners[event]) { listeners[event].forEach(callback => { callback(...args); }); } } return { on, emit }; } \",\"现在，你可以在任何组件中使用 $bus来触发事件和监听事件：\",\"<template> <div> <button @click=\\\"sendMessage\\\">发送消息</button> </div> </template> <script> export default { methods: { sendMessage() { this.$bus.emit('message', 'Hello from component A'); } } }; </script> \",\"<template> <div> <button @click=\\\"sendMessage\\\">发送消息</button> </div> </template> <script> export default { methods: { sendMessage() { this.$bus.emit('message', 'Hello from component A'); } } }; </script> \",\"在上述示例中，当点击按钮时，组件 A 使用 $bus.emit 发送了一个名为 'message' 的事件，并传递了消息 'Hello from component A'。组件 B 使用 ​$bus.on 监听了 'message' 事件，并将接收到的消息显示在页面上。\",\"通过全局事件总线，你可以在不同组件之间进行简单而方便的通信，而无需显式地通过 props 或其他方式传递数据。 [TOC]\"]},\"315\":{\"h\":\"认识组件的嵌套\",\"t\":[\"在之前的案例中，我们只是创建了一个组件App；\",\"如果我们一个应用程序将所有的逻辑都放在一个组件中，那么这个组件就会变成非常的臃肿和难以维护；\",\"所以组件化的核心思想应该是对组件进行拆分，拆分成一个个小的组件；\",\"再将这些组件组合嵌套在一起，最终形成我们的应用程序；\",\"我们来分析一下下面代码的嵌套逻辑，假如我们将所有的代码逻辑都放到一个App.vue组件中：\",\"<template> <div> <h2>Header</h2> <h2>NavBar</h2> </div> <div> <h2>Banner</h2> <ul> <li>商品列表1</li> <li>商品列表2</li> <li>商品列表3</li> <li>商品列表4</li> <li>商品列表5</li> </ul> </div> <div> <h2>Footer</h2> <h2>免责声明</h2> </div> </template> <script> export default { }; </script> <style scoped></style> \",\"我们会发现，将所有的代码逻辑全部放到一个组件中，代码是非常的臃肿和难以维护的。并且在真实开发中，我们会有更多的内容和代码逻辑，对于扩展性和可维护性来说都是非常差的。\",\"所有，在真实的开发中，我们会对组件进行拆分，拆分成一个个功能的小组件。\"]},\"316\":{\"h\":\"组件的拆分\",\"t\":[\"如上代码, 我们可以按照如下的方式进行拆分：\",\"App.vue\",\"<template> <div id=\\\"app\\\"> <VueHeader></VueHeader> <VueMain></VueMain> <VueFooter></VueFooter> </div> </template> <script> import VueHeader from './VueHeader.vue'; import VueMain from './VueMain.vue'; import VueFooter from './VueFooter.vue'; export default { name: 'App', components: { VueHeader, VueMain, VueFooter } }; </script> <style scoped></style> \",\"Header.vue组件\",\"<template> <div> <h2>Header</h2> <h2>NavBar</h2> </div> </template> \",\"Main.vue组件：\",\"<template> <div> <vue-banner></vue-banner> <vue-product-list></vue-product-list> </div> </template> <script> import VueBanner from './VueBanner.vue'; import VueProductList from './VueProductList.vue'; export default { name: 'VueMain', components: { VueBanner, VueProductList } }; </script> \",\"Banner.vue组件：\",\"<template> <h2>Banner</h2> </template> \",\"ProductList组件：\",\"<template> <ul> <li>商品列表1</li> <li>商品列表2</li> <li>商品列表3</li> <li>商品列表4</li> <li>商品列表5</li> </ul> </template> \",\"Footer.vue组件：\",\"<template> <div> <h2>Footer</h2> <h2>免责声明</h2> </div> </template> \",\"按照如上的拆分方式后，我们开发对应的逻辑只需要去对应的组件编写就可。\"]},\"317\":{\"h\":\"组件的通信\",\"t\":[\"上面的嵌套逻辑如下，它们存在如下关系：\",\"App组件是Header、Main、Footer组件的父组件；\",\"Main组件是Banner、ProductList组件的父组件；\",\"在开发过程中，我们会经常遇到需要组件之间相互进行通信：\",\"比如App可能使用了多个Header，每个地方的Header展示的内容不同，那么我们就需要使用者传递给Header一些数据，让其进行展示；\",\"又比如我们在Main中一次性请求了Banner数据和ProductList数据，那么就需要传递给他们来进行展示；\",\"也可能是子组件中发生了事件，需要有父组件来完成某些操作，那就需要子组件向父组件传递事件；\",\"父子组件之间如何进行通信呢？\",\"父组件传递给子组件：通过props属性；\",\"子组件传递给父组件：通过$emit触发事件；\",\"image-20231124000011715\"]},\"318\":{\"h\":\"父传子\",\"t\":[\"在开发中很常见的就是父子组件之间通信，比如父组件有一些数据，需要子组件来进行展示：\",\"这个时候我们可以通过props来完成组件之间的通信；\",\"什么是 props?\",\"在Vue3中，props是一种用于向组件传递数据的机制。它允许父组件向子组件传递数据，并在子组件中使用这些数据。\",\"在Vue3中，每个组件都可以定义自己的props，并指定每个prop的类型、默认值和其他验证规则。当父组件向子组件传递数据时，子组件可以使用这些props来访问传递过来的数据。\"]},\"319\":{\"h\":\"props 的定义\",\"t\":[\"在Vue3中，props可以使用两种方式来定义：\",\"字符串数组，数组中的字符串就是attribute的名称；\",\"对象类型，对象类型我们可以在指定attribute名称的同时，指定它需要传递的类型、是否是必须的、默认值等等；\"]},\"320\":{\"h\":\"字符串数组\",\"t\":[\"使用字符串数组的方式，可以简单地指定需要接收的属性名称。在这种情况下，属性类型默认为any。\",\"在下面的示例中，父组件使用message=\\\"Hello from parent\\\"将message属性作为字符串传递给子组件。在子组件中，使用props选项并传递一个字符串数组来定义message属性。这样子组件就可以使用message属性来访问父组件传递过来的数据了。\",\"<!-- App.vue --> <template> <div> <child-component message=\\\"Hello from parent\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue' export default { components: { ChildComponent } } </script> \",\"<!--ChildComponent.vue --> <template> <div> {{ message }} </div> </template> <script> export default { props: ['message'] } </script> \"]},\"321\":{\"h\":\"对象类型\",\"t\":[\"使用对象类型的方式，可以更详细地指定需要接收的属性名称、类型、是否必须、默认值等等。\",\"在下面的示例中，父组件使用:message=\\\"parentMessage\\\"将parentMessage属性作为字符串传递给子组件。在子组件中，使用props选项并传递一个对象来定义message属性。在这个对象中，我们指定了type为字符串、required为true、default为'Hello from child'、以及一个自定义的验证函数。\",\"这样子组件就可以使用message属性来访问父组件传递过来的数据了。\",\"<!-- App.vue --> <template> <div> <child-component :message=\\\"parentMessage\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue' export default { components: { ChildComponent }, data() { return { parentMessage: 'Hello from parent' } } } </script> \",\"<!--ChildComponent.vue --> <template> <div> {{ message }} </div> </template> <script> export default { props: { message: { type: String, // 必须传输? required: true, // 默认值 default: 'Hello from child', // 传递的数据是否符合要求? validator: (value) => { return value.length > 0 }, info: String } } } </script> \"]},\"322\":{\"h\":\"其他\",\"t\":[\"Type的类型都可以是哪些？\",\"String：用于指定字符串类型的属性。\",\"Number：用于指定数字类型的属性。\",\"Boolean：用于指定布尔类型的属性。\",\"Array：用于指定数组类型的属性。\",\"Object：用于指定对象类型的属性。\",\"Date：用于指定日期类型的属性。\",\"Function：用于指定函数类型的属性。\",\"Symbol：用于指定符号类型的属性。\",\"对象类型的其他写法\",\"props: { // 基础的类型检查 (`null` 和 `undefined` 会通过任何类型验证) propA: Number, // 多个可能的类型 propB: [String, Number], // 必填的字符串 propC: { type: String, required: true }, // 带有默认值的数字 propD: { type: Number, default: 100 }, // 带有默认值的对象 propE: { type: Object, // 对象或数组默认值必须从一个工厂函数获取, 因为每个实例需要维护一份被返回对象的独立的副本 default: function () { return { message: 'hello' } } }, // 自定义验证函数 propF: { validator: function (value) { // 这个值必须匹配下列字符串中的一个 return ['success', 'warning', 'danger'].indexOf(value) !== -1 } }, // 具有默认值的函数 propG: { type: Function, // 对象或数组默认值必须从一个工厂函数获取 default: function () { return { message: 'hello' } } } } \",\"Prop 的大小写命名(camelCase vs kebab-case)\",\"在Vue.js中，你可以使用驼峰式(camelCase)或短横线分隔(kebab-case)来命名你的props。然而，由于HTML属性不区分大小写，所以在模板中使用驼峰式命名的props时，需要转换为短横线分隔的形式。\",\"例如，如果你在JavaScript中定义了一个名为myProp的prop，你需要在模板中使用my-prop来引用它。\",\"这是一个例子：\",\"<template> <div> <!-- 在模板中使用短横线分隔的形式 --> <child-component :my-prop=\\\"parentValue\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue'; export default { components: { ChildComponent }, data() { return { parentValue: 'Hello from Parent Component' } } } </script> \",\"<!--ChildComponent.vue --> <template> <div> <!-- 使用prop的值 --> <h2>{{ myProp }}</h2> </div> </template> <script> export default { props: { // 在JavaScript中使用驼峰式命名 myProp: String } } </script> \",\"在这个例子中，父组件将其数据parentValue传递给子组件的myProp prop。注意在父组件模板中，我们使用短横线分隔的形式:my-prop，而在子组件的JavaScript代码中，我们使用驼峰式命名myProp, 这也是官方推荐的写法。\"]},\"323\":{\"h\":\"非 Prop 的Attribute\",\"t\":[\"在Vue.js中，非prop的attribute是指那些被绑定到组件，但没有对应的prop定义的attribute。这些attribute会被添加到组件的根元素上。\",\"例如，如果你有一个组件，它的模板是一个<div>元素，然后你在使用这个组件时添加了一个class或style属性，那么这个class或style属性就会被添加到<div>元素上，即使你没有在组件的props中定义它们。\",\"这是一个例子：\",\"<template> <div> <my-component id=\\\"abc\\\" class=\\\"my-class\\\" style=\\\"color: red;\\\"></my-component> </div> </template> <script> import MyComponent from './MyComponent.vue'; export default { components: { MyComponent } } </script> \",\"在这个例子中，id, class和style就是非prop的attribute。它们会被添加到MyComponent的根元素上。\"]},\"324\":{\"h\":\"禁用 Attribute 继承\",\"t\":[\"如果你不希望非prop的attribute被添加到根元素上，你可以在组件中定义一个inheritAttrs: false选项。这样，非prop的attribute将只能通过$attrs变量来访问，而不会被添加到根元素上。\",\"export default { inheritAttrs: false } \",\"禁用attribute继承的常见情况是需要将attribute应用于根元素之外的其他元素；\",\"我们可以通过 $attrs来访问所有的 非props的attribute；\",\"<template> <div> <h2 v-bind=\\\"$attrs\\\">{{title}}</h2> <p>{{content}}</p> </div> </template> \",\"如上, <h2> 仍然会继承非prop的attribute\"]},\"325\":{\"h\":\"多个根节点的attribute\",\"t\":[\"多个根节点的attribute如果没有显示的绑定，那么会报警告，我们必须手动的指定要绑定到哪一个属性上：\",\"<template> <div :class=\\\"$attrs.class\\\"> 我是NotPropAttribue组件1 </div> <div> 我是NotPropAttribue组件2 </div> <div> 我是NotPropAttribue组件3 </div> </template> \"]},\"326\":{\"h\":\"子传父\",\"t\":[\"什么情况下子组件需要传递内容到父组件呢？\",\"当子组件有一些事件发生的时候，比如在组件中发生了点击，父组件需要切换内容；\",\"子组件有一些内容想要传递给父组件的时候；\",\"我们如何完成上面的操作呢？\",\"首先，我们需要在子组件中定义好在某些情况下触发的事件名称；\",\"其次，在父组件中以v-on的方式传入要监听的事件名称，并且绑定到对应的方法中；\",\"最后，在子组件中发生某个事件的时候，根据事件名称触发对应的事件；\",\"以下是一个简单的示例\",\"<!-- 子组件 --> <template> <button @click=\\\"sendDataToParent\\\">传递数据给父组件</button> </template> <script> export default { methods: { sendDataToParent() { const data = 'Hello, parent!'; // 传递参数给父组件 this.$emit('data-to-parent', data); } } }; </script> \",\"<!-- 父组件 --> <template> <div> <child-component @data-to-parent=\\\"handleDataFromChild\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue'; export default { components: { ChildComponent }, methods: { handleDataFromChild(data) { console.log(data); // 在控制台打印子组件传递的数据 // 在这里处理从子组件接收到的数据 } } }; </script> \"]},\"327\":{\"h\":\"emits\",\"t\":[\"当使用Vue 3时，你可以使用emits选项来对子组件触发的自定义事件进行校验: 使用emits选项可以提供类型检查和错误提示，确保子组件只触发被允许的自定义事件。这有助于提高代码的可维护性和可靠性。以下是一个示例：\",\"export default { // 一般写法 emits: [\\\"add\\\", \\\"sub\\\", \\\"addN\\\"], // 对象写法的目的是为了进行参数的验证 emits: { add: null, sub: null, addN: (num, name, age) => { console.log(num, name, age); if (num > 10) { return true } return false; } } } \"]},\"328\":{\"h\":\"动态组件\",\"t\":[\"Vue.js 的动态组件是指可以根据不同的数据渲染不同的组件的功能。你可以使用 Vue.js 的 <component> 元素来实现动态组件。\",\"例如，你可以在父组件中定义一个数据属性，根据这个属性的值来决定渲染哪个子组件。然后，在模板中使用 <component> 元素，并将该数据属性绑定到 is 属性上，这样就可以动态地渲染不同的子组件了。\",\"<script> import Home from './Home.vue' import Posts from './Posts.vue' import Archive from './Archive.vue' export default { components: { Home, Posts, Archive }, data() { return { currentTab: 'Home', tabs: ['Home', 'Posts', 'Archive'] } } } </script> <template> <div class=\\\"demo\\\"> <button v-for=\\\"tab in tabs\\\" :key=\\\"tab\\\" :class=\\\"['tab-button', { active: currentTab === tab }]\\\" @click=\\\"currentTab = tab\\\" > {{ tab }} </button> <component :is=\\\"currentTab\\\" class=\\\"tab\\\"></component> </div> </template> \"]},\"329\":{\"h\":\"非父子组件之间的通信\",\"t\":[\"在开发中，我们构建了组件树之后，除了父子组件之间的通信之外，还会有非父子组件之间的通信。\",\"这里我们主要讲两种方式：\",\"Provide/Inject\",\"Mitt全局事件总线；\"]},\"330\":{\"h\":\"Provide/Inject\",\"t\":[\"Provide/Inject用于非父子组件之间共享数据：\",\"比如有一些深度嵌套的组件，子组件想要获取父组件的部分内容；\",\"在这种情况下，如果我们仍然将props沿着组件链逐级传递下去，就会非常的麻烦；\",\"对于这种情况下，我们可以使用 Provide 和 Inject ：\",\"无论层级结构有多深，父组件都可以作为其所有子组件的依赖提供者；\",\"父组件有一个 provide 选项来提供数据；\",\"子组件有一个 inject 选项来开始使用这些数据；\",\"image-20231130195805276\",\"实际上，你可以将依赖注入看作是“long range props”，除了：\",\"父组件不需要知道哪些子组件使用它 provide 的 property\",\"子组件不需要知道 inject 的 property 来自哪里\",\"<template> <div> <child-component></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue'; export default { components: { ChildComponent }, provide() { return { message: 'Hello from the parent component' }; } }; </script> \",\"<template> <div> <p>{{ message }}</p> </div> </template> <script> export default { inject: ['message'] }; </script> \",\"当然, 我们也可以通过 this 获取到当前组件定义的 data\",\"import VueHome from './VueHome.vue'; import { computed } from 'vue'; export default { components: { VueHome }, provide() { return { name: \\\"why\\\", age: 18, length: computed(() => this.names.length) // ref对象 .value } }, data() { return { names: [\\\"abc\\\", \\\"cba\\\", \\\"nba\\\"] } }, methods: { addName() { this.names.push(\\\"why\\\"); console.log(this.names); } } } \"]},\"331\":{\"h\":\"全局事件总线 mitt 库\",\"t\":[\"在 Vue 3 中，全局事件总线是一种用于在不同组件之间进行通信的机制。它允许你在任何组件中触发事件并在其他组件中监听和响应这些事件。\",\"https://cn.vuejs.org/api/application.html#app-config-globalproperties\",\"在 Vue 3 中，可以使用 app.config.globalProperties 来创建一个全局事件总线。通过将事件总线实例添加到全局属性中，你可以在任何组件中访问它，从而实现跨组件的事件通信。\",\"以下是一个示例：\",\"// 在 main.js 中创建全局事件总线 import { createApp } from 'vue'; const app = createApp(App); app.config.globalProperties.$bus = createEventBus(); app.mount('#app'); \",\"创建一个名为 createEventBus 的函数来创建事件总线实例：\",\"function createEventBus() { const listeners = {}; function on(event, callback) { if (!listeners[event]) { listeners[event] = []; } listeners[event].push(callback); } function emit(event, ...args) { if (listeners[event]) { listeners[event].forEach(callback => { callback(...args); }); } } return { on, emit }; } \",\"现在，你可以在任何组件中使用 $bus来触发事件和监听事件：\",\"<template> <div> <button @click=\\\"sendMessage\\\">发送消息</button> </div> </template> <script> export default { methods: { sendMessage() { this.$bus.emit('message', 'Hello from component A'); } } }; </script> \",\"<template> <div> <button @click=\\\"sendMessage\\\">发送消息</button> </div> </template> <script> export default { methods: { sendMessage() { this.$bus.emit('message', 'Hello from component A'); } } }; </script> \",\"在上述示例中，当点击按钮时，组件 A 使用 $bus.emit 发送了一个名为 'message' 的事件，并传递了消息 'Hello from component A'。组件 B 使用 ​$bus.on 监听了 'message' 事件，并将接收到的消息显示在页面上。\",\"通过全局事件总线，你可以在不同组件之间进行简单而方便的通信，而无需显式地通过 props 或其他方式传递数据。\"]},\"332\":{\"h\":\"认识组件化开发\"},\"333\":{\"h\":\"认识组件化开发\",\"t\":[\"人面对复杂问题的处理方式： \",\"任何一个人处理信息的逻辑能力都是有限的\",\"所以，当面对一个非常复杂的问题时，我们不太可能一次性搞定一大堆的内容。\",\"但是，我们人有一种天生的能力，就是将问题进行拆解。\",\"如果将一个复杂的问题，拆分成很多个可以处理的小问题，再将其放在整体当中，你会发现大的问题也会迎刃而解。\",\"组件化也是类似的思想： \",\"如果我们将一个页面中所有的处理逻辑 全部放在一起，处理起来就会变得非常复杂，而且不利于后续的管理以及扩展；\",\"但如果，我们讲一个页面拆分成一个个 小的功能块，每个功能块完成属于自己 这部分独立的功能，那么之后整个页面 的管理和维护就变得非常容易了；\",\"如果我们将一个个功能块拆分后，就可 以像搭建积木一下来搭建我们的项目；\",\"现在可以说整个的大前端开发都是组件化的天下，无论从三大框架（Vue、React、Angular），还是跨平台方案 的Flutter，甚至是移动端都在转向组件化开发，包括小程序的开发也是采用组件化开发的思想\",\"所以，学习组件化最重要的是它的思想，每个框架或者平台可能实现方法不同，但是思想都是一样的。\",\"我们需要通过组件化的思想来思考整个应用程序： \",\"我们将一个完整的页面分成很多个组件；\",\"每个组件都用于实现页面的一个功能块；\",\"而每一个组件又可以进行细分；\",\"而组件本身又可以在多个地方进行复用；\"]},\"334\":{\"h\":\"Vue的组件化\",\"t\":[\"vue 项目起始文件 createApp 函数传入了一个对象App，这个对象其实本质上就是一个组件，也是我们应用程序的根 组件；\",\"组件化提供了一种抽象，让我们可以开发出一个个独立可复用的小组件来构造我们的应用；\",\"任何的应用都会被抽象成一颗组件树；\",\"image-20231031204213497\"]},\"335\":{\"h\":\"组件名称\",\"t\":[\"在通过 app.componen t注册一个组件的时候，第一个参数是组件的名称，定义组件名的方式有两种：\",\"方式一：使用 kebab-case（短横线分割符） \",\"当使用 kebab-case (短横线分隔命名) 定义一个组件时，你也必须在引用这个自定义元素时使用 kebab-case， 例如 <my-component-name>;\",\"方式二：使用 PascalCase（驼峰标识符） \",\"当使用 PascalCase (首字母大写命名) 定义一个组件时，你在引用这个自定义元素时两种命名法都可以使用。也 就是说 <my-component-name>和 MyComponentName 都是可接受的；\",\"在单文件组件和内联字符串模板中，我们都推荐这样做。但是，PascalCase 的标签名在 DOM 模板中是不可用的，详情参见 DOM 内模板解析注意事项。\",\"为了方便，Vue 支持将模板中使用 kebab-case 的标签解析为使用 PascalCase 注册的组件。这意味着一个以 MyComponent 为名注册的组件，在模板中可以通过 <MyComponent> 或 <my-component> 引用。这让我们能够使用同样的 JavaScript 组件注册代码来配合不同来源的模板。\"]},\"336\":{\"h\":\"注册组件的方式\",\"t\":[\"https://cn.vuejs.org/guide/components/registration.html#component-registration\",\"如果我们现在有一部分内容（模板、逻辑等），我们希望将这部分内容抽取到一个独立的组件中去维护，这个时候 如何注册一个组件呢？\",\"我们先从简单的开始谈起，比如下面的模板希望抽离到一个单独的组件：\",\"<h2>{{title}}</h2> <h2>{{message}}</h2> \",\"注册组件分成两种： \",\"全局组件：在任何其他的组件中都可以使用的组件；\",\"局部组件：只有在注册的组件中才能使用的组件；\"]},\"337\":{\"h\":\"注册全局组件\",\"t\":[\"全局组件需要使用我们全局创建的app来注册组件；\",\"通过component方法传入组件名称、组件对象即可注册一个全局组件了；\",\"之后，我们可以在App组件的template中直接使用这个全局组件：\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <component-a></component-a> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', } // 使用 app.component() 注册一个全局组件, app.component() 是 Vue.createApp() 的一个方法 const app = Vue.createApp(App); // app.component() 的第一个参数是组件的名称, 第二个参数是组件的配置对象 app.component('component-a', { template: '<h2>{{ title }}</h2>', data() { return { title: '我是标题', desc: '我是内容, 哈哈哈哈哈' } }, methods: { btnClick() { console.log('按钮的点击'); } } }); app.mount('#app'); </script> </body> \",\"也可以\",\"<template id=\\\"component-a\\\"> <h2>{{ title }}</h2> <p>{{ desc }}</p> </template> app.component('component-a', { template: '#component-a', ... } \"]},\"338\":{\"h\":\"注册局部组件\",\"t\":[\"全局注册虽然很方便，但有以下几个问题：\",\"全局注册，但并没有被使用的组件无法在生产打包时被自动移除 (也叫“tree-shaking”)。如果你全局注册了一个组件，即使它并没有被实际使用，它仍然会出现在打包后的 JS 文件中。\",\"全局注册在大型项目中使项目的依赖关系变得不那么明确。在父组件中使用子组件时，不太容易定位子组件的实现。和使用过多的全局变量一样，这可能会影响应用长期的可维护性。\",\"相比之下，局部注册的组件需要在使用它的父组件中显式导入，并且只能在该父组件中使用。它的优点是使组件之间的依赖关系更加明确，并且对 tree-shaking 更加友好。\",\"局部注册需要使用 components 选项：\",\"<script> import ComponentA from './ComponentA.vue' export default { components: { ComponentA } } </script> <template> <ComponentA /> </template> \",\"对于每个 components 对象里的属性，它们的 key 名就是注册的组件名，而值就是相应组件的实现。上面的例子中使用的是 ES2015 的缩写语法，等价于：\",\"export default { components: { ComponentA: ComponentA } // ... } \",\"请注意：局部注册的组件在后代组件中并不可用。在这个例子中，ComponentA 注册后仅在当前组件可用，而在任何的子组件或更深层的子组件中都不可用。\",\"全局组件往往是在应用程序一开始就会全局组件完成，那么就意味着如果某些组件我们并没有用到，也会一起被注 册： \",\"比如我们注册了三个全局组件：ComponentA、ComponentB、ComponentC；\",\"在开发中我们只使用了ComponentA、ComponentB，如果ComponentC没有用到但是我们依然在全局进行 了注册，那么就意味着类似于webpack这种打包工具在打包我们的项目时，我们依然会对其进行打包；\",\"这样最终打包出的JavaScript包就会有关于ComponentC的内容，用户在下载对应的JavaScript时也会增加包 的大小；\",\"所以在开发中我们通常使用组件的时候采用的都是局部注册： \",\"局部注册是在我们需要使用到的组件中，通过components属性选项来进行注册；\",\"比如之前的App组件中，我们有data、computed、methods等选项了，事实上还可以有一个components选项；\",\"该components选项对应的是一个对象，对象中的键值对是 组件的名称: 组件对象；\"]},\"339\":{\"h\":\"Vue的开发模式\",\"t\":[\"目前我们使用vue的过程都是在html文件中，通过template编写自己的模板、脚本逻辑、样式等。\",\"但是随着项目越来越复杂，我们会采用组件化的方式来进行开发： \",\"这就意味着每个组件都会有自己的模板、脚本逻辑、样式等；\",\"当然我们依然可以把它们抽离到单独的js、css文件中，但是它们还是会分离开来；\",\"也包括我们的script是在一个全局的作用域下，很容易出现命名冲突的问题；\",\"并且我们的代码为了适配一些浏览器，必须使用ES5的语法；\",\"在我们编写代码完成之后，依然需要通过工具对代码进行构建、代码；\",\"所以在真实开发中，我们可以通过一个后缀名为 .vue 的single-file components (单文件组件) 来解决，并且可以使用 webpack 或者 vite 或者 rollup 等构建工具来对其进行处理。\",\"比如: 我们可以单独抽离组件 componentA\",\"<template> <div> <h2>{{ title }}</h2> <p>{{ desc }}</p> <button @click=\\\"btnClick\\\">按钮点击</button> </div> </template> <script> export default { data() { return { title: \\\"我是标题\\\", desc: \\\"我是内容, 哈哈哈哈哈\\\", }; }, methods: { btnClick() { console.log(\\\"按钮的点击\\\"); }, }, }; </script> <style scoped></style> \",\"在这个组件中我们可以获得非常多的特性：\",\"代码的高亮；\",\"ES6、CommonJS的模块化能力；\",\"组件作用域的CSS；\",\"可以使用预处理器来构建更加丰富的组件，比如TypeScript、Babel、Less、Sass等；\"]},\"340\":{\"h\":\"如何支持SFC\",\"t\":[\"如果我们想要使用这一 componentA.vue 文件，比较常见的是两种方式： \",\"方式一：使用Vue CLI来创建项目，项目会默认帮助我们配置好所有的配置选项，可以在其中直接使用.vue文件；\",\"方式二：自己使用webpack或rollup或 vite 这类打包工具，对其进行打包处理；\"]},\"341\":{\"h\":\"组件实例\"},\"342\":{\"h\":\"$refs\",\"t\":[\"https://cn.vuejs.org/api/component-instance.html#refs\",\"某些情况下，我们在组件中想要直接获取到元素对象或者子组件实例： \",\"在Vue开发中我们是不推荐进行DOM操作的；\",\"这个时候，我们可以给元素或者组件绑定一个ref的attribute属性；\",\"在Vue 3中，$refs属性用于访问父组件中的子组件或DOM元素。它允许您以编程方式直接引用和操作这些组件或元素。\",\"<template> <div> <child-component ref=\\\"childRef\\\"></child-component> <button @click=\\\"logChildRef\\\">Log Child Ref</button> </div> </template> <script> import ChildComponent from './ChildComponent.vue'; export default { components: { ChildComponent }, methods: { logChildRef() { console.log(this.$refs.childRef); } } } </script> \",\"在上面的示例中，我们通过使用ref属性给子组件命名为childRef，然后可以通过this.$refs.childRef来访问和操作子组件。在点击\\\"Log Child Ref\\\"按钮时，会将子组件实例打印到控制台。\",\"### $parent, $root\",\"https://cn.vuejs.org/api/component-instance.html#parent\",\"在Vue中，$parent和$root都是用于访问组件层级关系的特殊属性。\",\"$parent属性用于访问当前组件的父组件实例。通过this.$parent可以访问父组件的属性和方法。\",\"$root属性用于访问根组件实例。根组件是Vue应用的最顶层组件，通过this.$root可以访问根组件的属性和方法。\",\"这些属性在处理组件之间的通信或访问全局状态时非常有用。\",\"<template> <div> <child-component></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue'; export default { components: { ChildComponent }, mounted() { console.log(this.$parent); // 访问父组件实例 console.log(this.$root); // 访问根组件实例 } } </script> \",\"在上面的示例中，父组件中通过使用$parent属性访问了父组件实例，使用​$root属性访问了根组件实例，并将它们打印到控制台。\"]},\"343\":{\"h\":\"组件的 v-model\",\"t\":[\"https://cn.vuejs.org/guide/components/v-model.html#component-v-model\",\"v-model 可以在组件上使用以实现双向绑定。\",\"首先让我们回忆一下 v-model 在原生元素上的用法：\",\"<input v-model=\\\"searchText\\\" /> \",\"在代码背后，模板编译器会对 v-model 进行更冗长的等价展开。因此上面的代码其实等价于下面这段：\",\"<input :value=\\\"searchText\\\" @input=\\\"searchText = $event.target.value\\\" /> \",\"而当使用在一个组件上时，v-model 会被展开为如下的形式：\",\"<CustomInput :model-value=\\\"searchText\\\" @update:model-value=\\\"newValue => searchText = newValue\\\" /> \",\"要让这个例子实际工作起来，<CustomInput> 组件内部需要做两件事：\",\"将内部原生 <input> 元素的 value attribute 绑定到 modelValue prop\",\"当原生的 input 事件触发时，触发一个携带了新值的 update:modelValue 自定义事件\",\"<!-- CustomInput.vue --> <script> export default { props: ['modelValue'], emits: ['update:modelValue'] } </script> <template> <input :value=\\\"modelValue\\\" @input=\\\"$emit('update:modelValue', $event.target.value)\\\" /> </template> \",\"现在 v-model 可以在这个组件上正常工作了：\",\"<CustomInput v-model=\\\"searchText\\\" /> \",\"另一种在组件内实现 v-model 的方式是使用一个可写的，同时具有 getter 和 setter 的 computed 属性。get 方法需返回 modelValue prop，而 set 方法需触发相应的事件：\",\"<!-- CustomInput.vue --> <script> export default { props: ['modelValue'], emits: ['update:modelValue'], computed: { value: { get() { return this.modelValue }, set(value) { this.$emit('update:modelValue', value) } } } } </script> <template> <input v-model=\\\"value\\\" /> </template> \"]},\"344\":{\"h\":\"多个 v-model 绑定\",\"t\":[\"利用刚才在 v-model 参数小节中学到的指定参数与事件名的技巧，我们可以在单个组件实例上创建多个 v-model 双向绑定。\",\"组件上的每一个 v-model 都会同步不同的 prop，而无需额外的选项：\",\"<UserName v-model:first-name=\\\"first\\\" v-model:last-name=\\\"last\\\" /> \",\"<script> export default { props: { firstName: String, lastName: String }, emits: ['update:firstName', 'update:lastName'] } </script> <template> <input type=\\\"text\\\" :value=\\\"firstName\\\" @input=\\\"$emit('update:firstName', $event.target.value)\\\" /> <input type=\\\"text\\\" :value=\\\"lastName\\\" @input=\\\"$emit('update:lastName', $event.target.value)\\\" /> </template> \",\"<script> export default { props: { modelValue: String, title: String }, emits: [\\\"update:modelValue\\\", \\\"update:title\\\"], computed: { value: { set(value) { this.$emit(\\\"update:modelValue\\\", value); }, get() { return this.modelValue; } }, why: { set(why) { this.$emit(\\\"update:title\\\", why); }, get() { return this.title; } } } } </script> \"]},\"345\":{\"h\":\"Composition API\"},\"346\":{\"h\":\"Options API的弊端\",\"t\":[\"在Vue2中，我们编写组件的方式是Options API：\",\"Options API的一大特点就是在对应的属性中编写对应的功能模块；\",\"比如data定义数据、methods中定义方法、computed中定义计算属性、watch中监听属性改变，也包括生命 周期钩子；\",\"但是这种代码有一个很大的弊端：\",\"当我们实现某一个功能时，这个功能对应的代码逻辑会被拆分到各个属性中；\",\"当我们组件变得更大、更复杂时，逻辑关注点的列表就会增长，那么同一个功能的逻辑就会被拆分的很分散；\",\"尤其对于那些一开始没有编写这些组件的人来说，这个组件的代码是难以阅读和理解的（阅读组件的其他人）；\",\"下面我们来看一个非常大的组件，其中的逻辑功能按照颜色进行了划分：\",\"这种碎片化的代码使用理解和维护这个复杂的组件变得异常困难，并且隐藏了潜在的逻辑问题；\",\"并且当我们处理单个逻辑关注点时，需要不断的跳到相应的代码块中；\",\"image-20231216000029755\",\"如果我们能将同一个逻辑关注 点相关的代码收集在一起会更 好。\",\"这就是Composition API想 要做的事情，以及可以帮助我 们完成的事情。\",\"也有人把Vue Composition API简称为VCA。\",\"我们无需再为了一个逻辑关注点在不同的选项块间来回滚动切换。此外，我们现在可以很轻松地将这一组代码移动到一个外部文件中，不再需要为了抽象而重新组织代码，大大降低了重构成本，这在长期维护的大型项目中非常关键。\"]},\"347\":{\"h\":\"认识 组合式 API (Composition API)\",\"t\":[\"https://cn.vuejs.org/guide/extras/composition-api-faq.html#what-is-composition-api\",\"组合式 API (Composition API) 是一系列 API 的集合，使我们可以使用函数而不是声明选项的方式书写 Vue 组件。它是一个概括性的术语，涵盖了以下方面的 API：\",\"响应式 API：例如 ref() 和 reactive()，使我们可以直接创建响应式状态、计算属性和侦听器。\",\"生命周期钩子：例如 onMounted() 和 onUnmounted()，使我们可以在组件各个生命周期阶段添加逻辑。\",\"依赖注入：例如 provide() 和 inject()，使我们可以在使用响应式 API 时，利用 Vue 的依赖注入系统。\",\"组合式 API 是 Vue 3 及 Vue 2.7 的内置功能。对于更老的 Vue 2 版本，可以使用官方维护的插件 @vue/composition-api。在 Vue 3 中，组合式 API 基本上都会配合 `` 语法在单文件组件中使用。下面是一个使用组合式 API 的组件示例：\",\"<script setup> import { ref, onMounted } from 'vue' // 响应式状态 const count = ref(0) // 更改状态、触发更新的函数 function increment() { count.value++ } // 生命周期钩子 onMounted(() => { console.log(`计数器初始值为 ${count.value}。`) }) </script> <template> <button @click=\\\"increment\\\">点击了：{{ count }} 次</button> </template> \",\"虽然这套 API 的风格是基于函数的组合，但组合式 API 并不是函数式编程。组合式 API 是以 Vue 中数据可变的、细粒度的响应性系统为基础的，而函数式编程通常强调数据不可变。\"]},\"348\":{\"h\":\"setup()\",\"t\":[\"以下的代码 均会采用选项式的写法, 组合式 Api 的写法可以参考官方文档, 但基本原理差不多, 而且 Vue3 选项式写法是基于组合式写法产生的!\",\"setup() 钩子是在组件中使用组合式 API 的入口，通常只在以下情况下使用：\",\"需要在非单文件组件中使用组合式 API 时。\",\"需要在基于选项式 API 的组件中集成基于组合式 API 的代码时。\"]},\"349\":{\"h\":\"setup函数的参数\",\"t\":[\"主要有两个参数: \",\"第一个参数：props\",\"第二个参数：context\",\"setup 函数的第一个参数是组件的 props。和标准的组件一致，一个 setup 函数的 props 是响应式的，并且会在传入新的 props 时同步更新。： \",\"对于定义props的类型，我们还是和之前的规则是一样的，在props选项中定义；\",\"并且在template中依然是可以正常去使用props中的属性，比如message；\",\"如果我们在setup函数中想要使用props，那么不可以通过 this 去获取\",\"<!-- 推荐使用以下写法 --> <script> import { ref } from 'vue' export default { setup() { const count = ref(0) // 返回值会暴露给模板和其他的选项式 API 钩子 return { count } }, mounted() { console.log(this.count) // 0 } } </script> <template> <button @click=\\\"count++\\\">{{ count }}</button> </template> \",\"<!-- 当然也可以使用以下写法 --> <script> export default { props: { message: { type: String, required: true } }, data() { return { counter: 100 } }, setup(props, ....){ ..... } ... } </script> \",\"setup 函数的第一个参数是组件的 props。和标准的组件一致，一个 setup 函数的 props 是响应式的，并且会在传入新的 props 时同步更新。\",\"export default { props: { title: String }, setup(props) { console.log(props.title) } } \",\"请注意如果你解构了 props 对象，解构出的变量将会丢失响应性。因此我们推荐通过 props.xxx 的形式来使用其中的 props。\",\"如果你确实需要解构 props 对象，或者需要将某个 prop 传到一个外部函数中并保持响应性，那么你可以使用 toRefs() 和 toRef() 这两个工具函数：\",\"import { toRefs, toRef } from 'vue' export default { setup(props) { // 将 `props` 转为一个其中全是 ref 的对象，然后解构 const { title } = toRefs(props) // `title` 是一个追踪着 `props.title` 的 ref console.log(title.value) // 或者，将 `props` 的单个属性转为一个 ref const title = toRef(props, 'title') } } \",\"另外一个参数是context，我们也称之为是一个SetupContext，它里面包含三个属性： \",\"attrs：所有的非prop的attribute；\",\"slots：父组件传递过来的插槽（这个在以渲染函数返回时会有作用，后面会讲到）；\",\"emit：当我们组件内部需要发出事件时会用到emit（因为我们不能访问this，所以不可以通过 this.$emit发出事件）；\",\"export default { setup(props, context) { // 透传 Attributes（非响应式的对象，等价于 $attrs） console.log(context.attrs) // 插槽（非响应式的对象，等价于 $slots） console.log(context.slots) // 触发事件（函数，等价于 $emit） console.log(context.emit) // 暴露公共属性（函数） console.log(context.expose) } // 该上下文对象是非响应式的，可以安全地解构： setup(props, {attrs, slots, emit}) { console.log(props.message); console.log(attrs.id, attrs.class); console.log(slots); console.log(emit); } } \",\"attrs 和 slots 都是有状态的对象，它们总是会随着组件自身的更新而更新。这意味着你应当避免解构它们，并始终通过 attrs.x 或 slots.x 的形式使用其中的属性。此外还需注意，和 props 不同，attrs 和 slots 的属性都不是响应式的。如果你想要基于 attrs 或 slots 的改变来执行副作用，那么你应该在 onBeforeUpdate 生命周期钩子中编写相关逻辑。\",\"代码示例\",\"<template> <HelloWorld msg=\\\"Welcome to Your Vue.js App\\\" class=\\\"app-attr\\\" /> </template> <script> import HelloWorld from './components/HelloWorld.vue'; export default { name: 'App', components: { HelloWorld } }; </script> <style></style> \",\"<template> <div class=\\\"hello\\\"> <!-- 使用接受过来的参数 --> {{ msg }} </div> </template> <script> export default { name: 'HelloWorld', // 组件接受的参数 props: { msg: String }, // 发射的事件这里可以标注一下 emits:['change'], setup(props, context) { // 这样可以拿到传递过来的msg的值 console.log(props.msg); // attrs console.log(context.attrs); // 发射事件 context.emit('change'); } }; </script> <style scoped></style> \"]},\"350\":{\"h\":\"setup函数的返回值\",\"t\":[\"setup 也可以返回一个渲染函数，此时在渲染函数中可以直接使用在同一作用域下声明的响应式状态：\",\"import { h, ref } from 'vue' export default { setup() { const count = ref(0) return () => h('div', count.value) } } \",\"返回一个渲染函数将会阻止我们返回其他东西。对于组件内部来说，这样没有问题，但如果我们想通过模板引用将这个组件的方法暴露给父组件，那就有问题了。\",\"我们可以通过调用 expose() 解决这个问题：\",\"import { h, ref } from 'vue' export default { setup(props, { expose }) { const count = ref(0) const increment = () => ++count.value expose({ increment }) return () => h('div', count.value) } } \",\"此时父组件可以通过模板引用来访问这个 increment 方法。\",\"export default { props: { message: { type: String, required: true } }, setup() { let counter = 100; // 局部函数 const increment = () => { counter++; console.log(counter); } return { title: \\\"Hello Home\\\", counter, increment } } } \",\"setup的返回值可以在模板template中被使用\",\"也就是说可以通过setup的返回值来替代data选项\",\"最后导出的一定要是个对象\",\"<template> <div class=\\\"hello\\\"> <!-- 使用导出的变量 --> <h1>{{ count }}</h1> <!-- 使用导出的方法 --> <button @click=\\\"increment\\\">+ 1</button> </div> </template> <script> export default { name: 'HelloWorld', setup() { // 定义普通的变量，可以被正常使用 // 缺点 : 数据不是响应式的 let count = 100; // 定义方法 const increment = () => { count++; console.log(count); }; // 导出 return { count, increment }; } }; </script> <style scoped></style> \",\"img\",\"因为只是定义了个变量，然后导出了，并没有使它响应式\"]},\"351\":{\"h\":\"补充: 为什么 setup 不能使用 this\",\"t\":[\"在Vue 3中，setup 函数是用来替代以前的 data, computed, methods 等选项的。setup() 自身并不含对组件实例的访问权，即在 setup() 中访问 this 会是 undefined。你可以在选项式 API 中访问组合式 API 暴露的值，但反过来则不行。\"]},\"352\":{\"h\":\"定义响应式数据的两种方式\"},\"353\":{\"h\":\"Reactive API\",\"t\":[\"如果想为在setup中定义的数据提供响应式的特性，那么可以使用reactive的函数\",\"ps : 如果传入一个基本数据类型（String、Number、Boolean）会报一个警告\",\"应用场景 : reactive API对传入的类型是有限制的，它要求我们必须传入的是一个对象或者数组类型，最好相互有关联的数据时使用\",\"比如说想要上面的例子实现响应式, 我们可以做如下操作\",\"<template> <div class=\\\"hello\\\"> <!-- 这样使用即可 --> <h1>{{ state.count }}</h1> <button @click=\\\"increment\\\">+ 1</button> </div> </template> <script> // 从vue中导入reactive import { reactive } from 'vue'; export default { name: 'HelloWorld', setup() { // 使用reactive，会返回一个响应式对象 const state = reactive({ // 在对象中编写自己所需要的属性 count: 100 }); const increment = () => { // 这样使用 state.count++; console.log(state.count); }; return { // 导出响应式state对象 state, increment }; } }; </script> \"]},\"354\":{\"h\":\"Reactive判断的API\",\"t\":[\"isProxy : 检查对象是否是由 reactive 或 readonly创建的 proxy\",\"isReactive : 检查对象是否是由 reactive创建的响应式代理，如果该代理是 readonly 建的，但包裹了由 reactive 创建的另一个代理，它也会返回 true\",\"isReadonly : 检查对象是否是由 readonly 创建的只读代理\",\"toRaw : 返回 reactive 或 readonly 代理的原始对象（不建议保留对原始对象的持久引用。请谨慎使用）\",\"shallowReactive : 创建一个响应式代理，它跟踪其自身 property 的响应性，但不执行嵌套对象的深层响应式转换 (深层还是原生对象)，只响应第一层\",\"shallowReadonly : 创建一个 proxy，使其自身的 property 为只读，但不执行嵌套对象的深度只读转换（深层还是可读、可写的）只检查第一层\",\"import { reactive, readonly, isProxy, isReactive, isReadonly, toRaw, shallowReactive, shallowReadonly } from 'vue'; // 创建一个响应式对象 const original = { count: 0 }; const obj = reactive(original); // 检查对象是否是代理对象 console.log(isProxy(obj)); // true // 检查对象是否是由 reactive 创建的响应式代理 console.log(isReactive(obj)); // true // 检查对象是否是由 readonly 创建的只读代理 const ro = readonly(obj); console.log(isReadonly(ro)); // true // 返回 reactive 或 readonly 代理的原始对象 const rawObj = toRaw(obj); // 创建一个浅层响应式代理 const shallowObj = shallowReactive({ nested: { count: 0 } }); // 创建一个浅层只读代理 const shallowRo = shallowReadonly({ nested: { count: 0 } }); \",\"以下是一些名词解释:\",\"代理对象：在Vue 3中，代理对象是由 reactive 或 readonly 创建的对象的代理，用于跟踪对象的属性的变化。\",\"readonly：readonly 是一个函数，用于创建一个只读的代理对象，该代理对象只能读取属性值，不能修改属性值。\",\"浅层响应式：浅层响应式是指只有对象的第一层属性会被设置为响应式，而嵌套对象的属性不会被设置为响应式。\",\"浅层只读代理：浅层只读代理是指只有对象的第一层属性会被设置为只读，而嵌套对象的属性不会被设置为只读。\",\"import { reactive, readonly, shallowReactive, shallowReadonly } from 'vue'; // 创建一个普通对象 const original = { count: 0, nested: { count: 1 } }; // 创建一个响应式代理对象 const reactiveObj = reactive(original); reactiveObj.count = 1; // 可以修改属性值 reactiveObj.nested.count = 2; // 嵌套对象的属性也会被设置为响应式 // 创建一个只读代理对象 const readonlyObj = readonly(original); // readonlyObj.count = 2; // 试图修改只读属性会报错 // readonlyObj.nested.count = 2; // 嵌套对象的属性也是只读的 // 创建一个浅层响应式代理对象 const shallowReactiveObj = shallowReactive(original); shallowReactiveObj.count = 2; // 可以修改属性值 shallowReactiveObj.nested.count = 2; // 嵌套对象的属性不会被设置为响应式 // 创建一个浅层只读代理对象 const shallowReadonlyObj = shallowReadonly(original); shallowReadonlyObj.count = 2; // 试图修改只读属性会报错 shallowReadonlyObj.nested.count = 2; // 嵌套对象的属性不会被设置为只读 \"]},\"355\":{\"h\":\"Ref API\",\"t\":[\"Ref函数 : 定义简单类型的数据，也可以定义复杂类型的数据\",\"应用场景 : 定义一些简单的数据，或者从接口中获得的数据\",\"ref 会返回一个可变的响应式对象，该对象作为一个 响应式的引用 维护着它内部的值，这就是ref名称的来源\",\"它内部的值是在ref的 value 属性中被维护的\",\"不管传入的是基本类型还是引用类型，都放在.value中\",\"使用的时候是用 .value，但是有两个注意事项:\",\"在模板中引入ref的值时，Vue会自动帮助我们进行解包操作，所以并不需要在模板中通过 ref.value 的方式，直接使用即可\",\"在 setup 函数内部，它依然是一个 ref引用， 所以对其进行操作时，依然需要使用 ref.value的方式\"]},\"356\":{\"h\":\"基本使用\",\"t\":[\"<template> <div class=\\\"hello\\\"> <!-- 这样使用即可，不需要使用count.value，会自动解包，取出其中的value --> <h1>{{ count }}</h1> <button @click=\\\"increment\\\">+ 1</button> </div> </template> <script> // 从vue中导入ref import { ref } from 'vue'; export default { name: 'HelloWorld', setup() { // 使用Ref，会返回一个响应式对象 let count = ref(100); const increment = () => { // 这样使用,需要使用 .value count.value++; console.log(count.value); }; return { // 直接导出count即可 count, increment }; } }; </script> \"]},\"357\":{\"h\":\"Ref自动解包\",\"t\":[\"模板中的解包是浅层的解包，如果我们的代码是下面的方式：\",\"如果我们将ref放到一个reactive的属性当中，那么在模板中使用时，它会自动解包：\",\"const count = ref(1) const obj = reactive({ count }) // ref 会被解包 console.log(obj.count === count.value) // true // 会更新 `obj.count` count.value++ console.log(count.value) // 2 console.log(obj.count) // 2 // 也会更新 `count` ref obj.count++ console.log(obj.count) // 3 console.log(count.value) // 3 \",\"注意当访问到某个响应式数组或 Map 这样的原生集合类型中的 ref 元素时，不会执行 ref 的解包：\",\"const books = reactive([ref('Vue 3 Guide')]) // 这里需要 .value console.log(books[0].value) const map = reactive(new Map([['count', ref(0)]])) // 这里需要 .value console.log(map.get('count').value) \"]},\"358\":{\"h\":\"Ref判断的API\",\"t\":[\"isRef : 判断值是否是一个ref对象\",\"unref : 如果我们想要获取一个ref引用中的value，那么也可以通过unref方法 \",\"如果参数是一个 ref，则返回内部值，否则返回参数本身\",\"这是 val = isRef(val) ? val.value : val 的语法糖函数\",\"shallowRef：shallowRef 是用来创建一个浅层的 ref 对象的函数。浅层的意思是只有对象的第一层属性会被设置为响应式，而嵌套对象的属性不会被设置为响应式。这意味着对嵌套对象属性的修改不会触发响应。\",\"triggerRef：triggerRef 用于手动触发与 shallowRef 相关联的副作用。当 shallowRef 关联的数据发生变化时，相关的副作用将被触发执行。\",\"import { ref, isRef, unref, shallowRef, triggerRef } from 'vue'; // 判断值是否是一个 ref 对象 const count = ref(0); console.log(isRef(count)); // true // 获取 ref 引用中的值 const value = unref(count); // 语法糖函数示例 const val = isRef(count) ? count.value : count; // 创建一个浅层的 ref 对象 const shallowCount = shallowRef({ value: 0 }); shallowCount.value = 1; // 可以直接修改 value 属性 // 手动触发与 shallowRef 相关联的副作用 triggerRef(shallowCount); \"]},\"359\":{\"h\":\"自定义Ref => customRef\",\"t\":[\"创建一个自定义的ref，并对其依赖项跟踪和更新触发进行显示控制： \",\"它需要一个工厂函数，该函数接受 track 和 trigger 函数作为参数；\",\"并且应该返回一个带有 get 和 set 的对象；\",\"这里我们使用一个的案例： \",\"对双向绑定的属性进行debounce(节流)的操作\",\"import { customRef } from 'vue'; // 自定义ref export default function(value, delay = 300) { let timer = null; return customRef((track, trigger) => { return { get() { track(); return value; }, set(newValue) { clearTimeout(timer); timer = setTimeout(() => { value = newValue; trigger(); }, delay); } } }) } \",\"<template> <div> <input v-model=\\\"message\\\"/> <h2>{{message}}</h2> </div> </template> <script> import debounceRef from './hook/useDebounceRef'; export default { setup() { const message = debounceRef(\\\"Hello World\\\"); return { message } } } </script> \"]},\"360\":{\"h\":\"readonly\"},\"361\":{\"h\":\"概念\",\"t\":[\"在我们传递给其他组件数据时，往往希望其他组件使用我们传递的内容，但是不允许它们修改时，就可以使用 readonly了；\",\"只读代理是深层的：对任何嵌套属性的访问都将是只读的。它的 ref 解包行为与 reactive() 相同，但解包得到的值是只读的。\",\"要避免深层级的转换行为，请使用 shallowReadonly() 作替代。\",\"在开发中常见的readonly方法会传入三个类型的参数： \",\"类型一：普通对象\",\"类型二：reactive返回的对象\",\"类型三：ref的对象\",\"在readonly的使用过程中，有如下规则 : \",\"readonly返回的对象都是不允许修改的\",\"但是经过readonly处理的原来的对象是允许被修改的 \",\"比如 const info = readonly(obj)，info对象是不允许被修改的\",\"当obj被修改时，readonly返回的info对象也会被修改\",\"但是不能去修改readonly返回的对象info\",\"<template> <div class=\\\"hello\\\"> <button @click=\\\"btnClick\\\">按钮</button> </div> </template> <script setup> import { reactive, readonly, watchEffect } from 'vue' const original = reactive({ count: 0 }) const copy = readonly(original) const btnClick = () => { original.count++ } watchEffect(() => { // 用来做响应性追踪 console.log(copy.count) }) // 更改源属性会触发其依赖的侦听器 original.count++ // 更改该只读副本将会失败，并会得到一个警告 copy.count++ // warning! </script> \"]},\"362\":{\"h\":\"toRefs && toRef\"},\"363\":{\"h\":\"toRefs\",\"t\":[\"如果使用ES6的解构语法，对reactive返回的对象进行解构获取值，那么之后无论是修改结构后的变量，还是修改reactive 返回的state对象，数据都不再是响应式的\",\"image-20231217170024283\",\"如何改成响应式呢，Vue提供了一个toRefs的函数\",\"可以将reactive返回的对象中的属性都转成ref，这样解构出来的就是响应式的了\",\"<template> <div class=\\\"hello\\\"> <h1>{{ age }}</h1> <button @click=\\\"increment\\\">+age</button> </div> </template> <script> // 从vue中导入ref import { reactive, ref, readonly, toRefs } from 'vue'; export default { name: 'HelloWorld', setup() { const info = reactive({ name: 'star', age: 18 }); // 使用toRefs包裹需要结构的reactive对象，这样解构出来的值也是响应式的 let { name, age } = toRefs(info); const increment = () => { info.age++; // 👆这样都可以修改age，都是响应式的👇 // 相当于已经建立了链接，任何一个修改都会引起另外一个变化 age.value++; console.log(age, info.age); }; return { name, age, increment }; } }; </script> <style scoped></style> \"]},\"364\":{\"h\":\"toRef\",\"t\":[\"如果只希望转换reactive对象中的其中某个属性为ref, 那么可以使用toRef的方法\",\"ps : 这个效率会更高点, 这种做法相当于已经在state.name和ref.value之间建立了 链接，任何一个修改都会引起另外一个变化\",\"let age = toRef(info, \\\"age\\\"); const changeAge = () => { age.value++; } \"]},\"365\":{\"h\":\"computed\",\"t\":[\"在前面的Options API中，我们是使用computed选项来完成的；\",\"在Composition API中，我们可以在 setup 函数中使用 computed 方法来编写一个计算属性；\",\"如何使用computed呢？ \",\"方式一：接收一个getter函数，并为 getter 函数返回的值，返回一个不变的 ref 对象；\",\"方式二：接收一个具有 get 和 set 的对象，返回一个可变的（可读写）ref 对象；\"]},\"366\":{\"h\":\"方式一\",\"t\":[\"<template> <!-- coderstar --> {{ fullName }} <!-- 一般 --> {{ scoreState }} </template> <script> import { computed, reactive, ref } from 'vue'; export default { name: 'App', setup() { const names = reactive({ firstName: 'coder', lastName: 'star' }); // 直接使用getter函数，正常来说都这么使用 const fullName = computed(() => names.firstName + names.lastName); const score = ref(88); const scoreState = computed(() => (score.value > 90 ? '优秀' : '一般')); return { fullName, scoreState }; } }; </script> \"]},\"367\":{\"h\":\"方式二\",\"t\":[\"<template> {{ fullName }} <button @click=\\\"changeName\\\">change</button> </template> <script> import { computed, reactive } from 'vue'; export default { name: 'App', setup() { const names = reactive({ firstName: '冲啊', lastName: '迪迦奥特曼' }); // 会返回一个ref对象 const fullName = computed({ set(newValue) { const tempNames = newValue.split(' '); names.firstName = tempNames[0]; names.lastName = tempNames[1]; }, get() { return names.firstName + names.lastName; } }); // 设置值 const changeName = () => { fullName.value = fullName.value === '冲啊迪迦奥特曼' ? '神秘的 宇宙人' : '冲啊 迪迦奥特曼'; }; return { fullName, changeName }; } }; </script> \",\"img\"]},\"368\":{\"h\":\"生命周期钩子\",\"t\":[\"https://cn.vuejs.org/api/composition-api-lifecycle.html\",\"setup中可以直接使用导入的onX函数注册生命周期，并且同一个生命周期可以使用多次\",\"所有罗列在本页的 API 都应该在组件的 setup() 阶段被同步调用。相关细节请看指南 - 生命周期钩子。\",\"可以使用直接导入的 onX 函数注册生命周期钩子；\",\"beforeCreate和create在setup中没有相对应的onX的函数 \",\"如果想要在beforeCreate和create中进行操作\",\"可以把代码直接写入到setup中\",\"setup的执行时序比beforeCreate和create还要早\",\"image-20231218002757954\",\"import { onBeforeMount, onMounted, onBeforeUpdate, onUpdated, onBeforeUnmount, onUnmounted } from 'vue'; // 注册生命周期钩子 export default { setup() { onBeforeMount(() => { console.log('Before Mount'); // 组件挂载前 }); onMounted(() => { console.log('Mounted'); // 组件挂载后 }); onBeforeUpdate(() => { console.log('Before Update'); // 组件更新前 }); onUpdated(() => { console.log('Updated'); // 组件更新后 }); onBeforeUnmount(() => { console.log('Before Unmount'); // 组件卸载前 }); onUnmounted(() => { console.log('Unmounted'); // 组件卸载后 }); // 同一个生命周期可以使用多次 onMounted(() => { console.log('Another Mounted'); // 另一个组件挂载后 }); return {}; } }; \"]},\"369\":{\"h\":\"setup中使用ref获取元素或组件\",\"t\":[\"要定义一个ref对象，绑定到元素或者组件的ref属性上即可\",\"只有在挂载完成后才能拿到值, 所以需要在生命周期中调用拿值\"]},\"370\":{\"h\":\"获取元素\",\"t\":[\"<template> <!-- 1. 指定ref --> <h2 ref=\\\"titleRef\\\">我是迪迦</h2> </template> <script> import { onMounted, ref } from 'vue'; export default { name: 'App', setup() { // 2. 生成ref对象 const titleRef = ref(); // 4. 可以在生命周期中获取到值 onMounted(() => { console.log(titleRef.value); // <h2>我是迪迦</h2> }); return { // 3. 返回出去，会自动匹配到对应的ref的 titleRef }; } }; </script> \"]},\"371\":{\"h\":\"获取组件\",\"t\":[\"<template> <div>我是子组件</div> </template> <script> export default { name: 'home-layout', setup() { const showMessage = () => { console.log('home-layout function exection'); }; return { showMessage }; } }; </script> \",\"<template> <!-- 1. 指定ref --> <home ref=\\\"homeCompRef\\\" /> </template> <script> import { onMounted, ref } from 'vue'; import home from './home.vue'; export default { name: 'App', components: { home }, setup() { // 2. 生成ref对象 const homeCompRef = ref(); // 4. 可以在生命周期中获取到值 onMounted(() => { console.log(homeCompRef.value); // proxy对象 console.log(homeCompRef.value.$el); // <div>我是子组件</div> homeCompRef.value.showMessage(); // 调用子组件方法 }); return { // 3. 返回出去，会自动匹配到对应的ref的 homeCompRef }; } }; </script> \",\"image-20231217214139261\"]},\"372\":{\"h\":\"侦听数据的变化\",\"t\":[\"在前面的Options API中，我们可以通过watch选项来侦听data或者props的数据变化，当数据变化时执行某一些 操作。\",\"在Composition API中，我们可以使用watchEffect和watch来完成响应式数据的侦听；\",\"watchEffect用于自动收集响应式数据的依赖；\",\"watch需要手动指定侦听的数据源；\"]},\"373\":{\"h\":\"watchEffect\"},\"374\":{\"h\":\"基本使用\",\"t\":[\"自动收集响应式数据的依赖\",\"watchEffect传入的函数会被立即执行一次，并且在执行的过程中会收集依赖\",\"只有收集的依赖发生变化时，watchEffect传入的函数才会再次执行\",\"<template> <div> <h1>{{ name }} - {{ age }}</h1> <button @click=\\\"changeName\\\">changeName</button> <button @click=\\\"changeAge\\\">changeAge</button> </div> </template> <script> import { ref, watchEffect } from 'vue'; export default { setup() { let name = ref('star'); let age = ref(18); const changeName = () => (name.value === 'star' ? (name.value = 'xuanyu') : (name.value = 'star')); const changeAge = () => age.value++; watchEffect(() => { // 因为这里只使用了name，所以只会监听name，如果把age也写进来，那么两个都会监听 console.log('name:', name.value); }); return { name, age, changeName, changeAge }; } }; </script> \",\"img\"]},\"375\":{\"h\":\"停止监听\",\"t\":[\"如果在发生某些情况下，我们希望停止侦听，这个时候我们可以获取watchEffect的返回值函数，调用该函数即可。\",\"<template> <div> <h1>{{ name }} - {{ age }}</h1> <button @click=\\\"changeName\\\">changeName</button> <button @click=\\\"changeAge\\\">changeAge</button> </div> </template> <script> import { ref, watchEffect } from 'vue'; export default { setup() { let name = ref('star'); let age = ref(18); const changeName = () => (name.value === 'star' ? (name.value = 'xuanyu') : (name.value = 'star')); // 获取返回值 const stopWatchEffect = watchEffect(() => { // 自动监听age console.log('age:', age.value); }); const changeAge = () => { age.value++; if (age.value > 22) { // 停止监听 stopWatchEffect(); } }; return { name, age, changeName, changeAge }; } }; </script> \",\"img\"]},\"376\":{\"h\":\"清除副作用\",\"t\":[\"什么是清除副作用呢？ \",\"比如在开发中我们需要在侦听函数中执行网络请求，但是在网络请求还没有达到的时候，我们停止了侦听器， 或者侦听器侦听函数被再次执行了\",\"那么上一次的网络请求应该被取消掉，这个时候我们就可以清除上一次的副作用；\",\"在我们给watchEffect传入的函数被回调时，其实可以获取到一个参数：onInvalidate \",\"当副作用即将重新执行 或者 侦听器被停止 时会执行该函数传入的回调函数；\",\"我们可以在传入的回调函数中，执行一些清除工作；\",\"<template> <div> <h2>{{ name }}-{{ age }}</h2> <button @click=\\\"changeName\\\">修改name</button> <button @click=\\\"changeAge\\\">修改age</button> </div> </template> <script> import { ref, watchEffect } from 'vue'; export default { setup() { // watchEffect: 自动收集响应式的依赖 const name = ref(\\\"why\\\"); const age = ref(18); const stop = watchEffect((onInvalidate) => { const timer = setTimeout(() => { console.log(\\\"网络请求成功~\\\"); }, 2000) // 根据name和age两个变量发送网络请求 onInvalidate(() => { // 在这个函数中清除额外的副作用 // request.cancel() clearTimeout(timer); console.log(\\\"onInvalidate\\\"); }) console.log(\\\"name:\\\", name.value, \\\"age:\\\", age.value); }); const changeName = () => name.value = name.value === \\\"why\\\" ? \\\"kobe\\\" : \\\"why\\\"; const changeAge = () => age.value++; return { name, age, changeName, changeAge } } } </script> \"]},\"377\":{\"h\":\"watchEffect的执行时机\",\"t\":[\"默认情况下，组件的更新会在副作用函数执行之前： \",\"如果我们希望在副作用函数中获取到元素，是否可行呢？\",\"<template> <div> <h2 ref=\\\"title\\\">哈哈哈</h2> </div> </template> <script> import { ref, watchEffect } from 'vue'; export default { setup() { const title = ref(null); watchEffect(() => { console.log(title.value); }) return { title } } } </script> \",\"image-20231217214736939\",\"我们会发现打印结果打印了两次： \",\"这是因为setup函数在执行时就会立即执行传入的副作用函数，这个时候DOM并没有挂载，所以打印为null；\",\"而当DOM挂载时，会给title的ref对象赋值新的值，副作用函数会再次执行，打印出来对应的元素；\",\"这个时候我们需要改变副作用函数的执行时机； \",\"它的默认值是pre，它会在元素 挂载 或者 更新 之前执行；\",\"所以我们会先打印出来一个空的，当依赖的title发生改变时，就会再次执行一次，打印出元素；\",\"我们可以设置副作用函数的执行时机： \",\"pre : 默认值,它会在元素 挂载 或者 更新 之前执行\",\"post : 元素 挂载 或者 更新 之后执行\",\"sync : 强制同步一起执行，效率很低，不推荐\",\"<script> import { ref, watchEffect } from 'vue'; export default { setup() { const title = ref(null); watchEffect(() => { console.log(title.value); }, { flush: \\\"post\\\" }) return { title } } } </script> \"]},\"378\":{\"h\":\"Watch\",\"t\":[\"watch的API完全等同于组件watch选项的Property： \",\"watch需要侦听特定的数据源，并在回调函数中执行副作用；\",\"默认情况下它是惰性的，只有当被侦听的源发 生变化时才会执行回调；\",\"与watchEffect的比较，watch允许我们： \",\"懒执行副作用（第一次不会直接执行）；\",\"更具体的说明当哪些状态发生变化时，触发侦听器的执行；\",\"访问侦听状态变化前后的值；\"]},\"379\":{\"h\":\"侦听单个数据源\",\"t\":[\"watch侦听函数的数据源有两种类型：\",\"一个getter函数：但是该getter函数必须引用可响应式的对象（比如reactive或者ref）；\",\"直接写入一个可响应式的对象，ref（如果是一个 reactive 的对象的侦听, 需要进行某些转换 ）；\",\"import { watch, reactive, ref, toRefs } from 'vue'; // 一个getter函数引用可响应式的对象 const state = reactive({ count: 0 }); watch( () => state.count, (newValue, oldValue) => { console.log(`Count changed from ${oldValue} to ${newValue}`); }); // 直接写入一个可响应式的对象 const count = ref(0); watch(count, (newValue, oldValue) => { console.log(`Count changed from ${oldValue} to ${newValue}`); }); // 直接写入一个可响应式的对象，需要进行某些转换 const reactiveState = reactive({ count: 0 }); const { count } = toRefs(reactiveState); watch(count, (newValue, oldValue) => { console.log(`Count changed from ${oldValue} to ${newValue}`); }); \",\"注意: reactive 对象获取到的 newValue 以及 oldValue 本身都是 reactive 对象\",\"watch( info, (newInfo, oldInfo) => { console.log(newInfo, oldInfo); } ) \",\"image-20231217231108219\",\"如果希望两者都是一个普通对象, 可以使用以下写法(JavaScript中的展开运算符):\",\"watch( () => ({ ...info }), (newInfo, oldInfo) => { console.log(newInfo, oldInfo); } ) \",\"image-20231217231330425\",\"以下是完整代码:\",\"<template> <div> <h2 ref=\\\"title\\\">{{ info.name }}</h2> <button @click=\\\"changeData\\\">修改数据</button> </div> </template> <script> import { reactive, watch } from 'vue'; export default { setup() { const info = reactive({ name: \\\"why\\\", age: 18 }); watch( () => ({ ...info }), (newInfo, oldInfo) => { console.log(newInfo, oldInfo); } ) watch( info, (newInfo, oldInfo) => { console.log(newInfo, oldInfo); } ) const changeData = () => info.name = info.name === \\\"why\\\" ? \\\"kobe\\\" : \\\"why\\\"; return { changeData, info } } } </script> \"]},\"380\":{\"h\":\"侦听多个数据源\",\"t\":[\"当侦听多个来源时，回调函数接受两个数组，分别对应来源数组中的新值和旧值：\",\"watch([fooRef, barRef], ([foo, bar], [prevFoo, prevBar]) => { /* ... */ }) \",\"<template> <div> <h2 ref=\\\"title\\\">{{ info.name }}</h2> <button @click=\\\"changeData\\\">修改数据</button> </div> </template> <script> import { ref, reactive, watch } from 'vue'; export default { setup() { const info = reactive({ name: \\\"why\\\", age: 18 }); const name = ref(\\\"why\\\"); watch([() => ({ ...info }), name], ([newInfo, newName], [oldInfo, oldName]) => { console.log(newInfo, newName, oldInfo, oldName); }) const changeData = () => { info.name = \\\"kobe\\\"; } return { changeData, info } } } </script> \"]},\"381\":{\"h\":\"watch的选项\",\"t\":[\"deep : 是否深度监听\",\"immediate ： 是否立即执行\",\"watch 侦听 reactive时默认是深度侦听的, 但是在使用 {...info}展开运算符时, 是不会深度监听的, 所以我们要设置 deep: True\",\"immediate: 第一次会执行\",\"watch( () => { const obj = { ...info } obj.friend = { ...obj.friend } return obj }, (newValue, oldValue) => { console.log(newValue, oldValue) }, { // 如果有多层，需要加上deep deep: true, // 立即执行 immediate: true } ) \"]},\"382\":{\"h\":\"停止侦听\",\"t\":[\"const stop = watch(source, callback) // 当已不再需要该侦听器时： stop() \"]},\"383\":{\"h\":\"副作用清理\",\"t\":[\"watch(id, async (newId, oldId, onCleanup) => { const { response, cancel } = doAsyncWork(newId) // 当 `id` 变化时，`cancel` 将被调用， // 取消之前的未完成的请求 onCleanup(cancel) data.value = await response }) \"]},\"384\":{\"h\":\"provide && inject\",\"t\":[\"provide 和 inject 通常成对一起使用，使一个祖先组件作为其后代组件的依赖注入方，无论这个组件的层级有多深都可以注入成功，只要他们处于同一条组件链上。\",\"provide可以传入两个参数 :\",\"name：提供的属性名称\",\"value：提供的属性值\",\"inject可以传入两个参数 :\",\"对应provide传过来的name值\",\"默认值\",\"<template> <h1>APP count: {{ count }}</h1> <button @click=\\\"change\\\">APP button</button> <demo /> </template> <script> import { ref, provide, readonly } from 'vue' import demo from './components/demo.vue' export default { name: 'App', components: { demo }, setup() { let count = ref(100) // 第一个参数key 第二个参数值，不让子组件随便修改，用readonly包裹一下 provide('count', readonly(count)) const change = () => count.value++ return { count, change } } } </script> \",\"<template> <h2>demo count:{{ count }}</h2> <button @click=\\\"change\\\">demo change</button> </template> <script> import { ref, inject } from 'vue' export default { setup() { // 接收 第二个参数可以给一个默认值 let count = inject('count', '') // 因为设置了readOnly 所以更改不了 const change = () => count.value++ return { count, change } } } </script> \",\"img\"]},\"385\":{\"h\":\"h函数\",\"t\":[\"Vue在生成真实的DOM之前，会将节点转换成VNode，而VNode组合在一起形成一颗树结构，就是虚拟DOM ( VDOM )\",\"事实上，编写的 template 中的HTML 最终也是使用渲染函数生成对应的VNode\",\"那么，如果想充分的利用JavaScript的编程能力，可以自己来编写 createVNode 函数，生成对应的VNode\",\"h() 函数是一个用于创建 vnode 的一个函数\",\"其实更准备的命名是 createVNode() 函数，但是为了简便在Vue将之简化为 h() 函数\"]},\"386\":{\"h\":\"参数\",\"t\":[\"// 完整参数签名 function h( type: string | Component, props?: object | null, children?: Children | Slot | Slots ): VNode // 省略 props function h(type: string | Component, children?: Children | Slot): VNode type Children = string | number | boolean | VNode | null | Children[] type Slot = () => Children type Slots = { [name: string]: Slot } \",\"第一个参数既可以是一个字符串 (用于原生元素) 也可以是一个 Vue 组件定义。第二个参数是要传递的 prop，第三个参数是子节点。\",\"当创建一个组件的 vnode 时，子节点必须以插槽函数进行传递。如果组件只有默认槽，可以使用单个插槽函数进行传递。否则，必须以插槽函数的对象形式来传递。\",\"为了方便阅读，当子节点不是插槽对象时，可以省略 prop 参数。\"]},\"387\":{\"h\":\"基本使用\",\"t\":[\"h函数可以在两个地方使用：\",\"render函数选项中；\",\"setup函数选项中（setup本身需要是一个函数类型，函数再返回h函数创建的VNode）；\"]},\"388\":{\"h\":\"在render函数选项中\",\"t\":[\"<script> // 1. 引入h函数 import { h } from 'vue'; export default { data() { return { counter: 0 }; }, // 2. 定义render选项 render() { // 3. 返回自定义的h函数 return h('div', { class: 'app-view', name: 'abc' }, [ // 4. 定义h2 h('h2', { className: 'title' }, this.counter), // 5. 定义增加按钮 h( 'button', { className: 'add-btn', onClick: () => { this.counter++; } }, '加一' ), // 6. 定义减少按钮 h( 'button', { className: 'remove-btn', onClick: () => { this.counter--; } }, '减一' ) ]); } } </script> \"]},\"389\":{\"h\":\"在setup函数选项中\",\"t\":[\"<script> import { h, ref } from 'vue'; export default { setup() { const counter = ref(0); const increment = () => { counter.value++; }; const decrement = () => { counter.value--; }; // 返回render函数 return () => h('div', { class: 'app-view', name: 'abc' }, [ h('h2', { className: 'title' }, counter.value), h( 'button', { onClick: increment }, '+1' ), h( 'button', { onClick: decrement }, '-1' ) ]); } }; </script> \"]},\"390\":{\"h\":\"在setup语法糖中\",\"t\":[\"<template> <!-- 2. 使用一下 --> <star-render /> </template> <script setup> import { h, ref } from 'vue'; const counter = ref(0); const increment = () => { counter.value++; }; const decrement = () => { counter.value--; }; // 1. 拿到render函数 const starRender = () => h('div', { class: 'app-view', name: 'abc' }, [ h('h2', { className: 'title' }, counter.value), h( 'button', { onClick: increment }, '+1' ), h( 'button', { onClick: decrement }, '-1' ) ]); </script> \"]},\"391\":{\"h\":\"其他写法\",\"t\":[\"创建原生元素：\",\"import { h } from 'vue' // 除了 type 外，其他参数都是可选的 h('div') h('div', { id: 'foo' }) // attribute 和 property 都可以用于 prop // Vue 会自动选择正确的方式来分配它 h('div', { class: 'bar', innerHTML: 'hello' }) // class 与 style 可以像在模板中一样 // 用数组或对象的形式书写 h('div', { class: [foo, { bar }], style: { color: 'red' } }) // 事件监听器应以 onXxx 的形式书写 h('div', { onClick: () => {} }) // children 可以是一个字符串 h('div', { id: 'foo' }, 'hello') // 没有 prop 时可以省略不写 h('div', 'hello') h('div', [h('span', 'hello')]) // children 数组可以同时包含 vnode 和字符串 h('div', ['hello', h('span', 'hello')]) \",\"创建组件：\",\"import Foo from './Foo.vue' // 传递 prop h(Foo, { // 等价于 some-prop=\\\"hello\\\" someProp: 'hello', // 等价于 @update=\\\"() => {}\\\" onUpdate: () => {} }) // 传递单个默认插槽 h(Foo, () => 'default slot') // 传递具名插槽 // 注意，需要使用 `null` 来避免 // 插槽对象被当作是 prop h(MyComponent, null, { default: () => 'default slot', foo: () => h('div', 'foo'), bar: () => [h('span', 'one'), h('span', 'two')] }) \"]},\"392\":{\"h\":\"函数组件和插槽的使用\",\"t\":[\"<script> import { h } from \\\"vue\\\"; export default { render() { return h(\\\"div\\\", null, [ h(\\\"h2\\\", null, \\\"Hello World\\\"), this.$slots.default ? this.$slots.default({name: \\\"coderwhy\\\"}): h(\\\"span\\\", null, \\\"我是HelloWorld的插槽默认值\\\") ]) } } </script> <style lang=\\\"scss\\\" scoped> </style> \",\"<template> <starRender /> </template> <script setup> import { h } from 'vue'; import HelloWorld from './HelloWorld.vue'; const starRender = () => h(\\\"div\\\", null, [ h(HelloWorld, null, { default: props => h(\\\"span\\\", null, `app传入到HelloWorld中的内容: ${props.name}`) }) ]) </script> \",\"image-20231218195545969\"]},\"393\":{\"h\":\"Jsx\",\"t\":[\"JSX 是 JavaScript 的一个类似 XML 的扩展，有了它，我们可以用以下的方式来书写代码：\",\"const vnode = <div>hello</div> \",\"在 JSX 表达式中，使用大括号来嵌入动态值：\",\"const vnode = <div id={dynamicId}>hello, {userName}</div> \"]},\"394\":{\"h\":\"配置\"},\"395\":{\"h\":\"vue-cli环境\",\"t\":[\"npm install @vue/babel-plugin-jsx -D\",\"babel.config.js 中配置\",\"img\"]},\"396\":{\"h\":\"vite环境\",\"t\":[\"npm install @vitejs/plugin-vue-jsx -D\",\"vite.config.js 中配置\",\"import { fileURLToPath, URL } from 'node:url'; import { defineConfig } from 'vite'; import vue from '@vitejs/plugin-vue'; import jsx from '@vitejs/plugin-vue-jsx'; export default defineConfig({ plugins: [vue(), jsx()], resolve: { alias: { '@': fileURLToPath(new URL('./src', import.meta.url)) } } }); \"]},\"397\":{\"h\":\"基本使用\"},\"398\":{\"h\":\"在render函数中\",\"t\":[\"<!-- 1. 这里加上注明语言使用jsx --> <script lang=\\\"jsx\\\"> import Home from './pages/home.vue'; export default { data() { return { counter: 0 }; }, render() { // 2. 返回jsx写法 return ( <div class=\\\"app-view\\\"> <h2>当前计数:{this.counter}</h2> <button onClick={this.increment}>+1</button> <button onClick={this.decrement}>-1</button> </div> ); }, methods: { increment() { this.counter++; }, decrement() { this.counter--; } } }; </script> \"]},\"399\":{\"h\":\"在setup函数中\",\"t\":[\"<!-- 1. 这里加上注明语言使用jsx --> <script lang=\\\"jsx\\\"> export default { data() { return { counter: 0 }; }, render() { // 2. 返回jsx写法 return ( <div class=\\\"app-view\\\"> <h2>当前计数:{this.counter}</h2> <button onClick={this.increment}>+1</button> <button onClick={this.decrement}>-1</button> </div> ); }, methods: { increment() { this.counter++; }, decrement() { this.counter--; } } }; </script> \"]},\"400\":{\"h\":\"在setup语法糖中\",\"t\":[\"<template> <!-- 3. 使用 --> <star-render /> </template> <!-- 1. 这里加上注明语言使用jsx --> <script setup lang=\\\"jsx\\\"> import { ref } from 'vue'; const counter = ref(0); const increment = () => counter.value++; const decrement = () => counter.value--; // 2. 拿到render函数 const starRender = () => ( <div class=\\\"app-view\\\"> <h2>当前计数:{counter.value}</h2> <button onClick={increment}>+1</button> <button onClick={decrement}>-1</button> </div> ); </script> \"]},\"401\":{\"h\":\"script setup语法糖\",\"t\":[\"<script setup>是在单文件组件 (SFC) 中使用组合式 API 的编译时语法糖，当同时使用 SFC 与组合式 API 时则推荐该语法\",\"更少的样板内容，更简洁的代码\",\"能够使用纯 Typescript 声明 prop 和抛出事件\",\"更好的运行时性能\",\"更好的 IDE 类型推断性能\"]},\"402\":{\"h\":\"顶层的绑定会被暴露给模板\",\"t\":[\"当使用 <script setup> 的时候，任何在<script setup> 声明的顶层的绑定 (包括变量，函数声明，以及 import 引入的内容) 能在模板中直接使用, 导入的组件也可以直接使用\",\"<template> <div>{{ mes }}</div> <button @click=\\\"addClick\\\">按钮</button> </template> <!-- 1. 这里加上setup属性 --> <script setup> import { ref } from 'vue'; // 定义数据后，template中可以直接使用，无需返回 const mes = ref(0); // 定义的方法也是，直接可被使用 const addClick = () => { console.log('hahah'); }; </script> \",\"<template> <!-- 2. 直接使用，不用通过compoents注册 --> <my-home></my-home> </template> <script setup> // 1. 这是导入的组件 import myHome from './myHome.vue'; </script> \"]},\"403\":{\"h\":\"defineProps()\",\"t\":[\"defineProps => 用来接收从父组件传递过来的数据\",\"<template> <my-home name=\\\"hello\\\" :age=\\\"18\\\"></my-home> </template> <script setup> import myHome from './myHome.vue'; </script> \",\"<template> <div>{{ name }} - {{ age }}</div> </template> <script setup> // defineProps是内置组件，可以直接使用，不用导入 // 可以接收一下返回的props对象，也可以不用 const props = defineProps({ name: { type: String, default: '' }, age: { type: Number, default: 0 } }); console.log(props); // Proxy {name: 'hello', age: 18} </script> \"]},\"404\":{\"h\":\"defineEmits()\",\"t\":[\"defineProps => 用来发射事件给父组件\",\"<template> <button @click=\\\"btnClick\\\">发送</button> </template> <script setup> // 1. 注册一下发射的事件 const emits = defineEmits(['btnClick']); // 2. 监听按钮的点击 const btnClick = () => { // 3. 发射 emits('btnClick', '我发射了'); }; </script> \",\"<template> <!-- 1. 监听子组件发射来的事件 --> <my-home @btnClick=\\\"handleClick\\\"></my-home> </template> <script setup> import myHome from './myHome.vue'; // 2. 获取子组件传递过来的值 const handleClick = (message) => { console.log(message); // 我发射了 }; </script> \"]},\"405\":{\"h\":\"defineExpose()\",\"t\":[\"defineExpose => 用来暴露数据\",\"ps : 使用 <script setup> 的组件是默认关闭的\",\"<script setup> const foo = () => { console.log('foo'); }; // 暴露出去，才可以被访问到 defineExpose({ foo }); </script> \",\"<template> <!-- 1. 定义ref --> <my-home ref=\\\"myHomeRef\\\"></my-home> </template> <script setup> import { onMounted, ref } from 'vue'; import myHome from '../../../Vue3/06_阶段六-Vue3全家桶实战/code/04_learn_composition/src/11_script_setup语法/myHome.vue'; // 2. 定义名称一样 const myHomeRef = ref(); onMounted(() => { // 3. 在生命周期中访问 console.log(myHomeRef.value); }); </script> \"]},\"406\":{\"h\":\"自定义组件\"},\"407\":{\"h\":\"指令的生命周期\",\"t\":[\"一个指令定义的对象，Vue提供了如下的几个钩子函数：\",\"created：在绑定元素的 attribute 或事件监听器被应用之前调用；\",\"beforeMount：当指令第一次绑定到元素并且在挂载父组件之前调用；\",\"mounted：在绑定元素的父组件被挂载后调用；\",\"beforeUpdate：在更新包含组件的 VNode 之前调用；\",\"updated：在包含组件的 VNode 及其子组件的 VNode 更新后调用；\",\"beforeUnmount：在卸载绑定元素的父组件之前调用；\",\"unmounted：当指令与元素解除绑定且父组件已卸载时，只调用一次；\"]},\"408\":{\"h\":\"指令钩子\",\"t\":[\"一个指令的定义对象可以提供几种钩子函数 (都是可选的)：\",\"const myDirective = { // 在绑定元素的 attribute 前 // 或事件监听器应用前调用 created(el, binding, vnode, prevVnode) { // 下面会介绍各个参数的细节 }, // 在元素被插入到 DOM 前调用 beforeMount(el, binding, vnode, prevVnode) {}, // 在绑定元素的父组件 // 及他自己的所有子节点都挂载完成后调用 mounted(el, binding, vnode, prevVnode) {}, // 绑定元素的父组件更新前调用 beforeUpdate(el, binding, vnode, prevVnode) {}, // 在绑定元素的父组件 // 及他自己的所有子节点都更新后调用 updated(el, binding, vnode, prevVnode) {}, // 绑定元素的父组件卸载前调用 beforeUnmount(el, binding, vnode, prevVnode) {}, // 绑定元素的父组件卸载后调用 unmounted(el, binding, vnode, prevVnode) {} } \",\"指令的钩子会传递以下几种参数：\",\"el：指令绑定到的元素。这可以用于直接操作 DOM。\",\"binding：一个对象，包含以下属性。 \",\"value：传递给指令的值。例如在 v-my-directive=\\\"1 + 1\\\" 中，值是 2。\",\"oldValue：之前的值，仅在 beforeUpdate 和 updated 中可用。无论值是否更改，它都可用。\",\"arg：传递给指令的参数 (如果有的话)。例如在 v-my-directive:foo 中，参数是 \\\"foo\\\"。\",\"modifiers：一个包含修饰符的对象 (如果有的话)。例如在 v-my-directive.foo.bar 中，修饰符对象是 { foo: true, bar: true }。\",\"instance：使用该指令的组件实例。\",\"dir：指令的定义对象。\",\"vnode：代表绑定元素的底层 VNode。\",\"prevNode：代表之前的渲染中指令所绑定元素的 VNode。仅在 beforeUpdate 和 updated 钩子中可用。\",\"举例来说，像下面这样使用指令：\",\"<div v-example:foo.bar=\\\"baz\\\"> \",\"binding 参数会是一个这样的对象：\",\"{ arg: 'foo', modifiers: { bar: true }, value: /* `baz` 的值 */, oldValue: /* 上一次更新时 `baz` 的值 */ } \",\"和内置指令类似，自定义指令的参数也可以是动态的。举例来说：\",\"<div v-example:[arg]=\\\"value\\\"></div> \",\"这里指令的参数会基于组件的 arg 数据属性响应式地更新。\",\"除了 el 外，其他参数都是只读的，不要更改它们。若你需要在不同的钩子间共享信息，推荐通过元素的 dataset attribute 实现。\"]},\"409\":{\"h\":\"简单使用\",\"t\":[\"Vue中自带的指令例如v-show、v-for、v-model等等，除了使用这些指令之外，Vue 也允许我们来自定义自己的指令\",\"ps : 一般需要对dom元素进行底层操作时使用\",\"自定义指令分为两种： \",\"自定义局部指令：组件中通过 directives 选项，只能在当前组件中使用；\",\"自定义全局指令：app的 directive 方法，可以在任意组件中被使用；\"]},\"410\":{\"h\":\"默认实现方式\",\"t\":[\"一个自定义指令由一个包含类似组件生命周期钩子的对象来定义。钩子函数会接收到指令所绑定元素作为其参数。下面是一个自定义指令的例子，当一个 input 元素被 Vue 插入到 DOM 中后，它会被自动聚焦：\",\"<script setup> // 在模板中启用 v-focus const vFocus = { mounted: (el) => el.focus() } </script> <template> <input v-focus /> </template> \",\"<template> <div class=\\\"app-view\\\"> <input type=\\\"text\\\" ref=\\\"inputRef\\\" /> </div> </template> <script setup> import { onMounted, ref } from 'vue'; const inputRef = ref(null); onMounted(() => { inputRef.value.focus(); }); </script> \"]},\"411\":{\"h\":\"使用局部指令\",\"t\":[\"在 <script setup> 中，任何以 v 开头的驼峰式命名的变量都可以被用作一个自定义指令。在上面的例子中，vFocus 即可以在模板中以 v-focus 的形式使用。\",\"在没有使用 <script setup> 的情况下，自定义指令需要通过 directives 选项注册：\",\"<template> <div> <input type=\\\"text\\\" v-focus> </div> </template> <script> export default { // 局部指令 directives: { focus: { mounted(el, bindings, vnode, preVnode) { console.log(\\\"focus mounted\\\"); el.focus(); } } } } </script> \"]},\"412\":{\"h\":\"自定义全局指令\",\"t\":[\"main.js中注册\",\"import { createApp } from 'vue' import App from './App.vue' const app = createApp(App) // 指令名称 app.directive('focus', { // 使用自定义指令的生命周期，挂载后访问 mounted(el, bindings, vnode, preVnode) { el?.focus() } }) app.mount('#app') \"]},\"413\":{\"h\":\"进行抽取\",\"t\":[\"注册directives文件夹\",\"/directives/format-time.js\",\"import dayjs from 'dayjs'; export default function(app) { app.directive(\\\"format-time\\\", { created(el, bindings) { bindings.formatString = \\\"YYYY-MM-DD HH:mm:ss\\\"; if (bindings.value) { bindings.formatString = bindings.value; } }, mounted(el, bindings) { const textContent = el.textContent; let timestamp = parseInt(textContent); if (textContent.length === 10) { timestamp = timestamp * 1000 } el.textContent = dayjs(timestamp).format(bindings.formatString); } }) } \",\"/directives/index.js\",\"import registerFormatTime from './format-time'; export default function registerDirectives(app) { registerFormatTime(app); } \",\"mian.js\",\"import registerDirectives from './directives' registerDirectives(app); \"]},\"414\":{\"h\":\"setup\"},\"415\":{\"h\":\"函数\",\"t\":[\"<template> <h1 v-fomat-time=\\\"timeFormatType\\\">{{ timeStamp }}</h1> </template> <script> import { ref } from 'vue' import dayJs from 'dayjs' export default { directives: { 'fomat-time': { mounted(el, bindings) { // 默认显示时间类型 let formatType = bindings.value console.log(formatType) // 转换成number类型 let time = el.textContent.length === 10 ? el.textContent * 1000 : el.textContent * 1; // 格式化 el.textContent = dayJs(time).format(formatType) setInterval(() => { // 定时器 time = dayJs(new Date().valueOf()).format(formatType) el.textContent = time }, 1000) } } }, setup() { // 设置初始时间戳 const timeStamp = ref(new Date().valueOf()) const timeFormatType = ref('YYYY-MM-DD HH:mm:ss') return { timeStamp, timeFormatType } } } </script> <style> h1 { display: inline-block; color: transparent; -webkit-background-clip: text; background-image: linear-gradient(to right, red, blue); } </style> \"]},\"416\":{\"h\":\"语法糖\",\"t\":[\"<template> <h1 v-fomat-time=\\\"timeFormatType\\\">{{ timeStamp }}</h1> </template> <script setup> import { ref } from 'vue'; import dayJs from 'dayjs'; // 设置初始时间戳 const timeStamp = ref(new Date().valueOf()); // 设置初始时间格式 const timeFormatType = ref('YYYY-MM-DD HH:mm:ss'); // 自定义时间格式化指令 const vFomatTime = { mounted(el, bindings) { // 获取定义的时间格式 const { value: timeFormatType } = bindings; // 转换成number类型 let time = el.textContent.length === 10 ? el.textContent * 1000 : el.textContent * 1; // 使用dayJs，根据时间格式来格式化时间,并赋值给el el.textContent = dayJs(time).format(timeFormatType); // 定时器，每隔一秒，重新赋值给el setInterval(() => { time = dayJs(new Date().valueOf()).format(timeFormatType); el.textContent = time; }, 1000); } }; </script> <style> h1 { display: inline-block; color: transparent; -webkit-background-clip: text; background-clip: text; background-image: linear-gradient(to right, red, blue); } </style> \"]},\"417\":{\"h\":\"内置组件\"},\"418\":{\"h\":\"Teleport\",\"t\":[\"<Teleport> 是一个内置组件，它可以将一个组件内部的一部分模板“传送”到该组件的 DOM 结构外层的位置去。\",\"在某些情况下，希望组件不是挂载在当前组件树上的，可能是移动到Vue app之外的其他位置 \",\"比如移动到body元素上，或者我们有其他的div#app之外的元素上\",\"可以通过teleport来完成\",\"teleport 翻译过来是心灵传输、远距离运输的意思，有两个属性 \",\"to : 指定将其中的内容移动到的目标元素，可以使用选择器\",\"disabled : 是否禁用 teleport 的功能\"]},\"419\":{\"h\":\"基本使用\",\"t\":[\"<template> <div class=\\\"app-view\\\"> <!-- 把该组件挂载到body元素上 --> <teleport to=\\\"body\\\"> <h1>Teleport</h1> </teleport> </div> </template> <script setup></script> <style> h1 { display: inline-block; color: transparent; -webkit-background-clip: text; background-clip: text; background-image: linear-gradient(to right, red, green, pink, yellow, blue); } </style> \",\"image-20231219000840061\"]},\"420\":{\"h\":\"挂载到#app之外的指定元素上\",\"t\":[\"<template> <div class=\\\"app\\\"> <div id=\\\"star\\\"></div> <div class=\\\"b\\\"> <div class=\\\"c\\\"></div> </div> </div> <!-- 把该组件挂载到#star元素上 --> <teleport to=\\\"#star\\\"> <h1>Teleport</h1> </teleport> <!-- 把该组件挂载到.b元素上 --> <teleport to=\\\".b\\\"> <h1>Teleport123</h1> </teleport> <!-- 文档上说是挂载到#app之外的元素，可是我发现自己内部的也可以指定，emmmm，优先是从内部一层层往外找的 --> <!-- 把该组件挂载到.c元素上... --> <teleport to=\\\".c\\\"> <h1>Teleport123</h1> </teleport> </template> <script setup></script> <style> h1 { display: inline-block; color: transparent; -webkit-background-clip: text; background-clip: text; background-image: linear-gradient(to right, red, green, pink, yellow, blue); } </style> \",\"image-20231219001340177\"]},\"421\":{\"h\":\"多个Teleport\",\"t\":[\"会合并，谁先谁在前面\",\"<template> <div id=\\\"star\\\"></div> <div class=\\\"app-view\\\"> <!-- 把该组件挂载到#star元素上 --> <teleport to=\\\"#star\\\"> <h1>Teleport</h1> </teleport> </div> <!-- 把该组件挂载到#star元素上 --> <teleport to=\\\"#star\\\"> <h1>Teleport123</h1> </teleport> </template> <script setup></script> <style> h1 { display: inline-block; color: transparent; -webkit-background-clip: text; background-clip: text; background-image: linear-gradient(to right, red, green, pink, yellow, blue); } </style> \",\"image-20231219001638121\"]},\"422\":{\"h\":\"其他\",\"t\":[\"异步组件 defineAsyncComponent/ Suspense : 实验特性 \",\"动态组件 : component\"]},\"423\":{\"h\":\"Vue插件\",\"t\":[\"https://cn.vuejs.org/guide/reusability/plugins.html#plugins\",\"通常我们向Vue全局添加一些功能时，会采用插件的模式，它有两种编写方式： \",\"对象类型：一个对象，但是必须包含一个 install 的函数，该函数会在安装插件时执行；\",\"函数类型：一个function，这个函数会在安装插件时自动执行；\",\"插件可以完成的功能没有限制，比如下面的几种都是可以的： \",\"添加全局方法或者property，通过把它们添加到 config.globalProperties 上实现；\",\"添加全局资源：指令/过滤器/过渡等；\",\"通过全局 mixin 来添加一些组件选项；\",\"一个库，提供自己的 API，同时提供上面提到的一个或多个功能；\"]},\"424\":{\"h\":\"对象类型\",\"t\":[\"对象类型：一个对象，但是必须包含一个 install 的函数，该函数会在安装插件时执行\",\"app.use({ install(app) { console.log('对象方式，插件被调用了', app); } }); \"]},\"425\":{\"h\":\"函数类型\",\"t\":[\"函数类型：一个function，这个函数会在安装插件时自动执行\",\"app.use(function(app){ console.log('函数方式，插件被调用了', app); }) \"]},\"426\":{\"h\":\"改写自定义指令\",\"t\":[\"import { createApp } from 'vue'; import App from './App.vue'; // 1. 导入指令方法 import installDirectives from './directives'; // 2。 注册所有指令 // installDirectives(app); // 这样使用use方法注册指令，因为传入的是一个函数，所以会自动执行 // 并且会把app实例传入，这样就可以在函数内部注册指令了 createApp(App).use(installDirectives).mount('#app'); \"]},\"427\":{\"h\":\"Vue3 基本指令\"},\"428\":{\"h\":\"VSCode 代码片段\",\"t\":[\"我们在前面练习Vue的过程中，有些代码片段是需要经常写的，我们再VSCode中我们可以生成一个代码片段，方便我们快速生成。\",\"VSCode中的代码片段有固定的格式，所以我们一般会借助于一个在线工具来完成。\",\"具体的步骤如下： \",\"第一步，复制自己需要生成代码片段的代码；\",\"第二步，https://snippet-generator.app/在该网站中生成代码片段；\",\"第三步，在VSCode中配置代码片段；\",\"直接 Tab trigger 即可自动填充\",\"image-20231016233051010\"]},\"429\":{\"h\":\"模板语法\",\"t\":[\"React的开发模式[了解] \",\"React使用的jsx,所以对应的代码都是编写的类似于js的一种语法\",\"之后通过Babe将js编译成 React. create Element函数调用\",\"function () { return <div></div> } \",\"vue也支持 jsx 的开发模式: \",\"但是大多数情况下,使用基于HTML的模板语法\",\"在模板中,允许开发者以声明式的方式将 DOM 和底层组件实例的数据绑定在-起;口在底层的实现中,vue将模板编译成虚拟DOM渲染函数\",\"<template> <div @click v-bind v-once> {{}} </div> </template> \"]},\"430\":{\"h\":\"Mustache 语法 双大括号语法\",\"t\":[\"如果我们希望把数据显示到模板（template）中，使用最多的语法是 “Mustache”语法 (双大括号) 的文本插值。 \",\"并且我们前端提到过，data返回的对象是有添加到Vue的响应式系统中；\",\"当data中的数据发生改变时，对应的内容也会发生更新。\",\"当然，Mustache中不仅仅可以是data中的属性，也可以是一个JavaScript的表达式。\",\"mustache的使用 1. 基本使用 2. 表达式 3. 函数 4. 三元运算符\",\"<template id=\\\"my-app\\\"> <!-- 1.mustache的基本使用 --> <h2>{{message}} - {{message}}</h2> <!-- 2.是一个表达式 --> <h2>{{counter * 10}}</h2> <h2>{{ message.split(\\\" \\\").reverse().join(\\\" \\\") }}</h2> <!-- 3.也可以调用函数 --> <!-- 可以使用computed(计算属性) --> <h2>{{getReverseMessage()}}</h2> <!-- 4.三元运算符 --> <h2>{{ isShow ? \\\"哈哈哈\\\": \\\"\\\" }}</h2> <button @click=\\\"toggle\\\">切换</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\", counter: 100, isShow: true } }, methods: { getReverseMessage() { return this.message.split(\\\" \\\").reverse().join(\\\" \\\"); }, toggle() { this.isShow = !this.isShow; } } } Vue.createApp(App).mount('#app'); </script> \",\"以下为错误写法\",\"<!-- 错误用法 --> var name = \\\"abc\\\" ; <h2>{{var name = \\\"abc\\\"}}</h2> <h2>{{ if(isShow) { return \\\"哈哈哈\\\" } }}</h2> \"]},\"431\":{\"h\":\"不常用指令\"},\"432\":{\"h\":\"v-once指令\",\"t\":[\"v-once用于指定元素或者组件只渲染一次\",\"当数据发生变化时,元素或者组件以及其所有的子元素将视为静态内容并且跳过;\",\"该指令可以用于性能优化;\",\"<h2 v-once>{{counter}}</h2> <button @click=\\\"increment\\\">+1</button> \",\"如果是子节点的化，也只能渲染一次\",\"<div v-once> <h2>{{counter}}</h2> <h2>{{message}}</h2> </div> <button @click=\\\"increment\\\">+1</button> \",\"完整代码\",\"<div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <h2>{{counter}}</h2> <div v-once> <h2>{{counter}}</h2> <h2>{{message}}</h2> </div> <button @click=\\\"increment\\\">+1</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { counter: 100, message: \\\"abc\\\" } }, methods: { increment() { this.counter++; } } } Vue.createApp(App).mount('#app'); </script> \"]},\"433\":{\"h\":\"v-html\",\"t\":[\"默认情况下，如果我们展示的内容本身是 html 的，那么vue并不会对其进行特殊的解析。 \",\"如果我们希望这个内容被Vue可以解析出来，那么可以使用 v-html 来展示\",\"<template id=\\\"my-app\\\"> <div>{{msg}}</div> <div v-html=\\\"msg\\\"></div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { msg: '<span style=\\\"color:red; background: blue;\\\">哈哈哈</span>' } } } Vue.createApp(App).mount('#app'); </script> \",\"image-20231018083558572\"]},\"434\":{\"h\":\"v-text\",\"t\":[\"用于更新元素的 textContent\",\" <h2 v-text=\\\"message\\\"></h2> <!-- 等价于 --> <h2>{{message}}</h2> \"]},\"435\":{\"h\":\"v-pre\",\"t\":[\"v-pre用于跳过元素和它的子元素的编译过程，显示原始的Mustache标签： \",\"跳过不需要编译的节点，加快编译的速度\",\" <template id=\\\"my-app\\\"> <h2 v-pre>{{message}}</h2> </template> <!-- {{message}} --> \"]},\"436\":{\"h\":\"v-cloak\",\"t\":[\"用于隐藏尚未完成编译的 DOM 模板。 \",\"无需传入\",\"详细信息\",\"该指令只在没有构建步骤的环境下需要使用。\",\"当使用直接在 DOM 中书写的模板时，可能会出现一种叫做“未编译模板闪现”的情况：用户可能先看到的是还没编译完成的双大括号标签，直到挂载的组件将它们替换为实际渲染的内容。\",\"v-cloak 会保留在所绑定的元素上，直到相关组件实例被挂载后才移除。配合像 [v-cloak] { display: none } 这样的 CSS 规则，它可以在组件编译完毕前隐藏原始模板。\",\"[v-cloak] { display: none; } \",\"<div v-cloak> {{ message }} </div> \",\"直到编译完成前，<div> 将不可见。\"]},\"437\":{\"h\":\"v-bind\",\"t\":[\"动态的绑定一个或多个 attribute，也可以是组件的 prop。\",\"缩写：: 或者 . (当使用 .prop 修饰符)\",\"期望：any (带参数) | Object (不带参数)\",\"参数：attrOrProp (可选的)\",\"修饰符\",\".camel - 将短横线命名的 attribute 转变为驼峰式命名。\",\".prop - 强制绑定为 DOM property。3.2+\",\".attr - 强制绑定为 DOM attribute。3.2+\",\"用途\",\"当用于绑定 class 或 style attribute，v-bind 支持额外的值类型如数组或对象。详见下方的指南链接。\",\"在处理绑定时，Vue 默认会利用 in 操作符来检查该元素上是否定义了和绑定的 key 同名的 DOM property。如果存在同名的 property，则 Vue 会将它作为 DOM property 赋值，而不是作为 attribute 设置。这个行为在大多数情况都符合期望的绑定值类型，但是你也可以显式用 .prop 和 .attr 修饰符来强制绑定方式。有时这是必要的，特别是在和自定义元素打交道时。\",\"当用于组件 props 绑定时，所绑定的 props 必须在子组件中已被正确声明。\",\"当不带参数使用时，可以用于绑定一个包含了多个 attribute 名称-绑定值对的对象。\",\"用法\",\"动态地绑定一个或多个 attribute，或一个组件 prop 到表达式。\",\"小知识: vue3 是允许template中有多个根元素\",\"<!-- vue2 template模板中只能有一个根元素 --> <!-- vue3 是允许template中有多个根元素 --> <template id=\\\"my-app\\\"> <!-- 1.v-bind的基本使用 --> <img v-bind:src=\\\"imgUrl\\\" alt=\\\"\\\"> <a v-bind:href=\\\"link\\\">百度一下</a> <!-- 2.v-bind提供一个语法糖 : --> <img :src=\\\"imgUrl\\\" alt=\\\"\\\"> <img src=\\\"imgUrl\\\" alt=\\\"\\\"> </template> \"]},\"438\":{\"h\":\"基本使用\",\"t\":[\"<template id=\\\"my-app\\\"> <!-- 1.v-bind的基本使用 --> <img v-bind:src=\\\"imgUrl\\\" alt=\\\"\\\"> <a v-bind:href=\\\"link\\\">百度一下</a> <!-- 2.v-bind提供一个语法糖 : --> <img :src=\\\"imgUrl\\\" alt=\\\"\\\"> <!-- 以下报错 --> <img src=\\\"imgUrl\\\" alt=\\\"\\\"> </template> <script> const App = { template: '#my-app', data() { return { imgUrl: \\\"https://avatars.githubusercontent.com/u/10335230?s=60&v=4\\\", link: \\\"https://www.baidu.com\\\" } } } Vue.createApp(App).mount('#app'); </script> \"]},\"439\":{\"h\":\"绑定 class\",\"t\":[\"在开发中,有时候我们的元素 class也是动态的,比如 \",\"当数据为某个状态时,字体显示红色。\",\"当数据另一个状态时,字体显示黑色\",\"绑定class有两种方式： \",\"对象语法\",\"数组语法\"]},\"440\":{\"h\":\"对象语法\",\"t\":[\"对象语法：我们可以传给 :class (v-bind:class 的简写) 一个对象，以动态地切换 class\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <div :class=\\\"className\\\">哈哈哈哈</div> <!-- 对象语法: {'active': boolean} --> <div :class=\\\"{'active': isActive}\\\">呵呵呵呵</div> <button @click=\\\"toggle\\\">切换</button> <!-- 也可以有多个键值对 --> <div :class=\\\"{active: isActive, title: true}\\\">呵呵呵呵</div> <!-- 默认的class和动态的class结合 --> <div class=\\\"abc cba\\\" :class=\\\"{active: isActive, title: true}\\\"> 呵呵呵呵 </div> <!-- 将对象放到一个单独的属性中 --> <div class=\\\"abc cba\\\" :class=\\\"classObj\\\">呵呵呵呵</div> <!-- 将返回的对象放到一个methods(computed)方法中 --> <div class=\\\"abc cba\\\" :class=\\\"getClassObj()\\\">呵呵呵呵</div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: \\\"#my-app\\\", data() { return { className: \\\"why\\\", isActive: true, title: \\\"abc\\\", classObj: { active: true, title: true }, }; }, methods: { toggle() { this.isActive = !this.isActive; this.classObj.active = !this.classObj.active; }, getClassObj() { return this.classObj; } }, }; Vue.createApp(App).mount(\\\"#app\\\"); </script> <style> .active { color: red; } </style> </body> \"]},\"441\":{\"h\":\"数组语法\",\"t\":[\"绑定class – 数组语法 \",\"数组语法：我们可以把一个数组传给 :class，以应用一个 class 列表\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <div :class=\\\"['abc', title]\\\">哈哈哈哈</div> <!-- class=\\\"abc cba active\\\" --> <div :class=\\\"['abc', title, isActive ? 'active': '']\\\">哈哈哈哈</div> <!-- 可以嵌套对象语法 --> <div :class=\\\"['abc', title, {active: isActive}]\\\">哈哈哈哈</div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\", title: \\\"cba\\\", isActive: true } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"442\":{\"h\":\"绑定 style\",\"t\":[\"我们可以利用 v-bind:style 来绑定一些CSS内联样式 \",\"这次因为某些样式我们需要根据数据动态来决定\",\"比如某段文字的颜色，大小等等\",\"CSS property 名可以用驼峰式 (camelCase) 或短横线分隔 (kebab-case，记得用引号括起来) 来命名\",\"绑定class有两种方式 \",\"对象语法\",\"数组语法\",\"CSS property 名短横线分隔 (kebab-case，记得用引号括起来)\"]},\"443\":{\"h\":\"对象语法\",\"t\":[\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- :style=\\\"{cssPropertyName: cssPropertyValue}\\\" --> <div :style=\\\"{color: finalColor, 'font-size': '30px'}\\\">哈哈哈哈</div> <div :style=\\\"{color: finalColor, fontSize: '30px'}\\\">哈哈哈哈</div> <div :style=\\\"{color: finalColor, fontSize: finalFontSize + 'px'}\\\">哈哈哈哈</div> <!-- 绑定一个data中的属性值, 并且是一个对象 --> <div :style=\\\"finalStyleObj\\\">呵呵呵呵</div> <!-- 调用一个方法 --> <div :style=\\\"getFinalStyleObj()\\\">呵呵呵呵</div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\", finalColor: 'red', finalFontSize: 50, finalStyleObj: { 'font-size': '50px', fontWeight: 700, backgroundColor: 'red' } } }, methods: { getFinalStyleObj() { return { 'font-size': '50px', fontWeight: 700, backgroundColor: 'red' } } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"444\":{\"h\":\"数组语法\",\"t\":[\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <div :style=\\\"[style1Obj, style2Obj]\\\">哈哈哈</div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\", style1Obj: { color: 'red', fontSize: '30px' }, style2Obj: { textDecoration: \\\"underline\\\" } } } } Vue.createApp(App).mount('#app'); </script> </body \"]},\"445\":{\"h\":\"动态绑定属性\",\"t\":[\"在某些情况下，我们属性的名称可能也不是固定的 \",\"前端我们无论绑定src、href、class、style，属性名称都是固定的\",\"如果属性名称不是固定的，我们可以使用 :[属性名]=“值” 的格式来定义\",\"这种绑定的方式，我们称之为 动态绑定属性；如下:\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- <div cba=\\\"kobe\\\">哈哈哈</div> --> <div :[name]=\\\"value\\\">哈哈哈</div> <img :src=\\\"\\\" alt=\\\"\\\"> <a :href=\\\"\\\"></a> <div :class></div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { name: \\\"cba\\\", value: \\\"kobe\\\" } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"446\":{\"h\":\"属性直接绑定一个对象\",\"t\":[\"如果我们希望将一个对象的所有属性，绑定到元素上的所有属性，应该怎么做呢？ \",\"非常简单，我们可以直接使用 v-bind 绑定一个 对象\",\"案例：info对象会被拆解成div的各个属性\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- <div name=\\\"why\\\" age=\\\"18\\\" height=\\\"1.88\\\">哈哈哈哈</div> --> <div v-bind=\\\"info\\\">哈哈哈哈</div> <div :=\\\"info\\\">哈哈哈哈</div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { info: { name: \\\"why\\\", age: 18, height: 1.88 } } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"447\":{\"h\":\"v-on\",\"t\":[\"v-on绑定事件\",\"前面我们绑定了元素的内容和属性，在前端开发中另外一个非常重要的特性就是交互。\",\"在前端开发中，我们需要经常和用户进行各种各样的交互 \",\"这个时候，我们就必须监听用户发生的事件，比如点击、拖拽、键盘事件等等\",\"在Vue中如何监听事件呢？使用v-on指令。\",\"v-on的用法\",\"缩写：@\",\"预期：Function | Inline Statement | Object\",\"参数：event p 修饰符： \",\".stop - 调用 event.stopPropagation()。\",\".prevent - 调用 event.preventDefault()。\",\".capture - 添加事件侦听器时使用 capture 模式。\",\".self - 只当事件是从侦听器绑定的元素本身触发时才触发回调。\",\".{keyAlias} - 仅当事件是从特定键触发时才触发回调。\",\".once - 只触发一次回调。\",\".left - 只当点击鼠标左键时触发。\",\".right - 只当点击鼠标右键时触发。\",\".middle - 只当点击鼠标中键时触发。\",\".passive - { passive: true } 模式添加侦听器\",\"用法：绑定事件监听\",\"event 事件可以参考 https://developer.mozilla.org/en-US/docs/Web/Events\"]},\"448\":{\"h\":\"基本使用\",\"t\":[\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- 完整写法: v-on:监听的事件=\\\"methods中方法\\\" --> <button v-on:click=\\\"btn1Click\\\">按钮1</button> <div class=\\\"area\\\" v-on:mousemove=\\\"mouseMove\\\">div</div> <!-- 语法糖 --> <button @click=\\\"btn1Click\\\">按钮1</button> <!-- 绑定一个表达式: inline statement --> <button @click=\\\"counter++\\\">{{counter}}</button> <!-- 绑定一个对象 --> <div class=\\\"area\\\" v-on=\\\"{click: btn1Click, mousemove: mouseMove}\\\"></div> <div class=\\\"area\\\" @=\\\"{click: btn1Click, mousemove: mouseMove}\\\"></div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\", counter: 100 } }, methods: { btn1Click() { console.log(\\\"按钮1发生了点击\\\"); }, mouseMove() { console.log(\\\"鼠标移动\\\"); } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"449\":{\"h\":\"参数传递\",\"t\":[\"当通过methods中定义方法，以供 @click调用时，需要注意参数问题：\",\"情况一：如果该方法不需要额外参数，那么方法后的()可以不添加。 \",\"但是注意：如果方法本身中有一个参数，那么会默认将原生事件event参数传递进去\",\"情况二：如果需要同时传入某个参数，同时需要 event 时，可以通过 $event 传入事件。\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- 默认传入event对象, 可以在方法中获取 --> <button @click=\\\"btn1Click\\\">按钮1</button> <!-- $event可以获取到事件发生时的事件对象 --> <button @click=\\\"btn2Click($event, 'coderwhy', 18)\\\">按钮2</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\" } }, methods: { btn1Click(event) { console.log(event); }, btn2Click(event, name, age) { console.log(name, age, event); } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"image-20231019004604619\"]},\"450\":{\"h\":\"v-on 的修饰符\",\"t\":[\"v-on支持修饰符，修饰符相当于对事件进行了一些特殊的处理： \",\".stop - 调用 event.stopPropagation()。\",\".prevent - 调用 event.preventDefault()。\",\".capture - 添加事件侦听器时使用 capture 模式。\",\".self - 只当事件是从侦听器绑定的元素本身触发时才触发回调。\",\".{keyAlias} - 仅当事件是从特定键触发时才触发回调。\",\".once - 只触发一次回调。\",\".left - 只当点击鼠标左键时触发。\",\".right - 只当点击鼠标右键时触发。\",\".middle - 只当点击鼠标中键时触发。\",\".passive - { passive: true } 模式添加侦听器\",\"stopPropagation 是一个事件修饰符，用于阻止事件冒泡。在 Vue.js 中，当一个元素上的事件被触发时，它会先执行该元素上的事件处理函数，然后再冒泡到该元素的父元素，继续执行父元素的事件处理函数。使用 stopPropagation 可以阻止事件继续冒泡到父元素。在给元素绑定事件时，可以使用 @click.stop 来阻止 click 事件冒泡到父元素。\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <div @click=\\\"divClick\\\"> <button @click=\\\"btnClick\\\">按钮</button> <button @click.stop=\\\"btnClick\\\">按钮</button> </div> <input type=\\\"text\\\" @keyup.enter=\\\"enterKeyup\\\"> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\" } }, methods: { divClick() { console.log(\\\"divClick\\\"); }, btnClick() { console.log('btnClick'); }, enterKeyup(event) { console.log(\\\"keyup\\\", event.target.value); } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"image-20231019005251770\"]},\"451\":{\"h\":\"条件渲染\",\"t\":[\"在某些情况下，我们需要根据当前的条件决定某些元素或组件是否渲染，这个时候我们就需要进行条件判断了。 \",\"Vue提供了下面的指令来进行条件判断： \",\"v-if\",\"v-else\",\"v-else-if\",\"v-show\"]},\"452\":{\"h\":\"基本使用\",\"t\":[\"v-if、v-else、v-else-if用于根据条件来渲染某一块的内容： \",\"这些内容只有在条件为true时，才会被渲染出来；\",\"这三个指令与JavaScript的条件语句if、else、else if类似；\",\" <template id=\\\"my-app\\\"> <input type=\\\"text\\\" v-model=\\\"score\\\"> <h2 v-if=\\\"score > 90\\\">优秀</h2> <h2 v-else-if=\\\"score > 60\\\">良好</h2> <h2 v-else>不及格</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { score: 95 } } } Vue.createApp(App).mount('#app'); </script> \"]},\"453\":{\"h\":\"template 和 v-if 结合使用\",\"t\":[\"v-if的渲染原理： \",\"v-if是惰性的；\",\"当条件为false时，其判断的内容完全不会被渲染或者会被销毁掉；\",\"当条件为true时，才会真正渲染条件块中的内容;\",\"template元素 \",\"因为v-if是一个指令，所以必须将其添加到一个元素上： \",\"但是如果我们希望切换的是多个元素呢？\",\"此时我们渲染div，但是我们并不希望div这种元素被渲染；\",\"这个时候，我们可以选择使用template；\",\"template元素可以当做不可见的包裹元素，并且在v-if上使用，但是最终template不会被渲染出来： \",\"有点类似于小程序中的block\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <template v-if=\\\"isShowHa\\\"> <h2>哈哈哈哈</h2> <h2>哈哈哈哈</h2> <h2>哈哈哈哈</h2> </template> <template v-else> <h2>呵呵呵呵</h2> <h2>呵呵呵呵</h2> <h2>呵呵呵呵</h2> </template> <button @click=\\\"isShowHa = !isShowHa\\\">切换</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { isShowHa: true } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"454\":{\"h\":\"v-show\",\"t\":[\"v-show和v-if的用法看起来是一致的，也是根据一个条件决定是否显示元素或者组件\",\" <template id=\\\"my-app\\\"> <h2 v-show=\\\"isShow\\\">哈哈哈哈</h2> </template> \"]},\"455\":{\"h\":\"v-show和v-if的区别\",\"t\":[\"首先，在用法上的区别： \",\"v-show是不支持template；\",\"v-show不可以和v-else一起使用；\",\"其次，本质的区别： \",\"v-show元素无论是否需要显示到浏览器上，它的DOM实际都是有渲染的，只是通过CSS的display属性来进行 切换；\",\"v-if当条件为false时，其对应的元素压根不会被渲染到DOM中；\",\"开发中如何进行选择呢？ \",\"如果我们的元素需要在显示和隐藏之间频繁的切换，那么使用v-show；\",\"如果不会频繁的发生切换，那么使用v-if；\",\"<template id=\\\"my-app\\\"> <h2 v-if=\\\"isShow\\\">哈哈哈哈</h2> <h2 v-show=\\\"isShow\\\">呵呵呵呵</h2> </template> \",\"image-20231019222841008\"]},\"456\":{\"h\":\"列表渲染\",\"t\":[\"在真实开发中，我们往往会从服务器拿到一组数据，并且需要对其进行渲染。 \",\"这个时候我们可以使用v-for来完成；\",\"v-for类似于JavaScript的for循环，可以用于遍历一组数据；\"]},\"457\":{\"h\":\"基本使用\",\"t\":[\"n v-for的基本格式是 \\\"item in 数组\\\"：\",\"数组通常是来自data或者prop，也可以是其他方式；\",\"item是我们给每项元素起的一个别名，这个别名可以自定来定义；\",\"我们知道，在遍历一个数组的时候会经常需要拿到数组的索引：\",\"如果我们需要索引，可以使用格式： \\\"(item, index) in 数组\\\"；\",\"注意上面的顺序：数组元素项item是在前面的，索引项index是在后面的；\",\"v-for支持的类型\",\"v-for也支持遍历对象，并且支持有一二三个参数： \",\"一个参数： \\\"value in object\\\";\",\"二个参数： \\\"(value, key) in object\\\";\",\"三个参数： \\\"(value, key, index) in object\\\";\",\"v-for同时也支持数字的遍历： \",\"每一个item都是一个数字；\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <h2>电影列表</h2> <ul> <!-- 遍历数组 --> <li v-for=\\\"(movie, index) in movies\\\">{{index+1}}.{{movie}}</li> </ul> <h2>个人信息</h2> <ul> <!-- 遍历对象 --> <li v-for=\\\"(value, key, index) in info\\\">{{value}}-{{key}}-{{index}}</li> </ul> <h2>遍历数字</h2> <ul> <li v-for=\\\"(num, index) in 10\\\">{{num}}-{{index}}</li> </ul> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { movies: [ \\\"星际穿越\\\", \\\"盗梦空间\\\", \\\"大话西游\\\", \\\"教父\\\", \\\"少年派\\\" ], info: { name: \\\"why\\\", age: 18, height: 1.88 } } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"458\":{\"h\":\"template元素使用\",\"t\":[\"类似于v-if，你可以使用 template 元素来循环渲染一段包含多个元素的内容： \",\"我们使用template来对多个元素进行包裹，而不是使用div来完成；\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <ul> <template v-for=\\\"(value, key) in info\\\"> <li>{{key}}</li> <li>{{value}}</li> <li class=\\\"divider\\\"></li> </template> </ul> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { info: { name: \\\"why\\\", age: 18, height: 1.88 } } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"459\":{\"h\":\"数组更新检测\",\"t\":[\"Vue 将被侦听的数组的变更方法进行了包裹，所以它们也将会触发视图更新。这些被包裹过的方法包括： \",\"push()\",\"pop()\",\"shift()\",\"unshift()\",\"splice()\",\"sort()\",\"reverse()\",\"替换数组的方法 \",\"上面的方法会直接修改原来的数组，但是某些方法不会替换原来的数组，而是会生成新的数组，比如 filter()、 concat() 和 slice()。\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <h2>电影列表</h2> <ul> <li v-for=\\\"(movie, index) in movies\\\">{{index+1}}.{{movie}}</li> </ul> <input type=\\\"text\\\" v-model=\\\"newMovie\\\"> <button @click=\\\"addMovie\\\">添加电影</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { newMovie: \\\"\\\", movies: [ \\\"星际穿越\\\", \\\"盗梦空间\\\", \\\"大话西游\\\", \\\"教父\\\", \\\"少年派\\\" ] } }, methods: { addMovie() { this.movies.push(this.newMovie); this.newMovie = \\\"\\\"; // filter 是过滤的意思, 下文中的代码的意思是: 过滤掉长度小于等于2的电影 // this.movies = this.movies.filter(item => item.length > 2); } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"460\":{\"h\":\"v-for 中的 key 是什么作用？\",\"t\":[\"https://cn.vuejs.org/api/built-in-special-attributes.html#key\",\"在使用v-for进行列表渲染时，我们通常会给元素或者组件绑定一个key属性。\",\"这个key属性有什么作用呢？我们先来看一下官方的解释：\",\"key属性主要用在Vue的虚拟DOM算法，在新旧nodes对比时辨识VNodes；\",\"如果不使用key，Vue会使用一种最大限度减少动态元素并且尽可能的尝试就地修改/复用相同类型元素的算法；\",\"而使用key时，它会基于key的变化重新排列元素顺序，并且会移除/销毁key不存在的元素；\",\"官方的解释对于初学者来说并不好理解，比如下面的问题：\",\"什么是新旧nodes，什么是VNode？\",\"没有key的时候，如何尝试修改和复用的？\",\"有key的时候，如何基于key重新排列的？\"]},\"461\":{\"h\":\"认识 VNode\",\"t\":[\"我们先来解释一下VNode的概念： \",\"因为目前我们还没有比较完整的学习组件的概念，所以目前我们先理解HTML元素创建出来的VNode；\",\"VNode的全称是Virtual Node，也就是虚拟节点；\",\"事实上，无论是组件还是元素，它们最终在Vue中表示出来的都是一个个VNode；\",\"VNode的本质是一个JavaScript的对象；可以用于描述某一个标签/ 元素 的样子\",\"好处: 多平台的渲染, 跨平台(主要好处)\",\"image-20231020162812819\"]},\"462\":{\"h\":\"虚拟 DOM\",\"t\":[\"如果我们不只是一个简单的div，而是有一大堆的元素，那么它们应该会形成一个 VNode Tree\",\"虚拟 DOM 与 真实 DOM 不一定一一对应\",\"image-20231020163154944\"]},\"463\":{\"h\":\"插入 F 的案例\",\"t\":[\"我们先来看一个案例：这个案例是当我点击按钮时会在中间插入一个f；\",\"我们可以确定的是，这次更新对于ul和button是不需要进行更新，需要更新的是我们 li 的列表：\",\"在Vue中，对于相同父元素的子元素节点并不会重新渲染整个列 表；\",\"因为对于列表中 a、b、c、d它们都是没有变化的；\",\"在操作真实DOM的时候，我们只需要在中间插入一个 f 的 li 即可；\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <ul> <li v-for=\\\"item in letters\\\" :key=\\\"item\\\">{{item}}</li> </ul> <button @click=\\\"insertF\\\">插入F元素</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { letters: ['a', 'b', 'c', 'd'] } }, methods: { insertF() { this.letters.splice(2, 0, 'f') } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"那么Vue中对于列表的更新究竟是如何操作的呢？ \",\"Vue事实上会对于有key和没有key会调用两个不同的方法；\"]},\"464\":{\"h\":\"Vue源码对于key的判断\",\"t\":[\"有key，那么就使用 patchKeyedChildren方法；\",\"没有key，那么久使用 patchUnkeyedChildren方法；\",\"image-20231020164733530\",\"diff算法: diff 算法是指生成更新补丁的方式,主要应用于虚拟 DOM 树变化后,更新真实 DOM。所以 diff 算法一定存在这样一个过程:触发更新 → 生成补丁 → 应用补丁。\",\"没有key的操作过程\",\"image-20231022182341619\",\"我们会发现上面的diff算法效率并不高： \",\"c和d来说它们事实上并不需要有任何的改动；\",\"但是因为我们的c被f所使用了，所有后续所有的内容都要一次进行改动，并且最后进行新增；\",\"image-20231022182012027\",\"有key的操作过程-diff算法 \",\"第一步的操作是从头开始进行遍历、比较： \",\"a和b是一致的会继续进行比较；\",\"c和f因为key不一致，所以就会break跳出循环\",\"第二步的操作是从尾部开始进行遍历、比较\",\"第三步是如果旧节点遍历完毕，但是依然有新的节点，那么就新增节点：\",\"第四步是如果新的节点遍历完毕，但是依然有旧的节点，那么就移除旧节点：\",\"第五步是最特色的情况，中间还有很多未知的或者乱序的节点：\",\"image-20231022182232738\",\"image-20231022182140133\",\"image-20231022182241976\",\"image-20231022182251535\",\"image-20231022182300781\"]},\"465\":{\"h\":\"有无key的结论\",\"t\":[\"有无key的结论 \",\"所以我们可以发现，Vue在进行diff算法的时候，会尽量利用我们的key来进行优化操作： \",\"在没有key的时候我们的效率是非常低效的；\",\"在进行插入或者重置顺序的时候，保持相同的key可以让diff算法更加的高效；\"]},\"466\":{\"h\":\"Vue 的Options API\"},\"467\":{\"h\":\"Computed\"},\"468\":{\"h\":\"认识计算属性\",\"t\":[\"我们知道，在模板中可以直接通过插值语法显示一些data中的数据。\",\"但是在某些情况，我们可能需要对数据进行一些转化后再显示，或者需要将多个数据结合起来进行显示；\",\"比如我们需要对多个data数据进行运算、三元运算符来决定结果、数据进行某种转化后显示；\",\"在模板中使用表达式，可以非常方便的实现，但是设计它们的初衷是用于简单的运算；\",\"在模板中放入太多的逻辑会让模板过重和难以维护；\",\"并且如果多个地方都使用到，那么会有大量重复的代码；\",\"我们有没有什么方法可以将逻辑抽离出去呢？\",\"可以，其中一种方式就是将逻辑抽取到一个method中，放到methods的options中；\",\"但是，这种做法有一个直观的弊端，就是所有的data使用过程都会变成了一个方法的调用；\",\"另外一种方式就是使用计算属性computed；\",\"什么是计算属性呢？\",\"https://cn.vuejs.org/api/reactivity-core.html#computed\",\"官方并没有给出直接的概念解释；\",\"而是说：对于任何包含响应式数据的复杂逻辑，你都应该使用计算属性；\",\"计算属性将被混入到组件实例中。所有 getter 和 setter 的 this 上下文自动地绑定为组件实例；\"]},\"469\":{\"h\":\"基本使用\",\"t\":[\"计算属性的用法：\",\"选项： computed\",\"类型：{ [key: string]: Function | { get: Function, set: Function } }\",\"我们来看三个案例：\",\"我们有两个变量：firstName 和 lastName，希望它们拼接之后在界面上显示；\",\"我们有一个分数：score \",\"当score大于60的时候，在界面上显示及格；\",\"当score小于60的时候，在界面上显示不及格；\",\"我们有一个变量message，记录一段文字：比如Hello World \",\"某些情况下我们是直接显示这段文字；\",\"某些情况下我们需要对这段文字进行反转；\",\"我们可以有三种实现思路： \",\"思路一：在模板语法中直接使用表达式；\",\"思路二：使用method对逻辑进行抽取；\",\"思路三：使用计算属性computed；\"]},\"470\":{\"h\":\"在模板语法中直接使用表达式\",\"t\":[\"缺点一：模板中存在大量的复杂逻辑，不便于维护（模板中表达式的初衷是用于简单的计算）；\",\"缺点二：当有多次一样的逻辑时，存在重复的代码；\",\"缺点三：多次使用的时候，很多运算也需要多次执行，没有缓存；\",\"<template id=\\\"my-app\\\"> <!-- 1.实现思路一: --> <h2>{{ firstName + lastName }}</h2> <h2>{{ score >= 60 ? \\\"及格\\\": \\\"不及格\\\" }}</h2> <h2>{{ message.split(\\\"\\\").reverse().join(\\\" \\\") }}</h2> </template> \"]},\"471\":{\"h\":\"使用method对逻辑进行抽取\",\"t\":[\"缺点一：我们事实上先显示的是一个结果，但是都变成了一种方法的调用；\",\"缺点二：多次使用方法的时候，没有缓存，也需要多次计算；\",\"<template id=\\\"my-app\\\"> <h2>{{getFullName()}}</h2> <h2>{{getResult()}}</h2> <h2>{{getReverseMessage()}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { firstName: \\\"Kobe\\\", lastName: \\\"Bryant\\\", score: 80, message: \\\"Hello World\\\" } }, methods: { getFullName() { return this.firstName + \\\" \\\" + this.lastName; }, getResult() { return this.score >= 60 ? \\\"及格\\\": \\\"不及格\\\"; }, getReverseMessage() { return this.message.split(\\\" \\\").reverse().join(\\\" \\\"); } } } Vue.createApp(App).mount('#app'); </script> \"]},\"472\":{\"h\":\"computed 实现\",\"t\":[\"注意：计算属性看起来像是一个函数，但是我们在使用的时候不需要加()，这个后面讲setter和getter时会讲到；\",\"我们会发现无论是直观上，还是效果上计算属性都是更好的选择；\",\"并且计算属性是有缓存的；\",\"<template id=\\\"my-app\\\"> <h2>{{fullName}}</h2> <h2>{{result}}</h2> <h2>{{reverseMessage}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { firstName: \\\"Kobe\\\", lastName: \\\"Bryant\\\", score: 80, message: \\\"Hello World\\\" } }, computed: { // 定义了一个计算属性叫fullname fullName() { return this.firstName + \\\" \\\" + this.lastName; }, result() { return this.score >= 60 ? \\\"及格\\\": \\\"不及格\\\"; }, reverseMessage() { return this.message.split(\\\" \\\").reverse().join(\\\" \\\"); } } } Vue.createApp(App).mount('#app'); </script> \"]},\"473\":{\"h\":\"计算属性 vs methods\",\"t\":[\"在上面的实现思路中，我们会发现计算属性和methods的实现看起来是差别是不大的，而且我们多次提到计算属性有缓存。\",\"接下来我们来看一下同一个计算多次使用，计算属性和methods的差异：\",\"<template id=\\\"my-app\\\"> <button @click=\\\"changeFirstName\\\">修改firstName</button> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{getFullName()}}</h2> <h2>{{getFullName()}}</h2> <h2>{{getFullName()}}</h2> <h2>{{getFullName()}}</h2> <h2>{{getFullName()}}</h2> <h2>{{getFullName()}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { firstName: \\\"Kobe\\\", lastName: \\\"Bryant\\\" } }, computed: { // 计算属性是有缓存的, 当我们多次使用计算属性时, 计算属性中的运算只会执行一次. // 计算属性会随着依赖的数据(firstName)的改变, 而进行重新计算. fullName() { console.log(\\\"computed的fullName中的计算\\\"); return this.firstName + \\\" \\\" + this.lastName; } }, methods: { getFullName() { console.log(\\\"methods的getFullName中的计算\\\"); return this.firstName + \\\" \\\" + this.lastName; }, changeFirstName() { this.firstName = \\\"Coder\\\" } } } Vue.createApp(App).mount('#app'); </script> \",\"打印结果如下：\",\"我们会发现methods在多次使用时，会调用多次；\",\"而计算属性虽然使用了多次，但是计算的过程只调用了一次；\",\"这是因为计算属性会基于它们的依赖关系进行缓存；\",\"在数据不发生变化时，计算属性是不需要重新计算的；\",\"但是如果依赖的数据发生变化，在使用时，计算属性依然会重新进行计算；如下:\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <input type=\\\"text\\\" v-model=\\\"score\\\"> <!-- 1.使用methods --> <h2>{{getResult()}}</h2> <h2>{{getResult()}}</h2> <h2>{{getResult()}}</h2> <!-- 2.使用computed --> <h2>{{result}}</h2> <h2>{{result}}</h2> <h2>{{result}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { score: 90 } }, computed: { result() { console.log(\\\"调用了计算属性result的getter\\\"); return this.score >= 60 ? \\\"及格\\\": \\\"不及格\\\"; } }, methods: { getResult() { console.log(\\\"调用了getResult方法\\\"); return this.score >= 60 ? \\\"及格\\\": \\\"不及格\\\"; } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"当 score 变化, console 输出如下:\",\"调用了getResult方法 调用了getResult方法 调用了getResult方法 调用了计算属性result的getter \"]},\"474\":{\"h\":\"计算属性的 setter 和 getter\",\"t\":[\"计算属性在大多数情况下，只需要一个getter方法即可，所以我们会将计算属性直接写成一个函数。\",\"但是，如果我们确实想设置计算属性的值呢？\",\"这个时候我们也可以给计算属性设置一个setter的方法；\",\"<template id=\\\"my-app\\\"> <button @click=\\\"changeFullName\\\">修改fullName</button> <h2>{{fullName}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { firstName: \\\"Kobe\\\", lastName: \\\"Bryant\\\" } }, computed: { // fullName 的 getter方法 fullName() { return this.firstName + \\\" \\\" + this.lastName; }, // fullName的getter和setter方法 fullName: { get: function() { return this.firstName + \\\" \\\" + this.lastName; }, set: function(newValue) { console.log(newValue); const names = newValue.split(\\\" \\\"); this.firstName = names[0]; this.lastName = names[1]; } } }, methods: { changeFullName() { this.fullName = \\\"Coder Why\\\"; } } } Vue.createApp(App).mount('#app'); </script> \",\"以下为内部判断\",\"图片\"]},\"475\":{\"h\":\"侦听器 watch\",\"t\":[\"用于声明在数据更改时调用的侦听回调。watch 选项期望接受一个对象，其中键是需要侦听的响应式组件实例属性 (例如，通过 data 或 computed 声明的属性)——值是相应的回调函数。该回调函数接受被侦听源的新值和旧值。\",\"什么是侦听器？ \",\"开发中我们在data返回的对象中定义了数据，这个数据通过插值语法等方式绑定到template中;\",\"当数据变化时，template会自动进行更新来显示最新的数据;\",\"但是在某些情况下，我们希望在代码逻辑中监听某个数据的变化，这个时候就需要用侦听器watch来完成了;\",\"用法如下： \",\"选项：watch\",\"类型: {[key: string]: string | Function | Object | Array}\"]},\"476\":{\"h\":\"简单案例\",\"t\":[\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> 您的问题: <input type=\\\"text\\\" v-model=\\\"question\\\"> <button @click=\\\"queryAnswer\\\">查找答案</button> <p>您的问题是: {{ question }}</p> <p>答案是: {{ anwser }}</p> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { // 侦听question的变化时, 去进行一些逻辑的处理(JavaScript, 网络请求) question: \\\"Hello World\\\", anwser: \\\"\\\" } }, watch: { // question侦听的data中的属性的名称 // newValue变化后的新值 // oldValue变化前的旧值 question: function(newValue, oldValue) { console.log(\\\"新值: \\\", newValue, \\\"旧值\\\", oldValue); this.queryAnswer(); } }, methods: { queryAnswer() { // console.log(`你的问题${this.question}的答案是哈哈哈哈哈`); this.anwser = `你的问题${this.question}的答案是哈哈哈哈哈`; } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"477\":{\"h\":\"配置选项\",\"t\":[\"watch 默认是浅层的：被侦听的属性，仅在被赋新值时，才会触发回调函数——而嵌套属性的变化不会触发。如果想侦听所有嵌套的变更，你需要深层侦听器：\",\"以下为不使用深度监听, 当 info.name 在方法中被赋值改变时, 页面会改变, 但是watch不会侦听到, 理由如上\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <h2>{{info.name}}</h2> <button @click=\\\"changeInfo\\\">改变info</button> <!-- 页面会改变, 但是watch不会侦听到 --> <button @click=\\\"changeInfoName\\\">改变info.name</button> <button @click=\\\"changeInfoNbaName\\\">改变info.nba.name</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { info: { name: \\\"why\\\", age: 18, nba: {name: 'kobe'} } } }, watch: { // 默认情况下我们的侦听器只会针对监听的数据本身的改变(内部发生的改变是不能侦听) info(newInfo, oldInfo) { console.log(\\\"newValue:\\\", newInfo, \\\"oldValue:\\\", oldInfo); } }, methods: { changeInfo() { this.info = {name: \\\"kobe\\\"}; }, changeInfoName() { this.info.name = \\\"kobe\\\"; }, changeInfoNbaName() { this.info.nba.name = \\\"james\\\"; } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"将 watch 中更改如下, 不管多深都会侦听到\",\"watch: { // 深度侦听/立即执行(一定会执行一次) info: { handler: function(newInfo, oldInfo) { console.log(\\\"newValue:\\\", newInfo, \\\"oldValue:\\\", oldInfo); }, deep: true, // 深度侦听 // immediate: true // 立即执行 } } \",\"immediate: true 立即执行, 这个时候无论后面数据是否有变化，侦听的函数都会有限执行一次；即当刷新页面时会立刻执行一次, 回调函数的初次执行就发生在 created 钩子之前。Vue 此时已经处理了 data、computed 和 methods 选项，所以这些属性在第一次调用时就是可用的。\",\"newValue: Proxy(Object) {name: 'why', age: 18, nba: {…}} oldValue: undefined \",\"注意: 引用对象 or watch 不能侦听到旧值, 可以利用 计算属性 缓存旧值, 或者自己深拷贝一份作为保存\"]},\"478\":{\"h\":\"其他方式\",\"t\":[\"https://cn.vuejs.org/api/options-state.html#watch\",\"export default { data() { return { a: 1, b: 2, c: { d: 4 }, e: 5, f: 6 } }, watch: { // 侦听根级属性 a(val, oldVal) { console.log(`new: ${val}, old: ${oldVal}`) }, // 字符串方法名称 b: 'someMethod', // 该回调将会在被侦听的对象的属性改变时调动，无论其被嵌套多深 c: { handler(val, oldVal) { console.log('c changed') }, deep: true }, // 侦听单个嵌套属性： 'c.d': function (val, oldVal) { // do something }, // 该回调将会在侦听开始之后立即调用 e: { handler(val, oldVal) { console.log('e changed') }, immediate: true }, // 你可以传入回调数组，它们将会被逐一调用 f: [ 'handle1', function handle2(val, oldVal) { console.log('handle2 triggered') }, { handler: function handle3(val, oldVal) { console.log('handle3 triggered') } /* ... */ } ] }, methods: { someMethod() { console.log('b changed') }, handle1() { console.log('handle 1 triggered') } }, created() { this.a = 3 // => new: 3, old: 1 } } \"]},\"479\":{\"h\":\"$watch 的API：\",\"t\":[\"https://cn.vuejs.org/api/component-instance.html#watch\",\"我们可以在created的生命周期（后续会讲到）中，使用 this.$watchs 来侦听；\",\"第一个参数是要侦听的源；\",\"第二个参数是侦听的回调函数callback；\",\"第三个参数是额外的其他选项，比如deep、immediate；\",\"created() { const unwatch = this.$watch(\\\"info\\\", function(newInfo, oldInfo) { console.log(newInfo, oldInfo); }, { deep: true, immediate: true }) // unwatch() } \"]},\"480\":{\"h\":\"阶段案例\",\"t\":[\"现在我们来做一个相对综合一点的练习：书籍购物车\",\"css\",\"table { border: 1px solid #e9e9e9; border-collapse: collapse; border-spacing: 0; } th, td { padding: 8px 16px; border: 1px solid #e9e9e9; text-align: left; } th { background-color: #f7f7f7; color: #5c6b77; font-weight: 600; } .counter { margin: 0 5px; } \",\"index\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\" /> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <title>Document</title> <link rel=\\\"stylesheet\\\" href=\\\"./style.css\\\" /> </head> <body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <template v-if=\\\"books.length > 0\\\"> <table> <thead> <th>序号</th> <th>书籍名称</th> <th>出版日期</th> <th>价格</th> <th>购买数量</th> <th>操作</th> </thead> <tbody> <tr v-for=\\\"(book, index) in books\\\"> <td>{{index + 1}}</td> <td>{{book.name}}</td> <td>{{book.date}}</td> <td>{{formatPrice(book.price)}}</td> <td> <button :disabled=\\\"book.count <= 1\\\" @click=\\\"decrement(index)\\\"> - </button> <span class=\\\"counter\\\">{{book.count}}</span> <button @click=\\\"increment(index)\\\">+</button> </td> <td> <button @click=\\\"removeBook(index)\\\">移除</button> </td> </tr> </tbody> </table> <h2>总价格: {{formatPrice(totalPrice)}}</h2> </template> <template v-else> <h2>购物车为空~</h2> </template> </template> <script src=\\\"../js/vue.js\\\"></script> <script src=\\\"./index.js\\\"></script> <script> Vue.createApp({ template: \\\"#my-app\\\", data() { return { books: [ { id: 1, name: \\\"《算法导论》\\\", date: \\\"2006-9\\\", price: 85.0, count: 1, }, { id: 2, name: \\\"《UNIX编程艺术》\\\", date: \\\"2006-2\\\", price: 59.0, count: 1, }, { id: 3, name: \\\"《编程珠玑》\\\", date: \\\"2008-10\\\", price: 39.0, count: 1, }, { id: 4, name: \\\"《代码大全》\\\", date: \\\"2006-3\\\", price: 128.0, count: 1, }, ], }; }, computed: { totalPrice() { let finalPrice = 0; for (let book of this.books) { finalPrice += book.count * book.price; } return finalPrice; }, // Vue3不支持过滤器了, 推荐两种做法: 使用计算属性/使用全局的方法 filterBooks() { return this.books.map((item) => { const newItem = Object.assign({}, item); newItem.price = \\\"¥\\\" + item.price; return newItem; }); }, }, methods: { increment(index) { // 通过索引值获取到对象 this.books[index].count++; }, decrement(index) { this.books[index].count--; }, removeBook(index) { this.books.splice(index, 1); }, formatPrice(price) { return \\\"¥\\\" + price; }, }, }).mount(\\\"#app\\\"); </script> </body> </html> \"]},\"481\":{\"h\":\"v-model\",\"t\":[\"v-model 可以在组件上使用以实现双向绑定。\",\"首先让我们回忆一下 v-model 在原生元素上的用法：\",\"template\",\"<input v-model=\\\"searchText\\\" /> \",\"在代码背后，模板编译器会对 v-model 进行更冗长的等价展开。因此上面的代码其实等价于下面这段：\",\"<input :value=\\\"searchText\\\" @input=\\\"searchText = $event.target.value\\\" /> \",\"而当使用在一个组件上时，v-model 会被展开为如下的形式：\",\"<CustomInput :model-value=\\\"searchText\\\" @update:model-value=\\\"newValue => searchText = newValue\\\" /> \",\"要让这个例子实际工作起来，<CustomInput> 组件内部需要做两件事：\",\"将内部原生 <input> 元素的 value attribute 绑定到 modelValue prop\",\"当原生的 input 事件触发时，触发一个携带了新值的 update:modelValue 自定义事件\"]},\"482\":{\"h\":\"内部实现\",\"t\":[\"图片\"]},\"483\":{\"h\":\"绑定其他表单\",\"t\":[\"具体可以看: https://cn.vuejs.org/guide/essentials/forms.html#modifiers\",\"在 HTML 中，<label> 标签的 for 属性被用来关联 <label> 标签和表单控件（如 <input>、<textarea>、<select> 等）。for 属性的值应该是你想要关联的表单控件的 id。 当 <label> 被点击时，与其关联的表单控件会获得焦点。\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- 1.绑定textarea --> <label for=\\\"intro\\\"> 自我介绍 <textarea name=\\\"intro\\\" id=\\\"intro\\\" cols=\\\"30\\\" rows=\\\"10\\\" v-model=\\\"intro\\\"></textarea> </label> <h2>intro: {{intro}}</h2> <!-- 2.checkbox --> <!-- 2.1.单选框 --> <label for=\\\"agree\\\"> <input id=\\\"agree\\\" type=\\\"checkbox\\\" v-model=\\\"isAgree\\\"> 同意协议 </label> <h2>isAgree: {{isAgree}}</h2> <!-- 2.2.多选框 --> <span>你的爱好: </span> <label for=\\\"basketball\\\"> <input id=\\\"basketball\\\" type=\\\"checkbox\\\" v-model=\\\"hobbies\\\" value=\\\"basketball\\\"> 篮球 </label> <label for=\\\"football\\\"> <input id=\\\"football\\\" type=\\\"checkbox\\\" v-model=\\\"hobbies\\\" value=\\\"football\\\"> 足球 </label> <label for=\\\"tennis\\\"> <input id=\\\"tennis\\\" type=\\\"checkbox\\\" v-model=\\\"hobbies\\\" value=\\\"tennis\\\"> 网球 </label> <h2>hobbies: {{hobbies}}</h2> <!-- 3.radio --> <span>你的爱好: </span> <label for=\\\"male\\\"> <input id=\\\"male\\\" type=\\\"radio\\\" v-model=\\\"gender\\\" value=\\\"male\\\">男 </label> <label for=\\\"female\\\"> <input id=\\\"female\\\" type=\\\"radio\\\" v-model=\\\"gender\\\" value=\\\"female\\\">女 </label> <h2>gender: {{gender}}</h2> <!-- 4.select --> <span>喜欢的水果: </span> <select v-model=\\\"fruit\\\" multiple size=\\\"2\\\"> <option value=\\\"apple\\\">苹果</option> <option value=\\\"orange\\\">橘子</option> <option value=\\\"banana\\\">香蕉</option> </select> <h2>fruit: {{fruit}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { intro: \\\"Hello World\\\", isAgree: false, hobbies: [\\\"basketball\\\"], gender: \\\"\\\", fruit: \\\"orange\\\" } }, methods: { commitForm() { axios } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"image-20231031200224648\",\"目前我们在前面的案例中大部分的值都是在template中固定好的：\",\"比如gender的两个输入框值male、female；\",\"比如hobbies的三个输入框值basketball、football、tennis；\",\"在真实开发中，我们的数据可能是来自服务器的，那么我们就可以先将值请求下来，绑定到data返回的对象中，再通过v-bind来进行值的绑定，这个过程就是值绑定。\"]},\"484\":{\"h\":\"修饰符\"},\"485\":{\"h\":\"内置修饰符\"},\"486\":{\"h\":\".lazy\",\"t\":[\"默认情况下，v-model 会在每次 input 事件后更新数据 (IME 拼字阶段的状态例外)。你可以添加 lazy 修饰符来改为在每次 change 事件后更新数据：\",\"<!-- 在 \\\"change\\\" 事件后同步更新而不是 \\\"input\\\" --> <input v-model.lazy=\\\"msg\\\" /> \"]},\"487\":{\"h\":\".number\",\"t\":[\"如果你想让用户输入自动转换为数字，你可以在 v-model 后添加 .number 修饰符来管理输入：\",\"另外，在我们进行逻辑判断时，如果是一个string类型，在可以转化的情况下会进行隐式转换的：\",\"下面的score在进行判断的过程中会进行隐式转化的；\",\"const score = \\\"100\\\";if (score > 90) { console.log(\\\"优秀\\\");} \",\"<input v-model.number=\\\"age\\\" /> \",\"如果该值无法被 parseFloat() 处理，那么将返回原始值。\",\"number 修饰符会在输入框有 type=\\\"number\\\" 时自动启用。\"]},\"488\":{\"h\":\".trim\",\"t\":[\"如果你想要默认自动去除用户输入内容中两端的空格，你可以在 v-model 后添加 .trim 修饰符：\",\"<input v-model.trim=\\\"msg\\\" /> \"]},\"489\":{\"h\":\"自定义的修饰符\",\"t\":[\"在某些场景下，你可能想要一个自定义组件的 v-model 支持自定义的修饰符。\",\"我们来创建一个自定义的修饰符 capitalize，它会自动将 v-model 绑定输入的字符串值第一个字母转为大写：\",\"<MyComponent v-model.capitalize=\\\"myText\\\" /> \",\"组件的 v-model 上所添加的修饰符，可以通过 modelModifiers prop 在组件内访问到。在下面的组件中，我们声明了 modelModifiers 这个 prop，它的默认值是一个空对象：\",\"<script> export default { props: { modelValue: String, modelModifiers: { default: () => ({}) } }, emits: ['update:modelValue'], created() { console.log(this.modelModifiers) // { capitalize: true } } } </script> <template> <input type=\\\"text\\\" :value=\\\"modelValue\\\" @input=\\\"$emit('update:modelValue', $event.target.value)\\\" /> </template> \",\"注意这里组件的 modelModifiers prop 包含了 capitalize 且其值为 true，因为它在模板中的 v-model 绑定 v-model.capitalize=\\\"myText\\\" 上被使用了。\",\"有了这个 prop，我们就可以检查 modelModifiers 对象的键，并编写一个处理函数来改变抛出的值。在下面的代码里，我们就是在每次 <input /> 元素触发 input 事件时将值的首字母大写：\",\"<script> export default { props: { modelValue: String, modelModifiers: { default: () => ({}) } }, emits: ['update:modelValue'], methods: { emitValue(e) { let value = e.target.value if (this.modelModifiers.capitalize) { value = value.charAt(0).toUpperCase() + value.slice(1) } this.$emit('update:modelValue', value) } } } </script> <template> <input type=\\\"text\\\" :value=\\\"modelValue\\\" @input=\\\"emitValue\\\" /> </template> \"]},\"490\":{\"h\":\"多个 v-model 绑定\",\"t\":[\"我们可以在单个组件实例上创建多个 v-model 双向绑定。\",\"组件上的每一个 v-model 都会同步不同的 prop，而无需额外的选项：\",\"<UserName v-model:first-name=\\\"first\\\" v-model:last-name=\\\"last\\\" /> \",\"<script> export default { props: { firstName: String, lastName: String }, emits: ['update:firstName', 'update:lastName'] } </script> <template> <input type=\\\"text\\\" :value=\\\"firstName\\\" @input=\\\"$emit('update:firstName', $event.target.value)\\\" /> <input type=\\\"text\\\" :value=\\\"lastName\\\" @input=\\\"$emit('update:lastName', $event.target.value)\\\" /> </template> \"]},\"491\":{\"h\":\"生命周期\"},\"492\":{\"h\":\"什么是生命周期?\",\"t\":[\"什么是生命周期呢？\",\"每个组件都可能会经历从创建、挂载、更新、卸载等一系列的过程；\",\"在这个过程中的某一个阶段，用于可能会想要添加一些属于自己的代码逻辑（比如组件创建完后就请求一些服 务器数据）；\",\"生命周期函数：\",\"生命周期函数是一些钩子函数，在某个时间会被Vue源码内部进行回调；\",\"通过对生命周期函数的回调，我们可以知道目前组件正在经历什么阶段；\",\"那么我们就可以在该生命周期中编写属于自己的逻辑代码了；\"]},\"493\":{\"h\":\"注册周期钩子\",\"t\":[\"举例来说，mounted 钩子可以用来在组件完成初始渲染并创建 DOM 节点后运行代码：\",\"export default { mounted() { console.log(`the component is now mounted.`) } } \",\"还有其他一些钩子，会在实例生命周期的不同阶段被调用，最常用的是 mounted、updated 和 unmounted。\",\"所有生命周期钩子函数的 this 上下文都会自动指向当前调用它的组件实例。注意：避免用箭头函数来定义生命周期钩子，因为如果这样的话你将无法在函数中通过 this 获取组件实例。\"]},\"494\":{\"h\":\"组件的生命周期\",\"t\":[\"https://cn.vuejs.org/api/options-lifecycle.html#options-lifecycle\",\"beforeCreate( )——准备创建\",\"created( )——创建完成\",\"beforeMount( )—挂载之前\",\"mounted( )——挂载完成\",\"beforeUpdate( )——更新之前\",\"updated( )——更新完成\",\"activated( )——当组件在 keep-alive 内被切换的时候它的 monnted( ) 被取代为activated\",\"deactivated( )——当组件在 keep-alive 内被切换的时候它的 unmonnted( ) 被取代为deactivated\",\"beforeUnmount( )—卸载之前\",\"unmounted( )——卸载完成\",\"errorCaptured——返回子孙组件中的错误\",\"renderTracked——虚拟 DOM 重新渲染时调用。接收 debugger event 作为参数。告诉你哪个操作跟踪了组件以及该操作的目标对象和键。\",\"renderTiggered——虚拟 DOM 重新渲染被触发时调用。接收 debugger event 作为参数。告诉你是什么操作触发了重新渲染，以及该操作的目标对象和键\",\"在这里插入图片描述\",\"<template> <div> <h2 ref=\\\"title\\\">{{message}}</h2> <button @click=\\\"changeMessage\\\">修改message</button> </div> </template> <script> export default { data() { return { message: \\\"Hello Home\\\" } }, methods: { changeMessage() { this.message = \\\"你好啊, 李银河\\\" } }, beforeCreate() { console.log(\\\"home beforeCreate\\\"); }, created() { console.log(\\\"home created\\\"); }, beforeMount() { console.log(\\\"home beforeMount\\\"); }, mounted() { console.log(\\\"home mounted\\\"); }, beforeUnmount() { console.log(\\\"home beforeUnmount\\\"); }, unmounted() { console.log(\\\"home unmounted\\\"); }, beforeUpdate() { console.log(this.$refs.title.innerHTML); console.log(\\\"home beforeUpdate\\\"); }, updated() { console.log(this.$refs.title.innerHTML); console.log(\\\"home updated\\\"); } } </script> \"]},\"495\":{\"h\":\"Mixins, extends 以及组合式函数\"},\"496\":{\"h\":\"认识 Mixin\",\"t\":[\"在 Vue 2 中，mixins 是创建可重用组件逻辑的主要方式。尽管在 Vue 3 中保留了 mixins 支持，但对于组件间的逻辑复用，使用组合式 API 的组合式函数是现在更推荐的方式。\",\"目前我们是使用组件化的方式在开发整个Vue的应用程序，但是组件和组件之间有时候会存在相同的代码逻辑，我们希望对相同的代码逻辑进行抽取。\",\"在Vue2和Vue3中都支持的一种方式就是使用Mixin来完成： \",\"Mixin提供了一种非常灵活的方式，来分发Vue组件中的可复用功能；\",\"一个Mixin对象可以包含任何组件选项；\",\"当组件使用Mixin对象时，所有Mixin对象的选项将被 混合 进入该组件本身的选项中；\"]},\"497\":{\"h\":\"基本使用\",\"t\":[\"mixins 选项接受一个 mixin 对象数组。这些 mixin 对象可以像普通的实例对象一样包含实例选项，它们将使用一定的选项合并逻辑与最终的选项进行合并。举例来说，如果你的 mixin 包含了一个 created 钩子，而组件自身也有一个，那么这两个函数都会被调用。\",\"Mixin 钩子的调用顺序与提供它们的选项顺序相同，且会在组件自身的钩子前被调用。\",\"interface ComponentOptions { mixins?: ComponentOptions[] } \",\"<!-- App.vue --> <template> <div> <h2>{{message}}</h2> <button @click=\\\"foo\\\">按钮</button> </div> </template> <script> import { demoMixin } from './mixins/demoMixin'; export default { mixins: [demoMixin], data() { return { title: \\\"Hello World\\\" } }, methods: { } } </script> <style scoped> </style> \",\"// ./mixins/demoMixin.js export const demoMixin = { data() { return { message: \\\"Hello DemoMixin\\\" } }, methods: { foo() { console.log(\\\"demo mixin foo\\\"); } }, created() { console.log(\\\"执行了demo mixin created\\\"); } } \"]},\"498\":{\"h\":\"Mixin的合并规则\",\"t\":[\"如果Mixin对象中的选项和组件对象中的选项发生了冲突，那么Vue会如何操作呢？ \",\"这里分成不同的情况来进行处理；\",\"情况一：如果是data函数的返回值对象 \",\"返回值对象默认情况下会进行合并；\",\"如果data返回值对象的属性发生了冲突，那么会保留组件自身的数据；\",\"情况二：如何生命周期钩子函数 \",\"生命周期的钩子函数会被合并到数组中，都会被调用；\",\"情况三：值为对象的选项，例如 methods、components 和 directives，将被合并为同一个对象。 \",\"比如都有methods选项，并且都定义了方法，那么它们都会生效；\",\"但是如果对象的key相同，那么会取组件对象的键值对；\"]},\"499\":{\"h\":\"全局混入 Mixin\",\"t\":[\"如果组件中的某些选项，是所有的组件都需要拥有的，那么这个时候我们可以使用全局的mixin：\",\"全局的Mixin可以使用 应用app的方法 mixin 来完成注册；\",\"一旦注册，那么全局混入的选项将会影响每一个组件；\",\"const app = createApp(App); app.mixin({ data() { return {} }, methods: { }, created() { console.log(\\\"全局的created生命周期\\\"); } }); app.mount(\\\"#app\\\"); \"]},\"500\":{\"h\":\"externds\",\"t\":[\"另外一个类似与Mixin的方式是通过extends属性 \",\"允许声明拓展另外一个组件，类似与Mixins；\",\"使一个组件可以继承另一个组件的组件选项。\",\"从实现角度来看，extends 几乎和 mixins 相同。通过 extends 指定的组件将会当作第一个 mixin 来处理。\",\"然而，extends 和 mixins 表达的是不同的目标。mixins 选项基本用于组合功能，而 extends 则一般更关注继承关系。\",\"同 mixins 一样，所有选项 (setup() 除外) 都将使用相关的策略进行合并。\",\"const CompA = { ... } const CompB = { extends: CompA, ... } \",\"<template> <div> Home Page <h2>{{title}}</h2> <button @click=\\\"bar\\\">按钮</button> </div> </template> <script> import BasePage from './BasePage.vue'; export default { extends: [BasePage], data() { return { content: \\\"Hello Home\\\" } } } </script> <style scoped> </style> \",\"extends 是为选项式 API 设计的，不会处理 setup() 钩子的合并。\",\"在组合式 API 中，逻辑复用的首选模式是“组合”而不是“继承”。如果一个组件中的逻辑需要复用，考虑将相关逻辑提取到组合式函数中。\",\"如果你仍然想要通过组合式 API 来“继承”一个组件，可以在继承组件的 setup() 中调用基类组件的 setup()：\",\"import Base from './Base.js' export default { extends: Base, setup(props, ctx) { return { ...Base.setup(props, ctx), // 本地绑定 } } } \"]},\"501\":{\"h\":\"组合式函数\",\"t\":[\"https://cn.vuejs.org/guide/reusability/composables.html\"]},\"502\":{\"h\":\"什么是“组合式函数”？\",\"t\":[\"在 Vue 应用的概念中，“组合式函数”(Composables) 是一个利用 Vue 的组合式 API 来封装和复用有状态逻辑的函数。\",\"当构建前端应用时，我们常常需要复用公共任务的逻辑。例如为了在不同地方格式化时间，我们可能会抽取一个可复用的日期格式化函数。这个函数封装了无状态的逻辑：它在接收一些输入后立刻返回所期望的输出。复用无状态逻辑的库有很多，比如你可能已经用过的 lodash 或是 date-fns。\",\"相比之下，有状态逻辑负责管理会随时间而变化的状态。一个简单的例子是跟踪当前鼠标在页面中的位置。在实际应用中，也可能是像触摸手势或与数据库的连接状态这样的更复杂的逻辑。\"]},\"503\":{\"h\":\"鼠标跟踪器示例\",\"t\":[\"如果我们要直接在组件中使用组合式 API 实现鼠标跟踪功能，它会是这样的：\",\"<script setup> import { ref, onMounted, onUnmounted } from 'vue' const x = ref(0) const y = ref(0) function update(event) { x.value = event.pageX y.value = event.pageY } onMounted(() => window.addEventListener('mousemove', update)) onUnmounted(() => window.removeEventListener('mousemove', update)) </script> <template>Mouse position is at: {{ x }}, {{ y }}</template> \",\"但是，如果我们想在多个组件中复用这个相同的逻辑呢？我们可以把这个逻辑以一个组合式函数的形式提取到外部文件中：\",\"// mouse.js import { ref, onMounted, onUnmounted } from 'vue' // 按照惯例，组合式函数名以“use”开头 export function useMouse() { // 被组合式函数封装和管理的状态 const x = ref(0) const y = ref(0) // 组合式函数可以随时更改其状态。 function update(event) { x.value = event.pageX y.value = event.pageY } // 一个组合式函数也可以挂靠在所属组件的生命周期上 // 来启动和卸载副作用 onMounted(() => window.addEventListener('mousemove', update)) onUnmounted(() => window.removeEventListener('mousemove', update)) // 通过返回值暴露所管理的状态 return { x, y } } \",\"下面是它在组件中使用的方式：\",\"<script setup> import { useMouse } from './mouse.js' const { x, y } = useMouse() </script> <template>Mouse position is at: {{ x }}, {{ y }}</template> \",\"如你所见，核心逻辑完全一致，我们做的只是把它移到一个外部函数中去，并返回需要暴露的状态。和在组件中一样，你也可以在组合式函数中使用所有的组合式 API。现在，useMouse() 的功能可以在任何组件中轻易复用了。\",\"更酷的是，你还可以嵌套多个组合式函数：一个组合式函数可以调用一个或多个其他的组合式函数。这使得我们可以像使用多个组件组合成整个应用一样，用多个较小且逻辑独立的单元来组合形成复杂的逻辑。实际上，这正是为什么我们决定将实现了这一设计模式的 API 集合命名为组合式 API。\",\"举例来说，我们可以将添加和清除 DOM 事件监听器的逻辑也封装进一个组合式函数中：\",\"// event.js import { onMounted, onUnmounted } from 'vue' export function useEventListener(target, event, callback) { // 如果你想的话， // 也可以用字符串形式的 CSS 选择器来寻找目标 DOM 元素 onMounted(() => target.addEventListener(event, callback)) onUnmounted(() => target.removeEventListener(event, callback)) } \",\"有了它，之前的 useMouse() 组合式函数可以被简化为：\",\"// mouse.js import { ref } from 'vue' import { useEventListener } from './event' export function useMouse() { const x = ref(0) const y = ref(0) useEventListener(window, 'mousemove', (event) => { x.value = event.pageX y.value = event.pageY }) return { x, y } } \"]},\"504\":{\"h\":\"异步状态示例\",\"t\":[\"useMouse() 组合式函数没有接收任何参数，因此让我们再来看一个需要接收一个参数的组合式函数示例。在做异步数据请求时，我们常常需要处理不同的状态：加载中、加载成功和加载失败。\",\"<script setup> import { ref } from 'vue' const data = ref(null) const error = ref(null) fetch('...') .then((res) => res.json()) .then((json) => (data.value = json)) .catch((err) => (error.value = err)) </script> <template> <div v-if=\\\"error\\\">Oops! Error encountered: {{ error.message }}</div> <div v-else-if=\\\"data\\\"> Data loaded: <pre>{{ data }}</pre> </div> <div v-else>Loading...</div> </template> \",\"如果在每个需要获取数据的组件中都要重复这种模式，那就太繁琐了。让我们把它抽取成一个组合式函数：\",\"// fetch.js import { ref } from 'vue' export function useFetch(url) { const data = ref(null) const error = ref(null) fetch(url) .then((res) => res.json()) .then((json) => (data.value = json)) .catch((err) => (error.value = err)) return { data, error } } \",\"现在我们在组件里只需要：\",\"<script setup> import { useFetch } from './fetch.js' const { data, error } = useFetch('...') </script> \"]},\"505\":{\"h\":\"接收响应式状态\",\"t\":[\"useFetch() 接收一个静态 URL 字符串作为输入——因此它只会执行一次 fetch 并且就此结束。如果我们想要在 URL 改变时重新 fetch 呢？为了实现这一点，我们需要将响应式状态传入组合式函数，并让它基于传入的状态来创建执行操作的侦听器。\",\"举例来说，useFetch() 应该能够接收一个 ref：\",\"const url = ref('/initial-url') const { data, error } = useFetch(url) // 这将会重新触发 fetch url.value = '/new-url' \",\"或者接收一个 getter 函数：\",\"// 当 props.id 改变时重新 fetch const { data, error } = useFetch(() => `/posts/${props.id}`) \",\"我们可以用 watchEffect() 和 toValue() API 来重构我们现有的实现：\",\"// fetch.js import { ref, watchEffect, toValue } from 'vue' export function useFetch(url) { const data = ref(null) const error = ref(null) const fetchData = () => { // reset state before fetching.. data.value = null error.value = null fetch(toValue(url)) .then((res) => res.json()) .then((json) => (data.value = json)) .catch((err) => (error.value = err)) } watchEffect(() => { fetchData() }) return { data, error } } \",\"toValue() 是一个在 3.3 版本中新增的 API。它的设计目的是将 ref 或 getter 规范化为值。如果参数是 ref，它会返回 ref 的值；如果参数是函数，它会调用函数并返回其返回值。否则，它会原样返回参数。它的工作方式类似于 unref()，但对函数有特殊处理。\",\"注意 toValue(url) 是在 watchEffect 回调函数的内部调用的。这确保了在 toValue() 规范化期间访问的任何响应式依赖项都会被侦听器跟踪。\",\"这个版本的 useFetch() 现在能接收静态 URL 字符串、ref 和 getter，使其更加灵活。watch effect 会立即运行，并且会跟踪 toValue(url) 期间访问的任何依赖项。如果没有跟踪到依赖项（例如 url 已经是字符串），则 effect 只会运行一次；否则，它将在跟踪到的任何依赖项更改时重新运行。\"]},\"506\":{\"h\":\"约定和最佳实践\"},\"507\":{\"h\":\"命名\",\"t\":[\"组合式函数约定用驼峰命名法命名，并以“use”作为开头。\"]},\"508\":{\"h\":\"输入参数\",\"t\":[\"即便不依赖于 ref 或 getter 的响应性，组合式函数也可以接收它们作为参数。如果你正在编写一个可能被其他开发者使用的组合式函数，最好处理一下输入参数是 ref 或 getter 而非原始值的情况。可以利用 toValue() 工具函数来实现：\",\"import { toValue } from 'vue' function useFeature(maybeRefOrGetter) { // 如果 maybeRefOrGetter 是一个 ref 或 getter， // 将返回它的规范化值。 // 否则原样返回。 const value = toValue(maybeRefOrGetter) } \",\"如果你的组合式函数在输入参数是 ref 或 getter 的情况下创建了响应式 effect，为了让它能够被正确追踪，请确保要么使用 watch() 显式地监视 ref 或 getter，要么在 watchEffect() 中调用 toValue()。\",\"前面讨论过的 useFetch() 实现提供了一个接受 ref、getter 或普通值作为输入参数的组合式函数的具体示例。\"]},\"509\":{\"h\":\"返回值\",\"t\":[\"你可能已经注意到了，我们一直在组合式函数中使用 ref() 而不是 reactive()。我们推荐的约定是组合式函数始终返回一个包含多个 ref 的普通的非响应式对象，这样该对象在组件中被解构为 ref 之后仍可以保持响应性：\",\"// x 和 y 是两个 ref const { x, y } = useMouse() \",\"从组合式函数返回一个响应式对象会导致在对象解构过程中丢失与组合式函数内状态的响应性连接。与之相反，ref 则可以维持这一响应性连接。\",\"如果你更希望以对象属性的形式来使用组合式函数中返回的状态，你可以将返回的对象用 reactive() 包装一次，这样其中的 ref 会被自动解包，例如：\",\"const mouse = reactive(useMouse()) // mouse.x 链接到了原来的 x ref console.log(mouse.x) \",\"Mouse position is at: {{ mouse.x }}, {{ mouse.y }} \"]},\"510\":{\"h\":\"副作用\",\"t\":[\"在组合式函数中的确可以执行副作用 (例如：添加 DOM 事件监听器或者请求数据)，但请注意以下规则：\",\"如果你的应用用到了服务端渲染 (SSR)，请确保在组件挂载后才调用的生命周期钩子中执行 DOM 相关的副作用，例如：onMounted()。这些钩子仅会在浏览器中被调用，因此可以确保能访问到 DOM。\",\"确保在 onUnmounted() 时清理副作用。举例来说，如果一个组合式函数设置了一个事件监听器，它就应该在 onUnmounted() 中被移除 (就像我们在 useMouse() 示例中看到的一样)。当然也可以像之前的 useEventListener() 示例那样，使用一个组合式函数来自动帮你做这些事。\"]},\"511\":{\"h\":\"使用限制\",\"t\":[\"组合式函数只能在 <script setup> 或 setup() 钩子中被调用。在这些上下文中，它们也只能被同步调用。在某些情况下，你也可以在像 onMounted() 这样的生命周期钩子中调用它们。\",\"这些限制很重要，因为这些是 Vue 用于确定当前活跃的组件实例的上下文。访问活跃的组件实例很有必要，这样才能：\",\"将生命周期钩子注册到该组件实例上\",\"将计算属性和监听器注册到该组件实例上，以便在该组件被卸载时停止监听，避免内存泄漏。\",\"<script setup> 是唯一在调用 await 之后仍可调用组合式函数的地方。编译器会在异步操作之后自动为你恢复当前的组件实例。\"]},\"512\":{\"h\":\"通过抽取组合式函数改善代码结构\",\"t\":[\"抽取组合式函数不仅是为了复用，也是为了代码组织。随着组件复杂度的增高，你可能会最终发现组件多得难以查询和理解。组合式 API 会给予你足够的灵活性，让你可以基于逻辑问题将组件代码拆分成更小的函数：\",\"<script setup> import { useFeatureA } from './featureA.js' import { useFeatureB } from './featureB.js' import { useFeatureC } from './featureC.js' const { foo, bar } = useFeatureA() const { baz } = useFeatureB(foo) const { qux } = useFeatureC(baz) </script> \",\"在某种程度上，你可以将这些提取出的组合式函数看作是可以相互通信的组件范围内的服务。\"]},\"513\":{\"h\":\"在选项式 API 中使用组合式函数\",\"t\":[\"如果你正在使用选项式 API，组合式函数必须在 setup() 中调用。且其返回的绑定必须在 setup() 中返回，以便暴露给 this 及其模板：\",\"import { useMouse } from './mouse.js' import { useFetch } from './fetch.js' export default { setup() { const { x, y } = useMouse() const { data, error } = useFetch('...') return { x, y, data, error } }, mounted() { // setup() 暴露的属性可以在通过 `this` 访问到 console.log(this.x) } // ...其他选项 } \"]},\"514\":{\"h\":\"对比\",\"t\":[\"Vue 2 的用户可能会对 mixins 选项比较熟悉。它也让我们能够把组件逻辑提取到可复用的单元里。然而 mixins 有三个主要的短板：\",\"不清晰的数据来源：当使用了多个 mixin 时，实例上的数据属性来自哪个 mixin 变得不清晰，这使追溯实现和理解组件行为变得困难。这也是我们推荐在组合式函数中使用 ref + 解构模式的理由：让属性的来源在消费组件时一目了然。\",\"命名空间冲突：多个来自不同作者的 mixin 可能会注册相同的属性名，造成命名冲突。若使用组合式函数，你可以通过在解构变量时对变量进行重命名来避免相同的键名。\",\"隐式的跨 mixin 交流：多个 mixin 需要依赖共享的属性名来进行相互作用，这使得它们隐性地耦合在一起。而一个组合式函数的返回值可以作为另一个组合式函数的参数被传入，像普通函数那样。\",\"基于上述理由，我们不再推荐在 Vue 3 中继续使用 mixin。保留该功能只是为了项目迁移的需求和照顾熟悉它的用户。\"]},\"515\":{\"h\":\"和无渲染组件的对比\",\"t\":[\"在组件插槽一章中，我们讨论过了基于作用域插槽的无渲染组件。我们甚至用它实现了一样的鼠标追踪器示例。\",\"组合式函数相对于无渲染组件的主要优势是：组合式函数不会产生额外的组件实例开销。当在整个应用中使用时，由无渲染组件产生的额外组件实例会带来无法忽视的性能开销。\",\"我们推荐在纯逻辑复用时使用组合式函数，在需要同时复用逻辑和视图布局时使用无渲染组件。\"]},\"516\":{\"h\":\"邂逅Vue3开发\"},\"517\":{\"h\":\"认识 Vue\"},\"518\":{\"h\":\"什么是 Vue\",\"t\":[\"Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。 \",\"全程是Vue.js或者Vuejs；\",\"什么是渐进式框架呢？表示我们可以在项目中一点点来引入和使用Vue，而不一定需要全部使用Vue来开发整个 项目；\"]},\"519\":{\"h\":\"Vue3带来的变化\",\"t\":[\"源码通过monorepo的形式来管理源代码： \",\"Mono：单个\",\"Repo：repository仓库\",\"主要是将许多项目的代码存储在同一个 repository 中；\",\"这样做的目的是多个包本身相互独立，可以有自己的功能逻辑、单元测试等，同时又在同一个仓库下方便管理；\",\"而且模块划分的更加清晰，可维护性、可扩展性更强；\",\"源码使用TypeScript来进行重写： \",\"在Vue2.x的时候，Vue使用 Flow 来进行类型检测；\",\"在Vue3.x的时候，Vue的源码全部使用 TypeScript 来进行重构，并且 Vue 本身对 TypeScript 支持也更好了；\"]},\"520\":{\"h\":\"性能方面\",\"t\":[\"使用Proxy进行数据劫持 \",\"在 Vue2.x 的时候，Vue2 是使用 Object.defineProperty 来劫持数据的 getter 和 setter 方法的；\",\"这种方式一致存在一个缺陷就是当给对象添加或者删除属性时，是无法劫持和监听的；\",\"所以在 Vue2.x 的时候，不得不提供一些特殊的API，比如 $set 或 $delete ，事实上都是一些 hack 方法，也增加了 开发者学习新的API的成本；\",\"而在 Vue3.x 开始，Vue 使用 Proxy 来实现数据的劫持\",\"删除了一些不必要的API： \",\"移除了实例上的 $on , $off 和 $once；\",\"移除了一些特性：如filter、内联模板等；\",\"包括编译方面的优化： \",\"生成Block Tree、Slot编译优化、diff算法优化；\"]},\"521\":{\"h\":\"新的API\",\"t\":[\"由Options API 到 Composition API： \",\"在 Vue2.x 的时候，我们会通过 Options API 来描述组件对象；\",\"Options API 包括data、props、methods、computed、生命周期等等这些选项；\",\"存在比较大的问题是多个逻辑可能是在不同的地方： \",\"比如created中会使用某一个method来修改data的数据，代码的内聚性非常差；\",\"Composition API可以将 相关联的代码 放到同一处 进行处理，而不需要在多个Options之间寻找；\",\"Hooks函数增加代码的复用性： \",\"在Vue2.x的时候，我们通常通过mixins在多个组件之间共享逻辑；但是有一个很大的缺陷就是 mixins也是由一大堆的Options组成的，并且多个mixins会存在命名冲突的问题；\",\"在Vue3.x中，我们可以通过Hook函数，来将一部分独立的逻辑抽取出去，并且它们还可以做到是响应式的；\"]},\"522\":{\"h\":\"如何使用 Vue\",\"t\":[\"方式一：在页面中通过CDN的方式来引入；\",\"方式二：下载Vue的JavaScript文件，并且自己手动引入；\",\"方式三：通过npm包管理工具安装使用它；\",\"方式四：直接通过Vue CLI创建项目，并且使用它；\"]},\"523\":{\"h\":\"CDN 引入\",\"t\":[\"<script src=\\\"https://unpkg.com/vue@next\\\"></script> \"]},\"524\":{\"h\":\"下载和引入\",\"t\":[\"下载Vue的源码，可以直接打开CDN的链接： \",\"打开链接，复制其中所有的代码；\",\"创建一个新的文件，比如vue.js，将代码复制到其中；\",\"<script src=\\\"../js/vue.js\\\"></script> \"]},\"525\":{\"h\":\"声明式编程和命令式编程\",\"t\":[\"原生开发和Vue开发的模式和特点,我们会发现是完全不同的,这里其实涉及到两种不同的编程范式命令式编程和声明式编程\",\"命令式编程关注的是“ how to do”,声明式编程关注的是\\\" what to do\\\",由框架(机器)完成\\\"how\\\"的过程\"]},\"526\":{\"h\":\"MVVM模型\",\"t\":[\"MVC和MVVM都是一种软件的体系结构 \",\"MVC是 Model-View-Controller的简称,是在前期被使用非常框架的架构模式,比如iS、前端\",\"MVVM是 Model-View- ViewMode的简称,是目前非常流行的架构模式\",\"通常情况下,我们也经常称vue是一个MVVM的框架 \",\"vue官方其实有说明,vue虽然并没有完全遵守MVVM的模型,但是整个设计是受到它的启发的\"]},\"527\":{\"h\":\"template属性\",\"t\":[\"在使用 createApp的时候,我们传入了一个对象,接下来我们详细解析一下之前传入的属性分别代表什么含义。 \",\"template属性:表示的是Vue需要帮助我们渲染的模板信息\",\"目前我们看到它里面有很多的HTML标签,这些标签会替换掉我们挂载到的元素(比如id为app的dⅳv)的innerHTML\",\"模板中有一些奇怪的语法,比如{},比如@ )click,这些都是模板特有的语法\",\"但是这个模板的写法有点过于别扭了,并且IDE很有可能没有任何提示,阻碍我们编程的效率\",\"vue提供了两种方式:\",\"方式一:使用 script标签,并且标记它的类型为 X-template;\",\"<body> <div id=\\\"app\\\">hhhh</div> <script type=\\\"x-template\\\" id=\\\"why\\\"> <div> <h2>{{message}}</h2> <h2>{{counter}}</h2> <button @click='increment'>+1</button> <button @click='decrement'>-1</button> </div> </script> <script src=\\\"../js//Vue.js\\\"></script> <script> Vue.createApp({ template: '#why', data: function(){ return{ message:\\\"Hello World\\\", counter: 100 } }, methods: { increment(){ this.counter++ }, decrement(){ this.counter-- } } }).mount(\\\"#app\\\") </script> </body> \",\"方式二:使用任意标签(通常使用 template标签,因为不会被浏览器渲染),设置id;v template元素是一种用于保存客户端内容的机制,该内容再加载页面时不会被呈现,但随后可以在运行时使用 JavaScript 实例化\",\" <body> <div id=\\\"app\\\"></div> <template id=\\\"why\\\"> <div> <h2>{{message}}</h2> <h2>{{counter}}</h2> <button @click='increment'>+1</button> <button @click='decrement'>-1</button> </div> </template> <script src=\\\"../js//Vue.js\\\"></script> <script> Vue.createApp({ template: '#why', data: function(){ return{ message:\\\"Hello World\\\", counter: 100 } }, methods: { increment(){ this.counter++ }, decrement(){ this.counter-- } } }).mount(\\\"#app\\\") </script> </body> \"]},\"528\":{\"h\":\"data属性\",\"t\":[\"data属性是传入一个函数,并且该函数需要返回一个对象\",\"在Vue2x的时候,也可以传入一个对象(虽然官方推荐是一个函数);\",\"在Vue3x的时候,必须传入一个函数,否则就会直接在浏览器中报错\",\"data中返回的对象会被vue的响应式系统劫持,之后对该对象的修改或者访问都会在劫持中被处理\",\"所以我们在 template中通过{ counter} 访问 counter,可以从对象中获取到数据\",\"所以我们修改 counter的值时, template中的{ counter)也会发生改变;\"]},\"529\":{\"h\":\"methods属性（重点）\",\"t\":[\"methods属性是一个对象,通常我们会在这个对象中定义很多的方法\",\"这些方法可以被绑定到 template模板中;\",\"在该方法中,我们可以使用this关键字来直接访问到data中返回的对象的属性;\",\"问题：官方文档有这个描述，即不能使用箭头函数\",\"为什么不能使用箭头函数(VUE3.0)？\",\"我们在methods中要使用data返回对象中的数据：\",\"那么这个this是必须有值的，并且应该可以通过this获取到data返回对象中的数据。\",\"那么我们这个this能不能是window呢？\",\"不可以是window，因为window中我们无法获取到data返回对象中的数据；\",\"但是如果我们使用箭头函数，那么这个this就会是window了；\",\"为什么是window呢？\",\"这里涉及到箭头函数使用this的查找规则，它会在自己的上层作用于中来查找this；\",\"最终刚好找到的是script作用于中的this，所以就是window；\",\"this到底是如何查找和绑定的呢？\",\"前端面试之彻底搞懂this指向\",\"不使用箭头函数的情况下，this到底指向什么\",\"事实上Vue的源码当中就是对methods中的所有函数进行了遍历，并且通过 bind 绑定了 this\",\"具体看 https://mp.weixin.qq.com/s/hYm0JgBI25grNG_2sCRlTA\",\"// window 隐式绑定 foo(); const obj = { bar: foo }; obj.bar(); /* Window{} {bar: f()} */ const foo2 = () => { console.log(this); } const obj2 = { bar: foo2 }; obj2.bar(); /* Window{} Window{} */ \"]},\"530\":{\"h\":\"编写DOM元素的模板方式\",\"t\":[\"方式一：template模板的方式：使用 <template> 标签编写模板。这种方式是之前经常使用的方式。\",\"<template> <div> <h1>{{ message }}</h1> <p>{{ description }}</p> </div> </template> \",\"方式二：render函数的方式：使用h函数来编写渲染的内容。在这种方式中，h函数可以直接返回一个虚拟节点（Vnode节点）。\",\"export default { render(h) { return h('div', [ h('h1', this.message), h('p', this.description) ]) } } \",\"方式三：通过.vue文件中的template来编写模板：在.vue文件中使用<template>标签编写模板。这种方式需要通过特定的代码来对模板进行解析：\",\"对于方式三，即.vue文件中的template，可以通过vue-loader对其进行编译和处理。\",\"对于方式一，即template模板，我们必须通过源码中的一部分代码来进行编译。\",\"<template> <div> <h1>{{ message }}</h1> <p>{{ description }}</p> </div> </template> \",\"因此，Vue在让我们选择版本时，提供了\\\"运行时+编译器\\\"和\\\"仅运行时\\\"两种选项：\",\"运行时+编译器：这个版本包含了Vue的完整功能，包括对template模板的编译代码。在使用这个版本时，我们可以直接在代码中使用template模板，并且Vue会在运行时将其编译成渲染函数。这使得我们可以在开发过程中更方便地编写和调试模板。然而，由于包含了编译代码，这个版本的文件体积相对较大。\",\"仅运行时：这个版本不包含对template模板的编译代码。它更小巧，文件体积更小。在使用这个版本时，我们需要使用render函数来手动编写渲染逻辑，而不是直接使用template模板。这意味着我们需要更多的代码来实现相同的功能，但也带来了更好的性能和更小的文件大小。\",\"选择哪个版本取决于项目的需求和优化目标。如果我们需要更完整的功能，并且对文件大小没有太大的担忧，可以选择运行时+编译器版本。如果我们对文件大小敏感，并且愿意手动编写渲染逻辑，可以选择仅运行时版本。\"]},\"531\":{\"h\":\"VSCode对SFC文件的支持\",\"t\":[\"Vue 的单文件组件 (即 *.vue 文件，英文 Single-File Component，简称 SFC) 是一种特殊的文件格式，使我们能够将一个 Vue 组件的模板、逻辑与样式封装在单个文件中。下面是一个单文件组件的示例：\",\"为什么要使用 SFC​ 使用 SFC 必须使用构建工具，但作为回报带来了以下优点：\",\"使用熟悉的 HTML、CSS 和 JavaScript 语法编写模块化的组件\",\"让本来就强相关的关注点自然内聚\",\"预编译模板，避免运行时的编译开销\",\"组件作用域的 CSS\",\"在使用组合式 API 时语法更简单\",\"通过交叉分析模板和逻辑代码能进行更多编译时优化\",\"更好的 IDE 支持，提供自动补全和对模板中表达式的类型检查\",\"开箱即用的模块热更新 (HMR) 支持\",\"SFC 是 Vue 框架提供的一个功能，并且在下列场景中都是官方推荐的项目组织方式：\",\"单页面应用 (SPA)\",\"静态站点生成 (SSG)\",\"任何值得引入构建步骤以获得更好的开发体验 (DX) 的项目\",\"https://cn.vuejs.org/guide/scaling-up/sfc.html\",\"插件一：Vetur，从Vue2开发就一直在使用的VSCode支持Vue的插件；\",\"插件二：Volar，官方推荐的插件（后续会基于Volar开发官方的VSCode插件）；\"]},\"532\":{\"h\":\"如何阅读Vue源码\",\"t\":[\"需要的环境 npm，yarn\",\"操作步骤 \",\"安装yarn npm install yarn -g\",\"在项目中配置yarn yarn install\",\"在package.json中的dev后加上--sourcemap\",\"打包项目 yarn dev （在vue/dist文件夹下有两个文件，vue.global.js和vue.global.js.map）\",\"在vue/examplex新建自己的文件夹以及测试demo\",\"在demo中打下断点—debugger\",\"在浏览器中打开调试面板，选择其中的source面板，查看执行对应的源码\"]},\"533\":{\"h\":\"路由使用\"},\"534\":{\"h\":\"关于路由\"},\"535\":{\"h\":\"认识前端路由\",\"t\":[\"路由其实是网络工程中的一个术语： \",\"在架构一个网络时，非常重要的两个设备就是路由器和交换机。\",\"当然，目前在我们生活中路由器也是越来越被大家所熟知，因为我们生活中都会用到路由器：\",\"路由器的主要功能是维护一个映射表，这个映射表决定了数据的流向。在网络中，路由器通过这个映射表来确定数据包的传输路径，使得数据能够按照设定的规则正确地传输到目的地。\",\"路由的概念在软件工程中出现，最早是在后端路由中实现的，原因是web的发展主要经历了这样一些阶段： \",\"后端路由阶段；\",\"前后端分离阶段；\",\"单页面富应用（SPA）；\"]},\"536\":{\"h\":\"后端路由阶段\",\"t\":[\"早期的网站开发整个HTML页面是由服务器来渲染的. \",\"服务器直接生产渲染好对应的HTML页面, 返回给客户端进行展示.\",\"一个页面有自己对应的网址, 也就是URL；\",\"URL会发送到服务器, 服务器会通过正则对该URL进行匹配, 并且最后交给一个Controller(控制器)进行处理；\",\"Controller进行各种处理, 最终生成HTML或者数据, 返回给前端.\",\"上面的这种操作, 就是后端路由： \",\"当我们页面中需要请求不同的路径内容时, 交给服务器来进行处理, 服务器渲染好整个页面, 并且将页面返回给客户端.\",\"这种情况下渲染好的页面, 不需要单独加载任何的js和css, 可以直接交给浏览器展示, 这样也有利于SEO的优化.\",\"后端路由的缺点: \",\"一种情况是整个页面的模块由后端人员来编写和维护的；\",\"另一种情况是前端开发人员如果要开发页面, 需要通过PHP和Java等语言来编写页面代码；\",\"而且通常情况下HTML代码和数据以及对应的逻辑会混在一起, 编写和维护都是非常糟糕的事情；\"]},\"537\":{\"h\":\"前后端分离阶段\",\"t\":[\"前端渲染的理解： \",\"每次请求涉及到的静态资源都会从静态资源服务器获取，这些资源包括HTML+CSS+JS，然后在前端对这些请求回来的资源进行渲染；\",\"需要注意的是，客户端的每一次请求，都会从静态资源服务器请求文件；\",\"同时可以看到，和之前的后端路由不同，这时后端只是负责提供API了；\",\"前后端分离阶段： \",\"随着Ajax的出现, 有了前后端分离的开发模式；\",\"后端只提供API来返回数据，前端通过Ajax获取数据，并且可以通过JavaScript将数据渲染到页面中；\",\"这样做最大的优点就是前后端责任的清晰，后端专注于数据上，前端专注于交互和可视化上；\",\"并且当移动端(iOS/Android)出现后，后端不需要进行任何处理，依然使用之前的一套API即可；\",\"目前比较少的网站采用这种模式开发（jQuery开发模式）；\"]},\"538\":{\"h\":\"单页面富应用（SPA）\",\"t\":[\"随着前端框架（如AngularJS、React、Vue等）的兴起，单页面富应用成为主流。单页面富应用（SPA）是一种Web应用程序的架构模式，它通过动态加载页面内容，实现在单个HTML页面上切换视图和更新内容，而无需每次都从服务器请求新的页面。这种方式提高了用户体验和应用性能，因为页面只在初始化时加载一次，之后的页面切换和内容更新都是通过异步加载数据和更新页面内容来实现的。常见的前端框架如AngularJS、React和Vue等都支持SPA的开发模式。\"]},\"539\":{\"h\":\"Vue-router 简介\",\"t\":[\"官网: https://router.vuejs.org/zh/\",\"Vue Router 是 Vue.js 的官方路由。它与 Vue.js 核心深度集成，让用 Vue.js 构建单页应用变得轻而易举。功能包括：\",\"嵌套路由映射\",\"动态路由选择\",\"模块化、基于组件的路由配置\",\"路由参数、查询、通配符\",\"展示由 Vue.js 的过渡系统提供的过渡效果\",\"细致的导航控制\",\"自动激活 CSS 类的链接\",\"HTML5 history 模式或 hash 模式\",\"可定制的滚动行为\",\"URL 的正确编码\",\"具体使用示例：\",\"网易云音乐 https://music.163.com/\",\"单页面应用(SPA): 所有功能在一个 html 页面上实现\",\"前端路由作用: 实现业务场景切换\",\"优点： \",\"简单易用\",\"支持嵌套路由\",\"支持路由参数、查询、动态路由等\",\"缺点： \",\"对于大型单页应用可能不够灵活\",\"在处理复杂路由时可能需要额外的插件或工具\"]},\"540\":{\"h\":\"路由初体验\",\"t\":[\"Vue Router 支持两种路由模式：\",\"Hash 模式： \",\"使用 URL 中的 # 来管理路由，适用于不需要服务端支持的单页应用。createWebHashHistory 是 Vue Router 提供的一种路由模式，它基于 URL 中的 hash（#）来管理路由。这种模式在不需要服务器端支持的情况下可以工作\",\"History 模式： \",\"使用 HTML5 History API 来管理路由，可以去掉 URL 中的 #，需要服务器端支持来处理路由createWebHistory 是 Vue Router 提供的基于 HTML5 History API 的路由模式。这种模式需要服务器端支持来处理路由，但可以去掉 URL 中的 #，看起来更加干净。\",\"用 Vue + Vue Router 创建单页应用非常简单：通过 Vue.js，我们已经用组件组成了我们的应用。当加入 Vue Router 时，我们需要做的就是将我们的组件映射到路由上，让 Vue Router 知道在哪里渲染它们。下面是一个基本的例子：\",\"<script src=\\\"https://unpkg.com/vue@3\\\"></script> <script src=\\\"https://unpkg.com/vue-router@4\\\"></script> <div id=\\\"app\\\"> <h1>Hello App!</h1> <p> <!--使用 router-link 组件进行导航 --> <!--通过传递 `to` 来指定链接 --> <!--`<router-link>` 将呈现一个带有正确 `href` 属性的 `<a>` 标签--> <router-link to=\\\"/\\\">Go to Home</router-link> <router-link to=\\\"/about\\\">Go to About</router-link> </p> <!-- 路由出口 --> <!-- 路由匹配到的组件将渲染在这里 --> <router-view></router-view> </div> <script> // 定义 (路由) 组件。 // 可以从其他文件 import 进来 const Home = { template: '<div>Home</div>' } const About = { template: '<div>About</div>' } // 定义路由 // 每个路由应该映射一个组件。 其中\\\"component\\\" 可以是 // 通过 Vue.extend() 创建的组件构造器， // 或者，只是一个组件配置对象。 const routes = [ { path: '/', component: Home }, { path: '/about', component: About } ] // 创建 router 实例 // 你可以在这里传入配置参数 // 我们在这里使用 `routes` 配置参数 const router = VueRouter.createRouter({ history: VueRouter.createWebHashHistory(), routes // `routes: routes` 的缩写 }) // 创建和挂载根实例 // 记得要通过 router 配置参数注入路由， // 从而让整个应用都有路由功能 const app = Vue.createApp({}) app.use(router) app.mount('#app') </script> \"]},\"541\":{\"h\":\"router-link\",\"t\":[\"请注意，我们没有使用常规的 a 标签，而是使用一个自定义组件 router-link 来创建链接。这使得 Vue Router 可以在不重新加载页面的情况下更改 URL，处理 URL 的生成以及编码。我们将在后面看到如何从这些功能中获益。\"]},\"542\":{\"h\":\"router-view\",\"t\":[\"router-view 将显示与 URL 对应的组件。你可以把它放在任何地方，以适应你的布局。\"]},\"543\":{\"h\":\"安装以及使用\",\"t\":[\"安装\",\"npm install vue-router \",\"创建 router/index.js 并在其中编辑基本配置(默认你已经注册了 components 中的两个文件)\",\"import { createRouter, createWebHistory } from 'vue-router' const routes = [ { path: '/', component: () => import('../components/login.vue') }, { path: '/req', component: () => import('../components/req.vue') } ] const router = createRouter({ history: createWebHistory(), routes }) export default router \",\"在 src/App.vue 中引入\",\"import router from '../router' createApp(App).use(router).mount('#app') \",\"当然, 我们需要一个 router-view 显示与 URL 对应的组件, 一般会在 src/App.vue 中做如下配置, 当然你可以把它放在任何地方，以适应你的布局。\",\"<template> <router-view></router-view> </template> \",\"我们也可以在其中使用 router-link\",\"<template> <div> <h1>小满最骚</h1> <div> <!--使用 router-link 组件进行导航 --> <!--通过传递 `to` 来指定链接 --> <!--`<router-link>` 将呈现一个带有正确 `href` 属性的 `<a>` 标签--> <router-link tag=\\\"div\\\" to=\\\"/\\\">跳转a</router-link> <router-link tag=\\\"div\\\" style=\\\"margin-left:200px\\\" to=\\\"/register\\\">跳转b</router-link> </div> <hr /> <!-- 路由出口 --> <!-- 路由匹配到的组件将渲染在这里 --> <router-view></router-view> </div> </template> \"]},\"544\":{\"h\":\"带参数的动态路由匹配\",\"t\":[\"很多时候，我们需要将给定匹配模式的路由映射到同一个组件。例如，我们可能有一个 User 组件，它应该对所有用户进行渲染，但用户 ID 不同。在 Vue Router 中，我们可以在路径中使用一个动态字段来实现，我们称之为 路径参数 ：\",\"const User = { template: '<div>User</div>', } // 这些都会传递给 `createRouter` const routes = [ // 动态字段以冒号开始 { path: '/users/:id', component: User }, ] \",\"现在像 /users/johnny 和 /users/jolyne 这样的 URL 都会映射到同一个路由。\",\"路径参数 用冒号 : 表示。当一个路由被匹配时，它的 params 的值将在每个组件中以 this.$route.params 的形式暴露出来。因此，我们可以通过更新 User 的模板来呈现当前的用户 ID：\",\"const User = { template: '<div>User {{ $route.params.id }}</div>', } \",\"你可以在同一个路由中设置有多个 路径参数，它们会映射到 $route.params 上的相应字段。例如：\",\"匹配模式\",\"匹配路径\",\"$route.params\",\"/users/:username\",\"/users/eduardo\",\"{ username: 'eduardo' }\",\"/users/:username/posts/:postId\",\"/users/eduardo/posts/123\",\"{ username: 'eduardo', postId: '123' }\",\"除了 $route.params 之外，$route 对象还公开了其他有用的信息，如 $route.query（如果 URL 中存在参数）、$route.hash 等。你可以在 API 参考中查看完整的细节。\",\"以下是一个小 Demo\",\"// router.js import { createRouter, createWebHistory } from 'vue-router' import UserPost from './views/UserPost.vue' export const router = createRouter({ history: createWebHistory(), routes: [{ path: '/users/:username/posts/:postId', component: UserPost }], }) \",\"<!-- App.vue --> <template> <ul> <li> <router-link to=\\\"/users/eduardo/posts/1\\\" >/users/eduardo/posts/1</router-link > </li> <li> <router-link to=\\\"/users/eduardo/posts/20\\\" >/users/eduardo/posts/20</router-link > </li> </ul> <router-view></router-view> </template> <script> export default { name: \\\"App\\\", }; </script> \",\"<!-- ./views/UserPost.vue --> <template> <div> User {{ $route.params.username }} with post {{ $route.params.postId }} </div> </template> \",\"image-20231223000208274\",\"##声明式/ 编程式导航\"]},\"545\":{\"h\":\"声明式导航\"},\"546\":{\"h\":\"基础使用/ 命名路由\",\"t\":[\"除了 path 之外，你还可以为任何路由提供 name。这有以下优点：\",\"https://router.vuejs.org/zh/guide/essentials/named-routes.html\",\"没有硬编码的 URL\",\"params 的自动编码/解码。\",\"防止你在 url中出现打字错误。\",\"绕过路径排序（如显示一个）\",\"这跟代码调用 router.push() 是一回事：\",\"router.push({name: 'user', params: {username: 'erina'}}) // 在这两种情况下，路由将导航到路径 /user/erina。 \",\"const routes:Array<RouteRecordRaw> = [ { path:\\\"/\\\", name:\\\"Login\\\", component:()=> import('../components/login.vue') }, { path:\\\"/reg\\\", name:\\\"Reg\\\", component:()=> import('../components/reg.vue') } ] \",\"跳转方式需要改变 变为对象并且有对应name\",\"两种跳转方式有区别, a 标签有新的网络请求, 会刷新整个页面\",\"<template> <div> <div class=\\\"\\\"> <router-link :to=\\\"{name: 'Login'}\\\">Home</router-link> <router-link :to=\\\"{name: 'Req'}\\\">Req</router-link> <a href=\\\"/\\\">Login</a> <a href=\\\"/req\\\">Req</a> </div> <div class=\\\"top\\\"> <router-view></router-view> </div> </div> </template> \"]},\"547\":{\"h\":\"跳转传参\",\"t\":[\"目标: 在跳转路由时, 可以给路由对应的组件内传值\",\"在 router-link 上的 to 属性传值, 语法格式如下\",\"/path?参数名=值\",\"/path/值 – 需要路由对象提前配置 path: \\\"/path/参数名\\\"\",\"对应页面组件接收传递过来的值\",\"route.query.参数名\",\"route.params.参数名\",\"1、新建 views/Part2.vue - 接收路由上传递的参数和值\",\"<template> <div> <p>我的好友</p> <!-- query 查询 ？ 号后面的。 params 是获取 url : 中的参数--> <p>人名(path --> query): {{ route.query?.name }}</p> <p>人名(?后参数 --> params): {{ route.params?.name }}</p> </div> </template> <script setup> // 目标: 声明式导航 - 基础使用 // 本质: vue-router 提供的全局组件 \\\"router-link\\\" 替代a标签 // 1. router-link 替代 a 标签 // 2. to 属性 替代 href 属性 // 好处: router-link 自带高亮的类名(激活时类名) // 3. 对激活的类名做出样式的编写 import {useRoute} from 'vue-router' const route = useRoute() </script> \",\"2、修改路由定义\",\"const routes = [ {'path': '/find', component: () => import('../views/Find.vue')}, {'path': '/my', component: () => import('../views/My.vue')}, {'path': '/part', name: 'Part', component: () => import('../views/Part.vue')}, { path: \\\"/part/:name\\\", // 有:的路径代表要接收具体的值 component: () => import('../views/Part2.vue') }, ] \",\"3、修改 App.vue 进行跳转\",\"<template> <div> <div class=\\\"footer_wrap\\\"> <!-- <a href=\\\"#/find\\\">发现音乐</a>--> <!-- <a href=\\\"#/my\\\">我的音乐</a>--> <!-- <a href=\\\"#/part\\\">朋友</a>--> <router-link to=\\\"/find\\\">发现音乐</router-link> <router-link to=\\\"/my\\\">我的音乐</router-link> <router-link to=\\\"/part\\\">朋友</router-link> <router-link to=\\\"/part?name=小传\\\">朋友-小传</router-link> <router-link to=\\\"/part/小智?name=小智2\\\">朋友-小智</router-link> </div> <div class=\\\"top\\\"> <router-view></router-view> </div> </div> </template> \",\"总结:\",\"?key=value 用 $route.query.key 取值\",\"/值 提前在路由规则 /path/:key 用 $route.params.key 取值\",\"query 是查询参数, params 是 path 路径\",\"有:的路径代表要接收具体的值, 不然会报警告\",\"image-20231223002327799\",\"在这个特定的场景中，我们在括号之间使用了自定义正则表达式，并将pathMatch 参数标记为可选可重复。这样做是为了让我们在需要的时候，可以通过将 path 拆分成一个数组，直接导航到路由\"]},\"548\":{\"h\":\"捕获所有路由或 404 Not found 路由\",\"t\":[\"常规参数只匹配 url 片段之间的字符，用 / 分隔。如果我们想匹配任意路径，我们可以使用自定义的 路径参数 正则表达式，在 路径参数 后面的括号中加入 正则表达式 :\",\"const routes = [ // 将匹配所有内容并将其放在 `$route.params.pathMatch` 下 { path: '/:pathMatch(.*)*', name: 'NotFound', component: NotFound }, // 将匹配以 `/user-` 开头的所有内容，并将其放在 `$route.params.afterUser` 下 { path: '/user-:afterUser(.*)', component: UserGeneric }, ] \",\"在这个特定的场景中，我们在括号之间使用了自定义正则表达式，并将pathMatch 参数标记为可选可重复。这样做是为了让我们在需要的时候，可以通过将 path 拆分成一个数组，直接导航到路由：\",\"this.$router.push({ name: 'NotFound', // 保留当前路径并删除第一个字符，以避免目标 URL 以 `//` 开头。 params: { pathMatch: this.$route.path.substring(1).split('/') }, // 保留现有的查询和 hash 值，如果有的话 query: this.$route.query, hash: this.$route.hash, }) \",\"更多内容请参见重复参数部分。\",\"一般使用如下\",\"const routes = [ // ...省略了其他配置 // 404在最后(规则是从前往后逐个比较path) { path: \\\"/:pathMatch(.*)*\\\", component: () => import('../views/NotFound.vue') } ] \"]},\"549\":{\"h\":\"编程式导航\",\"t\":[\"除了使用 <router-link> 创建 a 标签来定义导航链接，我们还可以借助 router 的实例方法，通过编写代码来实现。\"]},\"550\":{\"h\":\"导航到不同的位置\",\"t\":[\"注意：在 Vue 实例中，你可以通过 $router 访问路由实例。因此你可以调用 $router.push。\",\"想要导航到不同的 URL，可以使用 router.push 方法。这个方法会向 history 栈添加一个新的记录，所以，当用户点击浏览器后退按钮时，会回到之前的 URL。\",\"当你点击 <router-link> 时，内部会调用这个方法，所以点击 <router-link :to=\\\"...\\\"> 相当于调用 router.push(...) ：\",\"声明式\",\"编程式\",\"<router-link :to=\\\"...\\\">\",\"router.push(...)\",\"该方法的参数可以是一个字符串路径，或者一个描述地址的对象。例如：\",\"// 字符串路径 router.push('/users/eduardo'); // 带有路径的对象 router.push({path: '/users/eduardo'}); // 命名的路由，并加上参数，让路由建立 url router.push({name: 'user', params: {username: 'eduardo'}}); // 带查询参数，结果是 /register?plan=private router.push({path: '/register', query: {plan: 'private'}}); // 带 hash，结果是 /about.md#team router.push({path: '/about.md', hash: '#team'}); \",\"注意：如果提供了 path，params 会被忽略，上述例子中的 query 并不属于这种情况。取而代之的是下面例子的做法，你需要提供路由的 name 或手写完整的带有参数的 path ：\",\"const username = 'eduardo' // 我们可以手动建立 url，但我们必须自己处理编码 router.push(`/user/${username}`) // -> /user/eduardo // 同样 router.push({path: `/user/${username}`}) // -> /user/eduardo // 如果可能的话，使用 `name` 和 `params` 从自动 URL 编码中获益 router.push({name: 'user', params: {username}}) // -> /user/eduardo // `params` 不能与 `path` 一起使用 router.push({path: '/user', params: {username}}) // -> /user \",\"当指定 params 时，可提供 string 或 number 参数（或者对于可重复的参数 可提供一个数组）。任何其他类型（如 undefined、false 等）都将被自动字符串化 。对于可选参数 ，你可以提供一个空字符串（\\\"\\\"）来跳过它。\",\"由于属性 to 与 router.push 接受的对象种类相同，所以两者的规则完全相同。\"]},\"551\":{\"h\":\"基础使用\",\"t\":[\"语法:\",\"router.push({ path: \\\"路由路径\\\", // 都去 router/index.js 定义 name: \\\"路由名\\\" }) \",\"src/router/index.js - 路由数组里, 给路由起名字\",\"import { createRouter, createWebHistory } from 'vue-router' const routes = [ { path: \\\"/part/:name\\\", // 有:的路径代表要接收具体的值 name: 'Part2', component: () => import('../components/HelloWorld.vue') }, ] const router = createRouter({ history: createWebHistory(), routes }) export default router \",\"App.vue - 换成 span 配合js的编程式导航跳转\",\" <template> <div> <div class=\\\"footer_wrap\\\"> <a @click=\\\"change_router('/part', 'Part')\\\">朋友</a> <br /> <a @click=\\\"change1\\\">朋友-小传</a> <br /> <a @click=\\\"change2\\\">朋友-小智</a> </div> <div class=\\\"top\\\"> <router-view></router-view> </div> </div> </template> <script setup> import {useRouter} from 'vue-router'; const router = useRouter(); const change_router = (path, name) => { router.push({name: name}); }; const change1 = () => { router.push({ name: 'Part2', params: { name: '小传', }, }); }; const change2 = () => { router.push( { name: 'Part2', params: { name: '小智' }, query: { name: '小智', }, }, ); }; </script> \"]},\"552\":{\"h\":\"横跨历史\",\"t\":[\"该方法采用一个整数作为参数，表示在历史堆栈中前进或后退多少步，类似于 window.history.go(n)。\",\"// 向前移动一条记录，与 router.forward() 相同 router.go(1) // 返回一条记录，与 router.back() 相同 router.go(-1) // 前进 3 条记录 router.go(3) // 如果没有那么多记录，静默失败 router.go(-100) router.go(100) \"]},\"553\":{\"h\":\"替换当前位置\",\"t\":[\"它的作用类似于 router.push，唯一不同的是，它在导航时不会向 history 添加新记录，正如它的名字所暗示的那样——它取代了当前的条目。\",\"声明式\",\"编程式\",\"<router-link :to=\\\"...\\\" replace>\",\"router.replace(...)\",\"也可以直接在传递给 router.push 的 routeLocation 中增加一个属性 replace: true ：\",\"router.push({path: '/home', replace: true}) // 相当于 router.replace({path: '/home'}) \"]},\"554\":{\"h\":\"重定向\",\"t\":[\"重定向也是通过 routes 配置来完成，下面例子是从 /home 重定向到 /：\",\"const routes = [{path: '/home', redirect: '/'}] \",\"重定向的目标也可以是一个命名的路由：\",\"const routes = [{path: '/home', redirect: {name: 'homepage'}}] \",\"甚至是一个方法，动态返回重定向目标：\",\"const routes = [ { // /search/screens -> /search?q=screens path: '/search/:searchText', redirect: to => { // 方法接收目标路由作为参数 // return 重定向的字符串路径/路径对象 return {path: '/search', query: {q: to.params.searchText}} }, }, { path: '/search', // ... }, ] \",\"例如: 网页默认打开, 匹配路由 \\\"/\\\", 强制切换到 \\\"/find\\\" 上\",\"const routes = [ { path: \\\"/\\\", // 默认hash值路径 redirect: \\\"/find\\\" // 重定向到 /find // 浏览器 url 中 # 后的路径被改变成 /find -重新匹配数组规则 }, ] \",\"总结: 强制重定向后, 还会重新来数组里匹配一次规则\"]},\"555\":{\"h\":\"别名\",\"t\":[\"有时候，同一个路径可能需要多个路由，此时可以使用 alias 创建别名。\",\"const routes = [ { path: '/foo', component: Foo, alias: '/bar' }, ] \",\"有个通用的场景是，你可能要把 src 目录下的 @ 指向 src 目录，这时候就可以使用别名：\",\"在 vue.config.js 中配置别名\",\"module.exports = { configureWebpack: { resolve: { alias: { '@': path.resolve(__dirname, 'src') } } } } \"]},\"556\":{\"h\":\"路由使用\"},\"557\":{\"h\":\"路由嵌套\",\"t\":[\"一些应用程序的 UI 由多层嵌套的组件组成。在这种情况下，URL 的片段通常对应于特定的嵌套组件结构，例如：\",\"/user/johnny/profile /user/johnny/posts +------------------+ +-----------------+ | User | | User | | +--------------+ | | +-------------+ | | | Profile | | +------------> | | Posts | | | | | | | | | | | +--------------+ | | +-------------+ | +------------------+ +-----------------+ \",\"通过 Vue Router，你可以使用嵌套路由配置来表达这种关系。\",\"接着上节创建的 app ：\",\"<div id=\\\"app\\\"> <router-view></router-view> </div> \",\"const User = { template: '<div>User {{ $route.params.id }}</div>', } // 这些都会传递给 `createRouter` const routes = [{ path: '/user/:id', component: User }] \",\"这里的 <router-view> 是一个顶层的 router-view。它渲染顶层路由匹配的组件。同样地，一个被渲染的组件也可以包含自己嵌套的 <router-view>。例如，如果我们在 User 组件的模板内添加一个 <router-view>：\",\"const User = { template: ` <div class=\\\"user\\\"> <h2>User {{ $route.params.id }}</h2> <router-view></router-view> </div> `, } \",\"要将组件渲染到这个嵌套的 router-view 中，我们需要在路由中配置 children：\",\"const routes = [ { path: '/user/:id', component: User, children: [ { // 当 /user/:id/profile 匹配成功 // UserProfile 将被渲染到 User 的 <router-view> 内部 path: 'profile', component: UserProfile, }, { // 当 /user/:id/posts 匹配成功 // UserPosts 将被渲染到 User 的 <router-view> 内部 path: 'posts', component: UserPosts, }, ], }, ] \",\"注意，以 / 开头的嵌套路径将被视为根路径。这允许你利用组件嵌套，而不必使用嵌套的 URL。\",\"如你所见，children 配置只是另一个路由数组，就像 routes 本身一样。因此，你可以根据自己的需要，不断地嵌套视图。\",\"此时，按照上面的配置，当你访问 /user/eduardo 时，在 User 的 router-view 里面什么都不会呈现，因为没有匹配到嵌套路由。也许你确实想在那里渲染一些东西。在这种情况下，你可以提供一个空的嵌套路径：\",\"const routes = [ { path: '/user/:id', component: User, children: [ // 当 /user/:id 匹配成功 // UserHome 将被渲染到 User 的 <router-view> 内部 { path: '', component: UserHome }, // ...其他子路由 ], }, ] \"]},\"558\":{\"h\":\"导航守卫\",\"t\":[\"https://router.vuejs.org/zh/guide/advanced/navigation-guards.html\",\"正如其名，vue-router 提供的导航守卫主要用来通过跳转或取消的方式守卫导航。这里有很多方式植入路由导航中：全局的，单个路由独享的，或者组件级的。\"]},\"559\":{\"h\":\"全局前置守卫\",\"t\":[\"你可以使用 router.beforeEach 注册一个全局前置守卫：\",\"const router = createRouter({ ... }) router.beforeEach((to, from) => { // ... // 返回 false 以取消导航 return false }) \",\"当一个导航触发时，全局前置守卫按照创建顺序调用。守卫是异步解析执行，此时导航在所有守卫 resolve 完之前一直处于等待中。\",\"每个守卫方法接收两个参数：\",\"to: 即将要进入的目标 用一种标准化的方式\",\"from: 当前导航正要离开的路由 用一种标准化的方式\",\"可以返回的值如下:\",\"false: 取消当前的导航。如果浏览器的 URL 改变了(可能是用户手动或者浏览器后退按钮)，那么 URL 地址会重置到 from 路由对应的地址。\",\"一个路由地址: 通过一个路由地址重定向到一个不同的地址，如同调用 router.push()，且可以传入诸如 replace: true 或 name: 'home' 之类的选项。它会中断当前的导航，同时用相同的 from 创建一个新导航。\",\" router.beforeEach(async (to, from) => { if ( // 检查用户是否已登录 !isAuthenticated && // ❗️ 避免无限重定向 to.name !== 'Login' ) { // 将用户重定向到登录页面 return { name: 'Login' } } }) \",\"如果遇到了意料之外的情况，可能会抛出一个 Error。这会取消导航并且调用 router.onError() 注册过的回调。\",\"如果什么都没有，undefined 或返回 true，则导航是有效的，并调用下一个导航守卫\",\"以上所有都同 async 函数 和 Promise 工作方式一样：\",\"router.beforeEach(async (to, from) => { // canUserAccess() 返回 `true` 或 `false` const canAccess = await canUserAccess(to) if (!canAccess) return '/login' }) \",\"在之前的 Vue Router 版本中，还可以使用 第三个参数next 。这是一个常见的错误来源，我们经过 RFC 讨论将其移除。然而，它仍然是被支持的，这意味着你可以向任何导航守卫传递第三个参数。在这种情况下，确保 next 在任何给定的导航守卫中都被严格调用一次。它可以出现多于一次，但是只能在所有的逻辑路径都不重叠的情况下，否则钩子永远都不会被解析或报错。这里有一个在用户未能验证身份时重定向到/login的错误用例：\",\"// BAD router.beforeEach((to, from, next) => { if (to.name !== 'Login' && !isAuthenticated) next({ name: 'Login' }) // 如果用户未能验证身份，则 `next` 会被调用两次 next() }) \",\"下面是正确的版本:\",\"// GOOD router.beforeEach((to, from, next) => { if (to.name !== 'Login' && !isAuthenticated) next({ name: 'Login' }) else next() }) \"]},\"560\":{\"h\":\"全局后置钩子\",\"t\":[\"你也可以注册全局后置钩子，然而和守卫不同的是，这些钩子不会接受 next 函数也不会改变导航本身：\",\"router.afterEach((to, from) => { sendToAnalytics(to.fullPath) }) \",\"它们对于分析、更改页面标题、声明页面等辅助功能以及许多其他事情都很有用。\",\"它们也反映了 navigation failures 作为第三个参数：\",\"router.afterEach((to, from, failure) => { if (!failure) sendToAnalytics(to.fullPath) }) \",\"更多关于 navigation failures 的信息在它的指南 中。\"]},\"561\":{\"h\":\"路由独享的守卫\",\"t\":[\"你可以直接在路由配置上定义 beforeEnter 守卫：\",\"const routes = [ { path: '/users/:id', component: UserDetails, beforeEnter: (to, from) => { // reject the navigation return false }, }, ] \",\"beforeEnter 守卫 只在进入路由时触发，不会在 params、query 或 hash 改变时触发。例如，从 /users/2 进入到 /users/3 或者从 /users/2#info 进入到 /users/2#projects。它们只有在 从一个不同的 路由导航时，才会被触发。\",\"你也可以将一个函数数组传递给 beforeEnter，这在为不同的路由重用守卫时很有用：\",\"function removeQueryParams(to) { if (Object.keys(to.query).length) return { path: to.path, query: {}, hash: to.hash } } function removeHash(to) { if (to.hash) return { path: to.path, query: to.query, hash: '' } } const routes = [ { path: '/users/:id', component: UserDetails, beforeEnter: [removeQueryParams, removeHash], }, { path: '/about', component: UserDetails, beforeEnter: [removeQueryParams], }, ] \",\"请注意，你也可以通过使用路径 meta 字段和全局导航守卫来实现类似的行为。\"]},\"562\":{\"h\":\"组件内的守卫\",\"t\":[\"最后，你可以在路由组件内直接定义路由导航守卫(传递给路由配置的)\"]},\"563\":{\"h\":\"可用的配置 API\",\"t\":[\"你可以为路由组件添加以下配置：\",\"beforeRouteEnter\",\"beforeRouteUpdate\",\"beforeRouteLeave\",\"const UserDetails = { template: `...`, beforeRouteEnter(to, from) { // 在渲染该组件的对应路由被验证前调用 // 不能获取组件实例 `this` ！ // 因为当守卫执行时，组件实例还没被创建！ }, beforeRouteUpdate(to, from) { // 在当前路由改变，但是该组件被复用时调用 // 举例来说，对于一个带有动态参数的路径 `/users/:id`，在 `/users/1` 和 `/users/2` 之间跳转的时候， // 由于会渲染同样的 `UserDetails` 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。 // 因为在这种情况发生的时候，组件已经挂载好了，导航守卫可以访问组件实例 `this` }, beforeRouteLeave(to, from) { // 在导航离开渲染该组件的对应路由时调用 // 与 `beforeRouteUpdate` 一样，它可以访问组件实例 `this` }, } \",\"beforeRouteEnter 守卫 不能 访问 this，因为守卫在导航确认前被调用，因此即将登场的新组件还没被创建。\",\"不过，你可以通过传一个回调给 next 来访问组件实例。在导航被确认的时候执行回调，并且把组件实例作为回调方法的参数：\",\"beforeRouteEnter (to, from, next) { next(vm => { // 通过 `vm` 访问组件实例 }) } \",\"注意 beforeRouteEnter 是支持给 next 传递回调的唯一守卫。对于 beforeRouteUpdate 和 beforeRouteLeave 来说，this 已经可用了，所以不支持 传递回调，因为没有必要了：\",\"beforeRouteUpdate (to, from) { // just use `this` this.name = to.params.name } \",\"这个 离开守卫 通常用来预防用户在还未保存修改前突然离开。该导航可以通过返回 false 来取消。\",\"beforeRouteLeave (to, from) { const answer = window.confirm('Do you really want to leave? you have unsaved changes!') if (!answer) return false } \"]},\"564\":{\"h\":\"使用组合 AP\",\"t\":[\"如果你正在使用组合 API 和 setup 函数来编写组件，你可以通过 onBeforeRouteUpdate 和 onBeforeRouteLeave 分别添加 update 和 leave 守卫。 请参考组合 API 部分以获得更多细节。\"]},\"565\":{\"h\":\"完整的导航解析流程\",\"t\":[\"导航被触发。\",\"在失活的组件里调用 beforeRouteLeave 守卫。\",\"调用全局的 beforeEach 守卫。\",\"在重用的组件里调用 beforeRouteUpdate 守卫(2.2+)。\",\"在路由配置里调用 beforeEnter。\",\"解析异步路由组件。\",\"在被激活的组件里调用 beforeRouteEnter。\",\"调用全局的 beforeResolve 守卫(2.5+)。\",\"导航被确认。\",\"调用全局的 afterEach 钩子。\",\"触发 DOM 更新。\",\"调用 beforeRouteEnter 守卫中传给 next 的回调函数，创建好的组件实例会作为回调函数的参数传入。\"]},\"566\":{\"h\":\"路由案例\",\"t\":[\"目标: 路由跳转之前, 先执行一次前置守卫函数, 判断是否可以正常跳转\",\"// `router.beforeEach` router.beforeEach((to, form, next) => { console.log(to, form); next() }) \",\"每个守卫方法接收三个参数：\",\"to: Route， 即将要进入的目标 路由对象； from: Route，当前导航正要离开的路由； next(): 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 confirmed (确认的)。 next(false): 中断当前的导航。如果浏览器的 URL 改变了 (可能是用户手动或者浏览器后退按钮)，那么 URL 地址会重置到 from 路由对应的地址。 next('/') 或者 next({ path: '/' }): 跳转到一个不同的地址。当前的导航被中断，然后进行一个新的导航。 \"]},\"567\":{\"h\":\"登录拦截\",\"t\":[\"使用例子: 在跳转路由前, 判断用户登陆了才能去 <我的音乐> 页面, 未登录弹窗提示回到发现音乐页面\",\"在路由对象上使用固定方法 beforeEach\",\"// 目标: 路由守卫 // 场景: 当你要对路由权限判断时 // 语法: router.beforeEach((to, from, next)=>{//路由跳转\\\"之前\\\"先执行这里, 决定是否跳转}) // 参数1: 要跳转到的路由 (路由对象信息) 目标 // 参数2: 从哪里跳转的路由 (路由对象信息) 来源 // 参数3: 函数体 - next()才会让路由正常的跳转切换, next(false)在原地停留, next(\\\"强制修改到另一个路由路径上\\\") // 注意: 如果不调用 next, 页面留在原地 const isLogin = ref(true)// 登录状态(未登录) router.beforeEach((to, from, next) => { if (to.path === '/my' && isLogin.value === false) { alert('请登录') next(false) // 阻止路由跳转 } else { next() // 正常放行 } }) \",\"总结: next()放行, next(false)留在原地不跳转路由, next(path路径)强制换成对应path路径跳转\"]},\"568\":{\"h\":\"权限判断\",\"t\":[\"const whileList = ['/'] router.beforeEach((to, from, next) => { let token = localStorage.getItem('token') //白名单 有值 或者登陆过存储了token信息可以跳转 否则就去登录页面 if (whileList.includes(to.path) || token) { next() } else { next({ path: '/' }) } }) \"]},\"569\":{\"h\":\"路由原信息\",\"t\":[\"有时，你可能希望将任意信息附加到路由上，如过渡名称、谁可以访问路由等。这些事情可以通过接收属性对象的meta属性来实现，并且它可以在路由地址和导航守卫上都被访问到。定义路由的时候你可以这样配置 meta 字段：\",\"const routes = [ { path: '/posts', component: PostsLayout, children: [ { path: 'new', component: PostsNew, // 只有经过身份验证的用户才能创建帖子 meta: { requiresAuth: true }, }, { path: ':id', component: PostsDetail // 任何人都可以阅读文章 meta: { requiresAuth: false }, } ] } ] \",\"那么如何访问这个 meta 字段呢？\",\"首先，我们称呼 routes 配置中的每个路由对象为 路由记录。路由记录可以是嵌套的，因此，当一个路由匹配成功后，它可能匹配多个路由记录。\",\"例如，根据上面的路由配置，/posts/new 这个 URL 将会匹配父路由记录 (path: '/posts') 以及子路由记录 (path: 'new')。\",\"一个路由匹配到的所有路由记录会暴露为 $route 对象(还有在导航守卫中的路由对象)的$route.matched 数组。我们需要遍历这个数组来检查路由记录中的 meta 字段，但是 Vue Router 还为你提供了一个 $route.meta 方法，它是一个非递归合并所有 meta 字段（从父字段到子字段）的方法。这意味着你可以简单地写\",\"router.beforeEach((to, from) => { // 而不是去检查每条路由记录 // to.matched.some(record => record.meta.requiresAuth) if (to.meta.requiresAuth && !auth.isLoggedIn()) { // 此路由需要授权，请检查是否已登录 // 如果没有，则重定向到登录页面 return { path: '/login', // 保存我们所在的位置，以便以后再来 query: { redirect: to.fullPath }, } } }) \"]},\"570\":{\"h\":\"过渡动效\",\"t\":[\"想要在你的路径组件上使用转场，并对导航进行动画处理，你需要使用 v-slot API：\",\"<router-view #default=\\\"{route,Component}\\\"> <transition :enter-active-class=\\\"`animate__animated ${route.meta.transition}`\\\"> <component :is=\\\"Component\\\"></component> </transition> </router-view> \",\"上面的用法会对所有的路由使用相同的过渡。如果你想让每个路由的组件有不同的过渡，你可以将元信息和动态的 name 结合在一起，放在<transition> 上：\",\"const routes = [ { path: '/custom-transition', component: PanelLeft, meta: { transition: 'slide-left' }, }, { path: '/other-transition', component: PanelRight, meta: { transition: 'slide-right' }, }, ] \",\"<router-view v-slot=\\\"{ Component, route }\\\"> <!-- 使用任何自定义过渡和回退到 `fade` --> <transition :name=\\\"route.meta.transition || 'fade'\\\"> <component :is=\\\"Component\\\" /> </transition> </router-view> \",\"也可以根据目标路由和当前路由之间的关系，动态地确定使用的过渡。使用和刚才非常相似的片段：\",\"<!-- 使用动态过渡名称 --> <router-view v-slot=\\\"{ Component, route }\\\"> <transition :name=\\\"route.meta.transition\\\"> <component :is=\\\"Component\\\" /> </transition> </router-view> \",\"我们可以添加一个 after navigation hook，根据路径的深度动态添加信息到 meta 字段。\",\"router.afterEach((to, from) => { const toDepth = to.path.split('/').length const fromDepth = from.path.split('/').length to.meta.transition = toDepth < fromDepth ? 'slide-right' : 'slide-left' }) \",\"Vue 可能会自动复用看起来相似的组件，从而忽略了任何过渡。幸运的是，可以添加一个 key 属性来强制过渡。这也允许你在相同路由上使用不同的参数触发过渡：\",\"<router-view v-slot=\\\"{ Component, route }\\\"> <transition name=\\\"fade\\\"> <component :is=\\\"Component\\\" :key=\\\"route.path\\\" /> </transition> </router-view> \"]},\"571\":{\"h\":\"滚动行为\",\"t\":[\"使用前端路由，当切换到新路由时，想要页面滚到顶部，或者是保持原先的滚动位置，就像重新加载页面那样。 vue-router 能做到，而且更好，它让你可以自定义路由切换时页面如何滚动。\",\"注意: 这个功能只在支持 history.pushState 的浏览器中可用。\",\"当创建一个 Router 实例，你可以提供一个 scrollBehavior 方法：\",\"const router = createRouter({ history: createWebHashHistory(), routes: [...], scrollBehavior (to, from, savedPosition) { // return 期望滚动到哪个的位置 } }) \",\"scrollBehavior 函数接收 to和 from 路由对象，如 Navigation Guards。第三个参数 savedPosition，只有当这是一个 popstate 导航时才可用（由浏览器的后退/前进按钮触发）。\",\"该函数可以返回一个 ScrollToOptions 位置对象:\",\"const router = createRouter({ scrollBehavior(to, from, savedPosition) { // 始终滚动到顶部 return { top: 0 } }, }) \",\"你也可以通过 el 传递一个 CSS 选择器或一个 DOM 元素。在这种情况下，top 和 left 将被视为该元素的相对偏移量。\",\"const router = createRouter({ scrollBehavior(to, from, savedPosition) { // 始终在元素 #main 上方滚动 10px return { // 也可以这么写 // el: document.getElementById('main'), el: '#main', // 在元素上 10 像素 top: 10, } }, }) \",\"如果返回一个 falsy 的值，或者是一个空对象，那么不会发生滚动。\",\"返回 savedPosition，在按下 后退/前进 按钮时，就会像浏览器的原生表现那样：\",\"const router = createRouter({ scrollBehavior(to, from, savedPosition) { if (savedPosition) { return savedPosition } else { return { top: 0 } } }, }) \",\"如果你要模拟 “滚动到锚点” 的行为：\",\"const router = createRouter({ scrollBehavior(to, from, savedPosition) { if (to.hash) { return { el: to.hash, } } }, }) \",\"如果你的浏览器支持滚动行为，你可以让它变得更流畅：\",\"const router = createRouter({ scrollBehavior(to, from, savedPosition) { if (to.hash) { return { el: to.hash, behavior: 'smooth', } } } }) \",\"有时候，我们需要在页面中滚动之前稍作等待。例如，当处理过渡时，我们希望等待过渡结束后再滚动。要做到这一点，你可以返回一个 Promise，它可以返回所需的位置描述符。下面是一个例子，我们在滚动前等待 500ms：\",\"const router = createRouter({ scrollBehavior(to, from, savedPosition) { return new Promise((resolve, reject) => { setTimeout(() => { resolve({ left: 0, top: 0 }) }, 500) }) }, }) \",\"我们可以将其与页面级过渡组件的事件挂钩，以使滚动行为与你的页面过渡很好地结合起来，但由于使用场景可能存在的差异和复杂性，我们只是提供了这个基础来实现特定的用户场景。\"]},\"572\":{\"h\":\"动态路由\",\"t\":[\"对路由的添加通常是通过 routes 选项来完成的，但是在某些情况下，你可能想在应用程序已经运行的时候添加或删除路由。具有可扩展接口(如 Vue CLI UI )这样的应用程序可以使用它来扩展应用程序。\"]},\"573\":{\"h\":\"添加路由\",\"t\":[\"动态路由主要通过两个函数实现。router.addRoute() 和 router.removeRoute()。它们只注册一个新的路由，也就是说，如果新增加的路由与当前位置相匹配，就需要你用 router.push() 或 router.replace() 来手动导航，才能显示该新路由。我们来看一个例子：\",\"想象一下，只有一个路由的以下路由：\",\"const router = createRouter({ history: createWebHistory(), routes: [{ path: '/:articleName', component: Article }], }) \",\"进入任何页面，/about，/store，或者 /3-tricks-to-improve-your-routing-code 最终都会呈现 Article 组件。如果我们在 /about 上添加一个新的路由：\",\"router.addRoute({ path: '/about', component: About }) \",\"页面仍然会显示 Article 组件，我们需要手动调用 router.replace() 来改变当前的位置，并覆盖我们原来的位置（而不是添加一个新的路由，最后在我们的历史中两次出现在同一个位置）：\",\"router.addRoute({ path: '/about', component: About }) // 我们也可以使用 this.$route 或 route = useRoute() （在 setup 中） router.replace(router.currentRoute.value.fullPath) \",\"记住，如果你需要等待新的路由显示，可以使用 await router.replace()。\"]},\"574\":{\"h\":\"删除路由\",\"t\":[\"有几个不同的方法来删除现有的路由：\",\"通过添加一个名称冲突的路由。如果添加与现有途径名称相同的途径，会先删除路由，再添加路由：\",\"router.addRoute({ path: '/about', name: 'about', component: About }) // 这将会删除之前已经添加的路由，因为他们具有相同的名字且名字必须是唯一的 router.addRoute({ path: '/other', name: 'about', component: Other }) \",\"通过调用 router.addRoute() 返回的回调：\",\"const removeRoute = router.addRoute(routeRecord) removeRoute() // 删除路由如果存在的话 \",\"当路由没有名称时，这很有用。\",\"通过使用 router.removeRoute() 按名称删除路由：\",\"router.addRoute({ path: '/about', name: 'about', component: About }) // 删除路由 router.removeRoute('about') \",\"需要注意的是，如果你想使用这个功能，但又想避免名字的冲突，可以在路由中使用 Symbol 作为名字。\",\"当路由被删除时，所有的别名和子路由也会被同时删除\"]},\"575\":{\"h\":\"查看现有路由\",\"t\":[\"Vue Router 提供了两个功能来查看现有的路由：\",\"router.hasRoute()：检查路由是否存在。\",\"router.getRoutes()：获取一个包含所有路由记录的数组。\"]},\"576\":{\"h\":\"动态路由案例\"},\"577\":{\"h\":\"后端代码 -> Python Flask\",\"t\":[\"from flask import Flask, request from flask_cors import CORS app = Flask(__name__) CORS().init_app(app) @app.route('/login', methods=['POST']) def login(): username = request.json.get('username') password = request.json.get('password') if username == 'admin' and password == '123456': return { 'routes': [ { 'path': \\\"/articles\\\", 'name': \\\"articles\\\", 'parent': \\\"subviews\\\", 'component': 'Articles.vue' }, { 'path': \\\"/hot\\\", 'name': \\\"hot\\\", 'parent': \\\"subviews\\\", 'component': 'Hot.vue' }, { 'path': \\\"/author\\\", 'name': \\\"author\\\", 'parent': \\\"subviews\\\", 'component': 'Author.vue' } ] } else: return { 'code': 400, 'message': \\\"账号密码错误\\\" } @app.route('/menus', methods=['GET']) def menus(): return { 'routes': [ { 'path': '/login', 'name': 'login', 'component': 'Login.vue' }, { 'path': '/main', 'name': 'main', 'component': 'Main.vue' } ] } @app.route('/', methods=['GET']) def index(): return { 'routes': [ { 'path': '/login', 'name': 'login', 'component': './views/Login.vue' } ] } if __name__ == '__main__': app.run(debug=True, host='127.0.0.1', port=5000) \"]},\"578\":{\"h\":\"前端代码\",\"t\":[\"App.vue\",\"<script setup> import {onMounted} from \\\"vue\\\"; import axios from \\\"axios\\\"; import {useRouter} from \\\"vue-router\\\"; const router = useRouter() // 启动项目之后才加载登录路由 onMounted(async () => { const response = await axios.get('http://127.0.0.1:5000/menus') const data = response.data data.routes.forEach((v) => { router.addRoute({ path: v.path, name: v.name, component: () => import(/* @vite-ignore */ `./components/${v.component}`) }) }) await router.push('/login') }) </script> <template> <router-view></router-view> </template> <style> * { margin: 0; padding: 0; box-sizing: border-box; } html, body, #app { width: 100%; height: 100%; } </style> \",\"router.js\",\"import { createRouter, createWebHistory } from 'vue-router' // @ 路径 console.log(import.meta.url) const routes = [ { path: '/login', name: 'login', component: () => import('@/components/login.vue') }, { path: '/main', name: 'main', component: () => import('@/components/main.vue') } ] const router = createRouter({ history: createWebHistory(), routes }) export default router \",\"login.vue\",\"<template> <div class=\\\"login\\\"> <el-form :model=\\\"formInline\\\" class=\\\"demo-form-inline\\\"> <el-form-item label=\\\"用户名：\\\"> <el-input v-model=\\\"formInline.username\\\" placeholder=\\\"请输入用户名\\\"/> </el-form-item> <el-form-item label=\\\"密&nbsp;&nbsp;&nbsp;码：\\\"> <el-input v-model=\\\"formInline.password\\\" placeholder=\\\"请输入密码\\\"> </el-input> </el-form-item> <el-form-item> <el-button type=\\\"primary\\\" @click=\\\"onSubmit\\\">提交登录</el-button> </el-form-item> </el-form> </div> </template> <script setup> import axios from 'axios'; import {reactive} from 'vue' import {useRouter} from \\\"vue-router\\\"; const router = useRouter() const formInline = reactive({ username: '', password: '', }) const onSubmit = async () => { const response = await axios.post('http://127.0.0.1:5000/login', formInline) const data = response.data console.log(data) // 登录成功之后, 解析后端返回的路由数据 if (data?.routes) { data.routes.forEach((v) => { console.log(v) const path = v?.parent ? `./${v.parent}/${v.component}` : `./${v.component}` router.addRoute('main', { path: '/main' + v.path, name: v.name, component: () => import(/* @vite-ignore */ path) }) }) console.log(router.getRoutes()) await router.push('/main') } } </script> <style scoped> .login { width: 30%; margin: 100px auto; } </style> \",\"main.js\",\"<template> <h1>Main</h1> <div class=\\\"nav\\\"> <router-link to=\\\"/main/articles\\\">阅读文章</router-link> <router-link to=\\\"/main/hot\\\">排行热榜</router-link> <router-link to=\\\"/main/author\\\">作者排行</router-link> </div> <div class=\\\"subview\\\"> <router-view></router-view> </div> </template> <script setup> </script> <style scoped> .nav a { margin: 20px; } </style> \"]},\"579\":{\"h\":\"Pinia\"},\"580\":{\"h\":\"为什么使用 Pinia?\",\"t\":[\"https://pinia.vuejs.org/zh/\",\"Pinia 是 Vue 的专属状态管理库，它允许你跨组件或页面共享状态。如果你熟悉组合式 API 的话，你可能会认为可以通过一行简单的 export const state = reactive({}) 来共享一个全局状态。对于单页应用来说确实可以，但如果应用在服务器端渲染，这可能会使你的应用暴露出一些安全漏洞。 而如果使用 Pinia，即使在小型单页应用中，你也可以获得如下功能：\",\"Devtools 支持 \",\"追踪 actions、mutations 的时间线\",\"在组件中展示它们所用到的 Store\",\"让调试更容易的 Time travel\",\"热更新 \",\"不必重载页面即可修改 Store\",\"开发时可保持当前的 State\",\"插件：可通过插件扩展 Pinia 功能\",\"为 JS 开发者提供适当的 TypeScript 支持以及自动补全功能。\",\"支持服务端渲染\"]},\"581\":{\"h\":\"简单使用\",\"t\":[\"安装\",\"yarn add pinia npm install pinia \",\"在mian.js中，创建根存储\",\"import { createPinia } from 'pinia' app.use(createPinia() \",\"创建store\",\"store实例相当于一个容器，里面存放的有类似于data，计算属性，方法之类的东西。通过defineStore()方法定义\",\"在src下面创建一个store文件夹，再创建与之对应的js文件，比如``counter.js`\",\"// option store import { defineStore } from \\\"pinia\\\" export const useCouterStore = defineStore('counter', { state: () => ({ count: 0, }), getters: { doubleCount: (state) => state.count * 2, }, actions: { increment() { this.count++ } } } ) \",\"import { defineStore } from \\\"pinia\\\" import { ref, computed } from 'vue' export const useCouterStore = defineStore('counter', () => { // 定义数据 const count = ref(0) // 定义修改数据的方法 (actions 同步加异步) const increment = () => count.value++ // getters 计算属性 const double = computed(() => count.value * 2) // 以对象的方式返回以供组件使用 return { count, increment } }) \",\"使用store\",\"<template> <button @click=\\\"counterStore.increment\\\">{{ counterStore.count }}</button> </template> <script setup> import { useCouterStore } from './store/counter'; const counterStore = useCouterStore(); console.log(counterStore); </script> \"]},\"582\":{\"h\":\"State\",\"t\":[\"读取state\",\"import { storeToRefs } from 'pinia' const userStore = useUser() // 如果直接解构出数据，这个数据不是响应式的。如果想要变成响应式的，需要调用storeToRefs方法 const { userName, avatar } = storeToRefs(userStore) \",\"修改state\",\"userStore.userName = '张三' \",\"重置 state\",\"使用选项式 API 时，你可以通过调用 store 的 $reset() 方法将 state 重置为初始值。\",\"在 $reset() 内部，会调用 state() 函数来创建一个新的状态对象，并用它替换当前状态。\",\"const store = useStore() store.$reset() \",\"变更 state\",\"除了用 store.count++ 直接改变 store，你还可以调用 $patch 方法。它允许你用一个 state 的补丁对象在同一时间更改多个属性：\",\"store.$patch({ count: store.count + 1, age: 120, name: 'DIO', }) \",\"不过，用这种语法的话，有些变更真的很难实现或者很耗时：任何集合的修改（例如，向数组中添加、移除一个元素或是做 splice 操作）都需要你创建一个新的集合。因此，$patch 方法也接受一个函数来组合这种难以用补丁对象实现的变更。\",\"store.$patch((state) => { state.items.push({ name: 'shoes', quantity: 1 }) state.hasChanged = true }) \",\"两种变更 store 方法的主要区别是，$patch() 允许你将多个变更归入 devtools 的同一个条目中\",\"你可以在 pinia 实例上使用 watch() 函数侦听整个 state。\",\"watch( pinia.state, (state) => { // 每当状态发生变化时，将整个 state 持久化到本地存储。 localStorage.setItem('piniaState', JSON.stringify(state)) }, { deep: true } ) \"]},\"583\":{\"h\":\"getters\",\"t\":[\"基础使用\",\"类似计算属性。推荐里面传递一个形参的写法，不容易出错。\",\" getters: { isAdult: (state) => { return state.age >= 18 ? '成年人' : '未成年' } } \",\"// 直接获取 <div>{{userStore.isAdult}}</div> \",\"调用本模块其他 getters\",\" getters: { isAdult: (state) => { return state.age >= 18 ? '成年人' : '未成年' }, msg: (state) => { // msg这个getter访问了自身的getter（isAdult） return state.userName + state.isAdult } } \",\"getters传参\",\" getters: { isAdmin: (state) => { // 如果getter里面是返回的函数，那么它就可以传参数了 return (name) => name === 'admin' ? '是管理员' : '不是管理员' } } \",\"{{userStore.isAdmin}} \",\"调用其他store里面的getter\",\"// goods.js import { defineStore } from 'pinia' // 第一个参数是应用程序中 store 的唯一 id // 第二个参数是配置对象 export const useGoods = defineStore('goods', { // state是一个函数，返回一个对象 state: () => { return { goodsName: 'iphone' } }, getters: { newIphone: (state) => { return state.goodsName + ' 14 pro' } } }) \",\"import { useGoods } from './goods.js' // .......... getters: { info: (state) => { // 获取goods模块的store const goodsStore = useGoods() return state.userName + '买了' + goodsStore.newIphone } } \"]},\"584\":{\"h\":\"actions\",\"t\":[\"Action 相当于组件中的 method。它们可以通过 defineStore() 中的 actions 属性来定义，并且它们也是定义业务逻辑的完美选择。\",\"export const useCounterStore = defineStore('main', { state: () => ({ count: 0, }), actions: { increment() { this.count++ }, randomizeCounter() { this.count = Math.round(100 * Math.random()) }, }, }) \",\"类似 getter，action 也可通过 this 访问整个 store 实例，并支持完整的类型标注(以及自动补全✨)。不同的是，action 可以是异步的，你可以在它们里面 await 调用任何 API，以及其他 action！下面是一个使用 Mande 的例子。请注意，你使用什么库并不重要，只要你得到的是一个Promise，你甚至可以 (在浏览器中) 使用原生 fetch 函数：\",\"import { mande } from 'mande' const api = mande('/api/users') export const useUsers = defineStore('users', { state: () => ({ userData: null, // ... }), actions: { async registerUser(login, password) { try { this.userData = await api.post({ login, password }) showTooltip(`Welcome back ${this.userData.name}!`) } catch (error) { showTooltip(error) // 让表单组件显示错误 return error } }, }, }) \",\"你也完全可以自由地设置任何你想要的参数以及返回任何结果。当调用 action 时，一切类型也都是可以被自动推断出来的。\",\"Action 可以像函数或者通常意义上的方法一样被调用：\",\"<script setup> const store = useCounterStore() // 将 action 作为 store 的方法进行调用 store.randomizeCounter() </script> <template> <!-- 即使在模板中也可以 --> <button @click=\\\"store.randomizeCounter()\\\">Randomize</button> </template> \",\"想要使用另一个 store 的话，那你直接在 action 中调用就好了：\",\"import { useAuthStore } from './auth-store' export const useSettingsStore = defineStore('settings', { state: () => ({ preferences: null, // ... }), actions: { async fetchUserPreferences() { const auth = useAuthStore() if (auth.isAuthenticated) { this.preferences = await fetchPreferences() } else { throw new Error('User must be authenticated') } }, }, }) \"]},\"585\":{\"h\":\"模块化\",\"t\":[\"在实际开发中，不可能把多个模块的数据都定义到一个store中，而是一个模块对应一个store，最后通过一个根store进行整合\",\"1.随便建立两个store，并导出\",\"// 模块一 import { defineStore } from 'pinia' const useUserStore = defineStore('user', { state: () => { return { name: 'haha', age: 18, } }, }) export default useUserStore // 模块二 import { defineStore } from 'pinia' const useCounterStore = defineStore('user', { state: () => { return { count: 1 } }, }) export default useUserStore \",\"新建store/index.js\",\"import useUserStore from './user' import useCounterStore from './counter' // 统一导出useStore方法 export default function useStore() { return { user: useUserStore(), counter: useCounterStore(), } } \",\"组件中使用\",\"<script setup> import { storeToRefs } from 'pinia' import useStore from './store' const { counter } = useStore() // 使用storeToRefs可以保证解构出来的数据也是响应式的 const { count } = storeToRefs(counter) </script> \"]},\"586\":{\"h\":\"Vue2-Vuex\"},\"587\":{\"h\":\"今日学习目标(边讲边练)\",\"t\":[\"跨组件通信能力\",\"vuex的基础使用\",\"购物车案例-改装\"]},\"588\":{\"h\":\"1.vuex介绍\"},\"589\":{\"h\":\"目标\",\"t\":[\"什么是vuex\",\"为什么学习vuex\"]},\"590\":{\"h\":\"通信方案\",\"t\":[\"组件关系\",\"数据通信\",\"父子关系\",\"父传子：props ； 子传父：$emit\",\"非父子关系\",\"vuex (一种组件通信方案)\"]},\"591\":{\"h\":\"vuex是什么\",\"t\":[\"Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理数据，以相应的规则保证状态以一种可预测的方式发生变化\"]},\"592\":{\"h\":\"vuex为何学\",\"t\":[\"程序页面多, 数据变量多\",\"不同组件数据保持同步\",\"数据的修改都是可追踪\",\"一个户外商店有两名员工，张三和李四\",\"一天的早上，他们分别对帐篷的数量做了一次盘点，发现一共有三个帐篷\",\"张三卖出去俩个，他以为库存里还有一个\",\"李四卖出去一个，他以为库存里还有两个\",\"而事实上是，库存现在已经为零\",\"如果他们再接受客户的预订，就会出现库存不足的情况\",\"张三和李四因为没有保持库存的数量的同步导致了尴尬，这个就是所谓的数据保持同步 \",\"店长需要知道, 谁卖出了多少个帐篷，这个行为我们称之为数据修改是可追踪的\",\"图示:\"]},\"593\":{\"h\":\"vuex中存什么\",\"t\":[\"多个组件共享状态，才存储在vuex中\",\"某个组件中的私有数据，依旧存储在data中\",\"例如：\",\"登陆的用户名需要在首页, 个人中心, 结算页面使用, 用户名存在vuex中\",\"文章详情数据, 只有在文章详情页查看, 在自身data中声明\"]},\"594\":{\"h\":\"小结\",\"t\":[\"什么是vuex \",\"vuex是Vue官方推荐的集中式状态管理机制\",\"为何学vuex \",\"数据同步, 集中管理\",\"vuex中存什么 \",\"多个组件共享的值\"]},\"595\":{\"h\":\"2.vuex学习内容\"},\"596\":{\"h\":\"目标\",\"t\":[\"知道vuex要学习什么\"]},\"597\":{\"h\":\"核心概念\",\"t\":[\"官网地址: https://vuex.vuejs.org/zh/\",\"安装(固定)\",\"配置项(固定)\",\"配置项\",\"含义\",\"注意\",\"state\",\"单一状态树\",\"类似data\",\"mutations\",\"数据管家(同步)\",\"唯一修改state地方\",\"actions\",\"异步请求\",\"要改state需要提交给mutations\",\"getters\",\"vuex计算属性\",\"类似computed\",\"modules\",\"模块拆分\"]},\"598\":{\"h\":\"图示关系\",\"t\":[\"单一定义store对象, 里面5个配置项, 在任意组件可以使用\"]},\"599\":{\"h\":\"小结\",\"t\":[\"vuex五个核心概念是? \",\"state / mutations / actions / getters / modules\"]},\"600\":{\"h\":\"3.vuex例子准备\"},\"601\":{\"h\":\"目标\",\"t\":[\"创建项目, 为学习准备 \",\"需求1: App.vue(作为根组件)\",\"需求2: 子组件Add和子组件Sub, 嵌入在App.vue里\",\"需求3: 三个组件共享库存数据(保持同步)\"]},\"602\":{\"h\":\"工程准备\",\"t\":[\"初始化新的工程 vuex-demo\",\"vue create vuex-demo \",\"清空欢迎界面\",\"并设置如下三个组件, 目录如下：\",\"|-components |---AddItem.vue |---SubItem.vue |-App.vue \"]},\"603\":{\"h\":\"App.vue\",\"t\":[\"复制标签和样式, 引入AddItem和SubItem2个子组件显示\",\"<template> <div id=\\\"app\\\"> <h1>根组件</h1> <span>库存总数:</span> <input type=\\\"text\\\"> <div style=\\\"border:1px solid black; width: 300px;\\\"> <AddItem></AddItem> </div> <hr> <div style=\\\"border:1px solid black; width: 300px;\\\"> <SubItem></SubItem> </div> </div> </template> <script> import AddItem from '@/components/AddItem' import SubItem from '@/components/SubItem' export default { components: { AddItem, SubItem } } </script> <style> #app { width: 300px; margin: 20px auto; border:1px solid #ccc; padding:4px; } </style> \"]},\"604\":{\"h\":\"AddItem.vue\",\"t\":[\"<template> <div> <h3>AddItem组件</h3> <p>已知库存数: 0</p> <button>库存+1</button> </div> </template> <script> export default { } </script> \"]},\"605\":{\"h\":\"SubItem.vue\",\"t\":[\"<template> <div> <h3>SubItem组件</h3> <p>已知库存数: 0</p> <button>库存-1</button> </div> </template> <script> export default { } </script> \"]},\"606\":{\"h\":\"小结\",\"t\":[\"App下套用了AddItem和SubItem, 要在3个组件共享一个数据\"]},\"607\":{\"h\":\"4.vuex-store准备\"},\"608\":{\"h\":\"目标\",\"t\":[\"创建store仓库\",\"注入到Vue项目中\"]},\"609\":{\"h\":\"store概念\",\"t\":[\"每个 Vuex 应用的核心 store（仓库）, 包含5个核心概念\"]},\"610\":{\"h\":\"vuex目录\",\"t\":[\"和路由模块router/index.js - 类似, 维护项目目录的整洁，新建src/store/index.js文件\",\"当然， 这个步骤并不是必需的\"]},\"611\":{\"h\":\"使用步骤\",\"t\":[\"工程中 - 下载vuex\",\"yarn add vuex \",\"store/index.js - 创建定义导出store对象\",\"// 目标: 创建store仓库对象 // 1. 下载vuex: 终端命令(yarn add vuex) // 2. 引入vuex import Vue from 'vue' import Vuex from 'vuex' // 3. 注册 Vue.use(Vuex) // 4. 实例化store对象 const store = new Vuex.Store({}) // 5. 导出store对象 export default store \",\"main.js - 导入注入到Vue中\",\"import Vue from 'vue' import App from './App.vue' import store from '@/store' // 导入store对象 Vue.config.productionTip = false new Vue({ // 6. 注入到Vue实例中(确保组件this.$store使用) // this.$store = store store, render: h => h(App), }).$mount('#app') \",\"请再次回忆一下vue-router的用法，是不是很像？\"]},\"612\":{\"h\":\"小结\",\"t\":[\"vuex的核心是什么?\",\"store对象(包含5个核心属性)\",\"如何创建store对象?\",\"工程下载vuex模块\",\"store/index.js \",\"引入注册\",\"生成store对象导出\",\"main.js - 导入注入\"]},\"613\":{\"h\":\"5.vuex-state数据源\"},\"614\":{\"h\":\"目标\",\"t\":[\"定义state\",\"直接使用state\",\"辅助函数mapState\",\"state是唯一的公共数据源，统一存储\"]},\"615\":{\"h\":\"定义state\",\"t\":[\"在store/index.js定义state\",\"语法:\",\"/* const store = new Vuex.Store({ state: { 变量名: 初始值 } }) */ \",\"具体代码:\",\"const store = new Vuex.Store({ state: { count: 100 // 库存 } }) \"]},\"616\":{\"h\":\"使用state2种方式\",\"t\":[\"方式1: 组件内 - 直接使用\",\"语法:\",\"this.$store.state.变量名 \",\"方式2: 组件内 - 映射使用 (推荐)\",\"语法:\",\"// 1. 拿到mapState辅助函数 import { mapState } from 'vuex' export default { computed: { // 2. 把state里变量映射到计算属性中 ...mapState(['state里的变量名']) } } \"]},\"617\":{\"h\":\"AddItem直接用\",\"t\":[\"<template> <div> <h3>AddItem组件</h3> <p>已知库存数: {{ $store.state.count }}</p> <button>库存+1</button> </div> </template> \"]},\"618\":{\"h\":\"App.vue直接用\",\"t\":[\"计算属性count, 和输入框的v-model双向绑定\",\"<input type=\\\"text\\\" v-model=\\\"count\\\"> <script> export default { computed: { count: { set(){}, get(){ return this.$store.state.count } } } } </script> \"]},\"619\":{\"h\":\"SubItem映射用\",\"t\":[\"<template> <div> <h3>SubItem组件</h3> <p>已知库存数: {{ count }}</p> <button>库存-1</button> </div> </template> <script> // 需求1: 映射state到计算属性 // 1. 拿到辅助函数 mapState // 2. 在computed内, ...mapState(['state变量名']) // 3. 当计算属性使用 import { mapState } from 'vuex' // let r = mapState(['count']) // 提取store里的state叫count的变量 // console.log(r); // 返回值: {count: 函数体(return state里count的值)} export default { computed: { // 映射count, 得到对象展开, 合并到计算属性中 ...mapState(['count']) }, } </script> \",\"整个过程的示意图如下\"]},\"620\":{\"h\":\"注意\",\"t\":[\"state是响应式的, 只要state值变化, 页面上使用的地方会自动更新同步\"]},\"621\":{\"h\":\"小结\",\"t\":[\"state作用?\",\"定义全局状态数据源\",\"state如何定义?\",\"在store内, state:\",\"state的值如何用到具体vue组件内?\",\"直接使用 this.$store.state.变量名\",\"映射使用 ...mapState(['state的变量名'])\"]},\"622\":{\"h\":\"6.vuex-mutations定义-同步修改\"},\"623\":{\"h\":\"目标\",\"t\":[\"定义mutations\"]},\"624\":{\"h\":\"定义mutations\",\"t\":[\"mutations类似数据管家, 操作state里的数据\",\"在store/index.js定义mutations\",\"语法:\",\"/* const store = new Vuex.Store({ mutations: { 函数名 (state, 可选值) { // 同步修改state值代码 } } }) */ \",\"具体代码\",\"const store = new Vuex.Store({ state: { count: 100 // 库存 }, mutations: { addCount (state, value) { // 负责增加库存的管家 state.count += value }, subCount (state, value) { // 负责减少库存的管家 state.count -= value }, setCount (state, value) { // 负责直接修改库存的管家 state.count = value; } } }) \"]},\"625\":{\"h\":\"注意\",\"t\":[\"mutations是唯一能修改state的地方, 确保调试工具可以追踪变化\",\"mutations函数内, 只能写同步代码, 调试工具可追踪变化过程 \",\"因为调试工具要立刻产生一次记录, 所以必须是同步的\"]},\"626\":{\"h\":\"小结\",\"t\":[\"mutations里函数作用?\",\"负责修改state里的数据\",\"mutations只能写什么样的代码?\",\"同步流程的代码\"]},\"627\":{\"h\":\"7.vuex-mutations使用\"},\"628\":{\"h\":\"目标\",\"t\":[\"使用mutations2种方式\",\"mutations注意事项\"]},\"629\":{\"h\":\"使用mutations的2种方式\",\"t\":[\"方式1: 组件内 - 直接使用\",\"语法:\",\"this.$store.commit(\\\"mutations里的函数名\\\", 具体值) \",\"方式2: 组件内 - 映射使用\",\"语法:\",\"// 1. 拿到mapMutations辅助函数 import { mapMutations } from 'vuex' export default { methods: { // 2. 把mutations里方法映射到原地 ...mapMutations(['mutations里的函数名']) } } \"]},\"630\":{\"h\":\"AddItem直接用\",\"t\":[\"点击事件绑定\",\"提交mutations传入值\",\"<button @click=\\\"addFn\\\">库存+1</button> <script> export default { methods: { addFn(){ this.$store.commit('addCount', 1) } } } </script> \"]},\"631\":{\"h\":\"App.vue直接用\",\"t\":[\"触发计算属性的set方法\",\"提交mutations传入值\",\"<span>库存总数: </span> <input type=\\\"text\\\" v-model=\\\"count\\\"> <script> export default { computed: { count: { set(val){ this.$store.commit('setCount', val) // 把表单值提交给store下的mutations }, get(){ return this.$store.state.count } } } } </script> \"]},\"632\":{\"h\":\"SubItem映射用\",\"t\":[\"点击事件\",\"映射mutations的方法\",\"调用mutations方法传值\",\"<button @click=\\\"subFn\\\">库存-1</button> <script> // 需求2: 映射mutations到方法里 // 1. 拿到辅助函数 mapMutations // 2. 在methods内, ...mapMutations(['mutations函数名']) // 3. 当普通方法使用 import { mapMutations } from 'vuex' export default { methods: { ...mapMutations(['subCount']), subFn(){ this.subCount(1) } } } </script> \"]},\"633\":{\"h\":\"注意\",\"t\":[\"mutations函数上, 只能接收一个参数值, 如果传对个, 请传一个对象\"]},\"634\":{\"h\":\"小结\",\"t\":[\"mutations有哪2种使用方式?\",\"直接使用 this.$store.commit()\",\"映射使用 mapMutations把方法映射到组件内直接调用\",\"state, mutations, 视图组件, 3个关系是什么?\"]},\"635\":{\"h\":\"8.vuex-actions定义-异步修改\"},\"636\":{\"h\":\"目标\",\"t\":[\"定义actions\"]},\"637\":{\"h\":\"定义actions\",\"t\":[\"在store/index.js定义actions\",\"语法:\",\"/* const store = new Vuex.Store({ actions: { 函数名 (store, 可选值) { // 异步代码, 把结果commit给mutations给state赋值 } } }) */ \",\"具体代码:\",\"const store = new Vuex.Store({ // ...省略state和mutations此处 actions: { asyncAddCount(store, num){ setTimeout(() => { // 1秒后, 异步提交给add的mutations store.commit('addCount', num) }, 1000) }, asyncSubCount(store, num) { setTimeout(() => { // 1秒后, 异步提交给sub的mutations store.commit('subCount', num) }, 1000) } } }) \"]},\"638\":{\"h\":\"小结\",\"t\":[\"actions和mutations区别?\",\"mutations里同步修改state\",\"actions里放入异步操作\",\"actions是否能操作state?\",\"不建议, 要commit给mutations(为调试工具可追踪)\",\"actions和mutations里函数, 第一个形参分别是什么?\",\"mutations的是state\",\"actions的是store\"]},\"639\":{\"h\":\"9.vuex-actions使用\"},\"640\":{\"h\":\"目标\",\"t\":[\"使用actions\"]},\"641\":{\"h\":\"使用actions的2种方式\",\"t\":[\"方式1: 组件内 - 直接使用\",\"语法:\",\"this.$store.dispatch('actions函数名', 具体值) \",\"方式2: 组件内 - 映射使用\",\"语法:\",\"// 1. 拿到mapActions辅助函数 import { mapActions } from 'vuex' export default { methods: { // 2. 把actions里方法映射到原地 ...mapActions(['actions里的函数名']) } } \"]},\"642\":{\"h\":\"AddItem直接用\",\"t\":[\"点击事件\",\"dispatch触发action\",\"<button @click=\\\"asyncAddFn\\\">延迟1秒, 库存+5</button> <script> export default { methods: { asyncAddFn(){ this.$store.dispatch('asyncAddCount', 5) } } } </script> \"]},\"643\":{\"h\":\"SubItem映射用\",\"t\":[\"点击事件\",\"映射actions的方法\",\"调用actions的方法传值\",\"<button @click=\\\"asyncSubFn\\\">延迟1秒, 库存-5</button> <script> // 需求3: 映射actions到方法里 // 1. 拿到辅助函数 mapActions // 2. 在methods内, ...mapActions(['actions函数名']) // 3. 当普通方法使用 import { mapActions } from 'vuex' export default { methods: { ...mapActions(['asyncSubCount']), asyncSubFn(){ this.asyncSubCount(5) } } } </script> \"]},\"644\":{\"h\":\"小结\",\"t\":[\"actions使用方式?\",\"方式1: this.$store.dispatch('actions方法名字', 值)\",\"方式2: ...mapActions(['actions里的方法名']) 映射到原地使用\",\"视图组件, state, mutations, actions的关系是?\"]},\"645\":{\"h\":\"10.vuex-重构购物车-准备Store\"},\"646\":{\"h\":\"目标\",\"t\":[\"在现有项目如何集成vuex\"]},\"647\":{\"h\":\"store准备\",\"t\":[\"复制预习资料<shopcar-模板>到自己今天文件夹下\",\"下载vuex\",\"store/index.js创建导出store对象\",\"main.js把store引入, 然后注入到Vue实例\"]},\"648\":{\"h\":\"小结\",\"t\":[\"现有项目如何集成vuex\",\"下载vuex\",\"创建store对象并注入到Vue实例中\"]},\"649\":{\"h\":\"11.vuex-重构购物车-配置项(上午结束)\"},\"650\":{\"h\":\"目标\",\"t\":[\"准备state和mutations还有actions\"]},\"651\":{\"h\":\"配置项准备\",\"t\":[\"定义state - 保存商品列表数组\",\"state: { goodsList: [] // 列表 } \",\"定义mutations - 给state里变量赋值\",\"mutations: { setGoodsList(state, newList) { state.goodsList = newList } } \",\"定义actions - 异步请求数据提交给mutations\",\"actions: { async asyncGetGoodsList(store) { const url = `https://www.escook.cn/api/cart` // 发送异步请求 const res = await axios({ url: url }); store.commit('setGoodsList', res.data.list) // 提交mutation修改state中的数据 } } \"]},\"652\":{\"h\":\"App.vue使用vuex\",\"t\":[\"把vuex商品数组映射回来使用\",\"网络请求调用actions方法\",\"<script> import { mapState, mapActions } from 'vuex' export default { computed: { ...mapState({list: 'goodsList'}) // 自定义原地属性名list, 映射vuex里的goodsList变量值 }, created(){ this.asyncGetGoodsList() }, methods: { ...mapActions(['asyncGetGoodsList']), allFn(bool){ this.list.forEach(obj => obj.goods_state = bool) } } } </script> \"]},\"653\":{\"h\":\"小结\",\"t\":[\"mapState可以改变映射到原地的计算属性名吗?\",\"可以的, 格式...mapState({''计算属性名', 'state里要映射的变量名'})\"]},\"654\":{\"h\":\"12.vuex-getters定义-计算属性\"},\"655\":{\"h\":\"目标\",\"t\":[\"getters概念\",\"定义getters\"]},\"656\":{\"h\":\"getters概念\",\"t\":[\"vuex身上的全局状态-计算属性, 类似于computed\",\"getters 依赖于 state中原始数据的变化，并返回计算后的新数据\"]},\"657\":{\"h\":\"定义getters\",\"t\":[\"在store/index.js定义getters\",\"语法:\",\"/* const store = new Vuex.Store({ getters: { 计算属性名 (state) { return 值给计算属性 } } }) */ \",\"具体代码\",\"const store = new Vuex.Store({ // ...省略其他 getters: { allCount(state) { return state.goodsList.reduce((sum, obj) => { if (obj.goods_state === true) { // 选中商品才累加数量 sum += obj.goods_count; } return sum; }, 0) }, allPrice(state) { return state.goodsList.reduce((sum, obj) => { if (obj.goods_state) { sum += obj.goods_count * obj.goods_price } return sum; }, 0) } } }) \"]},\"658\":{\"h\":\"小结\",\"t\":[\"getters有什么用?\",\"vuex里的计算属性, 属于全局计算属性, 类似computed\"]},\"659\":{\"h\":\"13.vuex-getters使用\"},\"660\":{\"h\":\"目标\",\"t\":[\"组件内使用getters\"]},\"661\":{\"h\":\"使用getters的2种方式\",\"t\":[\"方式1: 组件内 - 直接使用\",\"语法:\",\"this.$store.getters.计算属性名 \",\"方式2: 组件内 - 映射使用\",\"语法:\",\"// 1. 拿到mapGetters辅助函数 import { mapGetters } from 'vuex' export default { computed: { // 2. 把getters里属性映射到原地 ...mapGetters(['getters里的计算属性名']) } } \"]},\"662\":{\"h\":\"MyFooter.vue里使用\",\"t\":[\"使用2种方式给计算属性值\",\"<script> import { mapGetters } from 'vuex' export default { computed: { allCount(){ return this.$store.getters.allCount; }, ...mapGetters(['allPrice']) } } </script> \"]},\"663\":{\"h\":\"小结\",\"t\":[\"getters如何使用?\",\"方式1: this.$store.getters.计算属性名\",\"方式2: ...mapGetters(['getters里计算属性名'])\"]},\"664\":{\"h\":\"14.vuex-modules定义-分模块\"},\"665\":{\"h\":\"目标\",\"t\":[\"为何要分模块\",\"modules定义\"]},\"666\":{\"h\":\"为何分模块\"},\"667\":{\"h\":\"代码上的对比\"},\"668\":{\"h\":\"创建modules模块对象\",\"t\":[\"新建store/modules/user.js\",\"新建store/modules/cart.js\",\"语法: 对象里包含5个核心概念, 只有state变成函数形式\",\"user.js - 用户模块对象\",\"// 用户模块对象 const userModule = { state(){ return { name: \\\"\\\", age: 0, sex: '' } }, mutations: {}, actions: {}, getters: {} } export default userModule \",\"cart.js - 购物车模块对象\",\"// 购物车模块对象 import axios from 'axios' const cartModule = { state() { return { goodsList: [] } }, mutations: { setGoodsList(state, newList) { state.goodsList = newList } }, actions: { async asyncGetGoodsList(store) { const url = `https://www.escook.cn/api/cart` // 发送异步请求 const res = await axios({ url: url }); store.commit('setGoodsList', res.data.list) // 提交mutation修改state中的数据 } }, getters: { allCount(state) { return state.goodsList.reduce((sum, obj) => { if (obj.goods_state === true) { // 选中商品才累加数量 sum += obj.goods_count; } return sum; }, 0) }, allPrice(state) { return state.goodsList.reduce((sum, obj) => { if (obj.goods_state) { sum += obj.goods_count * obj.goods_price } return sum; }, 0) } } } export default cartModule \"]},\"669\":{\"h\":\"定义modules\",\"t\":[\"语法:\",\"modules: { 模块名: 模块对象 } \",\"把2个模块对象, 引回到store里注册\",\"import Vue from 'vue' import Vuex from 'vuex' import cartModule from './modules/cart' import userModule from './modules/user' Vue.use(Vuex) const store = new Vuex.Store({ modules: { user: userModule, cart: cartModule } }) export default store \"]},\"670\":{\"h\":\"小结\",\"t\":[\"为什么分模块?\",\"集中式管理项目过大, 变量过多, 会导致state臃肿, 难以维护\",\"如何分模块?\",\"定义模块对象, state变成函数返回对象形式, 每个模块都有state/mutations/actions/getters/modules\",\"根store如何注册?\",\"modules里 { 模块名: 模块对象 }\"]},\"671\":{\"h\":\"15.分模块-影响state取值方式\"},\"672\":{\"h\":\"目的\",\"t\":[\"只要分模块, state取值方式改变, 其他暂时不变\"]},\"673\":{\"h\":\"state使用方式修改\",\"t\":[\"方式1: 组件内 - 直接使用\",\"原语法:\",\"this.$store.state.变量名 \",\"分模块后语法:\",\"this.$store.state.模块名.变量名 \",\"方式2: 组件内 - 映射使用\",\"原语法:\",\"...mapState(['state里变量名']) ...mapState({'变量名': \\\"state里变量名\\\"}) // 给映射过来的state起别的名字 \",\"分模块后语法:\",\"...mapState({ '变量名': state => state.模块名.变量名 }) \"]},\"674\":{\"h\":\"App.vue-修改\",\"t\":[\"computed: { // ...mapState({list: 'goodsList'}) // 本地属性名list, 映射vuex里的goodsList变量值 // 方式1: 直接用 // list(){ // 这个list就是组件内普通的计算属性名 // return this.$store.state.cart.goodsList // }. // 方式2: 映射方式改变 ...mapState({'list': state => state.cart.goodsList}) }, \"]},\"675\":{\"h\":\"小结\",\"t\":[\"分模块对什么有影响?\",\"对state的取值方式有影响, 对其他暂无影响\",\"state如何取值?\",\"在组件使用的时候, 要state.模块名.变量名\"]},\"676\":{\"h\":\"16.分模块-命名空间\"},\"677\":{\"h\":\"目标\",\"t\":[\"防止多个模块之间, mutations/actions/getters的名字冲突\"]},\"678\":{\"h\":\"开启命名空间\",\"t\":[\"在模块对象内设置namespaced: true\",\"const moduleShopCar = { namespaced: true, state () {}, mutations: {}, actions: {}, getters: {}, modules: {} } \"]},\"679\":{\"h\":\"state使用方式修改\",\"t\":[\"直接使用无变化: this.$store.state.模块名.变量名\",\"辅助函数需要遵守格式\",\"...mapState(\\\"模块名\\\", ['state变量名']) \"]},\"680\":{\"h\":\"mutations使用方式修改\",\"t\":[\"方式1: 组件内 - 直接使用\",\"原语法:\",\"this.$store.commit(\\\"mutations里的函数名\\\", 具体值) \",\"开命名空间后语法:\",\"this.$store.commit(\\\"模块名/mutations里的函数名\\\", 具体值) \",\"方式2: 组件内 - 映射使用\",\"原语法:\",\"...mapMutations(['mutations里方法名']) \",\"开命名空间后语法:\",\"...mapMutations(\\\"模块名\\\", ['mutations里方法名']) \"]},\"681\":{\"h\":\"actions使用方式修改\",\"t\":[\"方式1: 组件内 - 直接使用\",\"原语法:\",\"this.$store.dispatch(\\\"actions里的函数名\\\", 具体值) \",\"开命名空间后语法:\",\"this.$store.dispatch(\\\"模块名/actions里的函数名\\\", 具体值) \",\"方式2: 组件内 - 映射使用\",\"原语法:\",\"...mapActions(['actions里方法名']) \",\"开命名空间后语法:\",\"...mapActions(\\\"模块名\\\", ['actions里方法名']) \"]},\"682\":{\"h\":\"getters使用方式修改\",\"t\":[\"方式1: 组件内 - 直接使用\",\"原语法:\",\"this.$store.getters.计算属性名 \",\"开命名空间后语法:\",\"this.$store.getters['模块名/计算属性名'] \",\"方式2: 组件内 - 映射使用\",\"原语法:\",\"...mapGetters(['getters里计算属性名']) \",\"开命名空间后语法:\",\"...mapGetters(\\\"模块名\\\", ['getters里计算属性名']) \"]},\"683\":{\"h\":\"小结\",\"t\":[\"state和mutations, 在根store和开启命名空间里的区别?\",\"整个vuex的体系是?\"]},\"684\":{\"h\":\"扩展: 使用Devtools调试vuex数据\",\"t\":[\"优秀的调试工具可以使我们写程序事半功倍，最后我们再学习一下如果使用dev-tools来调试vuex中的数据，这也是数据可预测特性里不可缺少的一环\"]},\"685\":{\"h\":\"目标\",\"t\":[\"掌握dev-tools调试vuex\",\"理解什么是数据状态是可追踪的\"]},\"686\":{\"h\":\"Vue3-Vuex\",\"t\":[\"Vue3 中推荐使用 pinia, 更具体可以看 https://gitee.com/lidongxuwork/bilibili-matching-code/blob/master/Web%E5%89%8D%E7%AB%AF/5-%E6%A1%86%E6%9E%B6/V2.x/%E6%A6%82%E5%BF%B5/1-vuex%E4%BD%BF%E7%94%A8/0_%E7%AC%94%E8%AE%B0/vuex%E4%BD%BF%E7%94%A8.md#day01_vuex\"]},\"687\":{\"h\":\"Vuex介绍\"},\"688\":{\"h\":\"Vuex是什么\",\"t\":[\"Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理数据，以相应的规则保证状态以一种可预测的方式发生变化 \",\"优点：\",\"能够在Vuex中集中管理共享的数居，易于开发和后期维护\",\"能够高效地实现组件之间的数据共享，提高开发效率\",\"存储在vuex中的数据都是响应式的，能够实时保持数据与页面的同步\"]},\"689\":{\"h\":\"vuex为何学\",\"t\":[\"程序页面多, 数据变量多\",\"不同组件数据保持同步\",\"数据的修改都是可追踪\",\"一个户外商店有两名员工，张三和李四\",\"一天的早上，他们分别对帐篷的数量做了一次盘点，发现一共有三个帐篷\",\"张三卖出去俩个，他以为库存里还有一个\",\"李四卖出去一个，他以为库存里还有两个\",\"而事实上是，库存现在已经为零\",\"如果他们再接受客户的预订，就会出现库存不足的情况\",\"张三和李四因为没有保持库存的数量的同步导致了尴尬，这个就是所谓的数据保持同步\",\"店长需要知道, 谁卖出了多少个帐篷，这个行为我们称之为数据修改是可追踪的\",\"image-20210601212946879\"]},\"690\":{\"h\":\"vuex中存什么\",\"t\":[\"多个组件共享状态，才存储在vuex中\",\"某个组件中的私有数据，依旧存储在data中\",\"例如：\",\"登陆的用户名需要在首页, 个人中心, 结算页面使用, 用户名存在vuex中\",\"文章详情数据, 只有在文章详情页查看, 在自身data中声明\"]},\"691\":{\"h\":\"基本使用\",\"t\":[\"安装 vuex 依赖包\",\" npm install vuex --save \",\"导入\",\"import Vuex from 'vuex' app.use(Vuex) \",\"创建 store 对象\",\"const store = new Vuex.Store({ // state 中存放的就是全局共享的数据 state: { count: 0 } }) \",\"将 store 对象挂载到 vue 实例中\",\"new Vue({ el: '#app', render: h => h(App), router // 将创建的共享数据对象挂载到 Vue 实例中 // 所有的组件, 就可以直接从 store 中获取全局的数据 }).$mount('#app') \",\"// Vue3 import { createApp } from 'vue' import { createStore } from 'vuex' // 创建一个新的 store 实例 const store = createStore({ state () { return { count: 0 } }, mutations: { increment (state) { state.count++ } } }) const app = createApp({ /* 根组件 */ }) // 将 store 实例作为插件安装 app.use(store) \"]},\"692\":{\"h\":\"state\",\"t\":[\"state是唯一的公共数据源，统一存储\",\"// store/index.js import { createStore } from 'vuex' // 配置 Vuex const store = createStore({ state() { return { text: '我的博客 www.misterma.com', num: 12 } }, mutations: { changeText(state) { state.text = 'github https://github.com/changbin1997'; }, changeNum(state) { state.num ++; } } }); export default store \"]},\"693\":{\"h\":\"使用\",\"t\":[\"方式1: 组件内 - 直接使用\",\"this.$store.state.变量名 \",\"import {useStore} from 'vuex'; const store = useStore(); console.log(store.state.变量名); \",\"方式2: 组件内 - 映射使用 (推荐)\",\"import {computed} from 'vue'; const text = computed(() => store.state.text); const num = computed(() => store.state.num); \",\"state是响应式的, 只要state值变化, 页面上使用的地方会自动更新同步\"]},\"694\":{\"h\":\"mutations\",\"t\":[\"Vuex Mutations 则是用于修改状态的函数。在 Vuex 中，状态是通过 store 对象进行管理的，而 Mutations 则是通过提交（commit）来执行的。每个 Mutation 都是一个纯函数，它接收 state 对象作为第一个参数，并且可以接收额外的参数作为载荷（payload）。Mutation 函数用于同步地改变状态，它们在开发过程中可以帮助我们跟踪状态的变化。\",\"在 Vue 3 中，Mutations 并不是唯一能修改 state 的地方。实际上，在 Vue 3 中，可以通过使用 Mutations、Actions 或直接操作 state 来修改状态。这是与 Vue 2 中的 Vuex 不同的地方。\",\"在 Vue 3 中，可以使用 Mutations 来同步地改变状态，Actions 用于处理异步操作并提交 Mutations，而直接操作 state 则是为了简单的状态变化。这种方式使得状态管理更加灵活，并且能够更好地处理异步操作。\",\"因此，在 Vue 3 中，Mutations 并不是唯一能修改 state 的地方，而是状态管理中的一部分，开发者可以根据具体情况选择合适的方式来修改状态。\",\"以下是一个 mutations 与 store 结合的例子\",\"<!-- App.vue --> <template> <div> <!--输出 store 配置的 text 和 num--> <p>{{ store.state.text }}</p> <p>{{ store.state.num }}</p> <button type=\\\"button\\\" @click=\\\"buttonClick\\\">更改 text 和 num</button> </div> </template> <script setup> import {useStore} from 'vuex'; const store = useStore(); function buttonClick() { // 更改 text 和 num store.commit('changeText'); store.commit('changeNum'); } </script> \",\"// store/index.js import { createRouter, createWebHistory } from 'vue-router' const routes = [ { path: '/login', name: 'login', component: () => import('@/components/login.vue') }, { path: '/main', name: 'main', component: () => import('@/components/main.vue') } ] const router = createRouter({ history: createWebHistory(), routes }) export default router \"]},\"695\":{\"h\":\"actions\",\"t\":[\"在 Vue 3 中，使用 Vuex 的 Actions 是一种处理异步操作并提交 Mutations 的方式。Actions 允许您在应用程序中执行异步操作，例如从服务器获取数据，然后再提交 Mutations 来修改状态。以下是在 Vue 3 中使用 Vuex Actions 的基本方法：\",\"const store = new Vuex.Store({ // ...省略state和mutations此处 actions: { asyncAddCount(store, num){ setTimeout(() => { // 1秒后, 异步提交给add的mutations store.commit('addCount', num) }, 1000) }, asyncSubCount(store, num) { setTimeout(() => { // 1秒后, 异步提交给sub的mutations store.commit('subCount', num) }, 1000) } } }) \"]},\"696\":{\"h\":\"getters\",\"t\":[\"Vuex Getters 是用于从 store 中获取状态的函数。Getters 允许您在 store 中计算状态或过滤数据，并且可以在组件中像计算属性一样使用。以下是在 Vue 3 中定义和使用 Vuex Getters 的基本方法：\",\"const store = new Vuex.Store({ // ...省略其他 getters: { allCount(state) { return state.goodsList.reduce((sum, obj) => { if (obj.goods_state === true) { // 选中商品才累加数量 sum += obj.goods_count; } return sum; }, 0) }, allPrice(state) { return state.goodsList.reduce((sum, obj) => { if (obj.goods_state) { sum += obj.goods_count * obj.goods_price } return sum; }, 0) } } }) \"]},\"697\":{\"h\":\"用getters的2种方式\",\"t\":[\"方式1: 组件内 - 直接使用\",\"语法:\",\"this.$store.getters.计算属性名 \",\"方式2: 组件内 - 映射使用\",\"语法:\",\"// 1. 拿到mapGetters辅助函数 import { mapGetters } from 'vuex' export default { computed: { // 2. 把getters里属性映射到原地 ...mapGetters(['getters里的计算属性名']) } } \"]},\"698\":{\"h\":\"MyFooter.vue里使用\",\"t\":[\"使用2种方式给计算属性值\",\"<script> import { mapGetters } from 'vuex' export default { computed: { allCount(){ return this.$store.getters.allCount; }, ...mapGetters(['allPrice']) } } </script> \"]},\"699\":{\"h\":\"Harmony\"},\"700\":{\"h\":\"Web\"},\"701\":{\"h\":\"Js\"},\"702\":{\"h\":\"Uni App\"},\"703\":{\"h\":\"We Chat\"},\"704\":{\"h\":\"Animation\"},\"705\":{\"h\":\"Learn\"},\"706\":{\"h\":\"Vue\"},\"707\":{\"h\":\"Cli\"},\"708\":{\"h\":\"Components\"},\"709\":{\"h\":\"Essential\"},\"710\":{\"h\":\"Router\"},\"711\":{\"h\":\"Store\"}},\"dirtCount\":0,\"index\":[[\"存储在vuex中的数据都是响应式的\",{\"1\":{\"688\":1}}],[\"存在比较大的问题是多个逻辑可能是在不同的地方\",{\"1\":{\"521\":1}}],[\"存在重复的代码\",{\"1\":{\"470\":1}}],[\"易于开发和后期维护\",{\"1\":{\"688\":1}}],[\"易维护性和可扩展性\",{\"1\":{\"33\":1}}],[\"掌握dev\",{\"1\":{\"685\":1}}],[\"辅助函数需要遵守格式\",{\"1\":{\"679\":1}}],[\"辅助函数mapstate\",{\"1\":{\"614\":1}}],[\"影响state取值方式\",{\"0\":{\"671\":1}}],[\"难以维护\",{\"1\":{\"670\":1}}],[\"购物车模块对象\",{\"1\":{\"668\":2}}],[\"购物车案例\",{\"1\":{\"587\":1}}],[\"属于全局计算属性\",{\"1\":{\"658\":1}}],[\"属性来定义\",{\"1\":{\"584\":1}}],[\"属性来强制过渡\",{\"1\":{\"570\":1}}],[\"属性来控制组件的样式\",{\"1\":{\"150\":1}}],[\"属性传值\",{\"1\":{\"547\":1}}],[\"属性的\",{\"1\":{\"540\":1,\"543\":1}}],[\"属性的值应该是你想要关联的表单控件的\",{\"1\":{\"483\":1}}],[\"属性的简写方式\",{\"1\":{\"215\":1}}],[\"属性被用来关联\",{\"1\":{\"483\":1}}],[\"属性直接绑定一个对象\",{\"0\":{\"446\":1}}],[\"属性名\",{\"1\":{\"445\":1}}],[\"属性名称都是固定的\",{\"1\":{\"445\":1}}],[\"属性中被维护的\",{\"1\":{\"355\":1}}],[\"属性类型默认为any\",{\"1\":{\"304\":1,\"320\":1}}],[\"属性是\",{\"1\":{\"175\":1}}],[\"属性是一个简写形式\",{\"1\":{\"159\":1}}],[\"属性为\",{\"1\":{\"162\":1}}],[\"属性为对象时\",{\"1\":{\"44\":2}}],[\"属性说明\",{\"1\":{\"143\":1}}],[\"属性会同时变更\",{\"1\":{\"111\":1}}],[\"属性上\",{\"1\":{\"111\":1,\"276\":1,\"328\":1}}],[\"属性双向绑定到了组件内输入框的\",{\"1\":{\"111\":1}}],[\"属性\",{\"1\":{\"93\":1,\"121\":1,\"123\":1,\"125\":1,\"126\":1,\"132\":1,\"139\":1,\"142\":1,\"143\":2,\"144\":1,\"146\":2,\"155\":1,\"343\":1,\"358\":1,\"547\":2}}],[\"属性绑定\",{\"1\":{\"65\":1}}],[\"属性方法\",{\"1\":{\"3\":2}}],[\"属性方法等共同构成了ui开发的主体\",{\"1\":{\"1\":1}}],[\"负责修改state里的数据\",{\"1\":{\"626\":1}}],[\"负责直接修改库存的管家\",{\"1\":{\"624\":1}}],[\"负责减少库存的管家\",{\"1\":{\"624\":1}}],[\"负责增加库存的管家\",{\"1\":{\"624\":1}}],[\"得到对象展开\",{\"1\":{\"619\":1}}],[\"映射方式改变\",{\"1\":{\"674\":1}}],[\"映射vuex里的goodslist变量值\",{\"1\":{\"652\":1,\"674\":1}}],[\"映射到原地使用\",{\"1\":{\"644\":1}}],[\"映射actions到方法里\",{\"1\":{\"643\":1}}],[\"映射actions的方法\",{\"1\":{\"643\":1}}],[\"映射mutations到方法里\",{\"1\":{\"632\":1}}],[\"映射mutations的方法\",{\"1\":{\"632\":1}}],[\"映射count\",{\"1\":{\"619\":1}}],[\"映射state到计算属性\",{\"1\":{\"619\":1}}],[\"映射使用\",{\"1\":{\"616\":1,\"621\":1,\"629\":1,\"634\":1,\"641\":1,\"661\":1,\"673\":1,\"680\":1,\"681\":1,\"682\":1,\"693\":1,\"697\":1}}],[\"拿到mapgetters辅助函数\",{\"1\":{\"661\":1,\"697\":1}}],[\"拿到mapactions辅助函数\",{\"1\":{\"641\":1}}],[\"拿到mapmutations辅助函数\",{\"1\":{\"629\":1}}],[\"拿到mapstate辅助函数\",{\"1\":{\"616\":1}}],[\"拿到辅助函数\",{\"1\":{\"619\":1,\"632\":1,\"643\":1}}],[\"拿到render函数\",{\"1\":{\"390\":1,\"400\":1}}],[\"统一存储\",{\"1\":{\"614\":1,\"692\":1}}],[\"统一导出usestore方法\",{\"1\":{\"585\":1}}],[\"终端命令\",{\"1\":{\"611\":1}}],[\"仓库\",{\"1\":{\"609\":1}}],[\"清空欢迎界面\",{\"1\":{\"602\":1}}],[\"清除副作用\",{\"0\":{\"376\":1}}],[\"嵌入在app\",{\"1\":{\"601\":1}}],[\"嵌套路由映射\",{\"1\":{\"539\":1}}],[\"嵌套对象的属性不会被设置为只读\",{\"1\":{\"354\":1}}],[\"嵌套对象的属性不会被设置为响应式\",{\"1\":{\"354\":1}}],[\"嵌套对象的属性也是只读的\",{\"1\":{\"354\":1}}],[\"嵌套对象的属性也会被设置为响应式\",{\"1\":{\"354\":1}}],[\"嵌套的顺序非常重要\",{\"1\":{\"284\":1}}],[\"嵌套规则\",{\"1\":{\"268\":1}}],[\"嵌套类型以及数组中的对象属性无法触发视图更新\",{\"1\":{\"38\":1}}],[\"唯一修改state地方\",{\"1\":{\"597\":1}}],[\"唯一不同的是\",{\"1\":{\"553\":1}}],[\"含义\",{\"1\":{\"597\":1}}],[\"含文件名\",{\"1\":{\"141\":1}}],[\"固定\",{\"1\":{\"597\":2}}],[\"知道vuex要学习什么\",{\"1\":{\"596\":1}}],[\"知道在哪里渲染它们\",{\"1\":{\"540\":1}}],[\"登陆的用户名需要在首页\",{\"1\":{\"593\":1,\"690\":1}}],[\"登录成功之后\",{\"1\":{\"578\":1}}],[\"登录状态\",{\"1\":{\"567\":1}}],[\"登录拦截\",{\"0\":{\"567\":1}}],[\"图示关系\",{\"0\":{\"598\":1}}],[\"图示\",{\"1\":{\"592\":1}}],[\"图片等\",{\"1\":{\"214\":1}}],[\"图片\",{\"1\":{\"213\":1,\"474\":1,\"482\":1}}],[\"图片img文件的加载\",{\"1\":{\"205\":1}}],[\"图片路径\",{\"1\":{\"143\":1}}],[\"图片通常只在水平或垂直方向是完整的\",{\"1\":{\"132\":1}}],[\"图片裁剪\",{\"1\":{\"132\":1}}],[\"图片的数据源\",{\"1\":{\"9\":1}}],[\"图片组件\",{\"1\":{\"9\":1}}],[\"店长需要知道\",{\"1\":{\"592\":1,\"689\":1}}],[\"李四卖出去一个\",{\"1\":{\"592\":1,\"689\":1}}],[\"李银河\",{\"1\":{\"494\":1}}],[\"程序页面多\",{\"1\":{\"592\":1,\"689\":1}}],[\"边讲边练\",{\"0\":{\"587\":1}}],[\"今日学习目标\",{\"0\":{\"587\":1}}],[\"随便建立两个store\",{\"1\":{\"585\":1}}],[\"随着前端框架\",{\"1\":{\"538\":1}}],[\"随着ajax的出现\",{\"1\":{\"537\":1}}],[\"随着组件复杂度的增高\",{\"1\":{\"512\":1}}],[\"随着js代码日益膨胀\",{\"1\":{\"195\":1}}],[\"随着harmonyos的演进\",{\"1\":{\"32\":1}}],[\"买了\",{\"1\":{\"583\":1}}],[\"成年人\",{\"1\":{\"583\":2}}],[\"持久化到本地存储\",{\"1\":{\"582\":1}}],[\"持续时间和速度曲线\",{\"1\":{\"159\":2}}],[\"移除一个元素或是做\",{\"1\":{\"582\":1}}],[\"移除了一些特性\",{\"1\":{\"520\":1}}],[\"移除了实例上的\",{\"1\":{\"520\":1}}],[\"张三卖出去俩个\",{\"1\":{\"592\":1,\"689\":1}}],[\"张三和李四因为没有保持库存的数量的同步导致了尴尬\",{\"1\":{\"592\":1,\"689\":1}}],[\"张三和李四\",{\"1\":{\"592\":1,\"689\":1}}],[\"张三\",{\"1\":{\"582\":1}}],[\"追踪\",{\"1\":{\"580\":1}}],[\"码\",{\"1\":{\"578\":1}}],[\"密\",{\"1\":{\"578\":1}}],[\"账号密码错误\",{\"1\":{\"577\":1}}],[\"想象一下\",{\"1\":{\"573\":1}}],[\"想要使用另一个\",{\"1\":{\"584\":1}}],[\"想要使用typescript\",{\"1\":{\"241\":1}}],[\"想要页面滚到顶部\",{\"1\":{\"571\":1}}],[\"想要在你的路径组件上使用转场\",{\"1\":{\"570\":1}}],[\"想要导航到不同的\",{\"1\":{\"550\":1}}],[\"始终在元素\",{\"1\":{\"571\":1}}],[\"始终滚动到顶部\",{\"1\":{\"571\":1}}],[\"位置对象\",{\"1\":{\"571\":1}}],[\"滚动到锚点\",{\"1\":{\"571\":1}}],[\"滚动行为\",{\"0\":{\"571\":1}}],[\"滚动条的长度是预估的\",{\"1\":{\"124\":1}}],[\"幸运的是\",{\"1\":{\"570\":1}}],[\"谁卖出了多少个帐篷\",{\"1\":{\"592\":1,\"689\":1}}],[\"谁可以访问路由等\",{\"1\":{\"569\":1}}],[\"谁先谁在前面\",{\"1\":{\"421\":1}}],[\"白名单\",{\"1\":{\"568\":1}}],[\"权限判断\",{\"0\":{\"568\":1}}],[\"留在原地不跳转路由\",{\"1\":{\"567\":1}}],[\"阻止路由跳转\",{\"1\":{\"567\":1}}],[\"阻碍我们编程的效率\",{\"1\":{\"527\":1}}],[\"决定是否跳转\",{\"1\":{\"567\":1}}],[\"决定页面文件的路径\",{\"1\":{\"86\":1}}],[\"场景\",{\"1\":{\"567\":1}}],[\"场景丰富\",{\"1\":{\"78\":1}}],[\"确认的\",{\"1\":{\"566\":1}}],[\"确保调试工具可以追踪变化\",{\"1\":{\"625\":1}}],[\"确保组件this\",{\"1\":{\"611\":1}}],[\"确保\",{\"1\":{\"559\":1}}],[\"确保在\",{\"1\":{\"510\":1}}],[\"确保子组件只触发被允许的自定义事件\",{\"1\":{\"311\":1,\"327\":1}}],[\"判断用户登陆了才能去\",{\"1\":{\"567\":1}}],[\"判断是否可以正常跳转\",{\"1\":{\"566\":1}}],[\"判断值是否是一个\",{\"1\":{\"358\":1}}],[\"判断值是否是一个ref对象\",{\"1\":{\"358\":1}}],[\"部分以获得更多细节\",{\"1\":{\"564\":1}}],[\"部分深入了解该项目的设计理念\",{\"1\":{\"178\":1}}],[\"守卫中传给\",{\"1\":{\"565\":1}}],[\"守卫\",{\"1\":{\"561\":2,\"563\":1,\"564\":1,\"565\":4}}],[\"守卫是异步解析执行\",{\"1\":{\"559\":1}}],[\"讨论将其移除\",{\"1\":{\"559\":1}}],[\"❗️\",{\"1\":{\"559\":1}}],[\"静默失败\",{\"1\":{\"552\":1}}],[\"静态站点生成\",{\"1\":{\"531\":1}}],[\"静态模块打包工具\",{\"1\":{\"204\":1}}],[\"静态资源将处理成esm模块返回\",{\"1\":{\"198\":1}}],[\"静态资源加载\",{\"0\":{\"198\":1}}],[\"静态的样式统一写到\",{\"1\":{\"150\":1}}],[\"静态初始渲染缓存\",{\"0\":{\"117\":1}}],[\"条记录\",{\"1\":{\"552\":1}}],[\"条件渲染\",{\"0\":{\"104\":1,\"451\":1},\"1\":{\"106\":1}}],[\"条件渲染可根据应用的不同状态\",{\"1\":{\"1\":1}}],[\"横跨历史\",{\"0\":{\"552\":1}}],[\"横向滚动\",{\"1\":{\"124\":1}}],[\"横向滚动需打开\",{\"1\":{\"124\":1}}],[\"栈添加一个新的记录\",{\"1\":{\"550\":1}}],[\"片段之间的字符\",{\"1\":{\"548\":1}}],[\"捕获所有路由或\",{\"0\":{\"548\":1}}],[\"激活时类名\",{\"1\":{\"547\":1}}],[\"替代\",{\"1\":{\"547\":2}}],[\"替代a标签\",{\"1\":{\"547\":1}}],[\"替换当前位置\",{\"0\":{\"553\":1}}],[\"替换数组的方法\",{\"1\":{\"459\":1}}],[\"替换\",{\"1\":{\"255\":1}}],[\"替换为\",{\"1\":{\"65\":1}}],[\"号后面的\",{\"1\":{\"547\":1}}],[\"绕过路径排序\",{\"1\":{\"546\":1}}],[\"匹配成功\",{\"1\":{\"557\":3}}],[\"匹配路由\",{\"1\":{\"554\":1}}],[\"匹配路径\",{\"1\":{\"544\":1}}],[\"匹配模式\",{\"1\":{\"544\":1}}],[\"适用于不需要服务端支持的单页应用\",{\"1\":{\"540\":1}}],[\"适合前端新手\",{\"1\":{\"183\":1}}],[\"细致的导航控制\",{\"1\":{\"539\":1}}],[\"细粒度的响应性系统为基础的\",{\"1\":{\"347\":1}}],[\"核心概念\",{\"0\":{\"597\":1}}],[\"核心深度集成\",{\"1\":{\"539\":1}}],[\"核心逻辑完全一致\",{\"1\":{\"503\":1}}],[\"官网地址\",{\"1\":{\"597\":1}}],[\"官网\",{\"1\":{\"539\":1}}],[\"官方推荐的插件\",{\"1\":{\"531\":1}}],[\"官方文档有这个描述\",{\"1\":{\"529\":1}}],[\"官方并没有给出直接的概念解释\",{\"1\":{\"468\":1}}],[\"官方的解释对于初学者来说并不好理解\",{\"1\":{\"460\":1}}],[\"官方\",{\"1\":{\"197\":1}}],[\"官方组件和api示例\",{\"1\":{\"67\":1}}],[\"交给服务器来进行处理\",{\"1\":{\"536\":1}}],[\"交流\",{\"1\":{\"514\":1}}],[\"路由记录可以是嵌套的\",{\"1\":{\"569\":1}}],[\"路由记录\",{\"1\":{\"569\":1}}],[\"路由原信息\",{\"0\":{\"569\":1}}],[\"路由跳转\",{\"1\":{\"567\":1}}],[\"路由跳转之前\",{\"1\":{\"566\":1}}],[\"路由守卫\",{\"1\":{\"567\":1}}],[\"路由对象信息\",{\"1\":{\"567\":2}}],[\"路由对象\",{\"1\":{\"566\":1,\"571\":1}}],[\"路由对应的地址\",{\"1\":{\"559\":1,\"566\":1}}],[\"路由案例\",{\"0\":{\"566\":1}}],[\"路由导航时\",{\"1\":{\"561\":1}}],[\"路由独享的守卫\",{\"0\":{\"561\":1}}],[\"路由嵌套\",{\"0\":{\"557\":1}}],[\"路由数组里\",{\"1\":{\"551\":1}}],[\"路由名\",{\"1\":{\"551\":1}}],[\"路由路径\",{\"1\":{\"551\":1}}],[\"路由将导航到路径\",{\"1\":{\"546\":1}}],[\"路由\",{\"0\":{\"548\":1},\"1\":{\"540\":1}}],[\"路由匹配到的组件将渲染在这里\",{\"1\":{\"540\":1,\"543\":1}}],[\"路由出口\",{\"1\":{\"540\":1,\"543\":1}}],[\"路由初体验\",{\"0\":{\"540\":1}}],[\"路由参数\",{\"1\":{\"539\":1}}],[\"路由的概念在软件工程中出现\",{\"1\":{\"535\":1}}],[\"路由器通过这个映射表来确定数据包的传输路径\",{\"1\":{\"535\":1}}],[\"路由器的主要功能是维护一个映射表\",{\"1\":{\"535\":1}}],[\"路由其实是网络工程中的一个术语\",{\"1\":{\"535\":1}}],[\"路由使用\",{\"0\":{\"533\":1,\"556\":1}}],[\"路径对象\",{\"1\":{\"554\":1}}],[\"路径参数\",{\"1\":{\"544\":3,\"548\":2}}],[\"路径和资源\",{\"1\":{\"263\":1}}],[\"路径是\",{\"1\":{\"201\":1}}],[\"路径\",{\"1\":{\"68\":1,\"110\":1,\"141\":1,\"547\":1,\"578\":1}}],[\"路径前缀的字符串\",{\"1\":{\"9\":1}}],[\"英文\",{\"1\":{\"531\":1}}],[\"英语\",{\"1\":{\"48\":3}}],[\"虽然官方推荐是一个函数\",{\"1\":{\"528\":1}}],[\"虽然这套\",{\"1\":{\"347\":1}}],[\"虽然这并不常用\",{\"1\":{\"164\":1}}],[\"机器\",{\"1\":{\"525\":1}}],[\"读音\",{\"1\":{\"518\":1}}],[\"读取state\",{\"1\":{\"582\":1}}],[\"读取时\",{\"1\":{\"236\":1}}],[\"读取文件\",{\"1\":{\"197\":1}}],[\"读取真实模块路径内容\",{\"1\":{\"197\":1}}],[\"邂逅vue3开发\",{\"0\":{\"516\":1}}],[\"隐式绑定\",{\"1\":{\"529\":1}}],[\"隐式的跨\",{\"1\":{\"514\":1}}],[\"隐藏<\",{\"1\":{\"154\":1,\"167\":1,\"168\":1,\"171\":1}}],[\"隐藏页面内容\",{\"1\":{\"142\":1,\"146\":1}}],[\"造成命名冲突\",{\"1\":{\"514\":1}}],[\"抽取组合式函数不仅是为了复用\",{\"1\":{\"512\":1}}],[\"输入参数\",{\"0\":{\"508\":1}}],[\"输出如下\",{\"1\":{\"473\":1}}],[\"输出帮助内容\",{\"1\":{\"267\":1}}],[\"输出生成的目标代码\",{\"1\":{\"247\":1}}],[\"输出\",{\"1\":{\"213\":1,\"247\":1,\"694\":1}}],[\"输出文件的路径\",{\"1\":{\"213\":1}}],[\"输出是path\",{\"1\":{\"198\":1}}],[\"约定和最佳实践\",{\"0\":{\"506\":1}}],[\"约是tsc速度的20～30倍\",{\"1\":{\"200\":1}}],[\"期间访问的任何依赖项\",{\"1\":{\"505\":1}}],[\"期望滚动到哪个的位置\",{\"1\":{\"571\":1}}],[\"期望\",{\"1\":{\"437\":1}}],[\"期望的行为应该是等待所有内部元素的过渡完成\",{\"1\":{\"163\":1}}],[\"呢\",{\"1\":{\"505\":1}}],[\"集中式管理项目过大\",{\"1\":{\"670\":1}}],[\"集中管理\",{\"1\":{\"594\":1}}],[\"集合命名为组合式\",{\"1\":{\"503\":1}}],[\"集成了前端生态中最好的工具\",{\"1\":{\"266\":1}}],[\"集成度更高\",{\"1\":{\"180\":1}}],[\"鼠标跟踪器示例\",{\"0\":{\"503\":1}}],[\"鼠标移动\",{\"1\":{\"448\":1}}],[\"考虑将相关逻辑提取到组合式函数中\",{\"1\":{\"500\":1}}],[\"几乎和\",{\"1\":{\"500\":1}}],[\"几个字\",{\"1\":{\"117\":1}}],[\"混合\",{\"1\":{\"496\":1}}],[\"告诉你是什么操作触发了重新渲染\",{\"1\":{\"494\":1}}],[\"告诉你哪个操作跟踪了组件以及该操作的目标对象和键\",{\"1\":{\"494\":1}}],[\"卸载完成\",{\"1\":{\"494\":1}}],[\"卸载之前\",{\"1\":{\"494\":1}}],[\"卸载等一系列的过程\",{\"1\":{\"492\":1}}],[\"准备state和mutations还有actions\",{\"1\":{\"650\":1}}],[\"准备store\",{\"0\":{\"645\":1}}],[\"准备创建\",{\"1\":{\"494\":1}}],[\"准备打包上线的时候\",{\"1\":{\"239\":1}}],[\"务器数据\",{\"1\":{\"492\":1}}],[\"拼字阶段的状态例外\",{\"1\":{\"486\":1}}],[\"足球\",{\"1\":{\"483\":1}}],[\"¥\",{\"1\":{\"480\":2}}],[\"书籍购物车\",{\"1\":{\"480\":1}}],[\"理解什么是数据状态是可追踪的\",{\"1\":{\"685\":1}}],[\"理解插槽的另一种方式是和下面的\",{\"1\":{\"288\":1}}],[\"理由如上\",{\"1\":{\"477\":1}}],[\"旧值\",{\"1\":{\"476\":1}}],[\"去进行一些逻辑的处理\",{\"1\":{\"476\":1}}],[\"去获取\",{\"1\":{\"349\":1}}],[\"思路三\",{\"1\":{\"469\":1}}],[\"思路二\",{\"1\":{\"469\":1}}],[\"思路一\",{\"1\":{\"469\":1}}],[\"记住\",{\"1\":{\"573\":1}}],[\"记得要通过\",{\"1\":{\"540\":1}}],[\"记得用引号括起来\",{\"1\":{\"442\":2}}],[\"记录一段文字\",{\"1\":{\"469\":1}}],[\"希望它们拼接之后在界面上显示\",{\"1\":{\"469\":1}}],[\"希望组件不是挂载在当前组件树上的\",{\"1\":{\"418\":1}}],[\"希望组件显示的是一个按钮\",{\"1\":{\"286\":1}}],[\"→\",{\"1\":{\"464\":2}}],[\"算法导论\",{\"1\":{\"480\":1}}],[\"算法一定存在这样一个过程\",{\"1\":{\"464\":1}}],[\"算法是指生成更新补丁的方式\",{\"1\":{\"464\":1}}],[\"树变化后\",{\"1\":{\"464\":1}}],[\"真实\",{\"1\":{\"462\":1}}],[\"真实开发中我们必然不会直接使用命令行工具来对css进行处理\",{\"1\":{\"222\":1}}],[\"虚拟\",{\"0\":{\"462\":1},\"1\":{\"462\":1,\"494\":2}}],[\"销毁key不存在的元素\",{\"1\":{\"460\":1}}],[\"少年派\",{\"1\":{\"457\":1,\"459\":1}}],[\"教父\",{\"1\":{\"457\":1,\"459\":1}}],[\"盗梦空间\",{\"1\":{\"457\":1,\"459\":1}}],[\"星际穿越\",{\"1\":{\"457\":1,\"459\":1}}],[\"遍历数组\",{\"1\":{\"457\":1}}],[\"遍历对象\",{\"0\":{\"54\":1},\"1\":{\"457\":1}}],[\"二个参数\",{\"1\":{\"457\":1}}],[\"索引项index是在后面的\",{\"1\":{\"457\":1}}],[\"键盘事件等等\",{\"1\":{\"447\":1}}],[\"拖拽\",{\"1\":{\"447\":1}}],[\"呵呵呵呵\",{\"1\":{\"440\":1}}],[\"赋值\",{\"1\":{\"437\":1}}],[\"带\",{\"1\":{\"550\":1}}],[\"带查询参数\",{\"1\":{\"550\":1}}],[\"带参数的动态路由匹配\",{\"0\":{\"544\":1}}],[\"带参数\",{\"1\":{\"437\":1}}],[\"带有路径的对象\",{\"1\":{\"550\":1}}],[\"带有默认值的对象\",{\"1\":{\"306\":1,\"322\":1}}],[\"带有默认值的数字\",{\"1\":{\"306\":1,\"322\":1}}],[\"带有\",{\"1\":{\"271\":1}}],[\"配合js的编程式导航跳转\",{\"1\":{\"551\":1}}],[\"配合像\",{\"1\":{\"436\":1}}],[\"配置的\",{\"1\":{\"694\":1}}],[\"配置项准备\",{\"0\":{\"651\":1}}],[\"配置项\",{\"0\":{\"649\":1},\"1\":{\"597\":2}}],[\"配置项指定\",{\"1\":{\"143\":1}}],[\"配置只是另一个路由数组\",{\"1\":{\"557\":1}}],[\"配置来完成\",{\"1\":{\"554\":1}}],[\"配置参数注入路由\",{\"1\":{\"540\":1}}],[\"配置参数\",{\"1\":{\"540\":1}}],[\"配置选项\",{\"0\":{\"477\":1}}],[\"配置了\",{\"1\":{\"264\":4}}],[\"配置代理等\",{\"1\":{\"252\":1}}],[\"配置中的每个路由对象为\",{\"1\":{\"569\":1}}],[\"配置中添加一个别名\",{\"1\":{\"250\":1}}],[\"配置中\",{\"1\":{\"243\":1}}],[\"配置处理图片的rule\",{\"1\":{\"224\":1}}],[\"配置分离\",{\"1\":{\"222\":1}}],[\"配置分享\",{\"1\":{\"128\":1}}],[\"配置方式表示的意思是在我们的webpack\",{\"1\":{\"215\":1}}],[\"配置方式\",{\"1\":{\"215\":2}}],[\"配置插件来执行额外的任务\",{\"1\":{\"213\":1}}],[\"配置加载器来处理不同类型的文件\",{\"1\":{\"213\":1}}],[\"配置文件位置选择\",{\"1\":{\"268\":1}}],[\"配置文件\",{\"0\":{\"211\":1,\"249\":1}}],[\"配置复杂度高\",{\"1\":{\"180\":1}}],[\"配置部分\",{\"1\":{\"178\":1}}],[\"配置是否将\",{\"1\":{\"139\":1}}],[\"配置自定义组件代码按需注入\",{\"1\":{\"139\":1}}],[\"配置信息\",{\"0\":{\"259\":1},\"1\":{\"136\":1}}],[\"配置段中添加这个配置\",{\"1\":{\"117\":1}}],[\"配置\",{\"0\":{\"61\":1,\"260\":1,\"394\":1},\"1\":{\"118\":1,\"213\":1,\"250\":1,\"272\":3,\"692\":1}}],[\"配置eslint代码检查\",{\"0\":{\"59\":1}}],[\"配置目录\",{\"1\":{\"26\":1}}],[\"配置目录中不要出现中文\",{\"1\":{\"26\":1}}],[\"配置开发环境\",{\"1\":{\"26\":1}}],[\"计算属性名\",{\"1\":{\"653\":1,\"657\":1,\"661\":1,\"663\":1,\"682\":2,\"697\":1}}],[\"计算属性count\",{\"1\":{\"618\":1}}],[\"计算属性在大多数情况下\",{\"1\":{\"474\":1}}],[\"计算属性的\",{\"0\":{\"474\":1}}],[\"计算属性的用法\",{\"1\":{\"469\":1}}],[\"计算属性依然会重新进行计算\",{\"1\":{\"473\":1}}],[\"计算属性是不需要重新计算的\",{\"1\":{\"473\":1}}],[\"计算属性是有缓存的\",{\"1\":{\"473\":1}}],[\"计算属性会随着依赖的数据\",{\"1\":{\"473\":1}}],[\"计算属性中的运算只会执行一次\",{\"1\":{\"473\":1}}],[\"计算属性和methods的差异\",{\"1\":{\"473\":1}}],[\"计算属性和侦听器\",{\"1\":{\"347\":1}}],[\"计算属性看起来像是一个函数\",{\"1\":{\"472\":1}}],[\"计算属性将被混入到组件实例中\",{\"1\":{\"468\":1}}],[\"计算属性\",{\"0\":{\"473\":1,\"654\":1},\"1\":{\"430\":1,\"477\":1,\"581\":2,\"656\":1}}],[\"三个组件共享库存数据\",{\"1\":{\"601\":1}}],[\"三个参数\",{\"1\":{\"457\":1}}],[\"三元运算符来决定结果\",{\"1\":{\"468\":1}}],[\"三元运算符\",{\"1\":{\"430\":2}}],[\"三目运算符\",{\"0\":{\"106\":1}}],[\"口在底层的实现中\",{\"1\":{\"429\":1}}],[\"起\",{\"1\":{\"429\":1}}],[\"了解\",{\"1\":{\"429\":1}}],[\"了注册\",{\"1\":{\"338\":1}}],[\"过滤掉长度小于等于2的电影\",{\"1\":{\"459\":1}}],[\"过滤器\",{\"1\":{\"423\":1}}],[\"过渡动效\",{\"0\":{\"570\":1}}],[\"过渡动画我们只要是针对单个元素或者组件的\",{\"1\":{\"173\":1}}],[\"过渡等\",{\"1\":{\"423\":1}}],[\"过渡将立即完成\",{\"1\":{\"168\":1}}],[\"过渡中可用\",{\"1\":{\"168\":1}}],[\"过渡模式不可用\",{\"1\":{\"173\":1}}],[\"过渡模式\",{\"0\":{\"164\":1}}],[\"过渡一起使用\",{\"1\":{\"159\":1}}],[\"过渡的类将会应用在内部的元素中\",{\"1\":{\"173\":1}}],[\"过渡的自动探测\",{\"1\":{\"168\":1,\"171\":1}}],[\"过渡的\",{\"1\":{\"158\":1}}],[\"过渡图示\",{\"1\":{\"157\":1}}],[\"过渡\",{\"0\":{\"157\":1},\"1\":{\"155\":1}}],[\"过渡或动画结合使用\",{\"1\":{\"168\":1}}],[\"过渡或动画\",{\"1\":{\"155\":2}}],[\"过渡与动画初体验\",{\"0\":{\"153\":1}}],[\"把2个模块对象\",{\"1\":{\"669\":1}}],[\"把getters里属性映射到原地\",{\"1\":{\"661\":1,\"697\":1}}],[\"把vuex商品数组映射回来使用\",{\"1\":{\"652\":1}}],[\"把actions里方法映射到原地\",{\"1\":{\"641\":1}}],[\"把结果commit给mutations给state赋值\",{\"1\":{\"637\":1}}],[\"把表单值提交给store下的mutations\",{\"1\":{\"631\":1}}],[\"把mutations里方法映射到原地\",{\"1\":{\"629\":1}}],[\"把state里变量映射到计算属性中\",{\"1\":{\"616\":1}}],[\"把该组件挂载到\",{\"1\":{\"420\":3,\"421\":2}}],[\"把该组件挂载到body元素上\",{\"1\":{\"419\":1}}],[\"把内存空间填充为真实的值\",{\"1\":{\"195\":1}}],[\"远距离运输的意思\",{\"1\":{\"418\":1}}],[\"远端设备\",{\"1\":{\"30\":1}}],[\"翻译过来是心灵传输\",{\"1\":{\"418\":1}}],[\"翻译为模块热替换\",{\"1\":{\"255\":1}}],[\"修饰符会在输入框有\",{\"1\":{\"487\":1}}],[\"修饰符来管理输入\",{\"1\":{\"487\":1}}],[\"修饰符来改为在每次\",{\"1\":{\"486\":1}}],[\"修饰符来强制绑定方式\",{\"1\":{\"437\":1}}],[\"修饰符相当于对事件进行了一些特殊的处理\",{\"1\":{\"450\":1}}],[\"修饰符\",{\"0\":{\"484\":1},\"1\":{\"437\":2,\"447\":1,\"488\":1}}],[\"修饰符对象是\",{\"1\":{\"408\":1}}],[\"修改state\",{\"1\":{\"582\":1}}],[\"修改路由定义\",{\"1\":{\"547\":1}}],[\"修改webpack的配置\",{\"1\":{\"256\":1}}],[\"修改了css\",{\"1\":{\"255\":1}}],[\"修改配置文件\",{\"1\":{\"254\":1}}],[\"修改文件时自动保存\",{\"1\":{\"67\":1}}],[\"修改\",{\"0\":{\"674\":1},\"1\":{\"59\":1,\"547\":1}}],[\"修改一个对象的属性\",{\"1\":{\"52\":1}}],[\"修改其中一个变量的值\",{\"1\":{\"43\":1}}],[\"阶段案例\",{\"0\":{\"480\":1}}],[\"阶段六\",{\"1\":{\"405\":1}}],[\"阶段被同步调用\",{\"1\":{\"368\":1}}],[\"能做到\",{\"1\":{\"571\":1}}],[\"能在模板中直接使用\",{\"1\":{\"402\":1}}],[\"能够实时保持数据与页面的同步\",{\"1\":{\"688\":1}}],[\"能够高效地实现组件之间的数据共享\",{\"1\":{\"688\":1}}],[\"能够在vuex中集中管理共享的数居\",{\"1\":{\"688\":1}}],[\"能够使用纯\",{\"1\":{\"401\":1}}],[\"能够显著提升前端开发体验\",{\"1\":{\"178\":1}}],[\"顶层的绑定会被暴露给模板\",{\"0\":{\"402\":1}}],[\"顶部窗口的背景色\",{\"1\":{\"142\":1,\"146\":1}}],[\"外\",{\"1\":{\"391\":1,\"408\":1}}],[\"减一\",{\"1\":{\"388\":1}}],[\"减少不必要的请求过程\",{\"1\":{\"226\":1}}],[\"减少页面\",{\"1\":{\"141\":1}}],[\"省略其他\",{\"1\":{\"657\":1,\"696\":1}}],[\"省略state和mutations此处\",{\"1\":{\"637\":1,\"695\":1}}],[\"省略了其他配置\",{\"1\":{\"548\":1}}],[\"省略了其他必要的\",{\"1\":{\"163\":1}}],[\"省略\",{\"1\":{\"386\":1}}],[\"完之前一直处于等待中\",{\"1\":{\"559\":1}}],[\"完成\",{\"1\":{\"525\":1}}],[\"完成热更新\",{\"1\":{\"201\":1}}],[\"完整的导航解析流程\",{\"0\":{\"565\":1}}],[\"完整写法\",{\"1\":{\"448\":1}}],[\"完整代码\",{\"1\":{\"432\":1}}],[\"完整参数签名\",{\"1\":{\"386\":1}}],[\"取消当前的导航\",{\"1\":{\"559\":1}}],[\"取消之前的未完成的请求\",{\"1\":{\"383\":1}}],[\"取而代之的是下面例子的做法\",{\"1\":{\"550\":1}}],[\"取值\",{\"1\":{\"547\":2}}],[\"取出其中的value\",{\"1\":{\"356\":1}}],[\"副作用\",{\"0\":{\"510\":1}}],[\"副作用清理\",{\"0\":{\"383\":1}}],[\"副作用函数会再次执行\",{\"1\":{\"377\":1}}],[\"停止侦听\",{\"0\":{\"382\":1}}],[\"停止监听\",{\"0\":{\"375\":1},\"1\":{\"375\":1}}],[\"立即执行\",{\"1\":{\"381\":1,\"477\":3}}],[\"懒执行副作用\",{\"1\":{\"378\":1}}],[\"效率很低\",{\"1\":{\"377\":1}}],[\"效果\",{\"1\":{\"251\":1}}],[\"效果如下\",{\"1\":{\"30\":1}}],[\"挂载完成\",{\"1\":{\"494\":1}}],[\"挂载之前\",{\"1\":{\"494\":1}}],[\"挂载到\",{\"0\":{\"420\":1}}],[\"挂载后访问\",{\"1\":{\"412\":1}}],[\"挂载\",{\"1\":{\"377\":3,\"492\":1}}],[\"侦听单个嵌套属性\",{\"1\":{\"478\":1}}],[\"侦听单个数据源\",{\"0\":{\"379\":1}}],[\"侦听根级属性\",{\"1\":{\"478\":1}}],[\"侦听的函数都会有限执行一次\",{\"1\":{\"477\":1}}],[\"侦听question的变化时\",{\"1\":{\"476\":1}}],[\"侦听器\",{\"0\":{\"475\":1}}],[\"侦听器被停止\",{\"1\":{\"376\":1}}],[\"侦听\",{\"1\":{\"381\":1}}],[\"侦听多个数据源\",{\"0\":{\"380\":1}}],[\"侦听数据的变化\",{\"0\":{\"372\":1}}],[\"宇宙人\",{\"1\":{\"367\":1}}],[\"神秘的\",{\"1\":{\"367\":1}}],[\"迪迦奥特曼\",{\"1\":{\"367\":2}}],[\"冲啊迪迦奥特曼\",{\"1\":{\"367\":1}}],[\"冲啊\",{\"1\":{\"367\":2}}],[\"优点\",{\"1\":{\"539\":1,\"688\":1}}],[\"优秀的调试工具可以使我们写程序事半功倍\",{\"1\":{\"684\":1}}],[\"优秀\",{\"1\":{\"366\":1,\"487\":1}}],[\"优先是从内部一层层往外找的\",{\"1\":{\"420\":1}}],[\"优先使用的字段\",{\"1\":{\"264\":1}}],[\"优先级低于\",{\"1\":{\"59\":1}}],[\"👆这样都可以修改age\",{\"1\":{\"363\":1}}],[\"普通对象\",{\"1\":{\"361\":1}}],[\"普通的属性的绑定是单向的\",{\"1\":{\"110\":1}}],[\"往往希望其他组件使用我们传递的内容\",{\"1\":{\"361\":1}}],[\"往往会对资源模块化来提效\",{\"1\":{\"195\":1}}],[\"节点后运行代码\",{\"1\":{\"493\":1}}],[\"节流\",{\"1\":{\"359\":1}}],[\"节省开发的时间\",{\"1\":{\"255\":1}}],[\"试图修改只读属性会报错\",{\"1\":{\"354\":2}}],[\"试用\",{\"1\":{\"267\":1}}],[\"浅层的意思是只有对象的第一层属性会被设置为响应式\",{\"1\":{\"358\":1}}],[\"浅层只读代理是指只有对象的第一层属性会被设置为只读\",{\"1\":{\"354\":1}}],[\"浅层只读代理\",{\"1\":{\"354\":1}}],[\"浅层响应式是指只有对象的第一层属性会被设置为响应式\",{\"1\":{\"354\":1}}],[\"浅层响应式\",{\"1\":{\"354\":1}}],[\"浅拷贝是复制\",{\"1\":{\"44\":1}}],[\"浅拷贝是拷贝一层\",{\"1\":{\"44\":1}}],[\"浅拷贝\",{\"0\":{\"46\":1},\"1\":{\"44\":1,\"46\":1}}],[\"暴露的属性可以在通过\",{\"1\":{\"513\":1}}],[\"暴露的值\",{\"1\":{\"351\":1}}],[\"暴露出去\",{\"1\":{\"405\":1}}],[\"暴露公共属性\",{\"1\":{\"349\":1}}],[\"缺点三\",{\"1\":{\"470\":1}}],[\"缺点二\",{\"1\":{\"470\":1,\"471\":1}}],[\"缺点一\",{\"1\":{\"470\":1,\"471\":1}}],[\"缺点\",{\"1\":{\"350\":1,\"539\":1}}],[\"透传\",{\"1\":{\"349\":1}}],[\"均会采用选项式的写法\",{\"1\":{\"348\":1}}],[\"次<\",{\"1\":{\"347\":1}}],[\"及其模板\",{\"1\":{\"513\":1}}],[\"及其子组件的\",{\"1\":{\"407\":1}}],[\"及格\",{\"1\":{\"470\":1,\"471\":1,\"472\":1,\"473\":2}}],[\"及他自己的所有子节点都更新后调用\",{\"1\":{\"408\":1}}],[\"及他自己的所有子节点都挂载完成后调用\",{\"1\":{\"408\":1}}],[\"及\",{\"1\":{\"347\":1}}],[\"涵盖了以下方面的\",{\"1\":{\"347\":1}}],[\"组合\",{\"1\":{\"500\":1}}],[\"组合式函数不会产生额外的组件实例开销\",{\"1\":{\"515\":1}}],[\"组合式函数相对于无渲染组件的主要优势是\",{\"1\":{\"515\":1}}],[\"组合式函数必须在\",{\"1\":{\"513\":1}}],[\"组合式函数只能在\",{\"1\":{\"511\":1}}],[\"组合式函数也可以接收它们作为参数\",{\"1\":{\"508\":1}}],[\"组合式函数约定用驼峰命名法命名\",{\"1\":{\"507\":1}}],[\"组合式函数没有接收任何参数\",{\"1\":{\"504\":1}}],[\"组合式函数可以被简化为\",{\"1\":{\"503\":1}}],[\"组合式函数可以随时更改其状态\",{\"1\":{\"503\":1}}],[\"组合式函数名以\",{\"1\":{\"503\":1}}],[\"组合式函数\",{\"0\":{\"501\":1,\"502\":1},\"1\":{\"502\":1}}],[\"组合式\",{\"0\":{\"347\":1},\"1\":{\"347\":4,\"348\":1,\"512\":1}}],[\"组件关系\",{\"1\":{\"590\":1}}],[\"组件已经挂载好了\",{\"1\":{\"563\":1}}],[\"组件进行导航\",{\"1\":{\"540\":1,\"543\":1}}],[\"组件作用域的\",{\"1\":{\"531\":1}}],[\"组件作用域的css\",{\"1\":{\"339\":1}}],[\"组件定义\",{\"1\":{\"386\":1}}],[\"组件卸载后\",{\"1\":{\"368\":1}}],[\"组件卸载前\",{\"1\":{\"368\":1}}],[\"组件更新后\",{\"1\":{\"368\":1}}],[\"组件更新前\",{\"1\":{\"368\":1}}],[\"组件挂载后\",{\"1\":{\"368\":1}}],[\"组件挂载前\",{\"1\":{\"368\":1}}],[\"组件接受的参数\",{\"1\":{\"349\":1}}],[\"组件内使用getters\",{\"1\":{\"660\":1}}],[\"组件内\",{\"1\":{\"616\":2,\"629\":2,\"641\":2,\"661\":2,\"673\":2,\"680\":2,\"681\":2,\"682\":2,\"693\":2,\"697\":2}}],[\"组件内的守卫\",{\"0\":{\"562\":1}}],[\"组件内部需要做两件事\",{\"1\":{\"343\":1,\"481\":1}}],[\"组件内状态\",{\"0\":{\"38\":1}}],[\"组件对象\",{\"1\":{\"338\":1}}],[\"组件对象即可注册一个全局组件了\",{\"1\":{\"337\":1}}],[\"组件注册代码来配合不同来源的模板\",{\"1\":{\"335\":1}}],[\"组件名称\",{\"0\":{\"335\":1}}],[\"组件化提供了一种抽象\",{\"1\":{\"334\":1}}],[\"组件化也是类似的思想\",{\"1\":{\"333\":1}}],[\"组件之间的通信\",{\"0\":{\"298\":1}}],[\"组件的模板内添加一个\",{\"1\":{\"557\":1}}],[\"组件的模板\",{\"1\":{\"531\":1}}],[\"组件的生命周期\",{\"0\":{\"494\":1}}],[\"组件的更新会在副作用函数执行之前\",{\"1\":{\"377\":1}}],[\"组件的\",{\"0\":{\"343\":1},\"1\":{\"489\":1}}],[\"组件的名称\",{\"1\":{\"338\":1}}],[\"组件的通信\",{\"0\":{\"301\":1,\"317\":1}}],[\"组件的拆分\",{\"0\":{\"300\":1,\"316\":1}}],[\"组件的标签可以被当做插槽的模板来使用\",{\"1\":{\"296\":1}}],[\"组件的方式进行构建\",{\"1\":{\"271\":1}}],[\"组件中使用\",{\"1\":{\"585\":1}}],[\"组件中通过\",{\"1\":{\"409\":1}}],[\"组件中\",{\"1\":{\"291\":1}}],[\"组件中的元素被插入或移除时\",{\"1\":{\"155\":1}}],[\"组件结合使用\",{\"1\":{\"284\":1}}],[\"组件树中新的更深层次的异步依赖不会造成\",{\"1\":{\"283\":1}}],[\"组件有两个插槽\",{\"1\":{\"283\":1}}],[\"组件来完成\",{\"1\":{\"173\":1}}],[\"组件来实现\",{\"1\":{\"18\":1}}],[\"组件事件的方式在过渡过程中挂上钩子函数\",{\"1\":{\"168\":1}}],[\"组件传入\",{\"1\":{\"163\":1}}],[\"组件传一个\",{\"1\":{\"158\":1}}],[\"组件会通过监听过渡根元素上的第一个transitionend\",{\"1\":{\"163\":1}}],[\"组件前边插入内容\",{\"1\":{\"151\":1}}],[\"组件后边插入内容\",{\"1\":{\"151\":1}}],[\"组件和所有的\",{\"1\":{\"151\":1}}],[\"组件框架\",{\"1\":{\"139\":1,\"146\":1}}],[\"组件上的每一个\",{\"1\":{\"344\":1,\"490\":1}}],[\"组件上的\",{\"1\":{\"137\":1}}],[\"组件样式兼容\",{\"1\":{\"137\":1}}],[\"组件示例\",{\"1\":{\"136\":1}}],[\"组件实例还没被创建\",{\"1\":{\"563\":1}}],[\"组件实例\",{\"0\":{\"341\":1},\"1\":{\"135\":1,\"136\":1}}],[\"组件实例是不同的\",{\"1\":{\"135\":1}}],[\"组件渲染样式\",{\"1\":{\"135\":1}}],[\"组件属性的长度单位默认为px\",{\"1\":{\"124\":1,\"126\":1}}],[\"组件\",{\"1\":{\"63\":1,\"136\":1,\"151\":2,\"289\":1,\"314\":2,\"331\":2,\"334\":1,\"347\":1,\"540\":1,\"544\":1,\"563\":1,\"573\":2}}],[\"组件将this\",{\"1\":{\"40\":1}}],[\"组件可以通过链式调用设置多个事件的响应逻辑\",{\"1\":{\"3\":1}}],[\"组件可以通过链式调用配置多项属性\",{\"1\":{\"3\":1}}],[\"们完成的事情\",{\"1\":{\"346\":1}}],[\"好处\",{\"1\":{\"461\":1,\"547\":1}}],[\"好\",{\"1\":{\"346\":1}}],[\"好在我们可以通过向\",{\"1\":{\"164\":1}}],[\"阅读组件的其他人\",{\"1\":{\"346\":1}}],[\"尤其对于那些一开始没有编写这些组件的人来说\",{\"1\":{\"346\":1}}],[\"尤其是小程序冷启动\",{\"1\":{\"115\":1}}],[\"周期钩子\",{\"1\":{\"346\":1}}],[\"绑定了\",{\"1\":{\"529\":1}}],[\"绑定输入的字符串值第一个字母转为大写\",{\"1\":{\"489\":1}}],[\"绑定textarea\",{\"1\":{\"483\":1}}],[\"绑定其他表单\",{\"0\":{\"483\":1}}],[\"绑定事件监听\",{\"1\":{\"447\":1}}],[\"绑定一个对象\",{\"1\":{\"448\":1}}],[\"绑定一个表达式\",{\"1\":{\"448\":1}}],[\"绑定一个\",{\"1\":{\"446\":1}}],[\"绑定一个data中的属性值\",{\"1\":{\"443\":1}}],[\"绑定class\",{\"1\":{\"441\":1}}],[\"绑定class有两种方式\",{\"1\":{\"439\":1,\"442\":1}}],[\"绑定值对的对象\",{\"1\":{\"437\":1}}],[\"绑定时\",{\"1\":{\"437\":1}}],[\"绑定元素的父组件卸载后调用\",{\"1\":{\"408\":1}}],[\"绑定元素的父组件卸载前调用\",{\"1\":{\"408\":1}}],[\"绑定元素的父组件更新前调用\",{\"1\":{\"408\":1}}],[\"绑定\",{\"0\":{\"344\":1,\"439\":1,\"442\":1,\"490\":1},\"1\":{\"489\":1}}],[\"绑定到data返回的对象中\",{\"1\":{\"483\":1}}],[\"绑定到元素上的所有属性\",{\"1\":{\"446\":1}}],[\"绑定到元素或者组件的ref属性上即可\",{\"1\":{\"369\":1}}],[\"绑定到\",{\"1\":{\"343\":1,\"481\":1}}],[\"绑定生命周期回调函数\",{\"1\":{\"93\":1}}],[\"访问整个\",{\"1\":{\"584\":1}}],[\"访问组件实例\",{\"1\":{\"563\":1}}],[\"访问路由实例\",{\"1\":{\"550\":1}}],[\"访问\",{\"1\":{\"528\":1,\"563\":1}}],[\"访问到\",{\"1\":{\"513\":1}}],[\"访问活跃的组件实例很有必要\",{\"1\":{\"511\":1}}],[\"访问侦听状态变化前后的值\",{\"1\":{\"378\":1}}],[\"访问根组件实例\",{\"1\":{\"342\":1}}],[\"访问父组件实例\",{\"1\":{\"342\":1}}],[\"访问这个命令\",{\"1\":{\"269\":1}}],[\"很多时候\",{\"1\":{\"544\":1}}],[\"很多运算也需要多次执行\",{\"1\":{\"470\":1}}],[\"很多情况下这可能并不符合需求\",{\"1\":{\"164\":1}}],[\"很容易出现命名冲突的问题\",{\"1\":{\"339\":1}}],[\"脚本逻辑\",{\"1\":{\"339\":2}}],[\"脚手架其实是建筑工程中的一个概念\",{\"1\":{\"266\":1}}],[\"册\",{\"1\":{\"338\":1}}],[\"局部指令\",{\"1\":{\"411\":1}}],[\"局部函数\",{\"1\":{\"350\":1}}],[\"局部注册是在我们需要使用到的组件中\",{\"1\":{\"338\":1}}],[\"局部注册的组件在后代组件中并不可用\",{\"1\":{\"338\":1}}],[\"局部注册的组件需要在使用它的父组件中显式导入\",{\"1\":{\"338\":1}}],[\"局部注册需要使用\",{\"1\":{\"338\":1}}],[\"局部组件\",{\"1\":{\"336\":1}}],[\"局部安装\",{\"0\":{\"209\":1},\"1\":{\"185\":1}}],[\"逻辑与样式封装在单个文件中\",{\"1\":{\"531\":1}}],[\"逻辑复用的首选模式是\",{\"1\":{\"500\":1}}],[\"逻辑关注点的列表就会增长\",{\"1\":{\"346\":1}}],[\"逻辑等\",{\"1\":{\"336\":1}}],[\"逻辑层初始化的时间较长\",{\"1\":{\"115\":1}}],[\"逻辑层初始化\",{\"1\":{\"115\":1}}],[\"逻辑层将数据进行处理后发送给视图层\",{\"1\":{\"92\":1}}],[\"逻辑层执行\",{\"1\":{\"91\":1}}],[\"逻辑层找到并执行对应的事件处理函数\",{\"1\":{\"91\":1}}],[\"逻辑层发送网络请求也经由native转发\",{\"1\":{\"90\":1}}],[\"逻辑层采用jscore线程运行js脚本\",{\"1\":{\"90\":1}}],[\"逻辑层\",{\"0\":{\"92\":1},\"1\":{\"90\":1}}],[\"驼峰标识符\",{\"1\":{\"335\":1}}],[\"短横线分隔命名\",{\"1\":{\"335\":1}}],[\"短横线分割符\",{\"1\":{\"335\":1}}],[\"学习组件化最重要的是它的思想\",{\"1\":{\"333\":1}}],[\"学习babel对于我们理解代码从编写到线上的转变过程至关重要\",{\"1\":{\"241\":1}}],[\"甚至是一个方法\",{\"1\":{\"554\":1}}],[\"甚至是移动端都在转向组件化开发\",{\"1\":{\"333\":1}}],[\"甚至是组件\",{\"1\":{\"288\":1}}],[\"小结\",{\"0\":{\"594\":1,\"599\":1,\"606\":1,\"612\":1,\"621\":1,\"626\":1,\"634\":1,\"638\":1,\"644\":1,\"648\":1,\"653\":1,\"658\":1,\"663\":1,\"670\":1,\"675\":1,\"683\":1}}],[\"小传\",{\"1\":{\"551\":1}}],[\"小传<\",{\"1\":{\"547\":1,\"551\":1}}],[\"小智<\",{\"1\":{\"547\":1,\"551\":1}}],[\"小智\",{\"1\":{\"547\":1,\"551\":2}}],[\"小知识\",{\"1\":{\"437\":1}}],[\"小的功能块\",{\"1\":{\"333\":1}}],[\"小程序中新增\",{\"1\":{\"141\":1}}],[\"小程序列表启动等\",{\"1\":{\"140\":1}}],[\"小程序支持\",{\"1\":{\"139\":1}}],[\"小程序接口权限相关设置\",{\"1\":{\"139\":1}}],[\"小程序是否支持屏幕旋转\",{\"1\":{\"139\":1}}],[\"小程序是否支持用户任意改变窗口大小\",{\"1\":{\"139\":1}}],[\"小程序是需要下载的\",{\"1\":{\"76\":1}}],[\"小程序默认启动首页\",{\"1\":{\"139\":1}}],[\"小程序页面的初始化分为两个部分\",{\"1\":{\"115\":1}}],[\"小程序在手机上支持屏幕旋转\",{\"1\":{\"113\":1}}],[\"小程序目前不支持直接引入\",{\"1\":{\"97\":1}}],[\"小程序框架的逻辑层并非运行在浏览器中\",{\"1\":{\"92\":1}}],[\"小程序提供了自己的视图层描述语言\",{\"1\":{\"90\":1}}],[\"小程序开发框架的逻辑层使用\",{\"1\":{\"92\":1}}],[\"小程序开发框架的目标是通过尽可能简单\",{\"1\":{\"90\":1}}],[\"小程序开发需求\",{\"0\":{\"79\":1}}],[\"小程序借助这个宿注环境提供的功能\",{\"1\":{\"90\":1}}],[\"小程序依赖于微信客户端提供的环境\",{\"1\":{\"90\":1}}],[\"小程序根目录下的\",{\"1\":{\"86\":2,\"139\":1}}],[\"小程序的通信模型下图所示\",{\"1\":{\"90\":1}}],[\"小程序的渲染层和逻辑层分别由2个线程管理\",{\"1\":{\"90\":1}}],[\"小程序的优缺点\",{\"0\":{\"78\":1}}],[\"小程序的占用大小很小\",{\"1\":{\"76\":1}}],[\"小程序特点\",{\"0\":{\"77\":1}}],[\"小程序名称\",{\"1\":{\"67\":1}}],[\"小程序\",{\"1\":{\"67\":1}}],[\"全程是vue\",{\"1\":{\"518\":1}}],[\"全部放在一起\",{\"1\":{\"333\":1}}],[\"全局后置钩子\",{\"0\":{\"560\":1}}],[\"全局前置守卫按照创建顺序调用\",{\"1\":{\"559\":1}}],[\"全局前置守卫\",{\"0\":{\"559\":1}}],[\"全局的\",{\"1\":{\"558\":1}}],[\"全局的created生命周期\",{\"1\":{\"499\":1}}],[\"全局的mixin可以使用\",{\"1\":{\"499\":1}}],[\"全局的默认窗口表现\",{\"1\":{\"139\":1}}],[\"全局混入\",{\"0\":{\"499\":1}}],[\"全局注册在大型项目中使项目的依赖关系变得不那么明确\",{\"1\":{\"338\":1}}],[\"全局注册\",{\"1\":{\"338\":1}}],[\"全局注册虽然很方便\",{\"1\":{\"338\":1}}],[\"全局组件往往是在应用程序一开始就会全局组件完成\",{\"1\":{\"338\":1}}],[\"全局组件需要使用我们全局创建的app来注册组件\",{\"1\":{\"337\":1}}],[\"全局组件\",{\"1\":{\"336\":1}}],[\"全局事件总线是一种用于在不同组件之间进行通信的机制\",{\"1\":{\"314\":1,\"331\":1}}],[\"全局事件总线\",{\"0\":{\"314\":1,\"331\":1}}],[\"全局导入\",{\"0\":{\"189\":1}}],[\"全局样式与局部样式\",{\"0\":{\"152\":1}}],[\"全局默认的渲染后端\",{\"1\":{\"139\":1}}],[\"全局自定义组件配置\",{\"1\":{\"139\":1}}],[\"全局配置\",{\"0\":{\"139\":1},\"1\":{\"146\":2}}],[\"全局开启\",{\"1\":{\"136\":1}}],[\"全局安装\",{\"1\":{\"68\":1,\"185\":1}}],[\"全局资源文件中查找\",{\"1\":{\"6\":1}}],[\"拆分成一个数组\",{\"1\":{\"547\":1,\"548\":1}}],[\"拆分成一个个功能的小组件\",{\"1\":{\"299\":1,\"315\":1}}],[\"拆分成一个个小的组件\",{\"1\":{\"299\":1,\"315\":1}}],[\"拆分成很多个可以处理的小问题\",{\"1\":{\"333\":1}}],[\"任何集合的修改\",{\"1\":{\"582\":1}}],[\"任何人都可以阅读文章\",{\"1\":{\"569\":1}}],[\"任何其他类型\",{\"1\":{\"550\":1}}],[\"任何值得引入构建步骤以获得更好的开发体验\",{\"1\":{\"531\":1}}],[\"任何以\",{\"1\":{\"411\":1}}],[\"任何在<script\",{\"1\":{\"402\":1}}],[\"任何一个修改都会引起另外一个变化\",{\"1\":{\"363\":1,\"364\":1}}],[\"任何一个人处理信息的逻辑能力都是有限的\",{\"1\":{\"333\":1}}],[\"任何的应用都会被抽象成一颗组件树\",{\"1\":{\"334\":1}}],[\"任务进度\",{\"1\":{\"39\":1}}],[\"任务进度卡片\",{\"1\":{\"39\":1}}],[\"人面对复杂问题的处理方式\",{\"1\":{\"333\":1}}],[\"什么情况下子组件需要传递内容到父组件呢\",{\"1\":{\"310\":1,\"326\":1}}],[\"什么是渐进式框架呢\",{\"1\":{\"518\":1}}],[\"什么是生命周期呢\",{\"1\":{\"492\":1}}],[\"什么是生命周期\",{\"0\":{\"492\":1}}],[\"什么是侦听器\",{\"1\":{\"475\":1}}],[\"什么是计算属性呢\",{\"1\":{\"468\":1}}],[\"什么是vuex\",{\"1\":{\"589\":1,\"594\":1}}],[\"什么是vue脚手架\",{\"1\":{\"266\":1}}],[\"什么是vnode\",{\"1\":{\"460\":1}}],[\"什么是新旧nodes\",{\"1\":{\"460\":1}}],[\"什么是清除副作用呢\",{\"1\":{\"376\":1}}],[\"什么是hmr呢\",{\"1\":{\"255\":1}}],[\"什么是postcss呢\",{\"1\":{\"219\":1}}],[\"什么是\",{\"0\":{\"178\":1,\"241\":1,\"502\":1,\"518\":1},\"1\":{\"302\":1,\"318\":1}}],[\"什么是gsap呢\",{\"1\":{\"171\":1}}],[\"子节点必须以插槽函数进行传递\",{\"1\":{\"386\":1}}],[\"子传父\",{\"0\":{\"310\":1,\"326\":1},\"1\":{\"590\":1}}],[\"子组件add和子组件sub\",{\"1\":{\"601\":1}}],[\"子组件不需要知道\",{\"1\":{\"313\":1,\"330\":1}}],[\"子组件有一个\",{\"1\":{\"313\":1,\"330\":1}}],[\"子组件有一些内容想要传递给父组件的时候\",{\"1\":{\"310\":1,\"326\":1}}],[\"子组件想要获取父组件的部分内容\",{\"1\":{\"313\":1,\"330\":1}}],[\"子组件\",{\"1\":{\"310\":1,\"326\":1}}],[\"子组件可以使用这些props来访问传递过来的数据\",{\"1\":{\"302\":1,\"318\":1}}],[\"子组件传递给父组件\",{\"1\":{\"301\":1,\"317\":1}}],[\"子组件传入插槽的\",{\"1\":{\"294\":1}}],[\"子组件会将相应的\",{\"1\":{\"294\":1}}],[\"子组件模板中的表达式只能访问子组件的作用域\",{\"1\":{\"293\":1}}],[\"子组件中被\",{\"1\":{\"40\":1}}],[\"子组件初始化的默认值在有父组件传值的情况下\",{\"1\":{\"36\":1}}],[\"仍然会继承非prop的attribute\",{\"1\":{\"308\":1,\"324\":1}}],[\"仍然报错\",{\"1\":{\"250\":1}}],[\"又比如我们在main中一次性请求了banner数据和productlist数据\",{\"1\":{\"301\":1,\"317\":1}}],[\"又不会像webpack一样需要了解庞大的loader\",{\"1\":{\"183\":1}}],[\"独占默认插槽的缩写\",{\"0\":{\"296\":1}}],[\"向数组中添加\",{\"1\":{\"582\":1}}],[\"向前移动一条记录\",{\"1\":{\"552\":1}}],[\"向一个插槽的出口上传递\",{\"1\":{\"294\":1}}],[\"向连接的客户端发送更新通知\",{\"1\":{\"258\":1}}],[\"出现后\",{\"1\":{\"537\":1}}],[\"出现时过渡\",{\"0\":{\"165\":1}}],[\"出口会隐式地命名为\",{\"1\":{\"291\":1}}],[\"举例来说\",{\"1\":{\"291\":1,\"293\":1,\"408\":2,\"493\":1,\"497\":1,\"503\":1,\"505\":1,\"510\":1,\"563\":1}}],[\"举个栗子\",{\"1\":{\"286\":1}}],[\"现有项目如何集成vuex\",{\"1\":{\"648\":1}}],[\"现在像\",{\"1\":{\"544\":1}}],[\"现在能接收静态\",{\"1\":{\"505\":1}}],[\"现在我们在组件里只需要\",{\"1\":{\"504\":1}}],[\"现在我们来做一个相对综合一点的练习\",{\"1\":{\"480\":1}}],[\"现在可以说整个的大前端开发都是组件化的天下\",{\"1\":{\"333\":1}}],[\"现在\",{\"1\":{\"289\":1,\"314\":1,\"331\":1,\"343\":1,\"503\":1}}],[\"现调整为\",{\"1\":{\"72\":1}}],[\"写在\",{\"1\":{\"289\":1}}],[\"写入一个持久化的缓存区域\",{\"1\":{\"115\":1}}],[\"右边可能是一个文字\",{\"1\":{\"286\":1}}],[\"右边\",{\"1\":{\"286\":1}}],[\"右侧百分比字体大小\",{\"1\":{\"126\":1}}],[\"左边区域可能显示一个菜单图标\",{\"1\":{\"286\":1}}],[\"左边\",{\"1\":{\"286\":1}}],[\"假如我们将所有的代码逻辑都放到一个app\",{\"1\":{\"299\":1,\"315\":1}}],[\"假如我们定制一个通用的导航组件\",{\"1\":{\"286\":1}}],[\"假设我们有一个使用箭头函数和\",{\"1\":{\"241\":1}}],[\"某个组件中的私有数据\",{\"1\":{\"593\":1,\"690\":1}}],[\"某种情况下我们使用组件希望显示的是一张图片\",{\"1\":{\"286\":1}}],[\"某些情况下我们需要对这段文字进行反转\",{\"1\":{\"469\":1}}],[\"某些情况下我们是直接显示这段文字\",{\"1\":{\"469\":1}}],[\"某些情况下我们希望通过javascript来实现一些动画的效果\",{\"1\":{\"171\":1}}],[\"某些情况下\",{\"1\":{\"342\":1}}],[\"某些配置是在生成环境需要使用的\",{\"1\":{\"265\":1}}],[\"回退到挂起状态\",{\"1\":{\"283\":1}}],[\"回调方法应该在从服务器获得组件定义时调用\",{\"1\":{\"282\":1}}],[\"回调函数的内部调用的\",{\"1\":{\"505\":1}}],[\"回调函数的初次执行就发生在\",{\"1\":{\"477\":1}}],[\"回调函数接受两个数组\",{\"1\":{\"380\":1}}],[\"回调函数\",{\"1\":{\"137\":1,\"168\":1}}],[\"回调函数触发后\",{\"1\":{\"91\":1}}],[\"插入\",{\"0\":{\"463\":1}}],[\"插入到\",{\"1\":{\"410\":1}}],[\"插值表达式渲染的内容都是一样的\",{\"1\":{\"293\":1}}],[\"插槽对象被当作是\",{\"1\":{\"391\":1}}],[\"插槽内容无法访问子组件的数据\",{\"1\":{\"293\":1}}],[\"插槽内容可以访问到父组件的数据作用域\",{\"1\":{\"293\":1}}],[\"插槽内容可以是任意合法的模板内容\",{\"1\":{\"288\":1}}],[\"插槽内容\",{\"1\":{\"292\":1}}],[\"插槽中\",{\"1\":{\"291\":1}}],[\"插槽中显示\",{\"1\":{\"283\":1}}],[\"插槽的默认内容\",{\"0\":{\"289\":1}}],[\"插槽的基本使用\",{\"0\":{\"288\":1}}],[\"插槽的使用过程其实是抽取共性\",{\"1\":{\"287\":1}}],[\"插槽的内容放这里\",{\"1\":{\"291\":1}}],[\"插槽的内容\",{\"1\":{\"283\":1}}],[\"插槽\",{\"0\":{\"285\":1},\"1\":{\"295\":1,\"349\":1}}],[\"插件二\",{\"1\":{\"531\":1}}],[\"插件一\",{\"1\":{\"531\":1}}],[\"插件被调用了\",{\"1\":{\"424\":1,\"425\":1}}],[\"插件可以完成的功能没有限制\",{\"1\":{\"423\":1}}],[\"插件可以执行各种任务\",{\"1\":{\"243\":1}}],[\"插件来实现hmr功能\",{\"1\":{\"257\":2}}],[\"插件autoprefixer\",{\"0\":{\"221\":1}}],[\"插件丰富\",{\"1\":{\"180\":1}}],[\"插件\",{\"0\":{\"243\":1},\"1\":{\"178\":2,\"213\":1,\"223\":2,\"243\":1,\"580\":1}}],[\"插件安装\",{\"1\":{\"67\":1}}],[\"搭配\",{\"0\":{\"283\":1}}],[\"搭配使用\",{\"1\":{\"282\":1}}],[\"抛错时被渲染\",{\"1\":{\"282\":1}}],[\"像素\",{\"1\":{\"571\":1}}],[\"像普通函数那样\",{\"1\":{\"514\":1}}],[\"像下面这样使用指令\",{\"1\":{\"408\":1}}],[\"像使用其他一般组件一样使用\",{\"1\":{\"282\":1}}],[\"像之前的名字一样\",{\"1\":{\"175\":1}}],[\"异步提交给sub的mutations\",{\"1\":{\"637\":1,\"695\":1}}],[\"异步提交给add的mutations\",{\"1\":{\"637\":1,\"695\":1}}],[\"异步代码\",{\"1\":{\"637\":1}}],[\"异步修改\",{\"0\":{\"635\":1}}],[\"异步请求数据提交给mutations\",{\"1\":{\"651\":1}}],[\"异步请求\",{\"1\":{\"597\":1}}],[\"异步状态示例\",{\"0\":{\"504\":1}}],[\"异步操作不可避免地会涉及到加载和错误状态\",{\"1\":{\"282\":1}}],[\"异步组件\",{\"0\":{\"281\":1},\"1\":{\"422\":1}}],[\"异步加载\",{\"1\":{\"183\":1}}],[\"缓存旧值\",{\"1\":{\"477\":1}}],[\"缓存\",{\"1\":{\"279\":1,\"280\":1}}],[\"缓存可长时间保留\",{\"1\":{\"115\":1}}],[\"排除\",{\"0\":{\"279\":1}}],[\"排球\",{\"1\":{\"53\":2,\"54\":1,\"55\":1}}],[\"面向现代浏览器带自动回退地构建应用\",{\"1\":{\"271\":1}}],[\"面向对象的开发方式\",{\"1\":{\"33\":1}}],[\"覆盖\",{\"1\":{\"270\":1}}],[\"覆盖本地定义的默认值\",{\"1\":{\"36\":1}}],[\"尝试使用\",{\"1\":{\"270\":1}}],[\"放在<transition>\",{\"1\":{\"570\":1}}],[\"放行\",{\"1\":{\"567\":1}}],[\"放到同一处\",{\"1\":{\"521\":1}}],[\"放到methods的options中\",{\"1\":{\"468\":1}}],[\"放置静态文件的目录\",{\"1\":{\"269\":1}}],[\"放大\",{\"1\":{\"16\":1}}],[\"源文件目录\",{\"1\":{\"269\":1}}],[\"源码使用typescript来进行重写\",{\"1\":{\"519\":1}}],[\"源码通过monorepo的形式来管理源代码\",{\"1\":{\"519\":1}}],[\"源码\",{\"1\":{\"197\":1}}],[\"源码模块协商缓存\",{\"1\":{\"182\":1}}],[\"公共文件夹\",{\"1\":{\"269\":1}}],[\"公司内部人员注册好了\",{\"1\":{\"79\":1}}],[\"界面预览\",{\"1\":{\"268\":1}}],[\"界面报错\",{\"1\":{\"59\":1}}],[\"测试是一种测试方法\",{\"1\":{\"268\":1}}],[\"端到端\",{\"1\":{\"268\":1}}],[\"地址会重置到\",{\"1\":{\"559\":1,\"566\":1}}],[\"地址安装依赖\",{\"1\":{\"267\":1}}],[\"地图组件\",{\"0\":{\"133\":1}}],[\"升级所有的插件\",{\"1\":{\"267\":1}}],[\"升级\",{\"1\":{\"267\":2}}],[\"升级成\",{\"1\":{\"65\":2}}],[\"看起来更加干净\",{\"1\":{\"540\":1}}],[\"看看是否展示出了一份所有可用命令的帮助信息\",{\"1\":{\"267\":1}}],[\"看一下esm的解析过程\",{\"1\":{\"195\":1}}],[\"致力于将\",{\"1\":{\"266\":1}}],[\"境都会使用的\",{\"1\":{\"265\":1}}],[\"区分开发\",{\"0\":{\"265\":1}}],[\"绝对路径\",{\"1\":{\"264\":1}}],[\"总结\",{\"1\":{\"547\":1,\"554\":1,\"567\":1}}],[\"总结起来\",{\"1\":{\"258\":1}}],[\"总持续时间应该匹配延迟加上内部元素的过渡持续时间\",{\"1\":{\"163\":1}}],[\"长连接有一个最好的好处是建立连接后双方可以通信\",{\"1\":{\"258\":1}}],[\"长按图片显示发送给朋友\",{\"1\":{\"132\":1}}],[\"操作state里的数据\",{\"1\":{\"624\":1}}],[\"操作步骤\",{\"1\":{\"532\":1}}],[\"操作符来检查该元素上是否定义了和绑定的\",{\"1\":{\"437\":1}}],[\"操作\",{\"1\":{\"372\":1,\"582\":1}}],[\"操作二\",{\"1\":{\"252\":1}}],[\"操作一\",{\"1\":{\"252\":1}}],[\"监视文件的变化\",{\"1\":{\"252\":1}}],[\"监听的事件=\",{\"1\":{\"448\":1}}],[\"监听子组件发射来的事件\",{\"1\":{\"404\":1}}],[\"监听按钮的点击\",{\"1\":{\"404\":1}}],[\"监听了\",{\"1\":{\"314\":1,\"331\":1}}],[\"监听文件变化\",{\"1\":{\"271\":1}}],[\"监听系统主题变化\",{\"1\":{\"93\":1}}],[\"监听小程序切后台\",{\"1\":{\"93\":1}}],[\"监听小程序启动或切前台\",{\"1\":{\"93\":1}}],[\"监听小程序初始化\",{\"1\":{\"93\":1}}],[\"此路由需要授权\",{\"1\":{\"569\":1}}],[\"此外还需注意\",{\"1\":{\"349\":1}}],[\"此外\",{\"1\":{\"251\":1,\"252\":1,\"346\":1}}],[\"此时导航在所有守卫\",{\"1\":{\"559\":1}}],[\"此时可以使用\",{\"1\":{\"555\":1}}],[\"此时已经处理了\",{\"1\":{\"477\":1}}],[\"此时我们渲染div\",{\"1\":{\"453\":1}}],[\"此时父组件可以通过模板引用来访问这个\",{\"1\":{\"350\":1}}],[\"此时在渲染函数中可以直接使用在同一作用域下声明的响应式状态\",{\"1\":{\"350\":1}}],[\"此时就需要用到具名插槽了\",{\"1\":{\"291\":1}}],[\"此时会返回\",{\"1\":{\"263\":1}}],[\"此时重新\",{\"1\":{\"250\":1}}],[\"此时需要开发者提供一个自定义组件来渲染\",{\"1\":{\"135\":1}}],[\"此时\",{\"1\":{\"40\":1,\"68\":1,\"110\":2,\"118\":1,\"557\":1}}],[\"此时fa模型在处理复杂应用时存在一定的局限性\",{\"1\":{\"32\":1}}],[\"此时项目内已有\",{\"1\":{\"29\":1}}],[\"此时button无法包含子组件\",{\"1\":{\"8\":1}}],[\"禁用attribute继承的常见情况是需要将attribute应用于根元素之外的其他元素\",{\"1\":{\"308\":1,\"324\":1}}],[\"禁用\",{\"0\":{\"308\":1,\"324\":1}}],[\"禁用生产环境下的devtools支持\",{\"1\":{\"251\":1}}],[\"禁用options\",{\"1\":{\"251\":1}}],[\"禁止不必要的转义字符\",{\"1\":{\"59\":1}}],[\"禁止不必要的分号\",{\"1\":{\"59\":1}}],[\"禁止未使用的标签\",{\"1\":{\"59\":1}}],[\"禁止未使用的变量\",{\"1\":{\"59\":1}}],[\"禁止多行字符串\",{\"1\":{\"59\":1}}],[\"禁止对象字面量中的重复键\",{\"1\":{\"59\":1}}],[\"禁止重新分配\",{\"1\":{\"59\":1}}],[\"禁止空余的多行\",{\"1\":{\"59\":1}}],[\"禁止属性重复\",{\"1\":{\"59\":1}}],[\"禁止\",{\"1\":{\"59\":2}}],[\"禁止使用未声明的变量\",{\"1\":{\"59\":1}}],[\"禁止使用自定义\",{\"1\":{\"59\":1}}],[\"禁止使用\",{\"1\":{\"59\":3}}],[\"禁止定义未使用的变量\",{\"1\":{\"59\":1}}],[\"报错\",{\"1\":{\"250\":1}}],[\"报错如下\",{\"1\":{\"250\":1}}],[\"哈哈哈\",{\"1\":{\"250\":2,\"430\":2}}],[\"哈哈哈哈哈\",{\"1\":{\"337\":1,\"339\":1}}],[\"哈哈哈哈\",{\"1\":{\"236\":1}}],[\"早期的网站开发整个html页面是由服务器来渲染的\",{\"1\":{\"536\":1}}],[\"早期的探索\",{\"0\":{\"32\":1}}],[\"早期使用较多的配置方式\",{\"1\":{\"249\":1}}],[\"括号等\",{\"1\":{\"247\":1}}],[\"运算符\",{\"1\":{\"247\":1}}],[\"运行以下命令来创建一个新项目\",{\"1\":{\"268\":1}}],[\"运行webpack\",{\"1\":{\"253\":1}}],[\"运行后不显示\",{\"1\":{\"250\":1}}],[\"运行上述代码\",{\"1\":{\"195\":1}}],[\"运行时+编译器\",{\"1\":{\"530\":2}}],[\"运行时代码\",{\"1\":{\"243\":1}}],[\"运行时才执行require内容\",{\"1\":{\"195\":1}}],[\"运行时加载\",{\"1\":{\"195\":1}}],[\"运行即可\",{\"1\":{\"186\":1}}],[\"运行成功后\",{\"1\":{\"69\":1}}],[\"运行命令\",{\"1\":{\"69\":1}}],[\"运行配置最底部设置\",{\"1\":{\"68\":1}}],[\"运行到小程序模拟器\",{\"1\":{\"67\":1}}],[\"运行项目\",{\"0\":{\"66\":1,\"69\":1},\"1\":{\"67\":1}}],[\"运行\",{\"0\":{\"67\":1,\"68\":1},\"1\":{\"61\":1,\"68\":1,\"213\":1,\"254\":1}}],[\"运行的需求持续演进\",{\"1\":{\"1\":1}}],[\"序列\",{\"1\":{\"247\":1}}],[\"词法分析\",{\"1\":{\"247\":1}}],[\"旨在教授编译器原理和实践\",{\"1\":{\"246\":1}}],[\"底层原理\",{\"0\":{\"246\":1}}],[\"底部内容放这里\",{\"1\":{\"291\":1}}],[\"底部窗口的背景色\",{\"1\":{\"142\":1,\"146\":1}}],[\"底部\",{\"1\":{\"139\":1}}],[\"避免无限重定向\",{\"1\":{\"559\":1}}],[\"避免运行时的编译开销\",{\"1\":{\"531\":1}}],[\"避免内存泄漏\",{\"1\":{\"511\":1}}],[\"避免用箭头函数来定义生命周期钩子\",{\"1\":{\"493\":1}}],[\"避免在每个文件中重复使用\",{\"1\":{\"243\":1}}],[\"避免不同项目之间的版本冲突\",{\"1\":{\"209\":1}}],[\"声明页面等辅助功能以及许多其他事情都很有用\",{\"1\":{\"560\":1}}],[\"声明式导航\",{\"0\":{\"545\":1},\"1\":{\"547\":1}}],[\"声明式\",{\"1\":{\"544\":1,\"550\":1,\"553\":1}}],[\"声明式编程关注的是\",{\"1\":{\"525\":1}}],[\"声明式编程和命令式编程\",{\"0\":{\"525\":1}}],[\"声明的属性\",{\"1\":{\"475\":1}}],[\"声明的顶层的绑定\",{\"1\":{\"402\":1}}],[\"声明的简单\",{\"1\":{\"241\":1}}],[\"声明转换为\",{\"1\":{\"243\":1}}],[\"声明\",{\"1\":{\"241\":1,\"243\":1,\"401\":1}}],[\"声明函数\",{\"1\":{\"59\":1}}],[\"许多现代的\",{\"1\":{\"241\":1}}],[\"建的\",{\"1\":{\"354\":1}}],[\"建立js映射文件\",{\"1\":{\"239\":1}}],[\"建议查阅相应框架的官方文档或社区资源\",{\"1\":{\"257\":1}}],[\"建议开发人员在使用vue框架时正确配置bundler\",{\"1\":{\"251\":1}}],[\"建议开发者具备ts语言开发能力\",{\"1\":{\"1\":1}}],[\"建议\",{\"1\":{\"148\":1}}],[\"建议尺寸为\",{\"1\":{\"143\":2}}],[\"建议使用长度单位\",{\"1\":{\"87\":1}}],[\"建议使用$r方式来管理需全局使用的图片资源\",{\"1\":{\"9\":1}}],[\"建议勾选以下\",{\"1\":{\"71\":1}}],[\"建议前缀\",{\"1\":{\"65\":1}}],[\"建议清理环境变量中对于node\",{\"1\":{\"27\":1}}],[\"建议用默认路径\",{\"1\":{\"26\":1}}],[\"建议先移除\",{\"1\":{\"26\":1}}],[\"建议选择让工具重新安装\",{\"1\":{\"26\":1}}],[\"复用无状态逻辑的库有很多\",{\"1\":{\"502\":1}}],[\"复用相同类型元素的算法\",{\"1\":{\"460\":1}}],[\"复制预习资料<shopcar\",{\"1\":{\"647\":1}}],[\"复制标签和样式\",{\"1\":{\"603\":1}}],[\"复制其中所有的代码\",{\"1\":{\"524\":1}}],[\"复制自己需要生成代码片段的代码\",{\"1\":{\"428\":1}}],[\"复制到剪切版\",{\"1\":{\"270\":1}}],[\"复制到的位置\",{\"1\":{\"238\":1}}],[\"复制的规则在patterns中设置\",{\"1\":{\"238\":1}}],[\"复杂度适中\",{\"1\":{\"183\":1}}],[\"复杂组件不能被展示或不能响应交互\",{\"1\":{\"116\":1}}],[\"环境变量注入等\",{\"1\":{\"233\":1}}],[\"环境错误处理\",{\"0\":{\"27\":1}}],[\"种新的模块类型\",{\"1\":{\"231\":1}}],[\"刚才通过\",{\"1\":{\"230\":1}}],[\"截图hash的长度\",{\"1\":{\"228\":1}}],[\"包装一次\",{\"1\":{\"509\":1}}],[\"包\",{\"1\":{\"267\":1}}],[\"包含5个核心属性\",{\"1\":{\"612\":1}}],[\"包含5个核心概念\",{\"1\":{\"609\":1}}],[\"包含了一个\",{\"1\":{\"497\":1}}],[\"包含了\",{\"1\":{\"489\":1}}],[\"包含了模板编译器\",{\"1\":{\"250\":1}}],[\"包含以下属性\",{\"1\":{\"408\":1}}],[\"包含\",{\"0\":{\"279\":1}}],[\"包含一个hash值等\",{\"1\":{\"228\":1}}],[\"包括对template模板的编译代码\",{\"1\":{\"530\":1}}],[\"包括data\",{\"1\":{\"521\":1}}],[\"包括编译方面的优化\",{\"1\":{\"520\":1}}],[\"包括变量\",{\"1\":{\"402\":1}}],[\"包括小程序的开发也是采用组件化开发的思想\",{\"1\":{\"333\":1}}],[\"包括本地计算机上的回环接口和其他网络接口\",{\"1\":{\"260\":1}}],[\"包括\",{\"1\":{\"183\":1,\"201\":1,\"267\":1}}],[\"包括需要执行动画的属性\",{\"1\":{\"159\":1}}],[\"包括最大化窗口\",{\"1\":{\"139\":1}}],[\"包括签名\",{\"1\":{\"34\":1}}],[\"包括buildoption\",{\"1\":{\"34\":1}}],[\"扩展\",{\"0\":{\"684\":1}}],[\"扩展名\",{\"1\":{\"228\":1}}],[\"扩展的特性有\",{\"1\":{\"147\":1}}],[\"反而影响用户感受\",{\"1\":{\"282\":1}}],[\"反而会影响页面的请求速度\",{\"1\":{\"226\":1}}],[\"反例\",{\"1\":{\"23\":6}}],[\"反例如下\",{\"1\":{\"23\":5}}],[\"您的问题\",{\"1\":{\"476\":1}}],[\"您还可以使用图形界面使用以下vue\",{\"1\":{\"268\":1}}],[\"您已经将\",{\"1\":{\"223\":1}}],[\"您可以使用postcss来编写现代css语法\",{\"1\":{\"220\":1}}],[\"您可以通过\",{\"1\":{\"178\":1}}],[\"您可以在\",{\"1\":{\"178\":1}}],[\"转变为驼峰式命名\",{\"1\":{\"437\":1}}],[\"转为一个其中全是\",{\"1\":{\"349\":1}}],[\"转换完成后\",{\"1\":{\"246\":1}}],[\"转换成number类型\",{\"1\":{\"415\":1,\"416\":1}}],[\"转换成浏览器可以直接识别的另外一段源代码\",{\"1\":{\"246\":1}}],[\"转换成另一种源代码\",{\"1\":{\"246\":1}}],[\"转换\",{\"1\":{\"243\":2,\"246\":1,\"247\":1}}],[\"转换语法\",{\"1\":{\"243\":1}}],[\"转换为\",{\"1\":{\"243\":1}}],[\"转换为普通的\",{\"1\":{\"243\":2,\"244\":1}}],[\"转换为普通\",{\"1\":{\"241\":1}}],[\"转换为模块\",{\"1\":{\"214\":1}}],[\"转成另外一段代码\",{\"1\":{\"246\":1}}],[\"转成\",{\"1\":{\"243\":1}}],[\"转成base64的uri\",{\"1\":{\"225\":1}}],[\"转成大多数浏览器认识的css\",{\"1\":{\"223\":1}}],[\"转化的结果如下\",{\"1\":{\"221\":1}}],[\"查询\",{\"1\":{\"539\":2,\"547\":1}}],[\"查看现有路由\",{\"0\":{\"575\":1}}],[\"查看执行对应的源码\",{\"1\":{\"532\":1}}],[\"查看效果\",{\"1\":{\"252\":1}}],[\"查看示例代码\",{\"1\":{\"132\":1}}],[\"查找postcss在构建工具中的扩展\",{\"1\":{\"219\":1}}],[\"资源管理\",{\"1\":{\"233\":1}}],[\"资源模块类型\",{\"1\":{\"231\":1}}],[\"资源\",{\"1\":{\"215\":1,\"263\":1}}],[\"资源文件img\",{\"1\":{\"205\":1}}],[\"入口文件\",{\"1\":{\"269\":1}}],[\"入口的html文件\",{\"1\":{\"269\":1}}],[\"入口\",{\"1\":{\"213\":1}}],[\"依旧存储在data中\",{\"1\":{\"593\":1,\"690\":1}}],[\"依然使用之前的一套api即可\",{\"1\":{\"537\":1}}],[\"依然需要使用\",{\"1\":{\"355\":1}}],[\"依然需要通过工具对代码进行构建\",{\"1\":{\"339\":1}}],[\"依然可以正常打包\",{\"1\":{\"211\":1}}],[\"依赖包\",{\"1\":{\"691\":1}}],[\"依赖于\",{\"1\":{\"656\":1}}],[\"依赖注入\",{\"1\":{\"347\":1}}],[\"依赖关系图\",{\"1\":{\"213\":1}}],[\"依赖关系转换为单个模块\",{\"1\":{\"197\":1}}],[\"依赖图\",{\"1\":{\"204\":1}}],[\"依赖的模块又基于另一些模块\",{\"1\":{\"197\":1}}],[\"依赖预构建主要有两个目的\",{\"1\":{\"197\":1}}],[\"依赖预构建\",{\"1\":{\"197\":1}}],[\"依赖解析\",{\"1\":{\"197\":1}}],[\"依赖\",{\"1\":{\"197\":2}}],[\"依赖处理\",{\"0\":{\"197\":1}}],[\"依赖加载成功后执行回调\",{\"1\":{\"195\":1}}],[\"依赖前置\",{\"1\":{\"195\":1}}],[\"依赖收集\",{\"1\":{\"182\":1}}],[\"依赖模块强缓存\",{\"1\":{\"182\":1}}],[\"继续执行父元素的事件处理函数\",{\"1\":{\"450\":1}}],[\"继续执行webpack命令\",{\"1\":{\"211\":1}}],[\"继承\",{\"0\":{\"308\":1,\"324\":1},\"1\":{\"500\":2}}],[\"继承已有的规则\",{\"1\":{\"59\":1}}],[\"继承了ts的所有特性\",{\"1\":{\"1\":1}}],[\"第五步是最特色的情况\",{\"1\":{\"464\":1}}],[\"第二个参数是配置对象\",{\"1\":{\"583\":1}}],[\"第二个参数是侦听的回调函数callback\",{\"1\":{\"479\":1}}],[\"第二个参数是要传递的\",{\"1\":{\"386\":1}}],[\"第二个参数是组件的配置对象\",{\"1\":{\"337\":1}}],[\"第二个参数可以给一个默认值\",{\"1\":{\"384\":1}}],[\"第二个参数值\",{\"1\":{\"384\":1}}],[\"第二个参数\",{\"1\":{\"349\":1}}],[\"第二个规则\",{\"1\":{\"263\":1}}],[\"第二步的操作是从尾部开始进行遍历\",{\"1\":{\"464\":1}}],[\"第二步\",{\"1\":{\"209\":1,\"219\":1,\"428\":1}}],[\"第一次会执行\",{\"1\":{\"381\":1}}],[\"第一次不会直接执行\",{\"1\":{\"378\":1}}],[\"第一个形参分别是什么\",{\"1\":{\"638\":1}}],[\"第一个参数是应用程序中\",{\"1\":{\"583\":1}}],[\"第一个参数是要侦听的源\",{\"1\":{\"479\":1}}],[\"第一个参数是组件的名称\",{\"1\":{\"335\":1}}],[\"第一个参数既可以是一个字符串\",{\"1\":{\"386\":1}}],[\"第一个参数key\",{\"1\":{\"384\":1}}],[\"第一个参数\",{\"1\":{\"349\":1}}],[\"第一个规则\",{\"1\":{\"263\":1}}],[\"第一步的操作是从头开始进行遍历\",{\"1\":{\"464\":1}}],[\"第一步\",{\"1\":{\"209\":1,\"219\":1,\"428\":1}}],[\"第四步是如果新的节点遍历完毕\",{\"1\":{\"464\":1}}],[\"第四步\",{\"1\":{\"209\":1}}],[\"第三个参数\",{\"1\":{\"571\":1}}],[\"第三个参数next\",{\"1\":{\"559\":1}}],[\"第三个参数是额外的其他选项\",{\"1\":{\"479\":1}}],[\"第三个参数是子节点\",{\"1\":{\"386\":1}}],[\"第三步是如果旧节点遍历完毕\",{\"1\":{\"464\":1}}],[\"第三步\",{\"1\":{\"209\":1,\"428\":1}}],[\"第三方的脚手架事实上是没有使用webpack\",{\"1\":{\"207\":1}}],[\"第三方库的使用\",{\"0\":{\"169\":1}}],[\"隔离环境\",{\"1\":{\"209\":1}}],[\"件是否需要转成es5之前的语法\",{\"1\":{\"208\":1}}],[\"命名空间\",{\"0\":{\"676\":1}}],[\"命名空间冲突\",{\"1\":{\"514\":1}}],[\"命名的路由\",{\"1\":{\"550\":1}}],[\"命名路由\",{\"0\":{\"546\":1}}],[\"命名\",{\"0\":{\"507\":1}}],[\"命名参数机制\",{\"1\":{\"36\":1}}],[\"命令式编程关注的是\",{\"1\":{\"525\":1}}],[\"命令的选项\",{\"1\":{\"272\":1}}],[\"命令行参数\",{\"1\":{\"270\":1}}],[\"命令行使用\",{\"0\":{\"242\":1}}],[\"命令行使用postcss\",{\"0\":{\"220\":1}}],[\"命令会启动一个开发服务器\",{\"1\":{\"270\":1}}],[\"命令配置和包管理文件\",{\"1\":{\"269\":1}}],[\"命令时\",{\"1\":{\"254\":1}}],[\"命令\",{\"1\":{\"208\":1,\"267\":1}}],[\"己的vue\",{\"1\":{\"207\":1}}],[\"本身一样\",{\"1\":{\"557\":1}}],[\"本身对\",{\"1\":{\"519\":1}}],[\"本身都是\",{\"1\":{\"379\":1}}],[\"本质\",{\"1\":{\"547\":1}}],[\"本质的区别\",{\"1\":{\"455\":1}}],[\"本质上\",{\"1\":{\"204\":1}}],[\"本地属性名list\",{\"1\":{\"674\":1}}],[\"本地绑定\",{\"1\":{\"500\":1}}],[\"本地初始化\",{\"1\":{\"36\":1}}],[\"本地设备\",{\"1\":{\"30\":1}}],[\"日常的开发中根本就没有面临这些问题\",{\"1\":{\"203\":1}}],[\"日常开发推荐使用该模板\",{\"1\":{\"67\":1}}],[\"合并到计算属性中\",{\"1\":{\"619\":1}}],[\"合并以及其他相关的优化\",{\"1\":{\"203\":1}}],[\"合法值\",{\"1\":{\"132\":1}}],[\"事实上都是一些\",{\"1\":{\"520\":1}}],[\"事实上还可以有一个components选项\",{\"1\":{\"338\":1}}],[\"事实上我们可以将babel看成就是一个编译器\",{\"1\":{\"246\":1}}],[\"事实上\",{\"1\":{\"208\":1,\"223\":1,\"241\":1,\"385\":1,\"461\":1}}],[\"事实上vue的源码当中就是对methods中的所有函数进行了遍历\",{\"1\":{\"529\":1}}],[\"事实上vue\",{\"1\":{\"203\":1}}],[\"事实上随着前端的快速发展\",{\"1\":{\"203\":1}}],[\"事件时将值的首字母大写\",{\"1\":{\"489\":1}}],[\"事件后同步更新而不是\",{\"1\":{\"486\":1}}],[\"事件后更新数据\",{\"1\":{\"486\":2}}],[\"事件冒泡到父元素\",{\"1\":{\"450\":1}}],[\"事件可以参考\",{\"1\":{\"447\":1}}],[\"事件监听器或者请求数据\",{\"1\":{\"510\":1}}],[\"事件监听器的逻辑也封装进一个组合式函数中\",{\"1\":{\"503\":1}}],[\"事件监听器应以\",{\"1\":{\"391\":1}}],[\"事件监听是否为\",{\"1\":{\"139\":1,\"146\":1}}],[\"事件\",{\"1\":{\"314\":1,\"331\":1}}],[\"事件来尝试自动判断过渡何时结束\",{\"1\":{\"163\":1}}],[\"事件触发时\",{\"1\":{\"343\":1,\"481\":1}}],[\"事件触发时被移除\",{\"1\":{\"160\":1}}],[\"事件触发等\",{\"1\":{\"145\":1}}],[\"事件响应函数\",{\"1\":{\"95\":1,\"107\":1}}],[\"事件处理函数等\",{\"1\":{\"94\":1}}],[\"事件绑定\",{\"1\":{\"65\":1}}],[\"事件方法具体使用可参考基于arkts的声明式开发范式\",{\"1\":{\"3\":1}}],[\"事件方法\",{\"1\":{\"3\":1}}],[\"事件名重复\",{\"1\":{\"3\":1}}],[\"热更新运行时会将新的模块代码与旧的模块代码进行比较\",{\"1\":{\"258\":1}}],[\"热更新\",{\"1\":{\"201\":1,\"580\":1}}],[\"热更新原理\",{\"0\":{\"201\":1}}],[\"连接\",{\"1\":{\"201\":1}}],[\"遇到一个\",{\"1\":{\"199\":1}}],[\"遇到模块加载命令import\",{\"1\":{\"195\":1}}],[\"便只需要发送一次请求了\",{\"1\":{\"197\":1}}],[\"便于系统扩展窗口形态\",{\"1\":{\"33\":1}}],[\"性能方面\",{\"0\":{\"520\":1}}],[\"性能\",{\"1\":{\"197\":1}}],[\"情况三\",{\"1\":{\"498\":1}}],[\"情况二\",{\"1\":{\"449\":1,\"498\":1}}],[\"情况一\",{\"1\":{\"449\":1,\"498\":1}}],[\"情况\",{\"1\":{\"197\":1}}],[\"兼容的代码\",{\"1\":{\"243\":1}}],[\"兼容性\",{\"1\":{\"197\":1}}],[\"兼容\",{\"1\":{\"197\":1}}],[\"返回的回调\",{\"1\":{\"574\":1}}],[\"返回的state对象\",{\"1\":{\"363\":1}}],[\"返回一条记录\",{\"1\":{\"552\":1}}],[\"返回一个对象\",{\"1\":{\"583\":1}}],[\"返回一个可变的\",{\"1\":{\"365\":1}}],[\"返回一个不变的\",{\"1\":{\"365\":1}}],[\"返回一个渲染函数将会阻止我们返回其他东西\",{\"1\":{\"350\":1}}],[\"返回给前端\",{\"1\":{\"536\":1}}],[\"返回给客户端进行展示\",{\"1\":{\"536\":1}}],[\"返回给客户端\",{\"1\":{\"197\":1}}],[\"返回值\",{\"0\":{\"509\":1},\"1\":{\"619\":1}}],[\"返回值对象默认情况下会进行合并\",{\"1\":{\"498\":1}}],[\"返回值会暴露给模板和其他的选项式\",{\"1\":{\"349\":1}}],[\"返回子孙组件中的错误\",{\"1\":{\"494\":1}}],[\"返回jsx写法\",{\"1\":{\"398\":1,\"399\":1}}],[\"返回render函数\",{\"1\":{\"389\":1}}],[\"返回自定义的h函数\",{\"1\":{\"388\":1}}],[\"返回出去\",{\"1\":{\"370\":1,\"371\":1}}],[\"返回\",{\"1\":{\"197\":1,\"354\":2,\"559\":2,\"571\":1}}],[\"返回上一页面或多级页面\",{\"1\":{\"130\":2}}],[\"处理起来就会变得非常复杂\",{\"1\":{\"333\":1}}],[\"处理时\",{\"1\":{\"238\":1}}],[\"处理文件的名称\",{\"1\":{\"228\":1}}],[\"处理文件的扩展名\",{\"1\":{\"228\":1}}],[\"处理css文件中的样式\",{\"1\":{\"214\":1}}],[\"处理vue项目的sfc文件\",{\"1\":{\"205\":1}}],[\"处理应用程序时\",{\"1\":{\"204\":1}}],[\"处理\",{\"1\":{\"197\":1,\"487\":1,\"541\":1}}],[\"处理的代价也很高\",{\"1\":{\"197\":1}}],[\"平时开发中\",{\"1\":{\"197\":1}}],[\"平衡应用能力和系统管控成本\",{\"1\":{\"33\":1}}],[\"格式化\",{\"1\":{\"415\":1}}],[\"格式\",{\"1\":{\"198\":1,\"653\":1}}],[\"格式时\",{\"1\":{\"197\":1}}],[\"格式data\",{\"1\":{\"9\":1}}],[\"^\",{\"1\":{\"197\":2,\"259\":1,\"262\":2,\"263\":3,\"265\":1}}],[\"改装\",{\"1\":{\"587\":1}}],[\"改写自定义指令\",{\"0\":{\"426\":1}}],[\"改进了开发服务器启动时间\",{\"1\":{\"197\":1}}],[\"改变时触发\",{\"1\":{\"561\":1}}],[\"改变时重新\",{\"1\":{\"505\":2}}],[\"改变了\",{\"1\":{\"559\":1,\"566\":1}}],[\"改变请求头中的origin字段\",{\"1\":{\"262\":1}}],[\"改变特殊的\",{\"1\":{\"155\":1}}],[\"改变状态数据\",{\"1\":{\"35\":1}}],[\"尽管在\",{\"1\":{\"496\":1}}],[\"尽管过渡\",{\"1\":{\"163\":1}}],[\"尽可能让它们饱和运行\",{\"1\":{\"196\":1}}],[\"超快的构建速度\",{\"1\":{\"196\":1}}],[\"超出打印宽度\",{\"1\":{\"59\":1,\"60\":1}}],[\"超出屏幕的内容无法滚动查看\",{\"1\":{\"18\":1}}],[\"导入\",{\"1\":{\"691\":1}}],[\"导入注入\",{\"1\":{\"612\":1}}],[\"导入注入到vue中\",{\"1\":{\"611\":1}}],[\"导入store对象\",{\"1\":{\"611\":1}}],[\"导入指令方法\",{\"1\":{\"426\":1}}],[\"导入的组件也可以直接使用\",{\"1\":{\"402\":1}}],[\"导入一个命名函数时候\",{\"1\":{\"197\":1}}],[\"导出store对象\",{\"1\":{\"611\":1}}],[\"导出响应式state对象\",{\"1\":{\"353\":1}}],[\"导出\",{\"1\":{\"350\":1}}],[\"导出资源的源代码\",{\"1\":{\"231\":1}}],[\"导出一个资源的\",{\"1\":{\"231\":1}}],[\"导出语句建立模块和内存的映射关系\",{\"1\":{\"195\":1}}],[\"导航时才可用\",{\"1\":{\"571\":1}}],[\"导航被确认\",{\"1\":{\"565\":1}}],[\"导航被触发\",{\"1\":{\"565\":1}}],[\"导航守卫可以访问组件实例\",{\"1\":{\"563\":1}}],[\"导航守卫\",{\"0\":{\"558\":1}}],[\"导航到不同的位置\",{\"0\":{\"550\":1}}],[\"导航栏样式\",{\"1\":{\"142\":1,\"146\":1}}],[\"导航栏标题文字内容\",{\"1\":{\"142\":1,\"146\":1}}],[\"导航栏标题\",{\"1\":{\"142\":1,\"146\":1}}],[\"导航栏背景颜色\",{\"1\":{\"142\":1,\"146\":1}}],[\"导航条\",{\"1\":{\"142\":1}}],[\"导航\",{\"1\":{\"130\":1}}],[\"导航组件\",{\"0\":{\"129\":1}}],[\"浏览器会向服务器发送一个\",{\"1\":{\"263\":1}}],[\"浏览器会发送\",{\"1\":{\"197\":1}}],[\"浏览器拿到两个新的文件后\",{\"1\":{\"258\":1}}],[\"浏览器\",{\"1\":{\"258\":1,\"554\":1}}],[\"浏览器便可以利用esm直接拿到js资源\",{\"1\":{\"200\":1}}],[\"浏览器就会报错\",{\"1\":{\"197\":1}}],[\"浏览器下载对应的文件\",{\"1\":{\"195\":1}}],[\"浏览器可以直接进行解析\",{\"1\":{\"191\":1}}],[\"降低浏览器压力\",{\"1\":{\"195\":1}}],[\"加快编译的速度\",{\"1\":{\"435\":1}}],[\"加一\",{\"1\":{\"388\":1}}],[\"加载成功和加载失败\",{\"1\":{\"504\":1}}],[\"加载中\",{\"1\":{\"504\":1}}],[\"加载中状态\",{\"1\":{\"284\":1}}],[\"加载组件和最终组件之间的替换太快可能产生闪烁\",{\"1\":{\"282\":1}}],[\"加载完成得很快\",{\"1\":{\"282\":1}}],[\"加载完依赖后立即执行依赖模块\",{\"1\":{\"195\":1}}],[\"加载失败后展示的组件\",{\"1\":{\"282\":1}}],[\"加载这两个文件\",{\"1\":{\"258\":1}}],[\"加载这些资源我们需要使用一些loader\",{\"1\":{\"231\":1}}],[\"加载器\",{\"1\":{\"213\":1}}],[\"加载器和插件等\",{\"1\":{\"213\":1}}],[\"加入配置\",{\"1\":{\"63\":1}}],[\"形成一个完整的js文件\",{\"1\":{\"195\":1}}],[\"整理出代码中的所有模块依赖关系\",{\"1\":{\"195\":1}}],[\"整个vuex的体系是\",{\"1\":{\"683\":1}}],[\"整个过程的示意图如下\",{\"1\":{\"619\":1}}],[\"整个页面会自动刷新\",{\"1\":{\"255\":1}}],[\"整个内容的显示和隐藏会非常的生硬\",{\"1\":{\"154\":1}}],[\"整个小程序只有一个\",{\"1\":{\"93\":1}}],[\"整个小程序框架系统分为两部分\",{\"1\":{\"90\":1}}],[\"紧接着出现了esm\",{\"1\":{\"195\":1}}],[\"给映射过来的state起别的名字\",{\"1\":{\"673\":1}}],[\"给state里变量赋值\",{\"1\":{\"651\":1}}],[\"给路由起名字\",{\"1\":{\"551\":1}}],[\"给予响应的提示\",{\"1\":{\"236\":1}}],[\"给浏览器返回\",{\"1\":{\"191\":1}}],[\"给一个appid\",{\"1\":{\"79\":1}}],[\"别名\",{\"0\":{\"190\":1,\"555\":1}}],[\"↗\",{\"1\":{\"186\":2}}],[\"✔\",{\"1\":{\"186\":3}}],[\"灵活适中\",{\"1\":{\"183\":1}}],[\"灵活扩展\",{\"1\":{\"180\":1}}],[\"既不会像parcel一样配置不灵活\",{\"1\":{\"183\":1}}],[\"压缩css等\",{\"1\":{\"220\":1}}],[\"压缩和优化图像等\",{\"1\":{\"214\":1}}],[\"压缩\",{\"1\":{\"183\":1,\"223\":1}}],[\"离开守卫\",{\"1\":{\"563\":1}}],[\"离开动画的结束状态\",{\"1\":{\"157\":1}}],[\"离开动画的生效状态\",{\"1\":{\"157\":1}}],[\"离开动画的起始状态\",{\"1\":{\"157\":1}}],[\"离散的源码编译打包成低版本\",{\"1\":{\"182\":1}}],[\"针对hmr慢\",{\"1\":{\"182\":1}}],[\"针对开发环境中的启动慢问题\",{\"1\":{\"182\":1}}],[\"针对此问题可以尝试如下措施\",{\"1\":{\"68\":1}}],[\"先执行这里\",{\"1\":{\"567\":1}}],[\"先执行一次前置守卫函数\",{\"1\":{\"566\":1}}],[\"先加载所有依赖模块\",{\"1\":{\"195\":1}}],[\"先启动开发服务器\",{\"1\":{\"182\":1}}],[\"先打包生成bundle\",{\"1\":{\"182\":1}}],[\"再创建与之对应的js文件\",{\"1\":{\"581\":1}}],[\"再添加路由\",{\"1\":{\"574\":1}}],[\"再通过v\",{\"1\":{\"483\":1}}],[\"再将其放在整体当中\",{\"1\":{\"333\":1}}],[\"再将这些组件组合嵌套在一起\",{\"1\":{\"299\":1,\"315\":1}}],[\"再根据这个只读引用\",{\"1\":{\"195\":1}}],[\"再启动开发服务器\",{\"1\":{\"182\":1}}],[\"再配合arkui开发框架中的系统组件及其相关的事件方法\",{\"1\":{\"1\":1}}],[\"发现一共有三个帐篷\",{\"1\":{\"592\":1,\"689\":1}}],[\"发现主要有如下不同\",{\"1\":{\"182\":1}}],[\"发射\",{\"1\":{\"404\":1}}],[\"发射事件\",{\"1\":{\"349\":1}}],[\"发射的事件这里可以标注一下\",{\"1\":{\"349\":1}}],[\"发生回退时\",{\"1\":{\"283\":1}}],[\"发送异步请求\",{\"1\":{\"651\":1,\"668\":1}}],[\"发送了一个名为\",{\"1\":{\"314\":1,\"331\":1}}],[\"发送一个单独的文件并导出\",{\"1\":{\"231\":1}}],[\"发送多个请求获取\",{\"1\":{\"199\":1}}],[\"发布的依赖项转换为\",{\"1\":{\"197\":1}}],[\"发音同\",{\"1\":{\"178\":1}}],[\"发音\",{\"1\":{\"178\":1}}],[\"代表之前的渲染中指令所绑定元素的\",{\"1\":{\"408\":1}}],[\"代表绑定元素的底层\",{\"1\":{\"408\":1}}],[\"代表如webpack\",{\"1\":{\"182\":1}}],[\"代理对象是由\",{\"1\":{\"354\":1}}],[\"代理对象\",{\"1\":{\"354\":1}}],[\"代理的原始对象\",{\"1\":{\"354\":2}}],[\"代理服务器会将请求头中的\",{\"1\":{\"262\":1}}],[\"代理服务器和api服务器没有跨域的问题\",{\"1\":{\"262\":1}}],[\"代理\",{\"1\":{\"262\":1}}],[\"代码上的对比\",{\"0\":{\"667\":1}}],[\"代码大全\",{\"1\":{\"480\":1}}],[\"代码片段\",{\"0\":{\"428\":1}}],[\"代码是非常的臃肿和难以维护的\",{\"1\":{\"299\":1,\"315\":1}}],[\"代码格式化工具\",{\"1\":{\"268\":1}}],[\"代码检查工具\",{\"1\":{\"268\":1}}],[\"代码抽离为单文件组件\",{\"1\":{\"250\":1}}],[\"代码生成\",{\"1\":{\"247\":1}}],[\"代码的内聚性非常差\",{\"1\":{\"521\":1}}],[\"代码的高亮\",{\"1\":{\"339\":1}}],[\"代码的预设\",{\"1\":{\"244\":1}}],[\"代码的小型程序\",{\"1\":{\"243\":1}}],[\"代码的运行环境以及微信小程序的特有功能\",{\"1\":{\"92\":1}}],[\"代码转换为向后兼容的旧版本\",{\"1\":{\"244\":1}}],[\"代码转换为向后兼容的\",{\"1\":{\"241\":1}}],[\"代码转译\",{\"1\":{\"182\":1}}],[\"代码中以\",{\"1\":{\"197\":1}}],[\"代码如下\",{\"1\":{\"197\":1}}],[\"代码优化\",{\"1\":{\"182\":1,\"246\":1,\"247\":1}}],[\"代码复杂度正相关\",{\"1\":{\"182\":1}}],[\"代码放置的目录\",{\"1\":{\"139\":1}}],[\"代码\",{\"1\":{\"136\":1,\"241\":1,\"243\":2,\"244\":3,\"271\":1,\"339\":1}}],[\"代码文件\",{\"1\":{\"136\":1}}],[\"代码示例\",{\"1\":{\"95\":1,\"113\":1,\"349\":1}}],[\"代码编写区域\",{\"1\":{\"82\":1}}],[\"代码不能执行\",{\"1\":{\"59\":1}}],[\"借鉴了snowpack\",{\"1\":{\"180\":1}}],[\"执行了demo\",{\"1\":{\"497\":1}}],[\"执行一些清除工作\",{\"1\":{\"376\":1}}],[\"执行原理\",{\"0\":{\"247\":1}}],[\"执行如下命令\",{\"1\":{\"217\":1}}],[\"执行脚本打包即可\",{\"1\":{\"209\":1}}],[\"执行webpack命令\",{\"1\":{\"207\":1}}],[\"执行效率更高\",{\"1\":{\"180\":1}}],[\"执行的动画时\",{\"1\":{\"168\":1,\"171\":1}}],[\"社群庞大\",{\"1\":{\"180\":1}}],[\"零配置\",{\"1\":{\"180\":1}}],[\"极速0配置\",{\"1\":{\"180\":1}}],[\"极速打包\",{\"1\":{\"180\":1}}],[\"偏向编程式\",{\"1\":{\"180\":1}}],[\"遵循commonjs规范打包js\",{\"1\":{\"180\":1}}],[\"预编译模板\",{\"1\":{\"531\":1}}],[\"预编译模块化方案\",{\"1\":{\"180\":2}}],[\"预期\",{\"1\":{\"447\":1}}],[\"预留不同\",{\"1\":{\"287\":1}}],[\"预设\",{\"0\":{\"244\":1},\"1\":{\"244\":1,\"248\":1}}],[\"预设就是相当于最佳实践\",{\"1\":{\"188\":1}}],[\"预先展示一个骨架页\",{\"1\":{\"115\":1}}],[\"经历一条很长的编译打包链条\",{\"1\":{\"182\":1}}],[\"经过优化的构建\",{\"1\":{\"179\":1}}],[\"经度\",{\"1\":{\"133\":1}}],[\"闪电般快速的热更新\",{\"1\":{\"179\":1}}],[\"至少会比webpack快10倍左右\",{\"1\":{\"178\":1}}],[\"打印结果如下\",{\"1\":{\"473\":1}}],[\"打印出元素\",{\"1\":{\"377\":1}}],[\"打印出来对应的元素\",{\"1\":{\"377\":1}}],[\"打包项目\",{\"1\":{\"532\":1}}],[\"打包后的资源直接被浏览器请求和解析\",{\"1\":{\"258\":1}}],[\"打包依然会报错\",{\"1\":{\"250\":1}}],[\"打包一个个模块\",{\"1\":{\"213\":1}}],[\"打包html资源文件\",{\"1\":{\"205\":1}}],[\"打包bundler\",{\"1\":{\"204\":1}}],[\"打包优化等的\",{\"1\":{\"203\":1}}],[\"打包合并\",{\"1\":{\"182\":1}}],[\"打包文件小且干净\",{\"1\":{\"180\":1}}],[\"打包你的代码\",{\"1\":{\"178\":1}}],[\"打开链接\",{\"1\":{\"524\":1}}],[\"打开index\",{\"1\":{\"252\":1}}],[\"打开小程序\",{\"1\":{\"132\":1}}],[\"打开名片\",{\"1\":{\"132\":1}}],[\"打开到应用内的某个页面\",{\"1\":{\"130\":2}}],[\"打开交流窗口等等功能\",{\"1\":{\"128\":1}}],[\"打开的规则作为警告\",{\"1\":{\"59\":1}}],[\"丰富的功能\",{\"1\":{\"179\":1}}],[\"丰富的内建功能\",{\"1\":{\"178\":1}}],[\"丰富模板的数据预处理能力\",{\"1\":{\"107\":1}}],[\"法语意为\",{\"1\":{\"178\":1}}],[\"演练\",{\"0\":{\"176\":1}}],[\"技巧平滑地到达动画终点\",{\"1\":{\"175\":1}}],[\"显式地监视\",{\"1\":{\"508\":1}}],[\"显式配置\",{\"1\":{\"175\":1}}],[\"显示与\",{\"1\":{\"543\":1}}],[\"显示原始的mustache标签\",{\"1\":{\"435\":1}}],[\"显示不同的组件\",{\"1\":{\"274\":1}}],[\"显示结果是一样的\",{\"1\":{\"225\":1}}],[\"显示区域尺寸也会随着屏幕旋转而变化\",{\"1\":{\"113\":1}}],[\"推荐里面传递一个形参的写法\",{\"1\":{\"583\":1}}],[\"推荐两种做法\",{\"1\":{\"480\":1}}],[\"推荐通过元素的\",{\"1\":{\"408\":1}}],[\"推荐使用以下写法\",{\"1\":{\"349\":1}}],[\"推荐\",{\"1\":{\"267\":1,\"616\":1,\"693\":1}}],[\"推荐用\",{\"1\":{\"135\":1}}],[\"推导\",{\"1\":{\"175\":1}}],[\"容器本身\",{\"1\":{\"173\":1}}],[\"容器组件\",{\"0\":{\"13\":1}}],[\"认识前端路由\",{\"0\":{\"535\":1}}],[\"认识计算属性\",{\"0\":{\"468\":1}}],[\"认识组件化开发\",{\"0\":{\"332\":1,\"333\":1}}],[\"认识组件的嵌套\",{\"0\":{\"299\":1,\"315\":1}}],[\"认识组件\",{\"0\":{\"286\":1}}],[\"认识模块热替换\",{\"0\":{\"255\":1}}],[\"认识\",{\"0\":{\"219\":1,\"347\":1,\"461\":1,\"496\":1,\"517\":1}}],[\"认识webpack\",{\"0\":{\"203\":1}}],[\"认识列表的过渡\",{\"0\":{\"173\":1}}],[\"认识动画\",{\"0\":{\"154\":1}}],[\"非父子关系\",{\"1\":{\"590\":1}}],[\"非父子组件之间的通信\",{\"0\":{\"312\":1,\"329\":1}}],[\"非响应式的对象\",{\"1\":{\"349\":2}}],[\"非props的attribute\",{\"1\":{\"308\":1,\"324\":1}}],[\"非prop的attribute将只能通过$attrs变量来访问\",{\"1\":{\"308\":1,\"324\":1}}],[\"非prop的attribute是指那些被绑定到组件\",{\"1\":{\"307\":1,\"323\":1}}],[\"非\",{\"0\":{\"307\":1,\"323\":1}}],[\"非活跃的组件将会被缓存\",{\"1\":{\"278\":1}}],[\"非常重要的两个设备就是路由器和交换机\",{\"1\":{\"535\":1}}],[\"非常简单\",{\"1\":{\"446\":1}}],[\"非常简单的编译器实现\",{\"1\":{\"246\":1}}],[\"非常有用\",{\"1\":{\"170\":1}}],[\"非原生能力\",{\"1\":{\"180\":1}}],[\"非页面栈最底层页面或非tabbar内页面中的导航栏展示home键\",{\"1\":{\"142\":1,\"146\":1}}],[\"主流构建工具对比\",{\"0\":{\"180\":1}}],[\"主页\",{\"1\":{\"170\":1}}],[\"主要是将许多项目的代码存储在同一个\",{\"1\":{\"519\":1}}],[\"主要应用于虚拟\",{\"1\":{\"464\":1}}],[\"主要好处\",{\"1\":{\"461\":1}}],[\"主要内容放这里\",{\"1\":{\"291\":1}}],[\"主要内容\",{\"1\":{\"284\":1}}],[\"主要就是两个步骤\",{\"1\":{\"219\":1}}],[\"主要有两个参数\",{\"1\":{\"349\":1}}],[\"主要有\",{\"1\":{\"82\":1}}],[\"主要问题是在开发过程中这些标签被认为了是\",{\"1\":{\"63\":1}}],[\"主要包含hap包的配置信息\",{\"1\":{\"34\":1}}],[\"跨组件通信能力\",{\"1\":{\"587\":1}}],[\"跨平台\",{\"1\":{\"461\":1}}],[\"跨平台的动画库为我们的web项目\",{\"1\":{\"170\":1}}],[\"跨模块调用\",{\"1\":{\"9\":1}}],[\"库存+5<\",{\"1\":{\"642\":1}}],[\"库存\",{\"1\":{\"615\":1,\"624\":1,\"643\":1}}],[\"库存现在已经为零\",{\"1\":{\"592\":1,\"689\":1}}],[\"库\",{\"0\":{\"314\":1,\"331\":1}}],[\"库或\",{\"1\":{\"271\":1}}],[\"库依赖等\",{\"1\":{\"209\":1}}],[\"库模式\",{\"1\":{\"180\":1}}],[\"库执行动画的一个示例\",{\"1\":{\"168\":1}}],[\"库的方法\",{\"1\":{\"57\":1}}],[\"除外\",{\"1\":{\"500\":1}}],[\"除了用\",{\"1\":{\"582\":1}}],[\"除了使用\",{\"1\":{\"549\":1}}],[\"除了使用这些指令之外\",{\"1\":{\"409\":1}}],[\"除了\",{\"1\":{\"313\":1,\"330\":1,\"391\":1,\"408\":1,\"544\":1,\"546\":1}}],[\"除了父子组件之间的通信之外\",{\"1\":{\"312\":1,\"329\":1}}],[\"除了对象方式的proxy选项外\",{\"1\":{\"262\":1}}],[\"除了ie\",{\"1\":{\"195\":1}}],[\"除了性能稍好一些之外\",{\"1\":{\"168\":1,\"171\":1}}],[\"除了通过命令行参数\",{\"1\":{\"270\":1}}],[\"除了通过\",{\"1\":{\"166\":1}}],[\"除非你已经清晰知道这两者的关系\",{\"1\":{\"97\":1}}],[\"除非在\",{\"1\":{\"59\":1}}],[\"然而和守卫不同的是\",{\"1\":{\"560\":1}}],[\"然而在某些场景下插槽的内容可能想要同时使用父组件域内和子组件域内的数据\",{\"1\":{\"294\":1}}],[\"然而\",{\"1\":{\"163\":1,\"164\":1,\"185\":1,\"250\":1,\"306\":1,\"322\":1,\"500\":1,\"514\":1,\"530\":1,\"559\":1}}],[\"然后注入到vue实例\",{\"1\":{\"647\":1}}],[\"然后进行一个新的导航\",{\"1\":{\"566\":1}}],[\"然后导出了\",{\"1\":{\"350\":1}}],[\"然后解构\",{\"1\":{\"349\":1}}],[\"然后解析成模块记录\",{\"1\":{\"195\":1}}],[\"然后可以通过this\",{\"1\":{\"342\":1}}],[\"然后你在使用这个组件时添加了一个class或style属性\",{\"1\":{\"307\":1,\"323\":1}}],[\"然后是\",{\"1\":{\"264\":1}}],[\"然后再提交\",{\"1\":{\"695\":1}}],[\"然后再冒泡到该元素的父元素\",{\"1\":{\"450\":1}}],[\"然后再在\",{\"1\":{\"264\":1}}],[\"然后再自己配置一下vite\",{\"1\":{\"186\":1}}],[\"然后使用热更新运行时\",{\"1\":{\"258\":1}}],[\"然后使用各种插件对其进行处理\",{\"1\":{\"220\":1}}],[\"然后在前端对这些请求回来的资源进行渲染\",{\"1\":{\"537\":1}}],[\"然后在开发服务器中启用hmr\",{\"1\":{\"257\":1}}],[\"然后在其完成之后再执行元素的进入动画\",{\"1\":{\"164\":1}}],[\"然后遍历图结构\",{\"1\":{\"213\":1}}],[\"然后将你项目中所需的每一个模块组合成一个或多个\",{\"1\":{\"204\":1}}],[\"然后将其插入到head中\",{\"1\":{\"197\":1}}],[\"然后按照导入\",{\"1\":{\"195\":1}}],[\"然后把nodejs的模块编译成浏览器可用的模块\",{\"1\":{\"195\":1}}],[\"然后下一步选择开发语言\",{\"1\":{\"186\":1}}],[\"然后numcounter加1\",{\"1\":{\"174\":1}}],[\"然后杀死小程序再次进入\",{\"1\":{\"117\":1}}],[\"然后等待逻辑层初始化完毕并接收逻辑层发送的数据\",{\"1\":{\"115\":1}}],[\"然后点击启动即可\",{\"1\":{\"30\":1}}],[\"然后\",{\"1\":{\"30\":1,\"186\":1,\"276\":1,\"328\":1}}],[\"延迟\",{\"1\":{\"282\":1}}],[\"延迟执行\",{\"1\":{\"195\":1}}],[\"延迟嵌套元素的进入以获得交错效果\",{\"1\":{\"163\":1}}],[\"延迟与速度曲线类型\",{\"1\":{\"157\":2}}],[\"到\",{\"1\":{\"521\":1}}],[\"到表达式\",{\"1\":{\"437\":1}}],[\"到该组件的\",{\"1\":{\"418\":1}}],[\"到指定的版本\",{\"1\":{\"267\":1}}],[\"到被加载的那个模块内取值\",{\"1\":{\"195\":1}}],[\"到底使用哪一个取决于元素应用的\",{\"1\":{\"162\":1}}],[\"到详情页<\",{\"1\":{\"130\":1}}],[\"名短横线分隔\",{\"1\":{\"442\":1}}],[\"名可以用驼峰式\",{\"1\":{\"442\":1}}],[\"名称\",{\"1\":{\"437\":1}}],[\"名就是注册的组件名\",{\"1\":{\"338\":1}}],[\"名\",{\"1\":{\"161\":1}}],[\"他以为库存里还有两个\",{\"1\":{\"592\":1,\"689\":1}}],[\"他以为库存里还有一个\",{\"1\":{\"592\":1,\"689\":1}}],[\"他们分别对帐篷的数量做了一次盘点\",{\"1\":{\"592\":1,\"689\":1}}],[\"他们的优先级高于普通的类名\",{\"1\":{\"161\":1}}],[\"他使用复杂度介于parcel和webpack的中间\",{\"1\":{\"183\":1}}],[\"他也会有不同的表现\",{\"1\":{\"123\":1}}],[\"传送\",{\"1\":{\"418\":1}}],[\"传到一个外部函数中并保持响应性\",{\"1\":{\"349\":1}}],[\"传入事件\",{\"1\":{\"449\":1}}],[\"传入不同的内容给不同名字的插槽\",{\"1\":{\"291\":1}}],[\"传入一个\",{\"1\":{\"164\":1}}],[\"传递一个\",{\"1\":{\"571\":1}}],[\"传递回调\",{\"1\":{\"563\":1}}],[\"传递回调的唯一守卫\",{\"1\":{\"563\":1}}],[\"传递给路由配置的\",{\"1\":{\"562\":1}}],[\"传递给指令的参数\",{\"1\":{\"408\":1}}],[\"传递给指令的值\",{\"1\":{\"408\":1}}],[\"传递具名插槽\",{\"1\":{\"391\":1}}],[\"传递单个默认插槽\",{\"1\":{\"391\":1}}],[\"传递\",{\"1\":{\"391\":1}}],[\"传递参数给父组件\",{\"1\":{\"310\":1,\"326\":1}}],[\"传递的数据是否符合要求\",{\"1\":{\"305\":1,\"321\":1}}],[\"传递字符串\",{\"1\":{\"215\":1}}],[\"传递以下的\",{\"1\":{\"161\":1}}],[\"传参\",{\"1\":{\"65\":1}}],[\"你甚至可以\",{\"1\":{\"584\":1}}],[\"你使用什么库并不重要\",{\"1\":{\"584\":1}}],[\"你可能会认为可以通过一行简单的\",{\"1\":{\"580\":1}}],[\"你可能会最终发现组件多得难以查询和理解\",{\"1\":{\"512\":1}}],[\"你可能想在应用程序已经运行的时候添加或删除路由\",{\"1\":{\"572\":1}}],[\"你可能想要一个自定义组件的\",{\"1\":{\"489\":1}}],[\"你可能希望将任意信息附加到路由上\",{\"1\":{\"569\":1}}],[\"你可能要把\",{\"1\":{\"555\":1}}],[\"你可能已经注意到了\",{\"1\":{\"509\":1}}],[\"你可以返回一个\",{\"1\":{\"571\":1}}],[\"你可以让它变得更流畅\",{\"1\":{\"571\":1}}],[\"你可以提供一个\",{\"1\":{\"571\":1}}],[\"你可以提供一个空的嵌套路径\",{\"1\":{\"557\":1}}],[\"你可以提供一个空字符串\",{\"1\":{\"550\":1}}],[\"你可以为路由组件添加以下配置\",{\"1\":{\"563\":1}}],[\"你可以直接在路由配置上定义\",{\"1\":{\"561\":1}}],[\"你可以根据自己的需要\",{\"1\":{\"557\":1}}],[\"你可以把它放在任何地方\",{\"1\":{\"542\":1}}],[\"你可以传入回调数组\",{\"1\":{\"478\":1}}],[\"你可以将元信息和动态的\",{\"1\":{\"570\":1}}],[\"你可以将这些提取出的组合式函数看作是可以相互通信的组件范围内的服务\",{\"1\":{\"512\":1}}],[\"你可以将返回的对象用\",{\"1\":{\"509\":1}}],[\"你可以将依赖注入看作是\",{\"1\":{\"313\":1,\"330\":1}}],[\"你可以将作用域插槽类比为一个传入子组件的函数\",{\"1\":{\"294\":1}}],[\"你可以将插槽名作为一个变量来传递给v\",{\"1\":{\"292\":1}}],[\"你可以这样使用动态插槽名\",{\"1\":{\"292\":1}}],[\"你可以这样导入它\",{\"1\":{\"250\":1}}],[\"你可以指定应用程序在开发服务器上监听的端口\",{\"1\":{\"261\":1}}],[\"你可以使用嵌套路由配置来表达这种关系\",{\"1\":{\"557\":1}}],[\"你可以使用emits选项来对子组件触发的自定义事件进行校验\",{\"1\":{\"311\":1,\"327\":1}}],[\"你可以使用驼峰式\",{\"1\":{\"306\":1,\"322\":1}}],[\"你可以使用\",{\"1\":{\"257\":1,\"267\":1,\"272\":1,\"276\":1,\"328\":1,\"458\":1,\"559\":1}}],[\"你可以配置\",{\"1\":{\"252\":1}}],[\"你可以在它们里面\",{\"1\":{\"584\":1}}],[\"你可以在路由组件内直接定义路由导航守卫\",{\"1\":{\"562\":1}}],[\"你可以在同一个路由中设置有多个\",{\"1\":{\"544\":1}}],[\"你可以在这里传入配置参数\",{\"1\":{\"540\":1}}],[\"你可以在选项式\",{\"1\":{\"351\":1}}],[\"你可以在不同组件之间进行简单而方便的通信\",{\"1\":{\"314\":1,\"331\":1}}],[\"你可以在任何组件中使用\",{\"1\":{\"314\":1,\"331\":1}}],[\"你可以在任何组件中访问它\",{\"1\":{\"314\":1,\"331\":1}}],[\"你可以在组件中定义一个inheritattrs\",{\"1\":{\"308\":1,\"324\":1}}],[\"你可以在父组件中定义一个数据属性\",{\"1\":{\"276\":1,\"328\":1}}],[\"你可以在angular项目的配置文件中进行相应的配置\",{\"1\":{\"257\":1}}],[\"你可以在webpack配置文件中配置该插件\",{\"1\":{\"257\":1}}],[\"你可以在修改代码时实时查看更新后的效果\",{\"1\":{\"257\":1}}],[\"你可以在\",{\"1\":{\"178\":1,\"244\":1,\"269\":1,\"487\":1,\"488\":1,\"544\":1,\"582\":1}}],[\"你可以通过调用\",{\"1\":{\"582\":1}}],[\"你可以通过传一个回调给\",{\"1\":{\"563\":1}}],[\"你可以通过在解构变量时对变量进行重命名来避免相同的键名\",{\"1\":{\"514\":1}}],[\"你可以通过简单运行\",{\"1\":{\"267\":1}}],[\"你可以通过\",{\"1\":{\"263\":1,\"269\":1,\"550\":1,\"564\":1}}],[\"你可以通过监听\",{\"1\":{\"168\":1}}],[\"你可以通过向\",{\"1\":{\"163\":1}}],[\"你可以添加\",{\"1\":{\"165\":1,\"486\":1}}],[\"你都应该使用计算属性\",{\"1\":{\"468\":1}}],[\"你在引用这个自定义元素时两种命名法都可以使用\",{\"1\":{\"335\":1}}],[\"你也完全可以自由地设置任何你想要的参数以及返回任何结果\",{\"1\":{\"584\":1}}],[\"你也必须在引用这个自定义元素时使用\",{\"1\":{\"335\":1}}],[\"你也可以获得如下功能\",{\"1\":{\"580\":1}}],[\"你也可以通过\",{\"1\":{\"571\":1}}],[\"你也可以通过使用路径\",{\"1\":{\"561\":1}}],[\"你也可以通过在\",{\"1\":{\"272\":1}}],[\"你也可以将一个函数数组传递给\",{\"1\":{\"561\":1}}],[\"你也可以注册全局后置钩子\",{\"1\":{\"560\":1}}],[\"你也可以在像\",{\"1\":{\"511\":1}}],[\"你也可以在组合式函数中使用所有的组合式\",{\"1\":{\"503\":1}}],[\"你也可以删除一些你不需要的组件\",{\"1\":{\"284\":1}}],[\"你也可以调用\",{\"1\":{\"282\":1}}],[\"你也可以使用\",{\"1\":{\"270\":1}}],[\"你也可以使用任何你想要的库\",{\"1\":{\"168\":1}}],[\"你也可以用对象的形式传入\",{\"1\":{\"163\":1}}],[\"你也可以向\",{\"1\":{\"161\":1}}],[\"你会发现大的问题也会迎刃而解\",{\"1\":{\"333\":1}}],[\"你会看到这个警告\",{\"1\":{\"250\":1}}],[\"你还可以调用\",{\"1\":{\"582\":1}}],[\"你还可以为任何路由提供\",{\"1\":{\"546\":1}}],[\"你还可以嵌套多个组合式函数\",{\"1\":{\"503\":1}}],[\"你还可以指定一个超时时间\",{\"1\":{\"282\":1}}],[\"你还可以用这个命令来检查其版本是否正确\",{\"1\":{\"267\":1}}],[\"你就可以在命令行中访问\",{\"1\":{\"267\":1}}],[\"你通常会使用\",{\"1\":{\"250\":1}}],[\"你需要使用\",{\"1\":{\"570\":1}}],[\"你需要提供路由的\",{\"1\":{\"550\":1}}],[\"你需要提供模块的相对路径\",{\"1\":{\"250\":1}}],[\"你需要深层侦听器\",{\"1\":{\"477\":1}}],[\"你需要在模板中使用my\",{\"1\":{\"306\":1,\"322\":1}}],[\"你需要在\",{\"1\":{\"250\":1}}],[\"你应该只会用到\",{\"1\":{\"168\":1}}],[\"你传入的这些\",{\"1\":{\"161\":1}}],[\"你好啊\",{\"1\":{\"494\":1}}],[\"你好\",{\"1\":{\"21\":2}}],[\"那你直接在\",{\"1\":{\"584\":1}}],[\"那就太繁琐了\",{\"1\":{\"504\":1}}],[\"那就有问题了\",{\"1\":{\"350\":1}}],[\"那就需要子组件向父组件传递事件\",{\"1\":{\"301\":1,\"317\":1}}],[\"那就是\",{\"1\":{\"160\":1}}],[\"那样\",{\"1\":{\"294\":1}}],[\"那么它就可以传参数了\",{\"1\":{\"583\":1}}],[\"那么它们都会生效\",{\"1\":{\"498\":1}}],[\"那么它们应该会形成一个\",{\"1\":{\"462\":1}}],[\"那么不会发生滚动\",{\"1\":{\"571\":1}}],[\"那么不可以通过\",{\"1\":{\"349\":1}}],[\"那么如何访问这个\",{\"1\":{\"569\":1}}],[\"那么如果希望渲染的是一个列表\",{\"1\":{\"173\":1}}],[\"那么全局混入的选项将会影响每一个组件\",{\"1\":{\"499\":1}}],[\"那么这两个函数都会被调用\",{\"1\":{\"497\":1}}],[\"那么这个this就会是window了\",{\"1\":{\"529\":1}}],[\"那么这个this是必须有值的\",{\"1\":{\"529\":1}}],[\"那么这个时候我们可以使用全局的mixin\",{\"1\":{\"499\":1}}],[\"那么这个class或style属性就会被添加到<div>元素上\",{\"1\":{\"307\":1,\"323\":1}}],[\"那么这个组件就会变成非常的臃肿和难以维护\",{\"1\":{\"299\":1,\"315\":1}}],[\"那么将返回原始值\",{\"1\":{\"487\":1}}],[\"那么久使用\",{\"1\":{\"464\":1}}],[\"那么使用v\",{\"1\":{\"455\":2}}],[\"那么会取组件对象的键值对\",{\"1\":{\"498\":1}}],[\"那么会保留组件自身的数据\",{\"1\":{\"498\":1}}],[\"那么会有大量重复的代码\",{\"1\":{\"468\":1}}],[\"那么会默认将原生事件event参数传递进去\",{\"1\":{\"449\":1}}],[\"那么会报警告\",{\"1\":{\"309\":1,\"325\":1}}],[\"那么会报错\",{\"1\":{\"208\":1}}],[\"那么方法后的\",{\"1\":{\"449\":1}}],[\"那么上一次的网络请求应该被取消掉\",{\"1\":{\"376\":1}}],[\"那么两个都会监听\",{\"1\":{\"374\":1}}],[\"那么可以使用\",{\"1\":{\"433\":1}}],[\"那么可以使用toref的方法\",{\"1\":{\"364\":1}}],[\"那么可以使用reactive的函数\",{\"1\":{\"353\":1}}],[\"那么之后无论是修改结构后的变量\",{\"1\":{\"363\":1}}],[\"那么之后整个页面\",{\"1\":{\"333\":1}}],[\"那么也可以通过unref方法\",{\"1\":{\"358\":1}}],[\"那么在模板中使用时\",{\"1\":{\"357\":1}}],[\"那么在使用的时候\",{\"1\":{\"296\":1}}],[\"那么你应该在\",{\"1\":{\"349\":1}}],[\"那么你可以使用\",{\"1\":{\"349\":1}}],[\"那么同一个功能的逻辑就会被拆分的很分散\",{\"1\":{\"346\":1}}],[\"那么就移除旧节点\",{\"1\":{\"464\":1}}],[\"那么就新增节点\",{\"1\":{\"464\":1}}],[\"那么就使用\",{\"1\":{\"464\":1}}],[\"那么就意味着类似于webpack这种打包工具在打包我们的项目时\",{\"1\":{\"338\":1}}],[\"那么就意味着如果某些组件我们并没有用到\",{\"1\":{\"338\":1}}],[\"那么就需要传递给他们来进行展示\",{\"1\":{\"301\":1,\"317\":1}}],[\"那么就会去\",{\"1\":{\"256\":1}}],[\"那么按照完整的template来编写\",{\"1\":{\"297\":1}}],[\"那么被显式提供的内容会取代默认内容\",{\"1\":{\"289\":1}}],[\"那么代码将被重新编译\",{\"1\":{\"253\":1}}],[\"那么需要手动来管理大量的babel插件\",{\"1\":{\"248\":1}}],[\"那么我们这个this能不能是window呢\",{\"1\":{\"529\":1}}],[\"那么我们就可以在该生命周期中编写属于自己的逻辑代码了\",{\"1\":{\"492\":1}}],[\"那么我们就可以先将值请求下来\",{\"1\":{\"483\":1}}],[\"那么我们就可以使用箭头函数转换相关的插件\",{\"1\":{\"243\":1}}],[\"那么我们就需要使用者传递给header一些数据\",{\"1\":{\"301\":1,\"317\":1}}],[\"那么我们可以将请求先发送到一个代理服务器\",{\"1\":{\"262\":1}}],[\"那么我们可以按照如下的格式编写\",{\"1\":{\"229\":1}}],[\"那么我们应该如何使用style\",{\"1\":{\"216\":1}}],[\"那么我们还需要另外一个loader\",{\"1\":{\"216\":1}}],[\"那么vue会如何操作呢\",{\"1\":{\"498\":1}}],[\"那么vue中对于列表的更新究竟是如何操作的呢\",{\"1\":{\"463\":1}}],[\"那么vue并不会对其进行特殊的解析\",{\"1\":{\"433\":1}}],[\"那么vue能自动识别类型并设置监听\",{\"1\":{\"162\":1}}],[\"那么vite是如何解决如webpack这样的构建工具一样\",{\"1\":{\"182\":1}}],[\"那么该元素会基于\",{\"1\":{\"175\":1}}],[\"那么效率是比较低的\",{\"1\":{\"170\":1}}],[\"那么\",{\"1\":{\"155\":1,\"226\":1,\"385\":1,\"559\":1,\"566\":1}}],[\"帧动画\",{\"1\":{\"160\":1}}],[\"被组合式函数封装和管理的状态\",{\"1\":{\"503\":1}}],[\"被取代为deactivated\",{\"1\":{\"494\":1}}],[\"被取代为activated\",{\"1\":{\"494\":1}}],[\"被点击时\",{\"1\":{\"483\":1}}],[\"被侦听的属性\",{\"1\":{\"477\":1}}],[\"被认为是上下文目录\",{\"1\":{\"264\":1}}],[\"被认为是一个\",{\"1\":{\"197\":1}}],[\"被添加时\",{\"1\":{\"175\":1}}],[\"被移除的同时\",{\"1\":{\"157\":2}}],[\"被状态装饰器装饰的变量\",{\"1\":{\"36\":1}}],[\"钩子中被调用\",{\"1\":{\"511\":1}}],[\"钩子中可用\",{\"1\":{\"408\":1}}],[\"钩子的合并\",{\"1\":{\"500\":1}}],[\"钩子的调用顺序与提供它们的选项顺序相同\",{\"1\":{\"497\":1}}],[\"钩子可以用来在组件完成初始渲染并创建\",{\"1\":{\"493\":1}}],[\"钩子之前\",{\"1\":{\"477\":1}}],[\"钩子之前调用\",{\"1\":{\"168\":1}}],[\"钩子函数会接收到指令所绑定元素作为其参数\",{\"1\":{\"410\":1}}],[\"钩子是在组件中使用组合式\",{\"1\":{\"348\":1}}],[\"钩子将被同步调用\",{\"1\":{\"168\":1}}],[\"钩子来说\",{\"1\":{\"168\":1}}],[\"钩子\",{\"0\":{\"168\":1},\"1\":{\"155\":2,\"168\":1,\"349\":1,\"497\":1,\"565\":1}}],[\"由浏览器的后退\",{\"1\":{\"571\":1}}],[\"由多层嵌套的组件组成\",{\"1\":{\"557\":1}}],[\"由框架\",{\"1\":{\"525\":1}}],[\"由options\",{\"1\":{\"521\":1}}],[\"由无渲染组件产生的额外组件实例会带来无法忽视的性能开销\",{\"1\":{\"515\":1}}],[\"由yarn管理\",{\"1\":{\"269\":1}}],[\"由于会渲染同样的\",{\"1\":{\"563\":1}}],[\"由于属性\",{\"1\":{\"550\":1}}],[\"由于包含了编译代码\",{\"1\":{\"530\":1}}],[\"由于html属性不区分大小写\",{\"1\":{\"306\":1,\"322\":1}}],[\"由于已经获得文件的绝对路径\",{\"1\":{\"264\":1}}],[\"由于esbuild转换ts到js对于类型操作仅仅是擦除\",{\"1\":{\"200\":1}}],[\"由于esm是一个比较新的模块化方案\",{\"1\":{\"195\":1}}],[\"由于esm编译时就能确定模块的依赖关系\",{\"1\":{\"195\":1}}],[\"由于\",{\"1\":{\"199\":1}}],[\"由于模块依赖了另一些模块\",{\"1\":{\"197\":1}}],[\"由于国内网络环境问题\",{\"1\":{\"68\":1}}],[\"由特殊元素\",{\"1\":{\"155\":1}}],[\"由\",{\"1\":{\"155\":2}}],[\"无论其被嵌套多深\",{\"1\":{\"478\":1}}],[\"无论是组件还是元素\",{\"1\":{\"461\":1}}],[\"无论值是否更改\",{\"1\":{\"408\":1}}],[\"无论这个组件的层级有多深都可以注入成功\",{\"1\":{\"384\":1}}],[\"无论从三大框架\",{\"1\":{\"333\":1}}],[\"无论层级结构有多深\",{\"1\":{\"313\":1,\"330\":1}}],[\"无法tree\",{\"1\":{\"180\":1}}],[\"无法在\",{\"1\":{\"146\":1}}],[\"无需传入\",{\"1\":{\"436\":1}}],[\"无需返回\",{\"1\":{\"402\":1}}],[\"无需\",{\"1\":{\"266\":1}}],[\"无需分析模块之间的依赖\",{\"1\":{\"182\":1}}],[\"无需打包\",{\"1\":{\"182\":1}}],[\"无需递归循环依赖组装依赖树\",{\"1\":{\"180\":1}}],[\"无需再次安装\",{\"1\":{\"180\":1}}],[\"无需注册\",{\"1\":{\"155\":1}}],[\"利用\",{\"1\":{\"347\":1}}],[\"利用刚才在\",{\"1\":{\"344\":1}}],[\"利用esbuild在启动的时候预先把debounce用到的所有内部模块全部打包成一个bundle\",{\"1\":{\"197\":1}}],[\"利用新一代浏览器的esm能力\",{\"1\":{\"182\":1}}],[\"利用浏览器去解析imports\",{\"1\":{\"178\":1}}],[\"利用它们我们可以方便的实现过渡动画效果\",{\"1\":{\"154\":1}}],[\"利用初始渲染缓存\",{\"1\":{\"115\":1}}],[\"定时器\",{\"1\":{\"415\":1,\"416\":1}}],[\"定义模块对象\",{\"1\":{\"670\":1}}],[\"定义modules\",{\"0\":{\"669\":1}}],[\"定义mutations\",{\"0\":{\"624\":1},\"1\":{\"623\":1,\"651\":1}}],[\"定义getters\",{\"0\":{\"657\":1},\"1\":{\"655\":1}}],[\"定义actions\",{\"0\":{\"637\":1},\"1\":{\"636\":1,\"651\":1}}],[\"定义全局状态数据源\",{\"1\":{\"621\":1}}],[\"定义state\",{\"0\":{\"615\":1},\"1\":{\"614\":1,\"651\":1}}],[\"定义修改数据的方法\",{\"1\":{\"581\":1}}],[\"定义数据\",{\"1\":{\"581\":1}}],[\"定义数据后\",{\"1\":{\"402\":1}}],[\"定义路由的时候你可以这样配置\",{\"1\":{\"569\":1}}],[\"定义路由\",{\"1\":{\"540\":1}}],[\"定义\",{\"1\":{\"540\":1,\"551\":1}}],[\"定义了一个计算属性叫fullname\",{\"1\":{\"472\":1}}],[\"定义名称一样\",{\"1\":{\"405\":1}}],[\"定义ref\",{\"1\":{\"405\":1}}],[\"定义render选项\",{\"1\":{\"388\":1}}],[\"定义的方法也是\",{\"1\":{\"402\":1}}],[\"定义减少按钮\",{\"1\":{\"388\":1}}],[\"定义增加按钮\",{\"1\":{\"388\":1}}],[\"定义h2\",{\"1\":{\"388\":1}}],[\"定义一些简单的数据\",{\"1\":{\"355\":1}}],[\"定义一个组件时\",{\"1\":{\"335\":2}}],[\"定义简单类型的数据\",{\"1\":{\"355\":1}}],[\"定义响应式数据的两种方式\",{\"0\":{\"352\":1}}],[\"定义方法\",{\"1\":{\"350\":1}}],[\"定义普通的变量\",{\"1\":{\"350\":1}}],[\"定义组件名的方式有两种\",{\"1\":{\"335\":1}}],[\"定义在\",{\"1\":{\"152\":1}}],[\"定制化型服务商票据\",{\"1\":{\"139\":1}}],[\"样例描述\",{\"1\":{\"151\":1}}],[\"样例\",{\"1\":{\"151\":1}}],[\"样式等\",{\"1\":{\"339\":2}}],[\"样式代码\",{\"1\":{\"203\":1}}],[\"样式类名之间用空格分隔\",{\"1\":{\"150\":1}}],[\"样式类名不需要带上\",{\"1\":{\"150\":1}}],[\"样式类名\",{\"1\":{\"150\":1}}],[\"样式导入\",{\"0\":{\"149\":1},\"1\":{\"147\":1}}],[\"样式相关的配置项属于\",{\"1\":{\"146\":1}}],[\"样式相关的接口\",{\"1\":{\"135\":1}}],[\"样式\",{\"1\":{\"135\":1}}],[\"内被切换的时候它的\",{\"1\":{\"494\":2}}],[\"内模板解析注意事项\",{\"1\":{\"335\":1}}],[\"内模板中使用时\",{\"1\":{\"278\":1}}],[\"内渲染\",{\"1\":{\"289\":1}}],[\"内容依然在组件内进行封装\",{\"1\":{\"287\":1}}],[\"内容等等\",{\"1\":{\"84\":1}}],[\"内置修饰符\",{\"0\":{\"485\":1}}],[\"内置组件\",{\"0\":{\"417\":1}}],[\"内置组件将这些动态组件包装起来\",{\"1\":{\"278\":1}}],[\"内置常见场景的构建方案及其依赖\",{\"1\":{\"180\":1}}],[\"内联模板等\",{\"1\":{\"520\":1}}],[\"内联方式使用较少\",{\"1\":{\"215\":1}}],[\"内联方式\",{\"1\":{\"215\":2}}],[\"内联样式\",{\"0\":{\"150\":1}}],[\"内存高效利用\",{\"1\":{\"182\":1}}],[\"内部\",{\"1\":{\"557\":3,\"582\":1}}],[\"内部会调用这个方法\",{\"1\":{\"550\":1}}],[\"内部实现\",{\"0\":{\"482\":1}}],[\"内部发生的改变是不能侦听\",{\"1\":{\"477\":1}}],[\"内部元素总是需要提供唯一的\",{\"1\":{\"173\":1}}],[\"内部是在监听\",{\"1\":{\"162\":1}}],[\"共有750个物理像素\",{\"1\":{\"148\":1}}],[\"共享arkts引擎实例\",{\"1\":{\"33\":1}}],[\"尺寸单位\",{\"0\":{\"148\":1},\"1\":{\"147\":1}}],[\"具名作用域插槽的工作方式也是类似的\",{\"1\":{\"295\":1}}],[\"具名作用域插槽\",{\"0\":{\"295\":1}}],[\"具名插槽的使用\",{\"0\":{\"291\":1}}],[\"具备合理的默认设置\",{\"1\":{\"178\":1}}],[\"具有可扩展接口\",{\"1\":{\"572\":1}}],[\"具有默认值的函数\",{\"1\":{\"306\":1,\"322\":1}}],[\"具有深层异步依赖的组件\",{\"1\":{\"283\":1}}],[\"具有\",{\"1\":{\"147\":1}}],[\"具体值\",{\"1\":{\"629\":1,\"641\":1,\"680\":2,\"681\":2}}],[\"具体代码\",{\"1\":{\"615\":1,\"624\":1,\"637\":1,\"657\":1}}],[\"具体使用示例\",{\"1\":{\"539\":1}}],[\"具体后面讲解alias的配置\",{\"1\":{\"264\":1}}],[\"具体而言\",{\"1\":{\"257\":1,\"258\":1}}],[\"具体属性看官方文档\",{\"1\":{\"128\":1}}],[\"具体属性可以在官方文档中查看\",{\"1\":{\"124\":1}}],[\"具体可以在官方文档查看\",{\"1\":{\"127\":1}}],[\"具体可以看\",{\"1\":{\"123\":1,\"483\":1}}],[\"具体可以到官方文档查看\",{\"1\":{\"17\":1}}],[\"具体看\",{\"1\":{\"113\":1,\"529\":1}}],[\"具体操作如下\",{\"1\":{\"63\":1}}],[\"具体的步骤如下\",{\"1\":{\"428\":1}}],[\"具体的取值和含义可参考全局配置文档中说明\",{\"1\":{\"146\":1}}],[\"具体的能力以及使用方式在以下章节查看\",{\"1\":{\"106\":1}}],[\"具体的配置文件说明\",{\"1\":{\"34\":1}}],[\"具体的键值生成规则判断逻辑如下图所示\",{\"1\":{\"17\":1}}],[\"具体申请方式请参考权限申请声明\",{\"1\":{\"10\":1}}],[\"客户端的每一次请求\",{\"1\":{\"537\":1}}],[\"客户端接收更新\",{\"1\":{\"258\":1}}],[\"客户端接收到更新后\",{\"1\":{\"258\":1}}],[\"客户端注入本质上是创建一个script标签\",{\"1\":{\"197\":1}}],[\"客户端做一层拦截来解析模块的真实位置\",{\"1\":{\"197\":1}}],[\"客户端\",{\"1\":{\"146\":1,\"201\":1}}],[\"客户端窗口的底部或顶部有\",{\"1\":{\"143\":1}}],[\"毫秒\",{\"1\":{\"144\":4}}],[\"各类网络请求的超时时间\",{\"1\":{\"144\":1}}],[\"大话西游\",{\"1\":{\"457\":1,\"459\":1}}],[\"大小等等\",{\"1\":{\"442\":1}}],[\"大小限制为\",{\"1\":{\"143\":2}}],[\"大大降低了重构成本\",{\"1\":{\"346\":1}}],[\"大多数主流框架\",{\"1\":{\"257\":1}}],[\"大多数时候\",{\"1\":{\"168\":1}}],[\"大多为在开发时不会变动的纯\",{\"1\":{\"197\":1}}],[\"大型项目构建慢\",{\"1\":{\"180\":1}}],[\"大而全\",{\"1\":{\"180\":1}}],[\"大部分特性\",{\"1\":{\"147\":1}}],[\"大概2\",{\"1\":{\"30\":1}}],[\"见详情\",{\"1\":{\"143\":1}}],[\"个人中心\",{\"1\":{\"593\":1,\"690\":1}}],[\"个人注册\",{\"1\":{\"79\":1}}],[\"个时候发送网络请求就会出现跨域的问题\",{\"1\":{\"262\":1}}],[\"个应用于进入与离开过渡效果的\",{\"1\":{\"157\":1}}],[\"个\",{\"1\":{\"143\":4}}],[\"上午结束\",{\"0\":{\"649\":1}}],[\"上添加一个新的路由\",{\"1\":{\"573\":1}}],[\"上方滚动\",{\"1\":{\"571\":1}}],[\"上方例子中被应用的\",{\"1\":{\"158\":1}}],[\"上述例子中的\",{\"1\":{\"550\":1}}],[\"上下文都会自动指向当前调用它的组件实例\",{\"1\":{\"493\":1}}],[\"上下文自动地绑定为组件实例\",{\"1\":{\"468\":1}}],[\"上被使用了\",{\"1\":{\"489\":1}}],[\"上所添加的修饰符\",{\"1\":{\"489\":1}}],[\"上实现\",{\"1\":{\"423\":1}}],[\"上一次更新时\",{\"1\":{\"408\":1}}],[\"上面列出来的命令是用于升级全局的\",{\"1\":{\"267\":1}}],[\"上面的用法会对所有的路由使用相同的过渡\",{\"1\":{\"570\":1}}],[\"上面的这种操作\",{\"1\":{\"536\":1}}],[\"上面的方法会直接修改原来的数组\",{\"1\":{\"459\":1}}],[\"上面的方式可以监听到文件的变化\",{\"1\":{\"254\":1}}],[\"上面的例子中使用的是\",{\"1\":{\"338\":1}}],[\"上面的嵌套逻辑如下\",{\"1\":{\"301\":1,\"317\":1}}],[\"上面的代码中\",{\"1\":{\"236\":1}}],[\"上运行且证书无效的后端服务器\",{\"1\":{\"262\":1}}],[\"上\",{\"1\":{\"148\":1,\"554\":1,\"570\":1}}],[\"上按钮文字\",{\"1\":{\"143\":1}}],[\"上边框的颜色\",{\"1\":{\"143\":1}}],[\"上的\",{\"1\":{\"547\":1}}],[\"上的相应字段\",{\"1\":{\"544\":1}}],[\"上的文字选中时的颜色\",{\"1\":{\"143\":1}}],[\"上的文字默认颜色\",{\"1\":{\"143\":1}}],[\"上的结果\",{\"1\":{\"117\":1}}],[\"上的函数\",{\"1\":{\"93\":1}}],[\"切走\",{\"1\":{\"278\":1}}],[\"切换\",{\"1\":{\"455\":1}}],[\"切换不同的组件显示\",{\"1\":{\"274\":1}}],[\"切换组件案例\",{\"0\":{\"274\":1}}],[\"切换一个元素\",{\"1\":{\"166\":1}}],[\"切换的动态组件\",{\"1\":{\"155\":1}}],[\"切换时显示的对应页面\",{\"1\":{\"143\":1}}],[\"切入系统后台时\",{\"1\":{\"142\":1,\"146\":1}}],[\"栏可以切换页面\",{\"1\":{\"143\":1}}],[\"栏的表现\",{\"1\":{\"139\":1,\"143\":1}}],[\"控制器\",{\"1\":{\"536\":1}}],[\"控制移动效果\",{\"1\":{\"175\":1}}],[\"控制预加载下个页面的时机\",{\"1\":{\"142\":1,\"146\":1}}],[\"控制台\",{\"1\":{\"82\":1}}],[\"窗口的背景色\",{\"1\":{\"142\":1,\"146\":1}}],[\"窗口背景色\",{\"1\":{\"142\":1}}],[\"窗口表现\",{\"1\":{\"86\":1}}],[\"四个文件进行处理\",{\"1\":{\"141\":1}}],[\"四次\",{\"1\":{\"40\":1}}],[\"框架提供的一个功能\",{\"1\":{\"531\":1}}],[\"框架使用webpack的\",{\"1\":{\"257\":1}}],[\"框架内置了对hmr的支持\",{\"1\":{\"257\":1}}],[\"框架通常使用webpack的\",{\"1\":{\"257\":1}}],[\"框架\",{\"0\":{\"257\":1}}],[\"框架组件上支持使用\",{\"1\":{\"150\":1}}],[\"框架会自动去寻找对应位置的\",{\"1\":{\"141\":1}}],[\"框架的核心是一个响应的数据绑定系统\",{\"1\":{\"91\":1}}],[\"框架的行为是未定义的\",{\"1\":{\"17\":1}}],[\"信息通知客户端去请求新的模块代码\",{\"1\":{\"201\":1}}],[\"信息\",{\"1\":{\"141\":1}}],[\"每当状态发生变化时\",{\"1\":{\"582\":1}}],[\"每次请求涉及到的静态资源都会从静态资源服务器获取\",{\"1\":{\"537\":1}}],[\"每次修改了一些配置\",{\"1\":{\"234\":1}}],[\"每一个item都是一个数字\",{\"1\":{\"457\":1}}],[\"每一项都对应一个页面的\",{\"1\":{\"141\":1}}],[\"每隔一秒\",{\"1\":{\"416\":1}}],[\"每块区域的内容是不固定\",{\"1\":{\"286\":1}}],[\"每个模块都有state\",{\"1\":{\"670\":1}}],[\"每个守卫方法接收三个参数\",{\"1\":{\"566\":1}}],[\"每个守卫方法接收两个参数\",{\"1\":{\"559\":1}}],[\"每个路由应该映射一个组件\",{\"1\":{\"540\":1}}],[\"每个组件都可能会经历从创建\",{\"1\":{\"492\":1}}],[\"每个组件都可以定义自己的props\",{\"1\":{\"302\":1,\"318\":1}}],[\"每个组件都用于实现页面的一个功能块\",{\"1\":{\"333\":1}}],[\"每个框架或者平台可能实现方法不同\",{\"1\":{\"333\":1}}],[\"每个框架的具体配置方式可能会有所不同\",{\"1\":{\"257\":1}}],[\"每个功能块完成属于自己\",{\"1\":{\"333\":1}}],[\"每个地方的header展示的内容不同\",{\"1\":{\"301\":1,\"317\":1}}],[\"每个规则包含了要转发的请求路径和目标服务器地址\",{\"1\":{\"262\":1}}],[\"每个令牌代表源代码中的一个语法单元\",{\"1\":{\"247\":1}}],[\"每个插件都负责处理ast中的特定节点\",{\"1\":{\"246\":1}}],[\"每个loader都会对文件进行一次转换\",{\"1\":{\"214\":1}}],[\"每个项目可以拥有自己独立的webpack配置和插件\",{\"1\":{\"209\":1}}],[\"每个项都是一个对象\",{\"1\":{\"143\":1}}],[\"每个\",{\"1\":{\"135\":1,\"609\":1,\"694\":1}}],[\"每个小程序都需要在\",{\"1\":{\"93\":1}}],[\"每个页面有独立的作用域\",{\"1\":{\"92\":1}}],[\"每个页面是一个\",{\"1\":{\"65\":1}}],[\"列表\",{\"1\":{\"441\":1,\"651\":1}}],[\"列表的交替动画\",{\"0\":{\"176\":1}}],[\"列表的第一项\",{\"1\":{\"140\":1}}],[\"列表过渡的移动动画\",{\"0\":{\"175\":1}}],[\"列表渲染\",{\"0\":{\"103\":1,\"456\":1},\"1\":{\"106\":1}}],[\"调试工具可追踪变化过程\",{\"1\":{\"625\":1}}],[\"调试信息以\",{\"1\":{\"145\":1}}],[\"调试相关配置\",{\"1\":{\"139\":1}}],[\"调用actions的方法传值\",{\"1\":{\"643\":1}}],[\"调用mutations方法传值\",{\"1\":{\"632\":1}}],[\"调用任何\",{\"1\":{\"584\":1}}],[\"调用其他store里面的getter\",{\"1\":{\"583\":1}}],[\"调用本模块其他\",{\"1\":{\"583\":1}}],[\"调用全局的\",{\"1\":{\"565\":3}}],[\"调用了getresult方法\",{\"1\":{\"473\":4}}],[\"调用了计算属性result的getter\",{\"1\":{\"473\":2}}],[\"调用一个方法\",{\"1\":{\"443\":1}}],[\"调用该函数即可\",{\"1\":{\"375\":1}}],[\"调用子组件方法\",{\"1\":{\"371\":1}}],[\"调用这些\",{\"1\":{\"269\":1}}],[\"调用回调函数\",{\"1\":{\"168\":2}}],[\"调用的地理位置相关隐私接口\",{\"1\":{\"139\":1}}],[\"调用时机不能早于\",{\"1\":{\"118\":1}}],[\"调用\",{\"1\":{\"109\":1,\"118\":1,\"171\":1,\"447\":2,\"450\":2,\"565\":1}}],[\"调用接口能力\",{\"1\":{\"65\":1}}],[\"视频号直播半屏场景设置\",{\"1\":{\"139\":1}}],[\"视图组件\",{\"1\":{\"634\":1,\"644\":1}}],[\"视图容器\",{\"1\":{\"121\":1}}],[\"视图\",{\"0\":{\"120\":1}}],[\"视图层初始化\",{\"1\":{\"115\":1}}],[\"视图层会发送\",{\"1\":{\"91\":1}}],[\"视图层就会做相应的更新\",{\"1\":{\"91\":1}}],[\"视图层\",{\"0\":{\"100\":1},\"1\":{\"90\":1}}],[\"半屏小程序\",{\"1\":{\"139\":1}}],[\"聊天素材小程序打开相关配置\",{\"1\":{\"139\":1}}],[\"音乐播放\",{\"1\":{\"139\":1}}],[\"描述\",{\"1\":{\"139\":1,\"142\":1,\"143\":1,\"146\":1}}],[\"zh\",{\"1\":{\"266\":1,\"539\":1,\"546\":1,\"558\":1,\"580\":1,\"597\":1}}],[\"z\",{\"1\":{\"136\":1}}],[\"zs\",{\"1\":{\"53\":2,\"54\":1,\"55\":1}}],[\"我发射了\",{\"1\":{\"404\":2}}],[\"我是helloworld的插槽默认值\",{\"1\":{\"392\":1}}],[\"我是内容\",{\"1\":{\"337\":1,\"339\":1}}],[\"我是标题\",{\"1\":{\"337\":1,\"339\":1}}],[\"我是notpropattribue组件3\",{\"1\":{\"309\":1,\"325\":1}}],[\"我是notpropattribue组件2\",{\"1\":{\"309\":1,\"325\":1}}],[\"我是notpropattribue组件1\",{\"1\":{\"309\":1,\"325\":1}}],[\"我是普通的文本\",{\"1\":{\"290\":1}}],[\"我的博客\",{\"1\":{\"692\":1}}],[\"我的\",{\"1\":{\"136\":1}}],[\"我们称呼\",{\"1\":{\"569\":1}}],[\"我们称之为\",{\"1\":{\"445\":1,\"544\":1}}],[\"我们经过\",{\"1\":{\"559\":1}}],[\"我们没有使用常规的\",{\"1\":{\"541\":1}}],[\"我们必须通过源码中的一部分代码来进行编译\",{\"1\":{\"530\":1}}],[\"我们必须手动的指定要绑定到哪一个属性上\",{\"1\":{\"309\":1,\"325\":1}}],[\"我们传入了一个对象\",{\"1\":{\"527\":1}}],[\"我们推荐在纯逻辑复用时使用组合式函数\",{\"1\":{\"515\":1}}],[\"我们推荐的约定是组合式函数始终返回一个包含多个\",{\"1\":{\"509\":1}}],[\"我们甚至用它实现了一样的鼠标追踪器示例\",{\"1\":{\"515\":1}}],[\"我们甚至可以在深层元素上添加一个过渡延迟\",{\"1\":{\"163\":1}}],[\"我们讨论过了基于作用域插槽的无渲染组件\",{\"1\":{\"515\":1}}],[\"我们一直在组合式函数中使用\",{\"1\":{\"509\":1}}],[\"我们做的只是把它移到一个外部函数中去\",{\"1\":{\"503\":1}}],[\"我们常常需要处理不同的状态\",{\"1\":{\"504\":1}}],[\"我们常常需要复用公共任务的逻辑\",{\"1\":{\"502\":1}}],[\"我们常常会将\",{\"1\":{\"284\":1}}],[\"我们声明了\",{\"1\":{\"489\":1}}],[\"我们事实上先显示的是一个结果\",{\"1\":{\"471\":1}}],[\"我们有一个变量message\",{\"1\":{\"469\":1}}],[\"我们有一个分数\",{\"1\":{\"469\":1}}],[\"我们有两个变量\",{\"1\":{\"469\":1}}],[\"我们有没有什么方法可以将逻辑抽离出去呢\",{\"1\":{\"468\":1}}],[\"我们有data\",{\"1\":{\"338\":1}}],[\"我们知道\",{\"1\":{\"457\":1,\"468\":1}}],[\"我们往往会从服务器拿到一组数据\",{\"1\":{\"456\":1}}],[\"我们属性的名称可能也不是固定的\",{\"1\":{\"445\":1}}],[\"我们再vscode中我们可以生成一个代码片段\",{\"1\":{\"428\":1}}],[\"我们在滚动前等待\",{\"1\":{\"571\":1}}],[\"我们在括号之间使用了自定义正则表达式\",{\"1\":{\"547\":1,\"548\":1}}],[\"我们在这里使用\",{\"1\":{\"540\":1}}],[\"我们在methods中要使用data返回对象中的数据\",{\"1\":{\"529\":1}}],[\"我们在前面练习vue的过程中\",{\"1\":{\"428\":1}}],[\"我们在组件中想要直接获取到元素对象或者子组件实例\",{\"1\":{\"342\":1}}],[\"我们停止了侦听器\",{\"1\":{\"376\":1}}],[\"我们是使用computed选项来完成的\",{\"1\":{\"365\":1}}],[\"我们现在可以很轻松地将这一组代码移动到一个外部文件中\",{\"1\":{\"346\":1}}],[\"我们无需再为了一个逻辑关注点在不同的选项块间来回滚动切换\",{\"1\":{\"346\":1}}],[\"我们编写组件的方式是options\",{\"1\":{\"346\":1}}],[\"我们编写一个需要添加前缀的css\",{\"1\":{\"220\":1}}],[\"我们通常通过mixins在多个组件之间共享逻辑\",{\"1\":{\"521\":1}}],[\"我们通常会给元素或者组件绑定一个key属性\",{\"1\":{\"460\":1}}],[\"我们通常会使用脚手架来创建一个项目\",{\"1\":{\"266\":1}}],[\"我们通常会将应用程序和api服务分开部署\",{\"1\":{\"262\":1}}],[\"我们通过使用ref属性给子组件命名为childref\",{\"1\":{\"342\":1}}],[\"我们依然会对其进行打包\",{\"1\":{\"338\":1}}],[\"我们都推荐这样做\",{\"1\":{\"335\":1}}],[\"我们将在后面看到如何从这些功能中获益\",{\"1\":{\"541\":1}}],[\"我们将一个完整的页面分成很多个组件\",{\"1\":{\"333\":1}}],[\"我们将所有以\",{\"1\":{\"262\":1}}],[\"我们讲一个页面拆分成一个个\",{\"1\":{\"333\":1}}],[\"我们人有一种天生的能力\",{\"1\":{\"333\":1}}],[\"我们构建了组件树之后\",{\"1\":{\"312\":1,\"329\":1}}],[\"我们如何完成上面的操作呢\",{\"1\":{\"310\":1,\"326\":1}}],[\"我们如何可以限制哪些大小的图片转换和不转换呢\",{\"1\":{\"226\":1}}],[\"我们指定了type为字符串\",{\"1\":{\"305\":1,\"321\":1}}],[\"我们开发对应的逻辑只需要去对应的组件编写就可\",{\"1\":{\"300\":1,\"316\":1}}],[\"我们只是提供了这个基础来实现特定的用户场景\",{\"1\":{\"571\":1}}],[\"我们只是创建了一个组件app\",{\"1\":{\"299\":1,\"315\":1}}],[\"我们只需要在中间插入一个\",{\"1\":{\"463\":1}}],[\"我们只需要开启即可\",{\"1\":{\"255\":1}}],[\"我们就是在每次\",{\"1\":{\"489\":1}}],[\"我们就可以检查\",{\"1\":{\"489\":1}}],[\"我们就可以将\",{\"1\":{\"296\":1}}],[\"我们就必须监听用户发生的事件\",{\"1\":{\"447\":1}}],[\"我们就自己全权负责控制什么时候过渡结束了\",{\"1\":{\"168\":1}}],[\"我们应该让使用者可以决定某一块区域到底存放什么内容和元素\",{\"1\":{\"286\":1}}],[\"我们不再推荐在\",{\"1\":{\"514\":1}}],[\"我们不太可能一次性搞定一大堆的内容\",{\"1\":{\"333\":1}}],[\"我们不能将组件中的内容限制为固定的div\",{\"1\":{\"286\":1}}],[\"我们不需要从零来配置\",{\"1\":{\"266\":1}}],[\"我们不需要手动去运行\",{\"1\":{\"253\":1}}],[\"我们会通过\",{\"1\":{\"521\":1}}],[\"我们会采用组件化的方式来进行开发\",{\"1\":{\"339\":1}}],[\"我们会经常遇到需要组件之间相互进行通信\",{\"1\":{\"301\":1,\"317\":1}}],[\"我们会经常封装一个个可复用的组件\",{\"1\":{\"286\":1}}],[\"我们会对组件进行拆分\",{\"1\":{\"299\":1,\"315\":1}}],[\"我们会有更多的内容和代码逻辑\",{\"1\":{\"299\":1,\"315\":1}}],[\"我们会发现是完全不同的\",{\"1\":{\"525\":1}}],[\"我们会发现methods在多次使用时\",{\"1\":{\"473\":1}}],[\"我们会发现计算属性和methods的实现看起来是差别是不大的\",{\"1\":{\"473\":1}}],[\"我们会发现无论是直观上\",{\"1\":{\"472\":1}}],[\"我们会发现上面的diff算法效率并不高\",{\"1\":{\"464\":1}}],[\"我们会发现打印结果打印了两次\",{\"1\":{\"377\":1}}],[\"我们会发现\",{\"1\":{\"299\":1,\"315\":1}}],[\"我们会将共同的元素\",{\"1\":{\"287\":1}}],[\"我们会看不到图片文件\",{\"1\":{\"225\":1}}],[\"我们的数据可能是来自服务器的\",{\"1\":{\"483\":1}}],[\"我们的确想要组件能在被\",{\"1\":{\"278\":1}}],[\"我们的html文件是编写在根目录下的\",{\"1\":{\"235\":1}}],[\"我们选择\",{\"1\":{\"268\":1}}],[\"我们前面学习了如何通过webpack配置vue的开发环境\",{\"1\":{\"266\":1}}],[\"我们最好对配置进行划分\",{\"1\":{\"265\":1}}],[\"我们使用template来对多个元素进行包裹\",{\"1\":{\"458\":1}}],[\"我们使用驼峰式命名myprop\",{\"1\":{\"306\":1,\"322\":1}}],[\"我们使用短横线分隔的形式\",{\"1\":{\"306\":1,\"322\":1}}],[\"我们使用了\",{\"1\":{\"263\":1}}],[\"我们使用函数方式的proxy选项来动态配置代理规则\",{\"1\":{\"262\":1}}],[\"我们希望等待过渡结束后再滚动\",{\"1\":{\"571\":1}}],[\"我们希望对相同的代码逻辑进行抽取\",{\"1\":{\"496\":1}}],[\"我们希望在代码逻辑中监听某个数据的变化\",{\"1\":{\"475\":1}}],[\"我们希望在不适用live\",{\"1\":{\"254\":1}}],[\"我们希望停止侦听\",{\"1\":{\"375\":1}}],[\"我们希望将这部分内容抽取到一个独立的组件中去维护\",{\"1\":{\"336\":1}}],[\"我们希望可以做到\",{\"1\":{\"252\":1}}],[\"我们导入了\",{\"1\":{\"250\":1}}],[\"我们之前通过cdn引入和下载的vue版本就是这个版本\",{\"1\":{\"250\":1}}],[\"我们想要使用es6+的语法\",{\"1\":{\"241\":1}}],[\"我们想要给一个组件的显示和消失添加某种过渡动画\",{\"1\":{\"154\":1}}],[\"我们先来看一个案例\",{\"1\":{\"463\":1}}],[\"我们先来看一下官方的解释\",{\"1\":{\"460\":1}}],[\"我们先来解释一下vnode的概念\",{\"1\":{\"461\":1}}],[\"我们先从简单的开始谈起\",{\"1\":{\"336\":1}}],[\"我们先安装这个插件\",{\"1\":{\"234\":1}}],[\"我们先梳理一下js中的数据类型\",{\"1\":{\"42\":1}}],[\"我们当前使用的webpack版本是webpack5\",{\"1\":{\"231\":1}}],[\"我们这里介绍几个最常用的placeholder\",{\"1\":{\"228\":1}}],[\"我们也经常称vue是一个mvvm的框架\",{\"1\":{\"526\":1}}],[\"我们也称之为是一个setupcontext\",{\"1\":{\"349\":1}}],[\"我们也确实有办法这么做\",{\"1\":{\"294\":1}}],[\"我们也需要有对应的loader\",{\"1\":{\"224\":1}}],[\"我们也可以使用\",{\"1\":{\"573\":1}}],[\"我们也可以在其中使用\",{\"1\":{\"543\":1}}],[\"我们也可以在\",{\"1\":{\"294\":1}}],[\"我们也可以通过配置来指定入口和出口\",{\"1\":{\"208\":1}}],[\"我们也可以通过\",{\"1\":{\"166\":1,\"313\":1,\"330\":1}}],[\"我们也可以利用设备模拟器来查看更真实的效果\",{\"1\":{\"30\":1}}],[\"我们直接修改掉之前的\",{\"1\":{\"223\":1}}],[\"我们配置插件并不需要使用autoprefixer\",{\"1\":{\"223\":1}}],[\"我们已经用组件组成了我们的应用\",{\"1\":{\"540\":1}}],[\"我们已经可以通过css\",{\"1\":{\"216\":1}}],[\"我们已经了解到\",{\"1\":{\"22\":1}}],[\"我们需要手动调用\",{\"1\":{\"573\":1}}],[\"我们需要遍历这个数组来检查路由记录中的\",{\"1\":{\"569\":1}}],[\"我们需要在页面中滚动之前稍作等待\",{\"1\":{\"571\":1}}],[\"我们需要在路由中配置\",{\"1\":{\"557\":1}}],[\"我们需要在子组件中定义好在某些情况下触发的事件名称\",{\"1\":{\"310\":1,\"326\":1}}],[\"我们需要将给定匹配模式的路由映射到同一个组件\",{\"1\":{\"544\":1}}],[\"我们需要将响应式状态传入组合式函数\",{\"1\":{\"505\":1}}],[\"我们需要做的就是将我们的组件映射到路由上\",{\"1\":{\"540\":1}}],[\"我们需要使用render函数来手动编写渲染逻辑\",{\"1\":{\"530\":1}}],[\"我们需要使用一个含\",{\"1\":{\"291\":1}}],[\"我们需要根据当前的条件决定某些元素或组件是否渲染\",{\"1\":{\"451\":1}}],[\"我们需要经常和用户进行各种各样的交互\",{\"1\":{\"447\":1}}],[\"我们需要通过组件化的思想来思考整个应用程序\",{\"1\":{\"333\":1}}],[\"我们需要一个\",{\"1\":{\"543\":1}}],[\"我们需要一个可以挂载后续组件的根标签\",{\"1\":{\"236\":1}}],[\"我们需要一个可以读取css文件的loader\",{\"1\":{\"215\":1}}],[\"我们需要一种方法来让子组件在渲染时将一部分数据提供给插槽\",{\"1\":{\"294\":1}}],[\"我们需要一种方式将多个插槽内容传入到各自目标插槽的出口\",{\"1\":{\"291\":1}}],[\"我们需要合适的loader来处理文件\",{\"1\":{\"250\":1}}],[\"我们需要安装\",{\"1\":{\"223\":1}}],[\"我们需要借助于postcss对应的插件\",{\"1\":{\"219\":1}}],[\"我们需要同时安装webpack\",{\"1\":{\"207\":1}}],[\"我们发现是可以正常进行打包的\",{\"1\":{\"208\":1}}],[\"我们还可以借助\",{\"1\":{\"549\":1}}],[\"我们还是和之前的规则是一样的\",{\"1\":{\"349\":1}}],[\"我们还是可以使用深层级的\",{\"1\":{\"163\":1}}],[\"我们还设置了changeorigin选项为true\",{\"1\":{\"262\":1}}],[\"我们还希望实时的监听文件的变化来并且反映到浏览器上\",{\"1\":{\"203\":1}}],[\"我们安装一下vite工具\",{\"1\":{\"185\":1}}],[\"我们详细对比了开发环境中的vite和webpack\",{\"1\":{\"182\":1}}],[\"我们可能有一个\",{\"1\":{\"544\":1}}],[\"我们可能会抽取一个可复用的日期格式化函数\",{\"1\":{\"502\":1}}],[\"我们可能需要对数据进行一些转化后再显示\",{\"1\":{\"468\":1}}],[\"我们可能需要拆分应用为更小的块\",{\"1\":{\"282\":1}}],[\"我们可能想要先执行离开动画\",{\"1\":{\"164\":1}}],[\"我们可以添加一个\",{\"1\":{\"570\":1}}],[\"我们可以添加如下配置\",{\"1\":{\"236\":1}}],[\"我们可以手动建立\",{\"1\":{\"550\":1}}],[\"我们可以把这个逻辑以一个组合式函数的形式提取到外部文件中\",{\"1\":{\"503\":1}}],[\"我们可以把一个数组传给\",{\"1\":{\"441\":1}}],[\"我们可以知道目前组件正在经历什么阶段\",{\"1\":{\"492\":1}}],[\"我们可以有三种实现思路\",{\"1\":{\"469\":1}}],[\"我们可以确定的是\",{\"1\":{\"463\":1}}],[\"我们可以选择使用template\",{\"1\":{\"453\":1}}],[\"我们可以利用\",{\"1\":{\"442\":1}}],[\"我们可以传给\",{\"1\":{\"440\":1}}],[\"我们可以做如下操作\",{\"1\":{\"353\":1}}],[\"我们可以单独抽离组件\",{\"1\":{\"339\":1}}],[\"我们可以按照如下的方式进行拆分\",{\"1\":{\"300\":1,\"316\":1}}],[\"我们可以用以下的方式来书写代码\",{\"1\":{\"393\":1}}],[\"我们可以用\",{\"1\":{\"278\":1,\"505\":1}}],[\"我们可以直接在代码中使用template模板\",{\"1\":{\"530\":1}}],[\"我们可以直接使用\",{\"1\":{\"446\":1}}],[\"我们可以直接使用资源模块类型\",{\"1\":{\"231\":1}}],[\"我们可以直接给webpack提供一个\",{\"1\":{\"248\":1}}],[\"我们可以借助于一个插件来帮助我们完成\",{\"1\":{\"234\":1}}],[\"我们可以使用自定义的\",{\"1\":{\"548\":1}}],[\"我们可以使用this关键字来直接访问到data中返回的对象的属性\",{\"1\":{\"529\":1}}],[\"我们可以使用watcheffect和watch来完成响应式数据的侦听\",{\"1\":{\"372\":1}}],[\"我们可以使用\",{\"1\":{\"241\":1,\"313\":1,\"330\":1,\"445\":1}}],[\"我们可以使用下面的方式\",{\"1\":{\"232\":1}}],[\"我们可以使用另外一个插件\",{\"1\":{\"223\":1}}],[\"我们可以使用less工具来完成它的编译转换\",{\"1\":{\"217\":1}}],[\"我们可以将其与页面级过渡组件的事件挂钩\",{\"1\":{\"571\":1}}],[\"我们可以将添加和清除\",{\"1\":{\"503\":1}}],[\"我们可以将babel的配置信息放到一个独立的文件中\",{\"1\":{\"249\":1}}],[\"我们可以将\",{\"1\":{\"222\":1}}],[\"我们可以在路径中使用一个动态字段来实现\",{\"1\":{\"544\":1}}],[\"我们可以在created的生命周期\",{\"1\":{\"479\":1}}],[\"我们可以在传入的回调函数中\",{\"1\":{\"376\":1}}],[\"我们可以在\",{\"1\":{\"365\":1}}],[\"我们可以在单个组件实例上创建多个\",{\"1\":{\"344\":1,\"490\":1}}],[\"我们可以在app组件的template中直接使用这个全局组件\",{\"1\":{\"337\":1}}],[\"我们可以在上面的网站中查询一些添加css属性的样式\",{\"1\":{\"220\":1}}],[\"我们可以在根目录下创建一个webpack\",{\"1\":{\"211\":1}}],[\"我们可以通过更新\",{\"1\":{\"544\":1}}],[\"我们可以通过hook函数\",{\"1\":{\"521\":1}}],[\"我们可以通过watch选项来侦听data或者props的数据变化\",{\"1\":{\"372\":1}}],[\"我们可以通过webpack进行打包\",{\"1\":{\"208\":1}}],[\"我们可以通过调用\",{\"1\":{\"350\":1}}],[\"我们可以通过一个后缀名为\",{\"1\":{\"339\":1}}],[\"我们可以通过\",{\"1\":{\"308\":1,\"324\":1}}],[\"我们可以通过传入\",{\"1\":{\"280\":1}}],[\"我们可以通过cli选择项目的配置和创建出我们的项目\",{\"1\":{\"266\":1}}],[\"我们可以通过设置别名的方式来替换初识模块路径\",{\"1\":{\"264\":1}}],[\"我们可以通过name来自定义前缀\",{\"1\":{\"175\":1}}],[\"我们可以通过使用一个新增的\",{\"1\":{\"175\":1}}],[\"我们可以设置副作用函数的执行时机\",{\"1\":{\"377\":1}}],[\"我们可以设置\",{\"1\":{\"162\":1}}],[\"我们可以简单地在\",{\"1\":{\"160\":1}}],[\"我们可以给元素或者组件绑定一个ref的attribute属性\",{\"1\":{\"342\":1}}],[\"我们可以给\",{\"1\":{\"158\":1}}],[\"我们来创建一个自定义的修饰符\",{\"1\":{\"489\":1}}],[\"我们来看一个例子\",{\"1\":{\"573\":1}}],[\"我们来看一个案例\",{\"1\":{\"154\":1}}],[\"我们来看三个案例\",{\"1\":{\"469\":1}}],[\"我们来分析一下下面代码的嵌套逻辑\",{\"1\":{\"299\":1,\"315\":1}}],[\"我们来安装postcss\",{\"1\":{\"222\":1}}],[\"我们来简单了解下小程序的运行环境\",{\"1\":{\"90\":1}}],[\"我们增加了一些功能\",{\"1\":{\"92\":1}}],[\"我们目前就改一个地方\",{\"1\":{\"88\":1}}],[\"我们以本地设备为例\",{\"1\":{\"30\":1}}],[\"我们统称为ui描述\",{\"1\":{\"23\":1}}],[\"里\",{\"1\":{\"271\":1}}],[\"里的\",{\"1\":{\"270\":1}}],[\"里需声明\",{\"1\":{\"136\":1}}],[\"里面5个配置项\",{\"1\":{\"598\":1}}],[\"里面存放的有类似于data\",{\"1\":{\"581\":1}}],[\"里面存放一个main\",{\"1\":{\"208\":1}}],[\"里面什么都不会呈现\",{\"1\":{\"557\":1}}],[\"里面的\",{\"1\":{\"109\":2}}],[\"里面包含了项目运行生命周期的回调函数\",{\"1\":{\"85\":1}}],[\"里面包含了编译后的代码\",{\"1\":{\"69\":1}}],[\"里面有执行的命令\",{\"1\":{\"62\":1}}],[\"里面有pre\",{\"1\":{\"62\":1}}],[\"相同\",{\"1\":{\"361\":1,\"500\":1,\"552\":2}}],[\"相反\",{\"1\":{\"283\":1}}],[\"相对路径\",{\"1\":{\"264\":1}}],[\"相比之下\",{\"1\":{\"338\":1,\"502\":1}}],[\"相比webpack需要对entry\",{\"1\":{\"183\":1}}],[\"相比snowpack支持多页面\",{\"1\":{\"180\":1}}],[\"相比\",{\"1\":{\"147\":1}}],[\"相关联的代码\",{\"1\":{\"521\":1}}],[\"相关联的副作用\",{\"1\":{\"358\":2}}],[\"相关细节请看指南\",{\"1\":{\"368\":1}}],[\"相关的副作用\",{\"1\":{\"510\":1}}],[\"相关的副作用将被触发执行\",{\"1\":{\"358\":1}}],[\"相关的模块代码都打包在一起\",{\"1\":{\"195\":1}}],[\"相关模块\",{\"1\":{\"267\":1}}],[\"相关代码在处理\",{\"1\":{\"201\":1}}],[\"相关文档\",{\"1\":{\"139\":1}}],[\"相关配置也补充完整\",{\"1\":{\"136\":1}}],[\"相当于组件中的\",{\"1\":{\"584\":1}}],[\"相当于\",{\"1\":{\"553\":1}}],[\"相当于调用\",{\"1\":{\"550\":1}}],[\"相当于已经建立了链接\",{\"1\":{\"363\":1}}],[\"相当于直接在浏览器的\",{\"1\":{\"255\":1}}],[\"相当于html中的span标签\",{\"1\":{\"122\":1}}],[\"相当于在初始\",{\"1\":{\"118\":1}}],[\"相当于之前的css\",{\"1\":{\"84\":1}}],[\"相当于我们之前的html\",{\"1\":{\"84\":1}}],[\"字体显示黑色\",{\"1\":{\"439\":1}}],[\"字体显示红色\",{\"1\":{\"439\":1}}],[\"字体或公共库\",{\"1\":{\"238\":1}}],[\"字体文件加载\",{\"0\":{\"227\":1}}],[\"字体等\",{\"1\":{\"213\":1}}],[\"字体font文件的加载\",{\"1\":{\"205\":1}}],[\"字段呢\",{\"1\":{\"569\":1}}],[\"字段和全局导航守卫来实现类似的行为\",{\"1\":{\"561\":1}}],[\"字段或入口文件名\",{\"1\":{\"271\":1}}],[\"字段配置开发服务器\",{\"1\":{\"270\":1}}],[\"字段配置特定每个目录\",{\"1\":{\"139\":1}}],[\"字段替换为目标服务器的地址\",{\"1\":{\"262\":1}}],[\"字段\",{\"1\":{\"136\":1,\"146\":1,\"264\":3,\"569\":3,\"570\":1}}],[\"字符串路径\",{\"1\":{\"550\":1}}],[\"字符串作为输入\",{\"1\":{\"505\":1}}],[\"字符串方法名称\",{\"1\":{\"478\":1}}],[\"字符串数组\",{\"0\":{\"304\":1,\"320\":1},\"1\":{\"303\":1,\"319\":1}}],[\"字符串转换为对象\",{\"1\":{\"55\":1}}],[\"字符串\",{\"1\":{\"34\":1,\"55\":1,\"505\":1}}],[\"项\",{\"1\":{\"136\":1}}],[\"项指定\",{\"1\":{\"136\":1}}],[\"项目会默认帮助我们配置好所有的配置选项\",{\"1\":{\"340\":1}}],[\"项目起始文件\",{\"1\":{\"334\":1}}],[\"项目则为\",{\"1\":{\"270\":1}}],[\"项目中\",{\"1\":{\"269\":1}}],[\"项目的\",{\"1\":{\"272\":1}}],[\"项目的说明文件\",{\"1\":{\"269\":1}}],[\"项目的用户界面\",{\"1\":{\"266\":1}}],[\"项目结构\",{\"0\":{\"269\":1}}],[\"项目目录结构介绍\",{\"0\":{\"83\":1}}],[\"项目目录\",{\"1\":{\"82\":1}}],[\"项目模板\",{\"1\":{\"68\":1}}],[\"项目路径\",{\"1\":{\"67\":1}}],[\"项目\",{\"0\":{\"70\":1},\"1\":{\"67\":1,\"70\":1,\"518\":1}}],[\"获取goods模块的store\",{\"1\":{\"583\":1}}],[\"获取一个包含所有路由记录的数组\",{\"1\":{\"575\":1}}],[\"获取定义的时间格式\",{\"1\":{\"416\":1}}],[\"获取子组件传递过来的值\",{\"1\":{\"404\":1}}],[\"获取返回值\",{\"1\":{\"375\":1}}],[\"获取组件实例\",{\"1\":{\"493\":1}}],[\"获取组件\",{\"0\":{\"371\":1}}],[\"获取元素\",{\"0\":{\"370\":1}}],[\"获取\",{\"1\":{\"358\":1}}],[\"获取到当前组件定义的\",{\"1\":{\"313\":1,\"330\":1}}],[\"获取到的组件\",{\"1\":{\"282\":1}}],[\"获取ts编译后的代码\",{\"1\":{\"191\":1}}],[\"获取当前页面的自定义\",{\"1\":{\"135\":1}}],[\"获取app上的数据或调用开发者注册在\",{\"1\":{\"93\":1}}],[\"层级相对较高\",{\"1\":{\"135\":1}}],[\"页的\",{\"1\":{\"136\":1}}],[\"页下的自定义\",{\"1\":{\"135\":1}}],[\"页\",{\"1\":{\"135\":1}}],[\"页面仍然会显示\",{\"1\":{\"573\":1}}],[\"页面留在原地\",{\"1\":{\"567\":1}}],[\"页面上使用的地方会自动更新同步\",{\"1\":{\"620\":1,\"693\":1}}],[\"页面上实现\",{\"1\":{\"539\":1}}],[\"页面上拉触底事件触发时距页面底部距离\",{\"1\":{\"142\":1,\"146\":1}}],[\"页面会改变\",{\"1\":{\"477\":2}}],[\"页面会在后台使用动态数据重新渲染一次\",{\"1\":{\"118\":1}}],[\"页面没有效果\",{\"1\":{\"216\":1}}],[\"页面自定义组件配置\",{\"1\":{\"146\":1}}],[\"页面容器背景色\",{\"1\":{\"146\":1}}],[\"页面中配置项在当前页面会覆盖\",{\"1\":{\"146\":1}}],[\"页面配置\",{\"0\":{\"146\":1}}],[\"页面路由\",{\"1\":{\"145\":1}}],[\"页面路径\",{\"1\":{\"143\":1}}],[\"页面路径列表\",{\"1\":{\"139\":1}}],[\"页面初始渲染缓存配置\",{\"1\":{\"142\":1,\"146\":1}}],[\"页面跳转过程中\",{\"1\":{\"115\":1}}],[\"页面\",{\"1\":{\"111\":1,\"112\":1,\"130\":7,\"137\":1,\"263\":3,\"567\":1}}],[\"页面的\",{\"1\":{\"111\":1,\"112\":1}}],[\"页面的样式内容\",{\"1\":{\"84\":1}}],[\"页面渲染\",{\"0\":{\"108\":1}}],[\"页面生命周期\",{\"0\":{\"96\":1}}],[\"页面尺寸变化时执行\",{\"1\":{\"95\":1}}],[\"页面滚动时执行\",{\"1\":{\"95\":1}}],[\"页面被用户分享时执行\",{\"1\":{\"95\":1}}],[\"页面触底时执行\",{\"1\":{\"95\":1}}],[\"页面销毁时执行\",{\"1\":{\"95\":1}}],[\"页面从前台变为后台时执行\",{\"1\":{\"95\":1}}],[\"页面首次渲染完毕时执行\",{\"1\":{\"95\":1}}],[\"页面出现在前台时执行\",{\"1\":{\"95\":1}}],[\"页面创建时执行\",{\"1\":{\"95\":1}}],[\"页面不存在监听函数\",{\"1\":{\"93\":1}}],[\"页面有关的配置\",{\"1\":{\"84\":1}}],[\"页面相关的js代码可以写在这里\",{\"1\":{\"84\":1}}],[\"维护项目目录的整洁\",{\"1\":{\"610\":1}}],[\"维护着它内部的值\",{\"1\":{\"355\":1}}],[\"维护简便\",{\"1\":{\"78\":1}}],[\"维度\",{\"1\":{\"133\":1}}],[\"仅运行时\",{\"1\":{\"530\":2}}],[\"仅当事件是从特定键触发时才触发回调\",{\"1\":{\"447\":1,\"450\":1}}],[\"仅负责渲染外层的\",{\"1\":{\"288\":1}}],[\"仅使用eslint进行错误检查\",{\"1\":{\"268\":1}}],[\"仅在被赋新值时\",{\"1\":{\"477\":1}}],[\"仅在页面需要它渲染时才会调用加载内部实际组件的函数\",{\"1\":{\"282\":1}}],[\"仅在\",{\"1\":{\"168\":1,\"408\":2}}],[\"仅能应用在\",{\"1\":{\"163\":1}}],[\"仅限于本文档包含的选项\",{\"1\":{\"146\":1}}],[\"仅支持单个元素或组件作为其插槽内容\",{\"1\":{\"155\":1}}],[\"仅支持十六进制颜色\",{\"1\":{\"143\":3}}],[\"仅支持以下值\",{\"1\":{\"142\":1,\"146\":1}}],[\"仅支持\",{\"1\":{\"142\":2,\"143\":2,\"146\":2}}],[\"仅\",{\"1\":{\"132\":9,\"142\":2,\"146\":2}}],[\"仅最后一次调用生效\",{\"1\":{\"118\":1}}],[\"裁剪模式\",{\"1\":{\"132\":9}}],[\"宽度自动变化\",{\"1\":{\"132\":1}}],[\"宽度不变\",{\"1\":{\"132\":1}}],[\"高兼容性的产物代码\",{\"1\":{\"182\":1}}],[\"高度不变\",{\"1\":{\"132\":1}}],[\"高度自动变化\",{\"1\":{\"132\":1}}],[\"高效的方式让开发者可以在微信中开发具有原生\",{\"1\":{\"90\":1}}],[\"另一种情况是前端开发人员如果要开发页面\",{\"1\":{\"536\":1}}],[\"另一种在组件内实现\",{\"1\":{\"343\":1}}],[\"另一个组件挂载后\",{\"1\":{\"368\":1}}],[\"另一个方向将会发生截取\",{\"1\":{\"132\":1}}],[\"另外一种方式就是使用计算属性computed\",{\"1\":{\"468\":1}}],[\"另外一个类似与mixin的方式是通过extends属性\",{\"1\":{\"500\":1}}],[\"另外一个参数是context\",{\"1\":{\"349\":1}}],[\"另外一个动画还没有结束\",{\"1\":{\"162\":1}}],[\"另外我们发现代码中依然存在es6的语法\",{\"1\":{\"208\":1}}],[\"另外\",{\"1\":{\"1\":1,\"107\":1,\"136\":1,\"284\":1,\"487\":1}}],[\"元素触发\",{\"1\":{\"489\":1}}],[\"元素来循环渲染一段包含多个元素的内容\",{\"1\":{\"458\":1}}],[\"元素来实现动态组件\",{\"1\":{\"276\":1,\"328\":1}}],[\"元素或者组件以及其所有的子元素将视为静态内容并且跳过\",{\"1\":{\"432\":1}}],[\"元素被\",{\"1\":{\"410\":1}}],[\"元素时\",{\"1\":{\"357\":1}}],[\"元素的\",{\"1\":{\"343\":1,\"481\":1}}],[\"元素可以有一个特殊的\",{\"1\":{\"291\":1}}],[\"元素是一个插槽出口\",{\"1\":{\"288\":1}}],[\"元素作为承载分发内容的出口\",{\"1\":{\"287\":1}}],[\"元素间过渡\",{\"0\":{\"166\":1}}],[\"元素\",{\"1\":{\"132\":1,\"276\":1,\"291\":1,\"328\":1,\"377\":1,\"461\":1,\"503\":1,\"571\":1}}],[\"搜一搜\",{\"1\":{\"132\":1}}],[\"搜索功能文件\",{\"1\":{\"89\":1}}],[\"收藏夹\",{\"1\":{\"136\":1}}],[\"收藏\",{\"1\":{\"132\":1}}],[\"媒体组件\",{\"0\":{\"131\":1}}],[\"退出小程序\",{\"1\":{\"130\":1}}],[\"标示了父元素提供的插槽内容\",{\"1\":{\"288\":1}}],[\"标签来定义导航链接\",{\"1\":{\"549\":1}}],[\"标签来使用\",{\"1\":{\"250\":1}}],[\"标签有新的网络请求\",{\"1\":{\"546\":1}}],[\"标签\",{\"1\":{\"540\":1,\"541\":1,\"543\":1,\"547\":1}}],[\"标签编写模板\",{\"1\":{\"530\":1}}],[\"标签和表单控件\",{\"1\":{\"483\":1}}],[\"标签的\",{\"1\":{\"483\":1}}],[\"标签的话\",{\"1\":{\"130\":1}}],[\"标签之间来作为默认内容\",{\"1\":{\"289\":1}}],[\"标题内容放这里\",{\"1\":{\"291\":1}}],[\"标题\",{\"1\":{\"142\":1}}],[\"标记需要进行更新的部分\",{\"1\":{\"40\":1}}],[\"没返回\",{\"1\":{\"130\":1}}],[\"没有硬编码的\",{\"1\":{\"546\":1}}],[\"没有缓存\",{\"1\":{\"470\":1,\"471\":1}}],[\"没有key的操作过程\",{\"1\":{\"464\":1}}],[\"没有key的时候\",{\"1\":{\"460\":1}}],[\"没有key\",{\"1\":{\"464\":1}}],[\"没有\",{\"1\":{\"391\":1}}],[\"没有提供\",{\"1\":{\"291\":1}}],[\"没有动画的情况下\",{\"1\":{\"154\":1}}],[\"没有点击态效果\",{\"1\":{\"121\":1}}],[\"没有被状态装饰器装饰的变量\",{\"1\":{\"36\":1}}],[\"圆角大小\",{\"1\":{\"126\":1}}],[\"纵向滚动\",{\"1\":{\"124\":1}}],[\"选中商品才累加数量\",{\"1\":{\"657\":1,\"668\":1,\"696\":1}}],[\"选中时的图片路径\",{\"1\":{\"143\":1}}],[\"选中态\",{\"1\":{\"135\":1}}],[\"选项比较熟悉\",{\"1\":{\"514\":1}}],[\"选项基本用于组合功能\",{\"1\":{\"500\":1}}],[\"选项接受一个\",{\"1\":{\"497\":1}}],[\"选项期望接受一个对象\",{\"1\":{\"475\":1}}],[\"选项注册\",{\"1\":{\"411\":1}}],[\"选项式写法是基于组合式写法产生的\",{\"1\":{\"348\":1}}],[\"选项进行匹配\",{\"1\":{\"279\":1}}],[\"选项来完成的\",{\"1\":{\"572\":1}}],[\"选项来开始使用这些数据\",{\"1\":{\"313\":1,\"330\":1}}],[\"选项来提供数据\",{\"1\":{\"313\":1,\"330\":1}}],[\"选项来修改\",{\"1\":{\"272\":1}}],[\"选项来实现\",{\"1\":{\"263\":1}}],[\"选项时\",{\"1\":{\"250\":1}}],[\"选项\",{\"1\":{\"124\":1,\"267\":1,\"270\":1,\"271\":1,\"272\":1,\"279\":1,\"338\":1,\"409\":1,\"469\":1,\"475\":1,\"477\":1}}],[\"选择其中的source面板\",{\"1\":{\"532\":1}}],[\"选择哪个版本取决于项目的需求和优化目标\",{\"1\":{\"530\":1}}],[\"选择的代码检查和格式化配置\",{\"1\":{\"268\":1}}],[\"选择预设\",{\"1\":{\"268\":1}}],[\"选择可以添加你需要的postcss相关的插件\",{\"1\":{\"219\":1}}],[\"选择所有文档的\",{\"1\":{\"151\":1}}],[\"选择所有\",{\"1\":{\"151\":1}}],[\"选择所有拥有\",{\"1\":{\"151\":1}}],[\"选择拥有\",{\"1\":{\"151\":1}}],[\"选择器或一个\",{\"1\":{\"571\":1}}],[\"选择器来寻找目标\",{\"1\":{\"503\":1}}],[\"选择器\",{\"0\":{\"151\":1},\"1\":{\"151\":1,\"163\":1}}],[\"选择运行到小程序模拟器或者手机端\",{\"1\":{\"67\":1}}],[\"选择模板后\",{\"1\":{\"67\":1}}],[\"选择配置\",{\"1\":{\"59\":1}}],[\"选择api9版本\",{\"1\":{\"30\":1}}],[\"选择new\",{\"1\":{\"30\":1}}],[\"选择next后\",{\"1\":{\"26\":1}}],[\"选择install来安装一个\",{\"1\":{\"30\":1}}],[\"选择主菜单中的tools\",{\"1\":{\"30\":1}}],[\"选择第一个\",{\"1\":{\"27\":1}}],[\"选择要安装的node\",{\"1\":{\"26\":1}}],[\"选择不导入配置\",{\"1\":{\"26\":1}}],[\"选择\",{\"1\":{\"26\":1,\"268\":3}}],[\"滑动\",{\"1\":{\"170\":1}}],[\"滑动方向是否为纵向\",{\"1\":{\"123\":1}}],[\"滑动动画时长\",{\"1\":{\"123\":1}}],[\"滑块视图容器\",{\"1\":{\"123\":1}}],[\"布局的例子\",{\"1\":{\"121\":1}}],[\"布局文件等\",{\"1\":{\"34\":1}}],[\"手动触发与\",{\"1\":{\"358\":1}}],[\"手动选择需要获取的特性\",{\"1\":{\"268\":1}}],[\"手动编排这样的动画是非常复杂的\",{\"1\":{\"164\":1}}],[\"手指松开后点击态保留时间\",{\"1\":{\"121\":1}}],[\"手写循环递归\",{\"1\":{\"56\":1}}],[\"手写递归\",{\"0\":{\"47\":1,\"53\":1}}],[\"剩下的可以在官方文档中查看\",{\"1\":{\"119\":1}}],[\"动态地确定使用的过渡\",{\"1\":{\"570\":1}}],[\"动态地绑定一个或多个\",{\"1\":{\"437\":1}}],[\"动态返回重定向目标\",{\"1\":{\"554\":1}}],[\"动态字段以冒号开始\",{\"1\":{\"544\":1}}],[\"动态路由案例\",{\"0\":{\"576\":1}}],[\"动态路由主要通过两个函数实现\",{\"1\":{\"573\":1}}],[\"动态路由\",{\"0\":{\"572\":1}}],[\"动态路由等\",{\"1\":{\"539\":1}}],[\"动态路由选择\",{\"1\":{\"539\":1}}],[\"动态绑定属性\",{\"0\":{\"445\":1},\"1\":{\"445\":1}}],[\"动态的绑定一个或多个\",{\"1\":{\"437\":1}}],[\"动态插槽名可以使用v\",{\"1\":{\"292\":1}}],[\"动态插槽名\",{\"0\":{\"292\":1}}],[\"动态组件的传值\",{\"0\":{\"277\":1}}],[\"动态组件的方式\",{\"1\":{\"274\":1}}],[\"动态组件\",{\"0\":{\"273\":1,\"276\":1,\"328\":1},\"1\":{\"422\":1}}],[\"动态导入自动polyfill等\",{\"1\":{\"180\":1}}],[\"动态\",{\"1\":{\"118\":1}}],[\"动画库时非常有用\",{\"1\":{\"161\":1}}],[\"动画库\",{\"1\":{\"161\":1}}],[\"动画和\",{\"1\":{\"160\":1}}],[\"动画完成事件\",{\"1\":{\"126\":1}}],[\"动画从上次结束点接着播\",{\"1\":{\"126\":1}}],[\"动画从头播\",{\"1\":{\"126\":1}}],[\"动画\",{\"0\":{\"114\":1,\"155\":1},\"1\":{\"160\":1,\"170\":1}}],[\"有几个不同的方法来删除现有的路由\",{\"1\":{\"574\":1}}],[\"有值\",{\"1\":{\"568\":1}}],[\"有个通用的场景是\",{\"1\":{\"555\":1}}],[\"有\",{\"1\":{\"547\":2,\"551\":1}}],[\"有三个主要的短板\",{\"1\":{\"514\":1}}],[\"有三种方式\",{\"1\":{\"215\":1}}],[\"有状态逻辑负责管理会随时间而变化的状态\",{\"1\":{\"502\":1}}],[\"有了前后端分离的开发模式\",{\"1\":{\"537\":1}}],[\"有了这个\",{\"1\":{\"489\":1}}],[\"有了它\",{\"1\":{\"393\":1,\"503\":1}}],[\"有无key的结论\",{\"0\":{\"465\":1},\"1\":{\"465\":1}}],[\"有key的操作过程\",{\"1\":{\"464\":1}}],[\"有key的时候\",{\"1\":{\"460\":1}}],[\"有key\",{\"1\":{\"464\":1}}],[\"有点类似于小程序中的block\",{\"1\":{\"453\":1}}],[\"有两个属性\",{\"1\":{\"418\":1}}],[\"有对应的简写\",{\"1\":{\"291\":1}}],[\"有如下规则\",{\"1\":{\"361\":1}}],[\"有如下模板\",{\"1\":{\"291\":1}}],[\"有如下的特点\",{\"1\":{\"173\":1}}],[\"有助于简化代码共享\",{\"1\":{\"249\":1}}],[\"有时\",{\"1\":{\"569\":1}}],[\"有时候\",{\"1\":{\"555\":1,\"571\":1}}],[\"有时候我们的元素\",{\"1\":{\"439\":1}}],[\"有时候我们处理后的文件名称按照一定的规则进行显示\",{\"1\":{\"228\":1}}],[\"有时这是必要的\",{\"1\":{\"437\":1}}],[\"有时在一个组件中包含多个插槽出口是很有用的\",{\"1\":{\"291\":1}}],[\"有时会想要额外展示一些可变的内容\",{\"1\":{\"118\":1}}],[\"有些变更真的很难实现或者很耗时\",{\"1\":{\"582\":1}}],[\"有些代码片段是需要经常写的\",{\"1\":{\"428\":1}}],[\"有些模板需要依赖更高的\",{\"1\":{\"185\":1}}],[\"有些场景中\",{\"1\":{\"118\":1}}],[\"有返回首页\",{\"1\":{\"130\":1}}],[\"有效值\",{\"1\":{\"125\":1}}],[\"有以下属性\",{\"1\":{\"86\":1,\"139\":1,\"146\":1}}],[\"换成\",{\"1\":{\"551\":1}}],[\"换言之\",{\"1\":{\"293\":1}}],[\"换而言之\",{\"1\":{\"117\":1}}],[\"换行符使用\",{\"1\":{\"59\":1,\"60\":1}}],[\"错误用法\",{\"1\":{\"430\":1}}],[\"错误跳转到指定页面的效果\",{\"1\":{\"263\":1}}],[\"错误跳转到一个名为\",{\"1\":{\"263\":1}}],[\"错误页面\",{\"1\":{\"263\":1}}],[\"错误\",{\"1\":{\"263\":1}}],[\"错误的做法\",{\"1\":{\"117\":1}}],[\"错误监听函数\",{\"1\":{\"93\":1}}],[\"错误监听和页面不存在监听函数等\",{\"1\":{\"93\":1}}],[\"置为\",{\"1\":{\"117\":1}}],[\"应该能够接收一个\",{\"1\":{\"505\":1}}],[\"应该怎么做呢\",{\"1\":{\"446\":1}}],[\"应该已经自带\",{\"1\":{\"269\":1}}],[\"应该由服务器来处理\",{\"1\":{\"263\":1}}],[\"应该是这样\",{\"1\":{\"158\":1}}],[\"应当在\",{\"1\":{\"117\":1}}],[\"应用的核心\",{\"1\":{\"609\":1}}],[\"应用的概念中\",{\"1\":{\"502\":1}}],[\"应用的全局配置信息\",{\"1\":{\"34\":1}}],[\"应用app的方法\",{\"1\":{\"499\":1}}],[\"应用补丁\",{\"1\":{\"464\":1}}],[\"应用场景\",{\"1\":{\"353\":1,\"355\":1}}],[\"应用一系列的转换规则\",{\"1\":{\"247\":1}}],[\"应用程序开发的状态管理模式\",{\"1\":{\"591\":1,\"688\":1}}],[\"应用程序会保持运行状态\",{\"1\":{\"258\":1}}],[\"应用程序运行过程中\",{\"1\":{\"255\":1}}],[\"应用程序都使用它来构建和部署\",{\"1\":{\"241\":1}}],[\"应用程序的\",{\"1\":{\"204\":1}}],[\"应用于嵌套元素的规则\",{\"1\":{\"163\":1}}],[\"应用于整个离开动画阶段\",{\"1\":{\"157\":1}}],[\"应用于整个进入动画阶段\",{\"1\":{\"157\":1}}],[\"应用在页面\",{\"1\":{\"117\":1}}],[\"应用这些变化\",{\"1\":{\"40\":1}}],[\"应用级编译构建任务脚本\",{\"1\":{\"34\":1}}],[\"应用级配置信息\",{\"1\":{\"34\":1}}],[\"应用\",{\"1\":{\"34\":3,\"143\":1}}],[\"应用组件管理和窗口管理在架构层面解耦\",{\"1\":{\"33\":1}}],[\"快速的\",{\"1\":{\"178\":1}}],[\"快速展示出页面中永远不会变的部分\",{\"1\":{\"115\":1}}],[\"快捷键ctrl+n\",{\"1\":{\"67\":1}}],[\"储存空间回收等原因被清除\",{\"1\":{\"115\":1}}],[\"启动项目之后才加载登录路由\",{\"1\":{\"578\":1}}],[\"启动本地服务\",{\"1\":{\"254\":1}}],[\"启动后会做一堆事情\",{\"1\":{\"182\":1}}],[\"启动后如下\",{\"1\":{\"30\":1}}],[\"启动时还会使用\",{\"1\":{\"182\":1}}],[\"启用gzip压缩\",{\"1\":{\"261\":1}}],[\"启用\",{\"1\":{\"251\":2}}],[\"启用新版的组件样式\",{\"1\":{\"146\":1}}],[\"启用初始渲染缓存\",{\"1\":{\"115\":1}}],[\"冷启动时\",{\"1\":{\"115\":1}}],[\"载入必需的小程序代码\",{\"1\":{\"115\":2}}],[\"段中设置\",{\"1\":{\"113\":1}}],[\"响应式的引用\",{\"1\":{\"355\":1}}],[\"响应式状态\",{\"1\":{\"347\":1}}],[\"响应式\",{\"1\":{\"347\":1}}],[\"响应显示区域变化\",{\"0\":{\"113\":1},\"1\":{\"142\":1,\"146\":1}}],[\"响应的数据绑定\",{\"0\":{\"91\":1}}],[\"做到浏览器端的即时热模块更换\",{\"1\":{\"201\":1}}],[\"做法就是\",{\"1\":{\"112\":1}}],[\"做中转\",{\"1\":{\"90\":1}}],[\"双大括号\",{\"1\":{\"430\":1}}],[\"双大括号语法\",{\"0\":{\"430\":1}}],[\"双向绑定\",{\"1\":{\"344\":1,\"490\":1}}],[\"双向绑定同样可以使用在自定义组件上\",{\"1\":{\"111\":1}}],[\"双引号\",{\"1\":{\"59\":1,\"60\":1}}],[\"尚不能\",{\"1\":{\"110\":1}}],[\"都去\",{\"1\":{\"551\":1}}],[\"都将被自动字符串化\",{\"1\":{\"550\":1}}],[\"都将使用相关的策略进行合并\",{\"1\":{\"500\":1}}],[\"都会映射到同一个路由\",{\"1\":{\"544\":1}}],[\"都会从静态资源服务器请求文件\",{\"1\":{\"537\":1}}],[\"都会被调用\",{\"1\":{\"498\":1}}],[\"都会同步不同的\",{\"1\":{\"344\":1,\"490\":1}}],[\"都可以用于\",{\"1\":{\"391\":1}}],[\"都应该在组件的\",{\"1\":{\"368\":1}}],[\"都放在\",{\"1\":{\"355\":1}}],[\"都是一个纯函数\",{\"1\":{\"694\":1}}],[\"都是可选的\",{\"1\":{\"408\":1}}],[\"都是可接受的\",{\"1\":{\"335\":1}}],[\"都是响应式的👇\",{\"1\":{\"363\":1}}],[\"都是有状态的对象\",{\"1\":{\"349\":1}}],[\"都是非法的\",{\"1\":{\"110\":1}}],[\"都对模块热替换\",{\"1\":{\"257\":1}}],[\"都需要你创建一个新的集合\",{\"1\":{\"582\":1}}],[\"都需要手动删除dist文件夹\",{\"1\":{\"234\":1}}],[\"都需要对\",{\"1\":{\"141\":1}}],[\"都需要在页面对应的\",{\"1\":{\"94\":1}}],[\"都不写后缀名\",{\"1\":{\"130\":1}}],[\"值给计算属性\",{\"1\":{\"657\":1}}],[\"值是相应的回调函数\",{\"1\":{\"475\":1}}],[\"值是\",{\"1\":{\"408\":1}}],[\"值是一个字符串或者对象\",{\"1\":{\"215\":1}}],[\"值会被传入到loader中\",{\"1\":{\"215\":1}}],[\"值\",{\"1\":{\"123\":1,\"173\":1,\"445\":1,\"547\":2,\"548\":1,\"644\":1}}],[\"值为对象的选项\",{\"1\":{\"498\":1}}],[\"值为\",{\"1\":{\"110\":1,\"283\":1}}],[\"值转换为\",{\"1\":{\"55\":1}}],[\"前进按钮触发\",{\"1\":{\"571\":1}}],[\"前进\",{\"1\":{\"552\":1,\"571\":1}}],[\"前后端分离阶段\",{\"0\":{\"537\":1},\"1\":{\"535\":1,\"537\":1}}],[\"前端代码\",{\"0\":{\"578\":1}}],[\"前端路由作用\",{\"1\":{\"539\":1}}],[\"前端专注于交互和可视化上\",{\"1\":{\"537\":1}}],[\"前端通过ajax获取数据\",{\"1\":{\"537\":1}}],[\"前端渲染的理解\",{\"1\":{\"537\":1}}],[\"前端面试之彻底搞懂this指向\",{\"1\":{\"529\":1}}],[\"前端\",{\"1\":{\"526\":1}}],[\"前端我们无论绑定src\",{\"1\":{\"445\":1}}],[\"前面讨论过的\",{\"1\":{\"508\":1}}],[\"前面我们绑定了元素的内容和属性\",{\"1\":{\"447\":1}}],[\"前面我们会通过props传递给组件一些数据\",{\"1\":{\"286\":1}}],[\"前调用\",{\"1\":{\"408\":1}}],[\"前\",{\"1\":{\"408\":1}}],[\"前提是网络连接和防火墙允许\",{\"1\":{\"260\":1}}],[\"前往群聊\",{\"1\":{\"132\":1}}],[\"前边距\",{\"1\":{\"123\":1}}],[\"前缀\",{\"1\":{\"110\":2}}],[\"前者是存储在栈内存中\",{\"1\":{\"42\":1}}],[\"却不会同时改变\",{\"1\":{\"110\":2}}],[\"来同步地改变状态\",{\"1\":{\"694\":1}}],[\"来修改状态\",{\"1\":{\"694\":1,\"695\":1}}],[\"来执行的\",{\"1\":{\"694\":1}}],[\"来共享一个全局状态\",{\"1\":{\"580\":1}}],[\"来改变当前的位置\",{\"1\":{\"573\":1}}],[\"来手动导航\",{\"1\":{\"573\":1}}],[\"来源\",{\"1\":{\"567\":1}}],[\"来取消\",{\"1\":{\"563\":1}}],[\"来说\",{\"1\":{\"563\":1}}],[\"来访问组件实例\",{\"1\":{\"563\":1}}],[\"来跳过它\",{\"1\":{\"550\":1}}],[\"来创建链接\",{\"1\":{\"541\":1}}],[\"来创建一个全局事件总线\",{\"1\":{\"314\":1,\"331\":1}}],[\"来管理路由\",{\"1\":{\"540\":3}}],[\"来将一部分独立的逻辑抽取出去\",{\"1\":{\"521\":1}}],[\"来描述组件对象\",{\"1\":{\"521\":1}}],[\"来实现数据的劫持\",{\"1\":{\"520\":1}}],[\"来实现这个行为\",{\"1\":{\"164\":1}}],[\"来劫持数据的\",{\"1\":{\"520\":1}}],[\"来进行重构\",{\"1\":{\"519\":1}}],[\"来进行类型检测\",{\"1\":{\"519\":1}}],[\"来进行预构建\",{\"1\":{\"182\":1}}],[\"来重构我们现有的实现\",{\"1\":{\"505\":1}}],[\"来启动和卸载副作用\",{\"1\":{\"503\":1}}],[\"来启用vue的hmr功能\",{\"1\":{\"257\":1}}],[\"来封装和复用有状态逻辑的函数\",{\"1\":{\"502\":1}}],[\"来\",{\"1\":{\"500\":1}}],[\"来分发vue组件中的可复用功能\",{\"1\":{\"496\":1}}],[\"来侦听\",{\"1\":{\"479\":1}}],[\"来阻止\",{\"1\":{\"450\":1}}],[\"来命名\",{\"1\":{\"442\":1}}],[\"来命名你的props\",{\"1\":{\"306\":1,\"322\":1}}],[\"来绑定一些css内联样式\",{\"1\":{\"442\":1}}],[\"来展示\",{\"1\":{\"433\":1}}],[\"来添加一些组件选项\",{\"1\":{\"423\":1}}],[\"来避免\",{\"1\":{\"391\":1}}],[\"来自哪里\",{\"1\":{\"313\":1,\"330\":1}}],[\"来自动使用less工具转换less到css\",{\"1\":{\"218\":1}}],[\"来限制可被缓存的最大组件实例数\",{\"1\":{\"280\":1}}],[\"来定制该行为\",{\"1\":{\"279\":1}}],[\"来审查一个\",{\"1\":{\"272\":1}}],[\"来验证它是否安装成功\",{\"1\":{\"267\":1}}],[\"来生成模块的绝对路径\",{\"1\":{\"264\":1}}],[\"来导入位于\",{\"1\":{\"264\":1}}],[\"来解决\",{\"1\":{\"339\":1}}],[\"来解决这个警告\",{\"1\":{\"110\":1}}],[\"来解析文件路径\",{\"1\":{\"264\":1}}],[\"来提高开发的速度\",{\"1\":{\"255\":1}}],[\"来完成注册\",{\"1\":{\"499\":1}}],[\"来完成这样的功能\",{\"1\":{\"254\":1}}],[\"来完成其他文件的加载\",{\"1\":{\"215\":1}}],[\"来引入\",{\"1\":{\"250\":2}}],[\"来替换旧的模块代码\",{\"1\":{\"258\":1}}],[\"来替换所有这些\",{\"1\":{\"231\":1}}],[\"来替代上面的这些loader\",{\"1\":{\"231\":1}}],[\"来替代\",{\"1\":{\"214\":1}}],[\"来处理\",{\"1\":{\"500\":1}}],[\"来处理您的\",{\"1\":{\"223\":1}}],[\"来处理css文件\",{\"1\":{\"213\":1}}],[\"来指定链接\",{\"1\":{\"540\":1,\"543\":1}}],[\"来指定对应的配置文件\",{\"1\":{\"212\":1}}],[\"来指定自定义的过渡\",{\"1\":{\"161\":1}}],[\"来作为webpack的配置文件\",{\"1\":{\"211\":1}}],[\"来优化请求\",{\"1\":{\"182\":1}}],[\"来显式指定过渡的持续时间\",{\"1\":{\"163\":1}}],[\"来明确的告知vue监听的类型\",{\"1\":{\"162\":1}}],[\"来声明一个过渡效果名\",{\"1\":{\"158\":1}}],[\"来更新\",{\"1\":{\"110\":2}}],[\"来暴露模块接口\",{\"1\":{\"97\":1}}],[\"且可以传入诸如\",{\"1\":{\"559\":1}}],[\"且其返回的绑定必须在\",{\"1\":{\"513\":1}}],[\"且其值为\",{\"1\":{\"489\":1}}],[\"且会在组件自身的钩子前被调用\",{\"1\":{\"497\":1}}],[\"且没有提供任何插槽内容时\",{\"1\":{\"289\":1}}],[\"且这个启动时间与代码量\",{\"1\":{\"182\":1}}],[\"且热更新的速度不会随着模块增多而变慢\",{\"1\":{\"178\":1}}],[\"且元素已从\",{\"1\":{\"168\":1}}],[\"且返回数组中最大的元素的值\",{\"1\":{\"109\":1}}],[\"且必须为容器组件\",{\"1\":{\"23\":1}}],[\"接着上节创建的\",{\"1\":{\"557\":1}}],[\"接收路由上传递的参数和值\",{\"1\":{\"547\":1}}],[\"接收响应式状态\",{\"0\":{\"505\":1}}],[\"接收\",{\"1\":{\"384\":1,\"494\":2}}],[\"接收一个静态\",{\"1\":{\"505\":1}}],[\"接收一个具有\",{\"1\":{\"365\":1}}],[\"接收一个getter函数\",{\"1\":{\"365\":1}}],[\"接收动态的样式\",{\"1\":{\"150\":1}}],[\"接下来我们详细解析一下之前传入的属性分别代表什么含义\",{\"1\":{\"527\":1}}],[\"接下来我们来看一下同一个计算多次使用\",{\"1\":{\"473\":1}}],[\"接下来我们把\",{\"1\":{\"250\":1}}],[\"接下来配置copywebpackplugin即可\",{\"1\":{\"238\":1}}],[\"接下来会被\",{\"1\":{\"197\":1}}],[\"接下来会进行实例化\",{\"1\":{\"195\":1}}],[\"接下来以vite创建的模板为例\",{\"1\":{\"195\":1}}],[\"接下来在使用的时候我们有两种用法\",{\"1\":{\"170\":1}}],[\"接口为异步回调的方式获取\",{\"1\":{\"137\":1}}],[\"接口获取组件实例\",{\"1\":{\"135\":1}}],[\"接口\",{\"1\":{\"135\":1,\"136\":2}}],[\"接受的对象种类相同\",{\"1\":{\"550\":1}}],[\"接受一个对象类型\",{\"1\":{\"282\":1}}],[\"接受一个数组\",{\"1\":{\"109\":1,\"143\":1}}],[\"接受\",{\"1\":{\"123\":1}}],[\"接近原生\",{\"1\":{\"77\":1}}],[\"语句中\",{\"1\":{\"264\":1}}],[\"语句来导入和导出模块\",{\"1\":{\"250\":1}}],[\"语法格式如下\",{\"1\":{\"547\":1}}],[\"语法编写模块化的组件\",{\"1\":{\"531\":1}}],[\"语法糖\",{\"0\":{\"416\":1},\"1\":{\"448\":1}}],[\"语法糖函数示例\",{\"1\":{\"358\":1}}],[\"语法在单文件组件中使用\",{\"1\":{\"347\":1}}],[\"语法分析\",{\"1\":{\"247\":1}}],[\"语法的预设\",{\"1\":{\"244\":1}}],[\"语法导入的模块并以数组形式返回\",{\"1\":{\"197\":1}}],[\"语法参考\",{\"1\":{\"107\":1}}],[\"语法\",{\"0\":{\"430\":1},\"1\":{\"107\":1,\"430\":1,\"551\":1,\"567\":1,\"615\":1,\"616\":2,\"624\":1,\"629\":2,\"637\":1,\"641\":2,\"657\":1,\"661\":2,\"668\":1,\"669\":1,\"697\":2}}],[\"语文\",{\"1\":{\"48\":1}}],[\"要state\",{\"1\":{\"675\":1}}],[\"要commit给mutations\",{\"1\":{\"638\":1}}],[\"要在3个组件共享一个数据\",{\"1\":{\"606\":1}}],[\"要在当前页面下\",{\"1\":{\"135\":1}}],[\"要改state需要提交给mutations\",{\"1\":{\"597\":1}}],[\"要跳转到的路由\",{\"1\":{\"567\":1}}],[\"要么在\",{\"1\":{\"508\":1}}],[\"要么是同一时间渲染多个节点中的一个\",{\"1\":{\"173\":1}}],[\"要么是单个节点\",{\"1\":{\"173\":1}}],[\"要定义一个ref对象\",{\"1\":{\"369\":1}}],[\"要避免深层级的转换行为\",{\"1\":{\"361\":1}}],[\"要做的事情\",{\"1\":{\"346\":1}}],[\"要做到这一点\",{\"1\":{\"294\":1,\"571\":1}}],[\"要让这个例子实际工作起来\",{\"1\":{\"343\":1,\"481\":1}}],[\"要为具名插槽传入内容\",{\"1\":{\"291\":1}}],[\"要保证这些组件都能正常工作\",{\"1\":{\"284\":1}}],[\"要将组件渲染到这个嵌套的\",{\"1\":{\"557\":1}}],[\"要将\",{\"1\":{\"263\":1}}],[\"要配置这些特性标志\",{\"1\":{\"251\":1}}],[\"要解决这个问题\",{\"1\":{\"250\":1,\"278\":1}}],[\"要处理jpg\",{\"1\":{\"224\":1}}],[\"要完整了解\",{\"1\":{\"107\":1}}],[\"要求使用\",{\"1\":{\"59\":1}}],[\"要求组件名称始终为\",{\"1\":{\"59\":1}}],[\"功能包括\",{\"1\":{\"539\":1}}],[\"功能全面\",{\"1\":{\"180\":1}}],[\"功能指南\",{\"1\":{\"178\":1}}],[\"功能\",{\"1\":{\"97\":1,\"119\":1,\"258\":1,\"580\":1}}],[\"功能丰富\",{\"1\":{\"78\":1}}],[\"时语法更简单\",{\"1\":{\"531\":1}}],[\"时清理副作用\",{\"1\":{\"510\":1}}],[\"时自动启用\",{\"1\":{\"487\":1}}],[\"时则推荐该语法\",{\"1\":{\"401\":1}}],[\"时可以省略不写\",{\"1\":{\"391\":1}}],[\"时会执行该函数传入的回调函数\",{\"1\":{\"376\":1}}],[\"时同步更新\",{\"1\":{\"349\":2}}],[\"时间限制\",{\"1\":{\"282\":1}}],[\"时应用动画\",{\"1\":{\"155\":1}}],[\"时\",{\"1\":{\"112\":1,\"121\":1,\"141\":1,\"143\":2,\"195\":1,\"197\":2,\"201\":2,\"223\":1,\"236\":1,\"262\":1,\"263\":1,\"291\":1,\"294\":1,\"347\":1,\"348\":1,\"386\":1,\"449\":1,\"514\":1,\"540\":1,\"550\":2,\"557\":1,\"582\":1,\"584\":1}}],[\"时候建议拷贝出相关的代码到小程序的目录中\",{\"1\":{\"97\":1}}],[\"时需要调用\",{\"1\":{\"59\":1}}],[\"详情参见\",{\"1\":{\"335\":1}}],[\"详情相关文档\",{\"1\":{\"146\":2}}],[\"详细信息\",{\"1\":{\"436\":1}}],[\"详细见\",{\"1\":{\"99\":1}}],[\"详细的参数含义和使用请参考\",{\"1\":{\"95\":1}}],[\"详见下方的指南链接\",{\"1\":{\"437\":1}}],[\"详见\",{\"1\":{\"142\":3,\"143\":1,\"146\":5}}],[\"详见相关文档\",{\"1\":{\"139\":2}}],[\"详见module\",{\"1\":{\"34\":1}}],[\"详见资源分类与访问\",{\"1\":{\"34\":1}}],[\"自带高亮的类名\",{\"1\":{\"547\":1}}],[\"自我介绍\",{\"1\":{\"483\":1}}],[\"自身并不含对组件实例的访问权\",{\"1\":{\"351\":1}}],[\"自己使用webpack或rollup或\",{\"1\":{\"340\":1}}],[\"自动激活\",{\"1\":{\"539\":1}}],[\"自动收集响应式的依赖\",{\"1\":{\"376\":1}}],[\"自动收集响应式数据的依赖\",{\"1\":{\"374\":1}}],[\"自动监听age\",{\"1\":{\"375\":1}}],[\"自动打开浏览器\",{\"1\":{\"261\":1}}],[\"自动添加浏览器前缀\",{\"1\":{\"223\":1}}],[\"自动检测和打包依赖\",{\"1\":{\"180\":1}}],[\"自动切换时间间隔\",{\"1\":{\"123\":1}}],[\"自由数据\",{\"1\":{\"95\":1}}],[\"自定义原地属性名list\",{\"1\":{\"652\":1}}],[\"自定义的修饰符\",{\"0\":{\"489\":1}}],[\"自定义的组件都会放到这\",{\"1\":{\"269\":1}}],[\"自定义时间格式化指令\",{\"1\":{\"416\":1}}],[\"自定义全局指令\",{\"0\":{\"412\":1},\"1\":{\"409\":1}}],[\"自定义局部指令\",{\"1\":{\"409\":1}}],[\"自定义指令需要通过\",{\"1\":{\"411\":1}}],[\"自定义指令分为两种\",{\"1\":{\"409\":1}}],[\"自定义指令的参数也可以是动态的\",{\"1\":{\"408\":1}}],[\"自定义ref\",{\"0\":{\"359\":1},\"1\":{\"359\":1}}],[\"自定义事件\",{\"1\":{\"343\":1,\"481\":1}}],[\"自定义验证函数\",{\"1\":{\"306\":1,\"322\":1}}],[\"自定义html模板\",{\"0\":{\"236\":1}}],[\"自定义文件的输出路径和文件名\",{\"1\":{\"232\":1}}],[\"自定义适应你的项目\",{\"1\":{\"178\":1}}],[\"自定义过渡\",{\"0\":{\"161\":1},\"1\":{\"170\":1}}],[\"自定义导航栏\",{\"1\":{\"142\":1,\"146\":1}}],[\"自定义模块映射规则\",{\"1\":{\"139\":1}}],[\"自定义\",{\"1\":{\"135\":1,\"143\":1}}],[\"自定义tabbar\",{\"0\":{\"135\":1}}],[\"自定义组件新增\",{\"1\":{\"136\":1}}],[\"自定义组件本身可以被展示\",{\"1\":{\"116\":1}}],[\"自定义组件还可以自己触发双向绑定更新\",{\"1\":{\"112\":1}}],[\"自定义组件中使用的参数\",{\"1\":{\"59\":1}}],[\"自定义组件拥有变量\",{\"1\":{\"35\":1}}],[\"自定义组件通过\",{\"1\":{\"24\":1}}],[\"自定义组件通用样式\",{\"0\":{\"24\":1}}],[\"自定义组件的\",{\"1\":{\"111\":1}}],[\"自定义组件的参数规定\",{\"0\":{\"22\":1}}],[\"自定义组件的基本用法\",{\"0\":{\"21\":1}}],[\"自定义组件的基本结构\",{\"0\":{\"20\":1}}],[\"自定义组件必须定义build\",{\"1\":{\"20\":1}}],[\"自定义组件名\",{\"1\":{\"20\":2}}],[\"自定义组件基于struct实现\",{\"1\":{\"20\":1}}],[\"自定义组件\",{\"0\":{\"19\":1,\"406\":1},\"1\":{\"3\":1}}],[\"自定义组件和动态扩展ui元素的能力\",{\"1\":{\"1\":1}}],[\"自定义变量不能与基础通用属性\",{\"1\":{\"3\":1}}],[\"触发计算属性的set方法\",{\"1\":{\"631\":1}}],[\"触发\",{\"1\":{\"565\":1}}],[\"触发更新\",{\"1\":{\"464\":1}}],[\"触发更新的函数\",{\"1\":{\"347\":1}}],[\"触发侦听器的执行\",{\"1\":{\"378\":1}}],[\"触发事件\",{\"1\":{\"349\":1}}],[\"触发一个携带了新值的\",{\"1\":{\"343\":1,\"481\":1}}],[\"触发下拉刷新时执行\",{\"1\":{\"95\":1}}],[\"触手可及\",{\"1\":{\"76\":1}}],[\"简介\",{\"0\":{\"539\":1}}],[\"简单易用\",{\"1\":{\"539\":1}}],[\"简单案例\",{\"0\":{\"476\":1}}],[\"简单使用\",{\"0\":{\"409\":1,\"581\":1}}],[\"简单的页面可以使用\",{\"1\":{\"95\":1}}],[\"简而言之\",{\"1\":{\"260\":1}}],[\"简化部署\",{\"1\":{\"209\":1}}],[\"简易双向绑定\",{\"0\":{\"110\":1}}],[\"简称\",{\"1\":{\"531\":1}}],[\"简称小程序\",{\"1\":{\"76\":1}}],[\"简称ts\",{\"1\":{\"1\":1}}],[\"构建单页应用变得轻而易举\",{\"1\":{\"539\":1}}],[\"构建\",{\"1\":{\"266\":1}}],[\"构建过程中的注入\",{\"1\":{\"258\":1}}],[\"构建工具仍然可以正常工作\",{\"1\":{\"251\":1}}],[\"构建和部署等方面的复杂性\",{\"1\":{\"249\":1}}],[\"构建函数\",{\"1\":{\"39\":1}}],[\"构造函数\",{\"1\":{\"243\":1}}],[\"构造器注册页\",{\"0\":{\"95\":1}}],[\"拒绝事件监听函数\",{\"1\":{\"93\":1}}],[\"未成年\",{\"1\":{\"583\":2}}],[\"未登录\",{\"1\":{\"567\":1}}],[\"未登录弹窗提示回到发现音乐页面\",{\"1\":{\"567\":1}}],[\"未编译模板闪现\",{\"1\":{\"436\":1}}],[\"未打包\",{\"1\":{\"180\":1}}],[\"未指定\",{\"1\":{\"141\":1}}],[\"未选择的进度条的颜色\",{\"1\":{\"126\":1}}],[\"未处理的\",{\"1\":{\"93\":1}}],[\"未来的主流\",{\"0\":{\"33\":1}}],[\"未来\",{\"1\":{\"1\":1}}],[\"生变化时才会执行回调\",{\"1\":{\"378\":1}}],[\"生态中的工具基础标准化\",{\"1\":{\"266\":1}}],[\"生态基础上做了进一步扩展\",{\"1\":{\"1\":1}}],[\"生产环境\",{\"0\":{\"265\":1}}],[\"生产环境使用rollup\",{\"1\":{\"180\":1}}],[\"生成store对象导出\",{\"1\":{\"612\":1}}],[\"生成block\",{\"1\":{\"520\":1}}],[\"生成补丁\",{\"1\":{\"464\":1}}],[\"生成对应的vnode\",{\"1\":{\"385\":1}}],[\"生成ref对象\",{\"1\":{\"370\":1,\"371\":1}}],[\"生成\",{\"1\":{\"246\":1,\"271\":2}}],[\"生成的一个128位的hash值\",{\"1\":{\"228\":1}}],[\"生成一个\",{\"1\":{\"208\":1}}],[\"生命周期等等这些选项\",{\"1\":{\"521\":1}}],[\"生命周期的钩子函数会被合并到数组中\",{\"1\":{\"498\":1}}],[\"生命周期函数是一些钩子函数\",{\"1\":{\"492\":1}}],[\"生命周期函数\",{\"1\":{\"492\":1}}],[\"生命周期钩子中编写相关逻辑\",{\"1\":{\"349\":1}}],[\"生命周期钩子\",{\"0\":{\"368\":1},\"1\":{\"347\":2,\"368\":1}}],[\"生命周期\",{\"0\":{\"491\":1},\"1\":{\"118\":1}}],[\"生命周期回调\",{\"1\":{\"93\":3,\"94\":1}}],[\"否则钩子永远都不会被解析或报错\",{\"1\":{\"559\":1}}],[\"否则就去登录页面\",{\"1\":{\"568\":1}}],[\"否则就会直接在浏览器中报错\",{\"1\":{\"528\":1}}],[\"否则就跳过\",{\"1\":{\"197\":1}}],[\"否则原样返回\",{\"1\":{\"508\":1}}],[\"否则返回参数本身\",{\"1\":{\"358\":1}}],[\"否则将显示后备槽中的节点\",{\"1\":{\"283\":1}}],[\"否则选择\",{\"1\":{\"268\":1}}],[\"否则\",{\"1\":{\"168\":1,\"262\":1,\"386\":1,\"505\":2}}],[\"否则会导致未定义的行为\",{\"1\":{\"123\":1}}],[\"否则可能对性能有负面影响\",{\"1\":{\"118\":1}}],[\"否\",{\"1\":{\"93\":8,\"121\":4,\"123\":11,\"125\":2,\"126\":12,\"132\":2,\"139\":35,\"143\":5,\"144\":4,\"146\":7}}],[\"必然也是需要有对应的入口文件index\",{\"1\":{\"235\":1}}],[\"必填的字符串\",{\"1\":{\"306\":1,\"322\":1}}],[\"必填\",{\"1\":{\"93\":1,\"121\":1,\"123\":1,\"125\":1,\"126\":1,\"132\":1,\"139\":1,\"143\":2,\"144\":1}}],[\"必须传入一个函数\",{\"1\":{\"528\":1}}],[\"必须传输\",{\"1\":{\"305\":1,\"321\":1}}],[\"必须以插槽函数的对象形式来传递\",{\"1\":{\"386\":1}}],[\"必须使用构建工具\",{\"1\":{\"531\":1}}],[\"必须使用es5的语法\",{\"1\":{\"339\":1}}],[\"必须使用全等\",{\"1\":{\"59\":1}}],[\"必须安装\",{\"1\":{\"242\":1}}],[\"必须有一个\",{\"1\":{\"215\":1}}],[\"必须先将作为\",{\"1\":{\"197\":1}}],[\"必须在子组件中已被正确声明\",{\"1\":{\"437\":1}}],[\"必须在\",{\"1\":{\"143\":1}}],[\"必须在微信里面使用\",{\"1\":{\"77\":1}}],[\"必须为容器组件\",{\"1\":{\"23\":1}}],[\"支付等微信特有能力\",{\"1\":{\"92\":1}}],[\"支持服务端渲染\",{\"1\":{\"580\":1}}],[\"支持以及自动补全功能\",{\"1\":{\"580\":1}}],[\"支持两种路由模式\",{\"1\":{\"540\":1}}],[\"支持两种方式创建项目\",{\"1\":{\"66\":1}}],[\"支持路由参数\",{\"1\":{\"539\":1}}],[\"支持嵌套路由\",{\"1\":{\"539\":1}}],[\"支持也更好了\",{\"1\":{\"519\":1}}],[\"支持自定义的修饰符\",{\"1\":{\"489\":1}}],[\"支持额外的值类型如数组或对象\",{\"1\":{\"437\":1}}],[\"支持将模板中使用\",{\"1\":{\"335\":1}}],[\"支持扩展其他插件\",{\"1\":{\"196\":1}}],[\"支持代码压缩\",{\"1\":{\"196\":1}}],[\"支持sourcemap\",{\"1\":{\"196\":1}}],[\"支持typescript\",{\"1\":{\"196\":1}}],[\"支持go\",{\"1\":{\"196\":1}}],[\"支持es6的tree\",{\"1\":{\"196\":1}}],[\"支持es6和commonjs的模块化\",{\"1\":{\"196\":1}}],[\"支持监听读写文件\",{\"1\":{\"180\":1}}],[\"支持与其他框架或工具的集成\",{\"1\":{\"178\":1}}],[\"支持通过\",{\"1\":{\"175\":1}}],[\"支持的组件\",{\"0\":{\"116\":1}}],[\"支持的图片格式包括png\",{\"1\":{\"9\":1}}],[\"支持非常好\",{\"1\":{\"70\":1}}],[\"支持不够友好\",{\"1\":{\"70\":1}}],[\"支持\",{\"0\":{\"187\":1,\"188\":1,\"191\":1},\"1\":{\"65\":2,\"132\":9,\"142\":6,\"146\":6,\"192\":2,\"496\":1,\"531\":2,\"580\":1}}],[\"支持object\",{\"1\":{\"38\":1}}],[\"支持多设备和多窗口形态\",{\"1\":{\"33\":1}}],[\"支持dataability\",{\"1\":{\"9\":1}}],[\"支持base64字符串\",{\"1\":{\"9\":1}}],[\"支持本地图片和网络图片\",{\"1\":{\"9\":1}}],[\"支持本地图片和网络图片的渲染展示\",{\"1\":{\"9\":1}}],[\"扫一扫\",{\"1\":{\"92\":1}}],[\"实验特性\",{\"1\":{\"422\":1}}],[\"实际上\",{\"1\":{\"294\":1,\"313\":1,\"330\":1,\"503\":1,\"694\":1}}],[\"实时重新加载\",{\"1\":{\"254\":1}}],[\"实例作为插件安装\",{\"1\":{\"691\":1}}],[\"实例上使用\",{\"1\":{\"582\":1}}],[\"实例上的数据属性来自哪个\",{\"1\":{\"514\":1}}],[\"实例中\",{\"1\":{\"550\":1,\"691\":2}}],[\"实例化store对象\",{\"1\":{\"611\":1}}],[\"实例化\",{\"1\":{\"527\":1}}],[\"实例\",{\"1\":{\"93\":2,\"137\":1,\"540\":1,\"571\":1,\"584\":1,\"691\":1}}],[\"实例和当前页面栈\",{\"1\":{\"92\":1}}],[\"实现业务场景切换\",{\"1\":{\"539\":1}}],[\"实现在单个html页面上切换视图和更新内容\",{\"1\":{\"538\":1}}],[\"实现在文件发生变化时自动重新编译\",{\"1\":{\"252\":1}}],[\"实现提供了一个接受\",{\"1\":{\"508\":1}}],[\"实现鼠标跟踪功能\",{\"1\":{\"503\":1}}],[\"实现思路一\",{\"1\":{\"470\":1}}],[\"实现的零配置原型开发\",{\"1\":{\"266\":1}}],[\"实现的交互式的项目脚手架\",{\"1\":{\"266\":1}}],[\"实现了将\",{\"1\":{\"263\":1}}],[\"实现\",{\"0\":{\"472\":1},\"1\":{\"231\":3,\"408\":1}}],[\"实现浅拷贝\",{\"1\":{\"57\":1}}],[\"实现深拷贝\",{\"1\":{\"57\":1}}],[\"分模块对什么有影响\",{\"1\":{\"675\":1}}],[\"分模块后语法\",{\"1\":{\"673\":2}}],[\"分模块\",{\"0\":{\"664\":1,\"671\":1,\"676\":1}}],[\"分隔\",{\"1\":{\"548\":1}}],[\"分割\",{\"1\":{\"215\":1}}],[\"分别添加\",{\"1\":{\"564\":1}}],[\"分别对应来源数组中的新值和旧值\",{\"1\":{\"380\":1}}],[\"分别加载不同的配置文件即可\",{\"1\":{\"265\":1}}],[\"分别触发组件vue\",{\"1\":{\"201\":1}}],[\"分别用来获取\",{\"1\":{\"92\":1}}],[\"分开指定进入和离开所需的时间\",{\"1\":{\"163\":1}}],[\"分包\",{\"1\":{\"183\":1}}],[\"分包预下载规则\",{\"1\":{\"139\":1}}],[\"分包结构配置\",{\"1\":{\"139\":1}}],[\"分类\",{\"1\":{\"136\":1}}],[\"分布式开发范式等更多特性\",{\"1\":{\"1\":1}}],[\"增加\",{\"1\":{\"92\":2}}],[\"直到编译完成前\",{\"1\":{\"436\":1}}],[\"直到相关组件实例被挂载后才移除\",{\"1\":{\"436\":1}}],[\"直到挂载的组件将它们替换为实际渲染的内容\",{\"1\":{\"436\":1}}],[\"直到最后一个loader将最终的结果返回给webpack进行打包\",{\"1\":{\"214\":1}}],[\"直到小程序销毁\",{\"1\":{\"92\":1}}],[\"直接用\",{\"1\":{\"674\":1}}],[\"直接用在组件上\",{\"1\":{\"296\":1}}],[\"直接获取\",{\"1\":{\"583\":1}}],[\"直接改变\",{\"1\":{\"582\":1}}],[\"直接通过vue\",{\"1\":{\"522\":1}}],[\"直接\",{\"1\":{\"428\":1}}],[\"直接可被使用\",{\"1\":{\"402\":1}}],[\"直接写入一个可响应式的对象\",{\"1\":{\"379\":3}}],[\"直接导航到路由\",{\"1\":{\"547\":1,\"548\":1}}],[\"直接导出count即可\",{\"1\":{\"356\":1}}],[\"直接导入less\",{\"1\":{\"188\":1}}],[\"直接导入css即可\",{\"1\":{\"188\":1}}],[\"直接接收到了一个插槽\",{\"1\":{\"294\":1}}],[\"直接使用无变化\",{\"1\":{\"679\":1}}],[\"直接使用state\",{\"1\":{\"614\":1}}],[\"直接使用\",{\"1\":{\"402\":1,\"616\":1,\"621\":1,\"629\":1,\"634\":1,\"641\":1,\"661\":1,\"673\":1,\"680\":1,\"681\":1,\"682\":1,\"693\":1,\"697\":1}}],[\"直接使用getter函数\",{\"1\":{\"366\":1}}],[\"直接使用即可\",{\"1\":{\"355\":1}}],[\"直接使用使用postcss工具\",{\"1\":{\"221\":1}}],[\"直接使用animate库提供给我们的类\",{\"1\":{\"170\":1}}],[\"直接使用animate库中定义的\",{\"1\":{\"170\":1}}],[\"直接请求所需模块并实时编译\",{\"1\":{\"182\":1}}],[\"直接调用\",{\"1\":{\"57\":1}}],[\"直接赋值\",{\"1\":{\"53\":1}}],[\"变更\",{\"1\":{\"582\":1}}],[\"变得不清晰\",{\"1\":{\"514\":1}}],[\"变化\",{\"1\":{\"473\":1}}],[\"变化时\",{\"1\":{\"383\":1}}],[\"变成可以在浏览器中运行的普通js\",{\"1\":{\"195\":1}}],[\"变为对象并且有对应name\",{\"1\":{\"546\":1}}],[\"变为\",{\"1\":{\"91\":1}}],[\"变量过多\",{\"1\":{\"670\":1}}],[\"变量名\",{\"1\":{\"615\":1,\"616\":1,\"621\":1,\"673\":5,\"675\":1,\"679\":1,\"693\":2}}],[\"变量\",{\"1\":{\"59\":1,\"236\":1}}],[\"变量必须被装饰器装饰才可以成为状态变量\",{\"1\":{\"35\":1}}],[\"让表单组件显示错误\",{\"1\":{\"584\":1}}],[\"让调试更容易的\",{\"1\":{\"580\":1}}],[\"让路由建立\",{\"1\":{\"550\":1}}],[\"让\",{\"1\":{\"540\":1}}],[\"让用\",{\"1\":{\"539\":1}}],[\"让本来就强相关的关注点自然内聚\",{\"1\":{\"531\":1}}],[\"让属性的来源在消费组件时一目了然\",{\"1\":{\"514\":1}}],[\"让你可以基于逻辑问题将组件代码拆分成更小的函数\",{\"1\":{\"512\":1}}],[\"让我们把它抽取成一个组合式函数\",{\"1\":{\"504\":1}}],[\"让我们可以开发出一个个独立可复用的小组件来构造我们的应用\",{\"1\":{\"334\":1}}],[\"让其进行展示\",{\"1\":{\"301\":1,\"317\":1}}],[\"让外部决定到底显示什么样的元素\",{\"1\":{\"287\":1}}],[\"让组件来进行展示\",{\"1\":{\"286\":1}}],[\"让开发者能够专注于数据与逻辑\",{\"1\":{\"90\":1}}],[\"让小程序更接近原生的app体验\",{\"1\":{\"90\":1}}],[\"体验的服务\",{\"1\":{\"90\":1}}],[\"体验好\",{\"1\":{\"78\":1}}],[\"宿主环境\",{\"1\":{\"90\":1}}],[\"作替代\",{\"1\":{\"361\":1}}],[\"作用域插槽\",{\"0\":{\"294\":1}}],[\"作用是设置兼容性\",{\"1\":{\"269\":1}}],[\"作用是控制台不要有一些没用的警告\",{\"1\":{\"88\":1}}],[\"作用于每一个页面\",{\"1\":{\"152\":1}}],[\"作为根组件\",{\"1\":{\"601\":1}}],[\"作为\",{\"1\":{\"584\":1}}],[\"作为名字\",{\"1\":{\"574\":1}}],[\"作为第三个参数\",{\"1\":{\"560\":1}}],[\"作为开头\",{\"1\":{\"507\":1}}],[\"作为参数\",{\"1\":{\"494\":2}}],[\"作为参数传给它\",{\"1\":{\"294\":1}}],[\"作为了\",{\"1\":{\"294\":1}}],[\"作为占位\",{\"1\":{\"287\":1}}],[\"作为前缀\",{\"1\":{\"158\":1}}],[\"作为视觉稿的标准\",{\"1\":{\"148\":1}}],[\"作为一个模块\",{\"1\":{\"97\":1}}],[\"作为长度单位\",{\"1\":{\"87\":1}}],[\"作为变量的默认值\",{\"1\":{\"36\":1}}],[\"表达的是不同的目标\",{\"1\":{\"500\":1}}],[\"表达式\",{\"1\":{\"430\":1}}],[\"表达式中\",{\"1\":{\"393\":1}}],[\"表达式与有效字符串进行比较\",{\"1\":{\"59\":1}}],[\"表\",{\"1\":{\"463\":1}}],[\"表明加载失败\",{\"1\":{\"282\":1}}],[\"表明可以跳过对\",{\"1\":{\"168\":1,\"171\":1}}],[\"表单组件\",{\"0\":{\"127\":1}}],[\"表示在历史堆栈中前进或后退多少步\",{\"1\":{\"552\":1}}],[\"表示\",{\"1\":{\"544\":1}}],[\"表示的是vue需要帮助我们渲染的模板信息\",{\"1\":{\"527\":1}}],[\"表示的是设备独立像素\",{\"1\":{\"87\":1}}],[\"表示我们可以在项目中一点点来引入和使用vue\",{\"1\":{\"518\":1}}],[\"表示任意主机或所有主机\",{\"1\":{\"260\":1}}],[\"表示本地计算机或设备自身\",{\"1\":{\"260\":1}}],[\"表示过渡结束\",{\"1\":{\"168\":2}}],[\"表示语句结束\",{\"1\":{\"149\":1}}],[\"表示固定为横屏显示\",{\"1\":{\"113\":1}}],[\"屏幕旋转设置\",{\"1\":{\"142\":1,\"146\":1}}],[\"屏幕宽度为375px\",{\"1\":{\"148\":1}}],[\"屏幕宽度\",{\"1\":{\"87\":1,\"148\":2}}],[\"屏幕将显示以下信息\",{\"1\":{\"40\":1}}],[\"企业注册\",{\"1\":{\"79\":1}}],[\"保留现有的查询和\",{\"1\":{\"548\":1}}],[\"保留当前路径并删除第一个字符\",{\"1\":{\"548\":1}}],[\"保留当前页面\",{\"1\":{\"130\":2}}],[\"保留该功能只是为了项目迁移的需求和照顾熟悉它的用户\",{\"1\":{\"514\":1}}],[\"保护用户隐私\",{\"1\":{\"142\":1,\"146\":1}}],[\"保持同步\",{\"1\":{\"601\":1}}],[\"保持相同的key可以让diff算法更加的高效\",{\"1\":{\"465\":1}}],[\"保持原图宽高比不变\",{\"1\":{\"132\":2}}],[\"保持纵横比缩放图片\",{\"1\":{\"132\":2}}],[\"保存商品列表数组\",{\"1\":{\"651\":1}}],[\"保存我们所在的位置\",{\"1\":{\"569\":1}}],[\"保存图片\",{\"1\":{\"132\":1}}],[\"保存文件后\",{\"1\":{\"67\":1}}],[\"保密性强\",{\"1\":{\"78\":1}}],[\"速度快\",{\"1\":{\"78\":1}}],[\"免安装\",{\"1\":{\"77\":1}}],[\"之类的选项\",{\"1\":{\"559\":1}}],[\"之外\",{\"1\":{\"544\":1,\"546\":1}}],[\"之前\",{\"1\":{\"567\":1}}],[\"之前的\",{\"1\":{\"503\":1}}],[\"之前的值\",{\"1\":{\"408\":1}}],[\"之前调用\",{\"1\":{\"407\":1}}],[\"之前执行\",{\"1\":{\"377\":2}}],[\"之前通过使用\",{\"1\":{\"231\":4}}],[\"之前被调用\",{\"1\":{\"168\":1}}],[\"之后的页面切换和内容更新都是通过异步加载数据和更新页面内容来实现的\",{\"1\":{\"538\":1}}],[\"之后的下一帧被调用\",{\"1\":{\"168\":1}}],[\"之后对该对象的修改或者访问都会在劫持中被处理\",{\"1\":{\"528\":1}}],[\"之后仍可调用组合式函数的地方\",{\"1\":{\"511\":1}}],[\"之后仍可以保持响应性\",{\"1\":{\"509\":1}}],[\"之后通过babe将js编译成\",{\"1\":{\"429\":1}}],[\"之后执行\",{\"1\":{\"377\":1}}],[\"之后在插件中配置\",{\"1\":{\"234\":1}}],[\"之后\",{\"1\":{\"223\":1,\"283\":1,\"337\":1}}],[\"之后我们执行\",{\"1\":{\"212\":1}}],[\"之后运行打包之后的代码\",{\"1\":{\"208\":1}}],[\"之后安装less编译器\",{\"1\":{\"188\":1}}],[\"之后再合并\",{\"1\":{\"76\":1}}],[\"之间跳转的时候\",{\"1\":{\"563\":1}}],[\"之间差异的算法\",{\"1\":{\"40\":1}}],[\"之间的关系\",{\"1\":{\"35\":1}}],[\"就需要你用\",{\"1\":{\"573\":1}}],[\"就像重新加载页面那样\",{\"1\":{\"571\":1}}],[\"就像\",{\"1\":{\"557\":1}}],[\"就像我们在\",{\"1\":{\"510\":1}}],[\"就可\",{\"1\":{\"333\":1}}],[\"就可以直接从\",{\"1\":{\"691\":1}}],[\"就可以使用\",{\"1\":{\"361\":1}}],[\"就可以解决我们的跨域问题了\",{\"1\":{\"262\":1}}],[\"就可以得到一个预设好的开发环境\",{\"1\":{\"183\":1}}],[\"就必须显式声明一个\",{\"1\":{\"279\":1}}],[\"就会出现库存不足的情况\",{\"1\":{\"592\":1,\"689\":1}}],[\"就会像浏览器的原生表现那样\",{\"1\":{\"571\":1}}],[\"就会再次执行一次\",{\"1\":{\"377\":1}}],[\"就会非常的麻烦\",{\"1\":{\"313\":1,\"330\":1}}],[\"就会读到该信息\",{\"1\":{\"236\":1}}],[\"就会生成一个只读引用\",{\"1\":{\"195\":1}}],[\"就会通过初始渲染缓存来渲染首页\",{\"1\":{\"117\":1}}],[\"就近依赖\",{\"1\":{\"195\":1}}],[\"就是后端路由\",{\"1\":{\"536\":1}}],[\"就是所有的data使用过程都会变成了一个方法的调用\",{\"1\":{\"468\":1}}],[\"就是虚拟dom\",{\"1\":{\"385\":1}}],[\"就是说\",{\"1\":{\"335\":1}}],[\"就是将问题进行拆解\",{\"1\":{\"333\":1}}],[\"就是编译器\",{\"1\":{\"246\":1}}],[\"就是style\",{\"1\":{\"216\":1}}],[\"就是我们打包之后的文件\",{\"1\":{\"208\":1}}],[\"就是必须的\",{\"1\":{\"168\":1}}],[\"就是返回上一页\",{\"1\":{\"130\":1}}],[\"就直接将渲染结果展示出来\",{\"1\":{\"115\":1}}],[\"就得做分包上传\",{\"1\":{\"76\":1}}],[\"就和自定义组件的渲染绑定起来\",{\"1\":{\"38\":1}}],[\"感觉不到下载\",{\"1\":{\"76\":1}}],[\"说明\",{\"1\":{\"76\":1,\"93\":1,\"121\":1,\"123\":1,\"125\":1,\"126\":1,\"132\":2,\"143\":1,\"144\":1}}],[\"微信接口功能演示\",{\"1\":{\"142\":1}}],[\"微信消息用小程序打开\",{\"1\":{\"139\":1}}],[\"微信客户端不支持\",{\"1\":{\"142\":1,\"146\":1}}],[\"微信客户端\",{\"1\":{\"139\":2,\"142\":4,\"146\":4}}],[\"微信公众平台\",{\"1\":{\"80\":1}}],[\"微信小程序配置项\",{\"0\":{\"138\":1}}],[\"微信小程序中的组件就相当于之前html中的标签\",{\"1\":{\"119\":1}}],[\"微信小程序中使用\",{\"1\":{\"87\":1}}],[\"微信小程序组件\",{\"0\":{\"119\":1,\"134\":1}}],[\"微信小程序框架\",{\"0\":{\"90\":1}}],[\"微信小程序模拟器\",{\"1\":{\"82\":1}}],[\"微信小程序的注册\",{\"0\":{\"80\":1}}],[\"微信小程序的特点\",{\"1\":{\"77\":1}}],[\"微信小程序\",{\"1\":{\"76\":1}}],[\"微信小程序介绍\",{\"0\":{\"74\":1,\"75\":1,\"76\":1}}],[\"微信开发者工具会自动刷新\",{\"1\":{\"67\":1}}],[\"微信开发者工具\",{\"1\":{\"67\":1}}],[\"原语法\",{\"1\":{\"673\":2,\"680\":2,\"681\":2,\"682\":2}}],[\"原因是web的发展主要经历了这样一些阶段\",{\"1\":{\"535\":1}}],[\"原因是没有绑定bindinput方法\",{\"1\":{\"110\":1}}],[\"原理\",{\"0\":{\"193\":1,\"245\":1}}],[\"原生开发和vue开发的模式和特点\",{\"1\":{\"525\":1}}],[\"原生语言\",{\"1\":{\"246\":1}}],[\"原生\",{\"1\":{\"160\":1,\"178\":1}}],[\"原生小程序开发区别\",{\"0\":{\"65\":1}}],[\"原配置\",{\"1\":{\"72\":1}}],[\"编码中获益\",{\"1\":{\"550\":1}}],[\"编程式\",{\"1\":{\"550\":1,\"553\":1}}],[\"编程式导航\",{\"0\":{\"549\":1},\"1\":{\"544\":1}}],[\"编程珠玑\",{\"1\":{\"480\":1}}],[\"编写和维护都是非常糟糕的事情\",{\"1\":{\"536\":1}}],[\"编写dom元素的模板方式\",{\"0\":{\"530\":1}}],[\"编写的\",{\"1\":{\"385\":1}}],[\"编写的代码基本都在这个目录下\",{\"1\":{\"269\":1}}],[\"编写两个不同的配置文件\",{\"1\":{\"265\":1}}],[\"编写\",{\"1\":{\"136\":1}}],[\"编辑\",{\"0\":{\"70\":1},\"1\":{\"70\":1}}],[\"编译相关的代码\",{\"1\":{\"252\":1}}],[\"编译器会在异步操作之后自动为你恢复当前的组件实例\",{\"1\":{\"511\":1}}],[\"编译器\",{\"1\":{\"241\":1}}],[\"编译器设置\",{\"1\":{\"67\":1}}],[\"编译\",{\"1\":{\"124\":1}}],[\"编译成\",{\"1\":{\"124\":1}}],[\"编译信息配置项\",{\"1\":{\"34\":1}}],[\"编译构建生成一个hap包\",{\"1\":{\"34\":1}}],[\"网页默认打开\",{\"1\":{\"554\":1}}],[\"网易云音乐\",{\"1\":{\"539\":1}}],[\"网站的显示图标\",{\"1\":{\"269\":1}}],[\"网络请求调用actions方法\",{\"1\":{\"652\":1}}],[\"网络请求\",{\"1\":{\"476\":1}}],[\"网络请求成功~\",{\"1\":{\"376\":1}}],[\"网络超时时间\",{\"1\":{\"139\":1}}],[\"网络\",{\"1\":{\"68\":1}}],[\"网球\",{\"1\":{\"53\":3,\"54\":1,\"55\":1,\"483\":1}}],[\"更具体可以看\",{\"1\":{\"686\":1}}],[\"更具体的说明当哪些状态发生变化时\",{\"1\":{\"378\":1}}],[\"更多关于\",{\"1\":{\"560\":1}}],[\"更多内容请参见重复参数部分\",{\"1\":{\"548\":1}}],[\"更多细节请查阅审查\",{\"1\":{\"272\":1}}],[\"更多细节请查阅构建目标\",{\"1\":{\"271\":1}}],[\"更酷的是\",{\"1\":{\"503\":1}}],[\"更好的\",{\"1\":{\"401\":1,\"531\":1}}],[\"更好的运行时性能\",{\"1\":{\"401\":1}}],[\"更简洁的代码\",{\"1\":{\"401\":1}}],[\"更少的样板内容\",{\"1\":{\"401\":1}}],[\"更改\",{\"1\":{\"694\":1}}],[\"更改页面标题\",{\"1\":{\"560\":1}}],[\"更改该只读副本将会失败\",{\"1\":{\"361\":1}}],[\"更改源属性会触发其依赖的侦听器\",{\"1\":{\"361\":1}}],[\"更改状态\",{\"1\":{\"347\":1}}],[\"更改项目中\",{\"1\":{\"69\":1}}],[\"更复杂时\",{\"1\":{\"346\":1}}],[\"更加友好\",{\"1\":{\"338\":1}}],[\"更加推荐\",{\"1\":{\"249\":1}}],[\"更专注于js打包\",{\"1\":{\"180\":1}}],[\"更换网络重试\",{\"1\":{\"68\":1}}],[\"更新完成\",{\"1\":{\"494\":1}}],[\"更新之前\",{\"1\":{\"494\":1}}],[\"更新真实\",{\"1\":{\"464\":1}}],[\"更新后调用\",{\"1\":{\"407\":1}}],[\"更新速度与项目复杂度无关\",{\"1\":{\"182\":1}}],[\"更新选中态\",{\"1\":{\"135\":1}}],[\"更新\",{\"1\":{\"112\":2,\"377\":3,\"492\":1,\"565\":1}}],[\"更新dom或其他视图\",{\"1\":{\"40\":1}}],[\"更新同步到实例\",{\"1\":{\"40\":1}}],[\"国内特殊情况\",{\"1\":{\"68\":1}}],[\"版本中\",{\"1\":{\"559\":1}}],[\"版本中新增的\",{\"1\":{\"505\":1}}],[\"版本在内\",{\"1\":{\"267\":1}}],[\"版本要求\",{\"1\":{\"267\":1}}],[\"版本控制\",{\"1\":{\"209\":1,\"249\":1}}],[\"版本才能正常运行\",{\"1\":{\"185\":1}}],[\"版本\",{\"1\":{\"185\":2,\"241\":1,\"267\":1,\"268\":3,\"347\":1}}],[\"版本菜单栏\",{\"1\":{\"68\":1}}],[\"版本菜单栏左上角\",{\"1\":{\"68\":1}}],[\"版本^14\",{\"1\":{\"68\":1}}],[\"才存储在vuex中\",{\"1\":{\"593\":1,\"690\":1}}],[\"才会让路由正常的跳转切换\",{\"1\":{\"567\":1}}],[\"才会被触发\",{\"1\":{\"561\":1}}],[\"才会被渲染出来\",{\"1\":{\"452\":1}}],[\"才会触发回调函数\",{\"1\":{\"477\":1}}],[\"才会真正渲染条件块中的内容\",{\"1\":{\"453\":1}}],[\"才会回到挂起状态\",{\"1\":{\"283\":1}}],[\"才可以被访问到\",{\"1\":{\"405\":1}}],[\"才可以生效\",{\"1\":{\"68\":1}}],[\"才是真正利用webpack进行编译和打包的过程\",{\"1\":{\"207\":1}}],[\"才能显示该新路由\",{\"1\":{\"573\":1}}],[\"才能启用\",{\"1\":{\"118\":1}}],[\"才能对外暴露接口\",{\"1\":{\"97\":1}}],[\"才能运行成功\",{\"1\":{\"67\":1}}],[\"工作方式一样\",{\"1\":{\"559\":1}}],[\"工厂函数\",{\"1\":{\"282\":1}}],[\"工程下载vuex模块\",{\"1\":{\"612\":1}}],[\"工程中\",{\"1\":{\"611\":1}}],[\"工程准备\",{\"0\":{\"602\":1}}],[\"工程化\",{\"1\":{\"180\":4}}],[\"工程\",{\"1\":{\"68\":1}}],[\"工具函数来实现\",{\"1\":{\"508\":1}}],[\"工具\",{\"1\":{\"67\":1,\"68\":1}}],[\"目的\",{\"0\":{\"672\":1}}],[\"目标\",{\"0\":{\"589\":1,\"596\":1,\"601\":1,\"608\":1,\"614\":1,\"623\":1,\"628\":1,\"636\":1,\"640\":1,\"646\":1,\"650\":1,\"655\":1,\"660\":1,\"665\":1,\"677\":1,\"685\":1},\"1\":{\"547\":2,\"566\":1,\"567\":2,\"611\":1}}],[\"目标服务器可能会拒绝请求或返回错误的响应\",{\"1\":{\"262\":1}}],[\"目标服务器地址\",{\"1\":{\"262\":1}}],[\"目标语言是javascript\",{\"1\":{\"247\":1}}],[\"目标语言\",{\"1\":{\"246\":1}}],[\"目前比较少的网站采用这种模式开发\",{\"1\":{\"537\":1}}],[\"目前在我们生活中路由器也是越来越被大家所熟知\",{\"1\":{\"535\":1}}],[\"目前他们不会触发\",{\"1\":{\"284\":1}}],[\"目前我们看到它里面有很多的html标签\",{\"1\":{\"527\":1}}],[\"目前我们是使用组件化的方式在开发整个vue的应用程序\",{\"1\":{\"496\":1}}],[\"目前我们在前面的案例中大部分的值都是在template中固定好的\",{\"1\":{\"483\":1}}],[\"目前我们使用vue的过程都是在html文件中\",{\"1\":{\"339\":1}}],[\"目前我们所有的webpack配置信息都是放到一个配置文件中的\",{\"1\":{\"265\":1}}],[\"目前我们可以在\",{\"1\":{\"254\":1}}],[\"目前我们开发的代码\",{\"1\":{\"252\":1}}],[\"目前很多的项目都采用了多包管理的方式\",{\"1\":{\"249\":1}}],[\"目前是不可缺少的一部分\",{\"1\":{\"241\":1}}],[\"目前已经使用options来替代\",{\"1\":{\"215\":1}}],[\"目前前端的开发已经变的越来越复杂了\",{\"1\":{\"203\":1}}],[\"目前其浏览器能力支持如下\",{\"1\":{\"195\":1}}],[\"目前为止\",{\"1\":{\"173\":1}}],[\"目前支持的选择器有\",{\"1\":{\"151\":1}}],[\"目前支持的内置组件\",{\"1\":{\"116\":1}}],[\"目前\",{\"1\":{\"110\":1}}],[\"目前大小限制2m\",{\"1\":{\"76\":1}}],[\"目前只支持创建默认模板\",{\"1\":{\"68\":1}}],[\"目录如下\",{\"1\":{\"602\":1}}],[\"目录下的\",{\"1\":{\"555\":1}}],[\"目录产生一个可用于生产环境的包\",{\"1\":{\"271\":1}}],[\"目录中查找\",{\"1\":{\"264\":1}}],[\"目录中查找模块\",{\"1\":{\"264\":1}}],[\"目录即可查看效果\",{\"1\":{\"69\":1}}],[\"目录\",{\"1\":{\"69\":1,\"264\":2,\"555\":1}}],[\"目录结构\",{\"0\":{\"34\":1}}],[\"安全稳定\",{\"1\":{\"78\":1}}],[\"安全设置\",{\"1\":{\"67\":1}}],[\"安装以及使用\",{\"0\":{\"543\":1}}],[\"安装yarn\",{\"1\":{\"532\":1}}],[\"安装yarn包时的重要信息存储到yarn\",{\"1\":{\"269\":1}}],[\"安装了一个名为\",{\"1\":{\"269\":1}}],[\"安装了一个预设\",{\"1\":{\"188\":1}}],[\"安装之后\",{\"1\":{\"267\":1}}],[\"安装webpack\",{\"1\":{\"254\":1}}],[\"安装copywebpackplugin插件\",{\"1\":{\"238\":1}}],[\"安装url\",{\"1\":{\"225\":1}}],[\"安装file\",{\"1\":{\"224\":1}}],[\"安装一下它们\",{\"1\":{\"220\":1}}],[\"安装style\",{\"1\":{\"216\":1}}],[\"安装局部的webpack\",{\"1\":{\"209\":1}}],[\"安装支持vue的插件\",{\"1\":{\"192\":1}}],[\"安装animate\",{\"1\":{\"170\":1}}],[\"安装插件\",{\"0\":{\"71\":1}}],[\"安装loadsh\",{\"1\":{\"57\":1}}],[\"安装完下一步即可\",{\"1\":{\"30\":1}}],[\"安装\",{\"0\":{\"25\":1,\"26\":1,\"72\":1,\"185\":1,\"267\":1},\"1\":{\"171\":1,\"248\":1,\"543\":1,\"581\":1,\"597\":1,\"691\":1}}],[\"需求3\",{\"1\":{\"601\":1,\"643\":1}}],[\"需求2\",{\"1\":{\"601\":1,\"632\":1}}],[\"需求1\",{\"1\":{\"601\":1,\"619\":1}}],[\"需使用\",{\"1\":{\"279\":2}}],[\"需在输入框输入微信开发者工具的安装路径\",{\"1\":{\"67\":1}}],[\"需要调用storetorefs方法\",{\"1\":{\"582\":1}}],[\"需要路由对象提前配置\",{\"1\":{\"547\":1}}],[\"需要服务器端支持来处理路由createwebhistory\",{\"1\":{\"540\":1}}],[\"需要通过php和java等语言来编写页面代码\",{\"1\":{\"536\":1}}],[\"需要的环境\",{\"1\":{\"532\":1}}],[\"需要依赖共享的属性名来进行相互作用\",{\"1\":{\"514\":1}}],[\"需要更新的是我们\",{\"1\":{\"463\":1}}],[\"需要注意参数问题\",{\"1\":{\"449\":1}}],[\"需要注意的是\",{\"1\":{\"263\":1,\"537\":1,\"574\":1}}],[\"需要加上deep\",{\"1\":{\"381\":1}}],[\"需要进行某些转换\",{\"1\":{\"379\":2}}],[\"需要进行如下适配\",{\"1\":{\"137\":1}}],[\"需要使用\",{\"1\":{\"356\":1,\"391\":1}}],[\"需要使用export关键字导出\",{\"1\":{\"21\":1}}],[\"需要不断的跳到相应的代码块中\",{\"1\":{\"346\":1}}],[\"需要转换为短横线分隔的形式\",{\"1\":{\"306\":1,\"322\":1}}],[\"需要子组件来进行展示\",{\"1\":{\"302\":1,\"318\":1}}],[\"需要有父组件来完成某些操作\",{\"1\":{\"301\":1,\"317\":1}}],[\"需要安装如下库\",{\"1\":{\"242\":1}}],[\"需要包含在你的构建中\",{\"1\":{\"238\":1}}],[\"需要\",{\"1\":{\"185\":1,\"267\":1}}],[\"需要定义task处理构建\",{\"1\":{\"180\":1}}],[\"需要用真机去测\",{\"1\":{\"130\":1}}],[\"需要给scroll\",{\"1\":{\"124\":1}}],[\"需要借助简易双向绑定机制\",{\"1\":{\"110\":2}}],[\"需要在基于选项式\",{\"1\":{\"348\":1}}],[\"需要在非单文件组件中使用组合式\",{\"1\":{\"348\":1}}],[\"需要在后台使用的能力\",{\"1\":{\"139\":1}}],[\"需要在\",{\"1\":{\"68\":1}}],[\"需要先配置小程序ide的相关路径\",{\"1\":{\"67\":1}}],[\"需要耐心等待\",{\"1\":{\"30\":1}}],[\"需要下载手机设备需要的系统\",{\"1\":{\"30\":1}}],[\"需要实现build方法描述ui\",{\"1\":{\"20\":1}}],[\"需要申请权限ohos\",{\"1\":{\"10\":1}}],[\"填写项目名称\",{\"1\":{\"67\":1}}],[\"已经可用了\",{\"1\":{\"563\":1}}],[\"已经是字符串\",{\"1\":{\"505\":1}}],[\"已经设置了文件夹\",{\"1\":{\"230\":1}}],[\"已经帮你安装好了很多东西\",{\"1\":{\"188\":1}}],[\"已选择的进度条的颜色\",{\"1\":{\"126\":1}}],[\"已内置大量常用组件\",{\"1\":{\"67\":1}}],[\"已更改\",{\"1\":{\"40\":1}}],[\"还为你提供了一个\",{\"1\":{\"569\":1}}],[\"还会重新来数组里匹配一次规则\",{\"1\":{\"554\":1}}],[\"还会有非父子组件之间的通信\",{\"1\":{\"312\":1,\"329\":1}}],[\"还有在导航守卫中的路由对象\",{\"1\":{\"569\":1}}],[\"还有其他一些钩子\",{\"1\":{\"493\":1}}],[\"还有一个重要模板是\",{\"1\":{\"67\":1}}],[\"还是效果上计算属性都是更好的选择\",{\"1\":{\"472\":1}}],[\"还是修改reactive\",{\"1\":{\"363\":1}}],[\"还是跨平台方案\",{\"1\":{\"333\":1}}],[\"还提供了强大的扩展性\",{\"1\":{\"178\":1}}],[\"还具有样式和\",{\"1\":{\"119\":1}}],[\"还需要在页面中调用\",{\"1\":{\"118\":1}}],[\"还可以使用\",{\"1\":{\"559\":1}}],[\"还可以使用函数方式的proxy选项来进行更灵活的配置\",{\"1\":{\"262\":1}}],[\"还可以减少应用程序的复杂性\",{\"1\":{\"251\":1}}],[\"还可以防止\",{\"1\":{\"168\":1,\"171\":1}}],[\"还可以调tabbar\",{\"1\":{\"130\":1}}],[\"还可以被设置为\",{\"1\":{\"113\":1}}],[\"还可以用来编写简单的\",{\"1\":{\"107\":1}}],[\"还可以在应用全局范围内传递或跨设备传递\",{\"1\":{\"1\":1}}],[\"新的api\",{\"0\":{\"521\":1}}],[\"新值\",{\"1\":{\"476\":1}}],[\"新一代浏览器中绝大部分都已支持\",{\"1\":{\"195\":1}}],[\"新建src\",{\"1\":{\"610\":1}}],[\"新建store\",{\"1\":{\"585\":1,\"668\":2}}],[\"新建\",{\"1\":{\"67\":1,\"547\":1}}],[\"新增任务按钮\",{\"1\":{\"39\":1}}],[\"养成好习惯\",{\"1\":{\"65\":1}}],[\"温馨提示\",{\"1\":{\"65\":1}}],[\"解码\",{\"1\":{\"546\":1}}],[\"解包行为与\",{\"1\":{\"361\":1}}],[\"解决这个问题\",{\"1\":{\"350\":1}}],[\"解决uniapp开发过程中view\",{\"1\":{\"63\":1}}],[\"解构模式的理由\",{\"1\":{\"514\":1}}],[\"解构出的变量将会丢失响应性\",{\"1\":{\"349\":1}}],[\"解构传递给\",{\"1\":{\"59\":1}}],[\"解析后端返回的路由数据\",{\"1\":{\"578\":1}}],[\"解析异步路由组件\",{\"1\":{\"565\":1}}],[\"解析\",{\"1\":{\"246\":1,\"254\":1}}],[\"问题\",{\"0\":{\"63\":1},\"1\":{\"529\":1}}],[\"<el\",{\"1\":{\"578\":7}}],[\"<我的音乐>\",{\"1\":{\"567\":1}}],[\"<option\",{\"1\":{\"483\":3}}],[\"<demo\",{\"1\":{\"384\":1}}],[\"<div\",{\"1\":{\"163\":2,\"167\":1,\"168\":1,\"171\":1,\"172\":1,\"236\":1,\"276\":1,\"291\":3,\"300\":1,\"309\":1,\"316\":1,\"325\":1,\"328\":1,\"337\":1,\"349\":1,\"350\":1,\"353\":1,\"356\":1,\"361\":1,\"363\":1,\"393\":1,\"398\":1,\"399\":1,\"400\":1,\"408\":2,\"410\":1,\"419\":1,\"420\":4,\"421\":2,\"429\":1,\"432\":3,\"433\":1,\"436\":1,\"440\":7,\"441\":4,\"443\":6,\"444\":2,\"445\":4,\"446\":4,\"448\":4,\"449\":1,\"450\":2,\"453\":1,\"457\":1,\"458\":1,\"459\":1,\"463\":1,\"473\":1,\"476\":1,\"477\":1,\"480\":1,\"483\":1,\"504\":3,\"527\":2,\"540\":1,\"546\":2,\"547\":2,\"551\":2,\"557\":2,\"578\":3,\"603\":3}}],[\"<div>user\",{\"1\":{\"544\":1,\"557\":1}}],[\"<div>user<\",{\"1\":{\"544\":1}}],[\"<div>about<\",{\"1\":{\"540\":1}}],[\"<div>home<\",{\"1\":{\"540\":1}}],[\"<div>hello<\",{\"1\":{\"393\":1}}],[\"<div><\",{\"1\":{\"429\":1}}],[\"<div><button\",{\"1\":{\"167\":1,\"168\":1,\"171\":1}}],[\"<div>我是子组件<\",{\"1\":{\"371\":2}}],[\"<div>\",{\"1\":{\"154\":1,\"174\":1,\"176\":1,\"275\":1,\"290\":2,\"294\":1,\"295\":2,\"299\":3,\"300\":3,\"304\":2,\"305\":2,\"306\":2,\"307\":1,\"308\":1,\"309\":2,\"310\":1,\"313\":2,\"314\":2,\"315\":3,\"316\":3,\"320\":2,\"321\":2,\"322\":2,\"323\":1,\"324\":1,\"325\":2,\"326\":1,\"330\":2,\"331\":2,\"339\":1,\"342\":2,\"359\":1,\"374\":1,\"375\":1,\"376\":1,\"377\":1,\"379\":1,\"380\":1,\"402\":1,\"403\":1,\"411\":1,\"433\":1,\"436\":1,\"494\":1,\"497\":1,\"500\":1,\"527\":2,\"530\":2,\"543\":2,\"544\":1,\"546\":1,\"547\":2,\"551\":1,\"583\":1,\"604\":1,\"605\":1,\"617\":1,\"619\":1,\"694\":1}}],[\"<username\",{\"1\":{\"344\":1,\"490\":1}}],[\"<ul>\",{\"1\":{\"299\":1,\"300\":1,\"315\":1,\"316\":1,\"457\":3,\"458\":1,\"459\":1,\"463\":1,\"544\":1}}],[\"<url>\",{\"1\":{\"267\":1}}],[\"<footer>$\",{\"1\":{\"291\":1}}],[\"<footer>\",{\"1\":{\"291\":3}}],[\"<fancybutton>\",{\"1\":{\"288\":4,\"293\":1}}],[\"<router\",{\"1\":{\"540\":3,\"543\":4,\"544\":3,\"546\":3,\"547\":6,\"549\":1,\"550\":3,\"551\":1,\"553\":1,\"557\":8,\"570\":4,\"578\":5}}],[\"<routerview\",{\"1\":{\"284\":1}}],[\"<routerview>\",{\"1\":{\"284\":1}}],[\"<rich\",{\"1\":{\"116\":1}}],[\"<keepalive\",{\"1\":{\"279\":3,\"280\":1}}],[\"<keepalive>\",{\"1\":{\"278\":3,\"279\":1,\"280\":1,\"284\":1}}],[\"<keep\",{\"1\":{\"278\":1}}],[\"<vue\",{\"1\":{\"300\":2,\"316\":2}}],[\"<vuefooter><\",{\"1\":{\"300\":1,\"316\":1}}],[\"<vuemain><\",{\"1\":{\"300\":1,\"316\":1}}],[\"<vueheader><\",{\"1\":{\"300\":1,\"316\":1}}],[\"<version>\",{\"1\":{\"267\":2}}],[\"<view\",{\"1\":{\"103\":1,\"104\":3,\"106\":1,\"116\":1,\"117\":1,\"118\":1,\"121\":16,\"123\":1,\"124\":22,\"136\":3,\"137\":1,\"150\":2}}],[\"<view>\",{\"1\":{\"91\":1,\"102\":1,\"105\":1,\"108\":1,\"109\":1}}],[\"<additem><\",{\"1\":{\"603\":1}}],[\"<a\",{\"1\":{\"437\":1,\"438\":1,\"445\":1,\"546\":2,\"547\":3,\"551\":3}}],[\"<awesomeicon\",{\"1\":{\"288\":1}}],[\"<async\",{\"1\":{\"283\":1}}],[\"<about><\",{\"1\":{\"275\":1}}],[\"<app>\",{\"1\":{\"250\":1}}],[\"<auto|lf|crlf|cr>\",{\"1\":{\"59\":1,\"60\":1}}],[\"<noscript>\",{\"1\":{\"236\":1}}],[\"<navigator\",{\"1\":{\"130\":6}}],[\"<main>$\",{\"1\":{\"291\":1}}],[\"<main>\",{\"1\":{\"291\":3}}],[\"<map\",{\"1\":{\"133\":1}}],[\"<mycomponent>\",{\"1\":{\"295\":1,\"335\":1}}],[\"<mycomponent\",{\"1\":{\"294\":2,\"489\":1}}],[\"<my\",{\"1\":{\"290\":4,\"307\":1,\"323\":1,\"335\":3,\"402\":1,\"403\":1,\"404\":1,\"405\":1}}],[\"<meta\",{\"1\":{\"236\":3,\"480\":3}}],[\"<label\",{\"1\":{\"483\":7}}],[\"<label>\",{\"1\":{\"483\":3}}],[\"<loading><\",{\"1\":{\"283\":1}}],[\"<length>\",{\"1\":{\"228\":1}}],[\"<li>\",{\"1\":{\"458\":2,\"544\":2}}],[\"<li>商品列表5<\",{\"1\":{\"299\":1,\"300\":1,\"315\":1,\"316\":1}}],[\"<li>商品列表4<\",{\"1\":{\"299\":1,\"300\":1,\"315\":1,\"316\":1}}],[\"<li>商品列表3<\",{\"1\":{\"299\":1,\"300\":1,\"315\":1,\"316\":1}}],[\"<li>商品列表2<\",{\"1\":{\"299\":1,\"300\":1,\"315\":1,\"316\":1}}],[\"<li>商品列表1<\",{\"1\":{\"299\":1,\"300\":1,\"315\":1,\"316\":1}}],[\"<link\",{\"1\":{\"236\":1,\"480\":1}}],[\"<link>\",{\"1\":{\"201\":1}}],[\"<li\",{\"1\":{\"176\":1,\"457\":3,\"458\":1,\"459\":1,\"463\":1}}],[\"<h3>subitem组件<\",{\"1\":{\"605\":1,\"619\":1}}],[\"<h3>additem组件<\",{\"1\":{\"604\":1,\"617\":1}}],[\"<hr>\",{\"1\":{\"603\":1}}],[\"<hr\",{\"1\":{\"543\":1}}],[\"<h1\",{\"1\":{\"415\":1,\"416\":1}}],[\"<h1>根组件<\",{\"1\":{\"603\":1}}],[\"<h1>main<\",{\"1\":{\"578\":1}}],[\"<h1>小满最骚<\",{\"1\":{\"543\":1}}],[\"<h1>hello\",{\"1\":{\"540\":1}}],[\"<h1>here\",{\"1\":{\"291\":1}}],[\"<h1>teleport123<\",{\"1\":{\"420\":2,\"421\":1}}],[\"<h1>teleport<\",{\"1\":{\"419\":1,\"420\":1,\"421\":1}}],[\"<h1>app\",{\"1\":{\"384\":1}}],[\"<h1>\",{\"1\":{\"350\":1,\"353\":1,\"356\":1,\"363\":1,\"374\":1,\"375\":1,\"530\":2}}],[\"<home\",{\"1\":{\"371\":1}}],[\"<home><\",{\"1\":{\"275\":1}}],[\"<header>$\",{\"1\":{\"291\":1}}],[\"<header>\",{\"1\":{\"291\":3}}],[\"<head>\",{\"1\":{\"236\":1,\"480\":1}}],[\"<hello\",{\"1\":{\"250\":1}}],[\"<helloworld\",{\"1\":{\"195\":1,\"349\":1}}],[\"<html\",{\"1\":{\"236\":1,\"480\":1}}],[\"<h2>user\",{\"1\":{\"557\":1}}],[\"<h2>fruit\",{\"1\":{\"483\":1}}],[\"<h2>footer<\",{\"1\":{\"299\":1,\"300\":1,\"315\":1,\"316\":1}}],[\"<h2>gender\",{\"1\":{\"483\":1}}],[\"<h2>hobbies\",{\"1\":{\"483\":1}}],[\"<h2>header<\",{\"1\":{\"299\":1,\"300\":1,\"315\":1,\"316\":1}}],[\"<h2>isagree\",{\"1\":{\"483\":1}}],[\"<h2>intro\",{\"1\":{\"483\":1}}],[\"<h2>购物车为空~<\",{\"1\":{\"480\":1}}],[\"<h2>总价格\",{\"1\":{\"480\":1}}],[\"<h2>遍历数字<\",{\"1\":{\"457\":1}}],[\"<h2>个人信息<\",{\"1\":{\"457\":1}}],[\"<h2>电影列表<\",{\"1\":{\"457\":1,\"459\":1}}],[\"<h2>呵呵呵呵<\",{\"1\":{\"453\":3}}],[\"<h2>哈哈哈哈<\",{\"1\":{\"453\":3}}],[\"<h2>哈哈哈<\",{\"1\":{\"290\":1}}],[\"<h2>demo\",{\"1\":{\"384\":1}}],[\"<h2>我是迪迦<\",{\"1\":{\"370\":1}}],[\"<h2>我是vue渲染出来的<\",{\"1\":{\"250\":1}}],[\"<h2>免责声明<\",{\"1\":{\"299\":1,\"300\":1,\"315\":1,\"316\":1}}],[\"<h2>banner<\",{\"1\":{\"299\":1,\"300\":1,\"315\":1,\"316\":1}}],[\"<h2>navbar<\",{\"1\":{\"299\":1,\"300\":1,\"315\":1,\"316\":1}}],[\"<h2>组件结束<\",{\"1\":{\"290\":1}}],[\"<h2>组件开始<\",{\"1\":{\"290\":1}}],[\"<h2>\",{\"1\":{\"250\":2,\"295\":1,\"306\":1,\"308\":1,\"322\":1,\"324\":1,\"336\":2,\"337\":2,\"339\":1,\"359\":1,\"376\":1,\"430\":7,\"432\":5,\"434\":1,\"470\":3,\"471\":3,\"472\":3,\"473\":20,\"474\":1,\"477\":1,\"497\":1,\"500\":1,\"527\":4}}],[\"<h2>当前计数\",{\"1\":{\"172\":1,\"398\":1,\"399\":1,\"400\":1}}],[\"<h2\",{\"1\":{\"154\":1,\"168\":1,\"170\":1,\"171\":1,\"308\":1,\"324\":1,\"370\":1,\"377\":1,\"379\":1,\"380\":1,\"432\":1,\"434\":1,\"435\":1,\"452\":3,\"454\":1,\"455\":2,\"494\":1}}],[\"<pre>\",{\"1\":{\"504\":1}}],[\"<progress\",{\"1\":{\"126\":4}}],[\"<p>已知库存数\",{\"1\":{\"604\":1,\"605\":1,\"617\":1,\"619\":1}}],[\"<p>人名\",{\"1\":{\"547\":2}}],[\"<p>我的好友<\",{\"1\":{\"547\":1}}],[\"<p>答案是\",{\"1\":{\"476\":1}}],[\"<p>您的问题是\",{\"1\":{\"476\":1}}],[\"<p>\",{\"1\":{\"295\":1,\"308\":1,\"313\":1,\"324\":1,\"330\":1,\"337\":1,\"339\":1,\"530\":2,\"540\":1,\"694\":2}}],[\"<p>here\",{\"1\":{\"291\":1}}],[\"<p>and\",{\"1\":{\"291\":1}}],[\"<p>a\",{\"1\":{\"291\":1}}],[\"<plugin\",{\"1\":{\"267\":1}}],[\"<p\",{\"1\":{\"155\":1,\"159\":1,\"160\":1,\"161\":1}}],[\"<child\",{\"1\":{\"304\":1,\"305\":1,\"306\":1,\"310\":1,\"313\":1,\"320\":1,\"321\":1,\"322\":1,\"326\":1,\"330\":1,\"342\":2}}],[\"<category><\",{\"1\":{\"275\":1}}],[\"<componenta\",{\"1\":{\"338\":1}}],[\"<component\",{\"1\":{\"164\":1,\"167\":1,\"276\":1,\"277\":1,\"278\":1,\"279\":3,\"280\":1,\"284\":1,\"328\":1,\"337\":1,\"570\":4}}],[\"<component>\",{\"1\":{\"155\":1,\"276\":2,\"328\":2}}],[\"<custominput>\",{\"1\":{\"343\":1,\"481\":1}}],[\"<custominput\",{\"1\":{\"343\":2,\"481\":1}}],[\"<custom\",{\"1\":{\"111\":1,\"112\":1}}],[\"<td>\",{\"1\":{\"480\":6}}],[\"<tr\",{\"1\":{\"480\":1}}],[\"<transitiongroup>\",{\"1\":{\"175\":1}}],[\"<transition\",{\"1\":{\"158\":1,\"159\":1,\"160\":1,\"161\":1,\"162\":1,\"163\":3,\"164\":2,\"165\":1,\"167\":1,\"168\":3,\"170\":1,\"171\":1,\"174\":1,\"176\":1,\"284\":1,\"570\":4}}],[\"<transition>\",{\"1\":{\"155\":5,\"158\":1,\"159\":1,\"161\":1,\"163\":3,\"164\":3,\"166\":1,\"168\":1}}],[\"<tbody>\",{\"1\":{\"480\":1}}],[\"<th>操作<\",{\"1\":{\"480\":1}}],[\"<th>购买数量<\",{\"1\":{\"480\":1}}],[\"<th>价格<\",{\"1\":{\"480\":1}}],[\"<th>出版日期<\",{\"1\":{\"480\":1}}],[\"<th>书籍名称<\",{\"1\":{\"480\":1}}],[\"<th>序号<\",{\"1\":{\"480\":1}}],[\"<thead>\",{\"1\":{\"480\":1}}],[\"<table>\",{\"1\":{\"480\":1}}],[\"<title>document<\",{\"1\":{\"480\":1}}],[\"<title><\",{\"1\":{\"236\":1}}],[\"<teleport\",{\"1\":{\"419\":1,\"420\":3,\"421\":2}}],[\"<teleport>\",{\"1\":{\"418\":1}}],[\"<textarea\",{\"1\":{\"483\":1}}],[\"<textarea>\",{\"1\":{\"483\":1}}],[\"<text>横向滚动<\",{\"1\":{\"124\":1}}],[\"<text>横向布局<\",{\"1\":{\"121\":1}}],[\"<text>horizontal\",{\"1\":{\"124\":1}}],[\"<text>纵向滚动<\",{\"1\":{\"124\":1}}],[\"<text>纵向布局<\",{\"1\":{\"121\":1}}],[\"<text>vertical\",{\"1\":{\"124\":1}}],[\"<text>啦啦啦啦<\",{\"1\":{\"122\":1}}],[\"<text>flex\",{\"1\":{\"121\":2}}],[\"<text\",{\"1\":{\"116\":1,\"136\":1}}],[\"<template>mouse\",{\"1\":{\"503\":2}}],[\"<template>\",{\"1\":{\"154\":1,\"161\":1,\"167\":1,\"168\":1,\"171\":1,\"172\":1,\"174\":1,\"176\":1,\"195\":1,\"250\":1,\"275\":1,\"276\":1,\"288\":2,\"290\":2,\"291\":3,\"294\":2,\"295\":2,\"299\":1,\"300\":6,\"304\":2,\"305\":2,\"306\":2,\"307\":1,\"308\":1,\"309\":1,\"310\":2,\"313\":2,\"314\":2,\"315\":1,\"316\":6,\"320\":2,\"321\":2,\"322\":2,\"323\":1,\"324\":1,\"325\":1,\"326\":2,\"328\":1,\"330\":2,\"331\":2,\"338\":1,\"339\":1,\"342\":2,\"343\":2,\"344\":1,\"347\":1,\"349\":3,\"350\":1,\"353\":1,\"356\":1,\"359\":1,\"361\":1,\"363\":1,\"366\":1,\"367\":1,\"370\":1,\"371\":2,\"374\":1,\"375\":1,\"376\":1,\"377\":1,\"379\":1,\"380\":1,\"384\":2,\"390\":1,\"392\":1,\"400\":1,\"402\":2,\"403\":2,\"404\":2,\"405\":1,\"410\":2,\"411\":1,\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1,\"429\":1,\"489\":2,\"490\":1,\"494\":1,\"497\":1,\"500\":1,\"504\":1,\"530\":3,\"543\":2,\"544\":2,\"546\":1,\"547\":2,\"551\":1,\"578\":3,\"581\":1,\"584\":1,\"603\":1,\"604\":1,\"605\":1,\"617\":1,\"619\":1,\"694\":1}}],[\"<template\",{\"1\":{\"105\":4,\"275\":3,\"283\":2,\"284\":2,\"291\":6,\"292\":1,\"295\":2,\"337\":2,\"430\":1,\"432\":1,\"433\":1,\"435\":1,\"437\":1,\"438\":1,\"440\":1,\"441\":1,\"443\":1,\"444\":1,\"445\":1,\"446\":1,\"448\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":3,\"454\":1,\"455\":1,\"457\":1,\"458\":2,\"459\":1,\"463\":1,\"470\":1,\"471\":1,\"472\":1,\"473\":2,\"474\":1,\"476\":1,\"477\":1,\"480\":3,\"483\":1,\"527\":1}}],[\"<br\",{\"1\":{\"551\":2}}],[\"<baselayout>\",{\"1\":{\"291\":5}}],[\"<body>\",{\"1\":{\"236\":1,\"337\":1,\"440\":1,\"441\":1,\"443\":1,\"444\":1,\"445\":1,\"446\":1,\"448\":1,\"449\":1,\"450\":1,\"453\":1,\"457\":1,\"458\":1,\"459\":1,\"463\":1,\"473\":1,\"476\":1,\"477\":1,\"480\":1,\"483\":1,\"527\":2}}],[\"<block\",{\"1\":{\"136\":2}}],[\"<button>库存\",{\"1\":{\"605\":1,\"619\":1}}],[\"<button>库存+1<\",{\"1\":{\"604\":1,\"617\":1}}],[\"<button>我是按钮<\",{\"1\":{\"290\":2}}],[\"<button>\",{\"1\":{\"288\":1,\"289\":1}}],[\"<button\",{\"1\":{\"91\":1,\"116\":1,\"128\":5,\"154\":1,\"155\":1,\"161\":1,\"166\":3,\"174\":3,\"275\":1,\"276\":1,\"288\":1,\"289\":4,\"310\":1,\"314\":2,\"326\":1,\"328\":1,\"331\":2,\"339\":1,\"342\":1,\"347\":1,\"349\":1,\"350\":1,\"353\":1,\"356\":1,\"361\":1,\"363\":1,\"367\":1,\"374\":2,\"375\":2,\"376\":2,\"379\":1,\"380\":1,\"384\":2,\"398\":2,\"399\":2,\"400\":2,\"402\":1,\"404\":1,\"430\":1,\"432\":3,\"440\":1,\"448\":3,\"449\":2,\"450\":2,\"453\":1,\"459\":1,\"463\":1,\"473\":1,\"474\":1,\"476\":1,\"477\":3,\"480\":3,\"494\":1,\"497\":1,\"500\":1,\"527\":4,\"581\":1,\"584\":1,\"630\":1,\"632\":1,\"642\":1,\"643\":1,\"694\":1}}],[\"<select\",{\"1\":{\"483\":1}}],[\"<select>\",{\"1\":{\"483\":1}}],[\"<slot\",{\"1\":{\"291\":4,\"294\":1,\"295\":2}}],[\"<slot><\",{\"1\":{\"289\":1,\"291\":2}}],[\"<slot>\",{\"1\":{\"288\":2,\"289\":2,\"290\":3,\"291\":2}}],[\"<subitem><\",{\"1\":{\"603\":1}}],[\"<submitbutton\",{\"1\":{\"289\":1}}],[\"<submitbutton>save<\",{\"1\":{\"289\":1}}],[\"<submitbutton>\",{\"1\":{\"289\":2}}],[\"<suspense>\",{\"1\":{\"283\":11,\"284\":4}}],[\"<starrender\",{\"1\":{\"392\":1}}],[\"<star\",{\"1\":{\"390\":1,\"400\":1}}],[\"<strong>我是strong<\",{\"1\":{\"290\":1}}],[\"<strong>we\",{\"1\":{\"236\":1}}],[\"<style\",{\"1\":{\"167\":1,\"168\":1,\"171\":1,\"174\":1,\"176\":1,\"250\":1,\"299\":1,\"300\":1,\"315\":1,\"316\":1,\"339\":1,\"349\":1,\"350\":1,\"363\":1,\"392\":1,\"497\":1,\"500\":1,\"578\":2}}],[\"<style><\",{\"1\":{\"349\":1}}],[\"<style>\",{\"1\":{\"161\":1,\"288\":1,\"291\":1,\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1,\"440\":1,\"578\":1,\"603\":1}}],[\"<span>库存总数\",{\"1\":{\"603\":1,\"631\":1}}],[\"<span>喜欢的水果\",{\"1\":{\"483\":1}}],[\"<span>你的爱好\",{\"1\":{\"483\":2}}],[\"<span>\",{\"1\":{\"293\":1}}],[\"<span\",{\"1\":{\"174\":1,\"288\":1,\"433\":1,\"480\":1}}],[\"<script\",{\"1\":{\"250\":1,\"337\":1,\"347\":1,\"361\":1,\"390\":1,\"392\":1,\"398\":1,\"399\":1,\"400\":1,\"401\":1,\"402\":3,\"403\":2,\"404\":2,\"405\":3,\"410\":2,\"411\":2,\"416\":1,\"419\":1,\"420\":1,\"421\":1,\"430\":1,\"432\":1,\"433\":1,\"440\":1,\"441\":1,\"443\":1,\"444\":1,\"445\":1,\"446\":1,\"448\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":1,\"457\":1,\"458\":1,\"459\":1,\"463\":1,\"471\":1,\"472\":1,\"473\":2,\"474\":1,\"476\":1,\"477\":1,\"480\":2,\"483\":1,\"503\":2,\"504\":2,\"511\":2,\"512\":1,\"523\":1,\"524\":1,\"527\":3,\"540\":2,\"547\":1,\"551\":1,\"578\":3,\"581\":1,\"584\":1,\"585\":1,\"694\":1}}],[\"<script>\",{\"1\":{\"154\":1,\"161\":1,\"167\":1,\"168\":1,\"171\":1,\"172\":1,\"174\":1,\"176\":1,\"195\":1,\"250\":2,\"276\":1,\"288\":1,\"290\":1,\"291\":1,\"294\":2,\"295\":2,\"299\":1,\"300\":2,\"304\":2,\"305\":2,\"306\":2,\"307\":1,\"310\":2,\"313\":2,\"314\":2,\"315\":1,\"316\":2,\"320\":2,\"321\":2,\"322\":2,\"323\":1,\"326\":2,\"328\":1,\"330\":2,\"331\":2,\"337\":1,\"338\":1,\"339\":1,\"342\":2,\"343\":2,\"344\":2,\"349\":4,\"350\":1,\"353\":1,\"356\":1,\"359\":1,\"363\":1,\"366\":1,\"367\":1,\"370\":1,\"371\":2,\"374\":1,\"375\":1,\"376\":1,\"377\":2,\"379\":1,\"380\":1,\"384\":2,\"388\":1,\"389\":1,\"392\":1,\"411\":1,\"415\":1,\"430\":1,\"432\":1,\"433\":1,\"438\":1,\"440\":1,\"441\":1,\"443\":1,\"444\":1,\"445\":1,\"446\":1,\"448\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":1,\"457\":1,\"458\":1,\"459\":1,\"463\":1,\"471\":1,\"472\":1,\"473\":2,\"474\":1,\"476\":1,\"477\":1,\"480\":1,\"483\":1,\"489\":2,\"490\":1,\"494\":1,\"497\":1,\"500\":1,\"527\":2,\"540\":1,\"544\":1,\"603\":1,\"604\":1,\"605\":1,\"618\":1,\"619\":1,\"630\":1,\"631\":1,\"632\":1,\"642\":1,\"643\":1,\"652\":1,\"662\":1,\"698\":1}}],[\"<scroll\",{\"1\":{\"116\":1,\"124\":3}}],[\"<swiper\",{\"1\":{\"123\":6}}],[\"<i>我是默认的i元素<\",{\"1\":{\"290\":3}}],[\"<img\",{\"1\":{\"195\":1,\"437\":3,\"438\":3,\"445\":1}}],[\"<image\",{\"1\":{\"116\":1,\"123\":1,\"136\":2}}],[\"<icon\",{\"1\":{\"125\":3}}],[\"<input>\",{\"1\":{\"343\":1,\"481\":1,\"483\":1}}],[\"<input\",{\"1\":{\"110\":6,\"111\":1,\"172\":1,\"176\":1,\"343\":4,\"344\":2,\"359\":1,\"410\":2,\"411\":1,\"450\":1,\"452\":1,\"459\":1,\"473\":1,\"476\":1,\"481\":2,\"483\":6,\"486\":1,\"487\":1,\"488\":1,\"489\":3,\"490\":2,\"603\":1,\"618\":1,\"631\":1}}],[\"<wxs\",{\"1\":{\"108\":1,\"109\":1}}],[\"<\",{\"1\":{\"91\":3,\"102\":2,\"103\":2,\"104\":4,\"105\":3,\"108\":3,\"109\":6,\"110\":1,\"111\":1,\"118\":1,\"121\":9,\"123\":4,\"124\":12,\"130\":3,\"133\":1,\"136\":6,\"137\":2,\"154\":3,\"155\":1,\"158\":1,\"159\":1,\"160\":2,\"161\":4,\"162\":1,\"163\":5,\"164\":2,\"165\":1,\"166\":1,\"167\":5,\"168\":8,\"170\":1,\"171\":5,\"172\":4,\"174\":6,\"176\":6,\"195\":2,\"201\":1,\"236\":9,\"250\":6,\"275\":7,\"276\":4,\"277\":1,\"278\":2,\"279\":6,\"280\":1,\"283\":5,\"284\":8,\"288\":12,\"289\":4,\"290\":11,\"291\":32,\"292\":2,\"293\":2,\"294\":8,\"295\":11,\"299\":6,\"300\":13,\"304\":8,\"305\":8,\"306\":10,\"307\":3,\"308\":4,\"309\":4,\"310\":7,\"313\":7,\"314\":6,\"315\":6,\"316\":13,\"320\":8,\"321\":8,\"322\":10,\"323\":3,\"324\":4,\"325\":4,\"326\":7,\"328\":4,\"330\":7,\"331\":6,\"336\":2,\"337\":7,\"338\":2,\"339\":5,\"342\":6,\"343\":6,\"344\":3,\"347\":2,\"349\":12,\"350\":6,\"353\":5,\"356\":5,\"359\":4,\"361\":3,\"363\":4,\"366\":4,\"367\":2,\"370\":3,\"371\":5,\"374\":4,\"375\":4,\"376\":4,\"377\":4,\"379\":4,\"380\":4,\"384\":6,\"388\":1,\"389\":1,\"390\":3,\"392\":4,\"393\":1,\"398\":4,\"399\":4,\"400\":6,\"402\":7,\"403\":5,\"404\":5,\"405\":4,\"410\":5,\"411\":3,\"415\":4,\"416\":4,\"419\":5,\"420\":11,\"421\":7,\"429\":2,\"430\":15,\"432\":10,\"433\":3,\"434\":2,\"435\":3,\"436\":1,\"437\":5,\"438\":5,\"440\":10,\"441\":5,\"443\":6,\"444\":3,\"445\":4,\"446\":4,\"448\":8,\"449\":5,\"450\":4,\"452\":2,\"453\":5,\"454\":1,\"455\":1,\"457\":11,\"458\":7,\"459\":5,\"463\":5,\"470\":5,\"471\":5,\"472\":5,\"473\":27,\"474\":3,\"476\":5,\"477\":5,\"480\":21,\"483\":25,\"486\":1,\"489\":4,\"490\":2,\"494\":4,\"497\":6,\"500\":5,\"503\":4,\"504\":7,\"512\":1,\"527\":12,\"530\":8,\"540\":9,\"543\":9,\"544\":10,\"546\":4,\"547\":13,\"551\":5,\"557\":4,\"570\":11,\"578\":17,\"581\":3,\"583\":1,\"584\":3,\"585\":1,\"603\":7,\"604\":3,\"605\":3,\"617\":3,\"618\":1,\"619\":4,\"630\":1,\"631\":2,\"632\":1,\"642\":1,\"643\":1,\"652\":1,\"662\":1,\"694\":7,\"698\":1}}],[\"<=\",{\"1\":{\"16\":1,\"480\":1}}],[\"结算页面使用\",{\"1\":{\"593\":1,\"690\":1}}],[\"结果是\",{\"1\":{\"550\":2}}],[\"结果是一致的\",{\"1\":{\"228\":1}}],[\"结合的例子\",{\"1\":{\"694\":1}}],[\"结合在一起\",{\"1\":{\"570\":1}}],[\"结合其他服务器框架使用\",{\"1\":{\"252\":1}}],[\"结合使用\",{\"0\":{\"453\":1},\"1\":{\"168\":2}}],[\"结尾是\",{\"1\":{\"59\":1,\"60\":1}}],[\"结构外层的位置去\",{\"1\":{\"418\":1}}],[\"结构\",{\"1\":{\"3\":1}}],[\"缩写\",{\"1\":{\"437\":1,\"447\":1}}],[\"缩放模式\",{\"1\":{\"132\":5}}],[\"缩放的模式\",{\"1\":{\"132\":1}}],[\"缩进空格数\",{\"1\":{\"59\":1,\"60\":1}}],[\"缩小\",{\"1\":{\"16\":1}}],[\"单一定义store对象\",{\"1\":{\"598\":1}}],[\"单一状态树\",{\"1\":{\"597\":1}}],[\"单页面富应用成为主流\",{\"1\":{\"538\":1}}],[\"单页面富应用\",{\"0\":{\"538\":1},\"1\":{\"535\":1,\"538\":1}}],[\"单页面应用\",{\"1\":{\"531\":1,\"539\":1}}],[\"单页模式相关配置\",{\"1\":{\"139\":1,\"146\":1}}],[\"单元测试等\",{\"1\":{\"519\":1}}],[\"单元测试是一种软件测试方法\",{\"1\":{\"268\":1}}],[\"单个路由独享的\",{\"1\":{\"558\":1}}],[\"单个\",{\"1\":{\"519\":1}}],[\"单选框\",{\"1\":{\"483\":1}}],[\"单文件组件\",{\"1\":{\"282\":1,\"339\":1}}],[\"单文件组件支持\",{\"1\":{\"192\":1}}],[\"单位均为毫秒\",{\"1\":{\"144\":1}}],[\"单位为px\",{\"1\":{\"146\":1}}],[\"单位为\",{\"1\":{\"142\":1}}],[\"单位\",{\"1\":{\"139\":1,\"144\":4}}],[\"单位转换为\",{\"1\":{\"139\":1}}],[\"单位默认为px\",{\"1\":{\"125\":1}}],[\"单位毫秒\",{\"1\":{\"121\":2}}],[\"单引号\",{\"1\":{\"59\":1,\"60\":1}}],[\"单击replace\",{\"1\":{\"40\":1}}],[\"q\",{\"1\":{\"554\":1}}],[\"q=screens\",{\"1\":{\"554\":1}}],[\"qq\",{\"1\":{\"69\":1,\"80\":1,\"81\":1,\"86\":1,\"89\":1,\"99\":1,\"113\":1,\"114\":1,\"119\":1,\"123\":2,\"124\":2,\"128\":1,\"130\":1,\"132\":2,\"133\":1,\"134\":1,\"139\":1,\"529\":1}}],[\"quantity\",{\"1\":{\"582\":1}}],[\"qux\",{\"1\":{\"512\":1}}],[\"question侦听的data中的属性的名称\",{\"1\":{\"476\":1}}],[\"question\",{\"1\":{\"476\":6}}],[\"queryanswer\",{\"1\":{\"476\":3}}],[\"query\",{\"1\":{\"215\":1,\"544\":1,\"547\":6,\"548\":2,\"550\":2,\"551\":1,\"554\":1,\"561\":5,\"569\":1}}],[\"queryselector\",{\"1\":{\"201\":1}}],[\"queueupdate\",{\"1\":{\"201\":2}}],[\"quickapp\",{\"1\":{\"69\":18}}],[\"quickstart\",{\"1\":{\"68\":1}}],[\"quoteprops\",{\"1\":{\"59\":1,\"60\":1}}],[\"qiniu\",{\"1\":{\"17\":6}}],[\"文章详情数据\",{\"1\":{\"593\":1,\"690\":1}}],[\"文档上说是挂载到\",{\"1\":{\"420\":1}}],[\"文本组件\",{\"1\":{\"122\":1}}],[\"文本会先在对应国家的资源文件中查找\",{\"1\":{\"6\":1}}],[\"文件体积更小\",{\"1\":{\"530\":1}}],[\"文件系统\",{\"1\":{\"250\":1}}],[\"文件相对于webpack配置文件的路径\",{\"1\":{\"228\":1}}],[\"文件的内容\",{\"1\":{\"228\":1}}],[\"文件的空格敏感度\",{\"1\":{\"59\":1}}],[\"文件命名规则\",{\"0\":{\"228\":1}}],[\"文件夹\",{\"1\":{\"208\":1}}],[\"文件模块使用了\",{\"1\":{\"197\":1}}],[\"文件修改后的效果也要几秒钟才能在浏览器中反应出来\",{\"1\":{\"182\":1}}],[\"文件打包工具\",{\"1\":{\"180\":1}}],[\"文件来对本页面的表现进行配置\",{\"1\":{\"146\":1}}],[\"文件名不需要写文件后缀\",{\"1\":{\"141\":1}}],[\"文件只能发布到特定的平台\",{\"1\":{\"139\":1}}],[\"文件中定义了多个入口字段\",{\"1\":{\"264\":1}}],[\"文件中定义的样式为局部样式\",{\"1\":{\"152\":1}}],[\"文件中指定所需的预设\",{\"1\":{\"244\":1}}],[\"文件中的配置来确定需要转换的\",{\"1\":{\"244\":1}}],[\"文件中\",{\"1\":{\"223\":1,\"338\":1}}],[\"文件中添加配置项\",{\"1\":{\"117\":1}}],[\"文件中启用屏幕旋转的示例\",{\"1\":{\"113\":1}}],[\"文件中配置\",{\"1\":{\"113\":1,\"272\":1}}],[\"文件中声明的变量和函数只在该文件中有效\",{\"1\":{\"98\":1}}],[\"文件中进行注册\",{\"1\":{\"94\":1}}],[\"文件作用域\",{\"0\":{\"98\":1}}],[\"文件是微信小程序项目的全局样式表\",{\"1\":{\"87\":1}}],[\"文件内容为一个\",{\"1\":{\"86\":1,\"139\":1,\"146\":1}}],[\"文件用来对微信小程序进行全局配置\",{\"1\":{\"86\":2,\"139\":1}}],[\"文件时\",{\"1\":{\"73\":1}}],[\"文件\",{\"1\":{\"65\":1,\"92\":1,\"97\":1,\"208\":1,\"213\":2,\"223\":1,\"249\":2,\"340\":1,\"531\":1}}],[\"开命名空间后语法\",{\"1\":{\"680\":2,\"681\":2,\"682\":2}}],[\"开头的嵌套路径将被视为根路径\",{\"1\":{\"557\":1}}],[\"开头的所有内容\",{\"1\":{\"548\":1}}],[\"开头的驼峰式命名的变量都可以被用作一个自定义指令\",{\"1\":{\"411\":1}}],[\"开头\",{\"1\":{\"250\":1,\"267\":1,\"503\":1,\"548\":1}}],[\"开箱即获得一堆功能\",{\"1\":{\"183\":1}}],[\"开箱即用的模块热更新\",{\"1\":{\"531\":1}}],[\"开箱即用\",{\"0\":{\"183\":1}}],[\"开启命名空间\",{\"0\":{\"678\":1}}],[\"开启\",{\"0\":{\"256\":1}}],[\"开启watch模式有两种方式\",{\"1\":{\"253\":1}}],[\"开启bundler\",{\"1\":{\"251\":1}}],[\"开启后能修复某些\",{\"1\":{\"139\":1}}],[\"开启服务端口\",{\"1\":{\"67\":1}}],[\"开始\",{\"1\":{\"113\":2,\"520\":1}}],[\"开始标签的右尖括号是否跟随在最后一行属性末尾\",{\"1\":{\"59\":1}}],[\"开发时可保持当前的\",{\"1\":{\"580\":1}}],[\"开发和生成时\",{\"1\":{\"265\":1}}],[\"开发服务器将对传输到浏览器的资源进行gzip压缩\",{\"1\":{\"261\":1}}],[\"开发服务器将在启动后自动打开默认浏览器\",{\"1\":{\"261\":1}}],[\"开发服务器会监视文件的变化\",{\"1\":{\"258\":1}}],[\"开发服务器的更新通知\",{\"1\":{\"258\":1}}],[\"开发react项目\",{\"1\":{\"241\":1}}],[\"开发中我们在data返回的对象中定义了数据\",{\"1\":{\"475\":1}}],[\"开发中如何进行选择呢\",{\"1\":{\"455\":1}}],[\"开发中\",{\"1\":{\"241\":1}}],[\"开发阶段\",{\"1\":{\"239\":1}}],[\"开发阶段中\",{\"1\":{\"197\":1}}],[\"开发模式或生产模式\",{\"1\":{\"213\":1}}],[\"开发依赖\",{\"1\":{\"209\":1}}],[\"开发环境⚡️速度的提升\",{\"0\":{\"182\":1}}],[\"开发微信小程序时设计师可以用\",{\"1\":{\"148\":1}}],[\"开发者提供适当的\",{\"1\":{\"580\":1}}],[\"开发者学习新的api的成本\",{\"1\":{\"520\":1}}],[\"开发者通常需要一个本地服务器来运行他们的应用程序\",{\"1\":{\"252\":1}}],[\"开发者通过框架将逻辑层数据中的\",{\"1\":{\"91\":1}}],[\"开发者工具\",{\"1\":{\"139\":2}}],[\"开发者工具的使用\",{\"0\":{\"82\":1}}],[\"开发者需要使用到\",{\"1\":{\"97\":1}}],[\"开发者写的所有代码最终将会打包成一份\",{\"1\":{\"92\":1}}],[\"开发者可以根据具体情况选择合适的方式来修改状态\",{\"1\":{\"694\":1}}],[\"开发者可以通过\",{\"1\":{\"93\":1}}],[\"开发者可以通过它自定义键值的生成规则\",{\"1\":{\"17\":1}}],[\"开发者可以添加任意的函数或数据变量到\",{\"1\":{\"93\":1}}],[\"开发者可以自定义相关任务和代码实现\",{\"1\":{\"34\":1}}],[\"开发者可以灵活地利用这些能力来实现数据和ui的联动\",{\"1\":{\"1\":1}}],[\"开发工具下载地址\",{\"1\":{\"81\":1}}],[\"开发工具\",{\"0\":{\"81\":1}}],[\"开发周期比较短\",{\"1\":{\"78\":1}}],[\"开发成本低\",{\"1\":{\"78\":1}}],[\"开发的工程\",{\"1\":{\"68\":2}}],[\"注入到vue实例中\",{\"1\":{\"611\":1}}],[\"注入到vue项目中\",{\"1\":{\"608\":1}}],[\"注\",{\"1\":{\"146\":2}}],[\"注册\",{\"1\":{\"611\":1}}],[\"注册过的回调\",{\"1\":{\"559\":1}}],[\"注册周期钩子\",{\"0\":{\"493\":1}}],[\"注册所有指令\",{\"1\":{\"426\":1}}],[\"注册directives文件夹\",{\"1\":{\"413\":1}}],[\"注册一个全局前置守卫\",{\"1\":{\"559\":1}}],[\"注册一个全局组件\",{\"1\":{\"337\":1}}],[\"注册一下发射的事件\",{\"1\":{\"404\":1}}],[\"注册生命周期钩子\",{\"1\":{\"368\":1}}],[\"注册后仅在当前组件可用\",{\"1\":{\"338\":1}}],[\"注册局部组件\",{\"0\":{\"338\":1}}],[\"注册全局组件\",{\"0\":{\"337\":1}}],[\"注册组件分成两种\",{\"1\":{\"336\":1}}],[\"注册组件的方式\",{\"0\":{\"336\":1}}],[\"注册的组件\",{\"1\":{\"335\":1}}],[\"注册页面\",{\"0\":{\"94\":1}}],[\"注册小程序\",{\"0\":{\"93\":1},\"1\":{\"79\":1}}],[\"注释\",{\"1\":{\"73\":2}}],[\"注释问题\",{\"0\":{\"73\":1}}],[\"注释中提及\",{\"1\":{\"59\":1}}],[\"注意这里组件的\",{\"1\":{\"489\":1}}],[\"注意上面的顺序\",{\"1\":{\"457\":1}}],[\"注意当访问到某个响应式数组或\",{\"1\":{\"357\":1}}],[\"注意在父组件模板中\",{\"1\":{\"306\":1,\"322\":1}}],[\"注意力引导\",{\"1\":{\"170\":1}}],[\"注意需要重启\",{\"1\":{\"68\":1}}],[\"注意\",{\"0\":{\"620\":1,\"625\":1,\"633\":1},\"1\":{\"17\":1,\"67\":2,\"68\":1,\"92\":1,\"97\":1,\"117\":1,\"118\":1,\"135\":1,\"148\":1,\"216\":1,\"250\":1,\"379\":1,\"391\":1,\"472\":1,\"477\":1,\"493\":1,\"505\":1,\"550\":2,\"557\":1,\"563\":1,\"567\":1,\"571\":1,\"597\":1}}],[\"检查路由是否存在\",{\"1\":{\"575\":1}}],[\"检查用户是否已登录\",{\"1\":{\"559\":1}}],[\"检查对象是否是代理对象\",{\"1\":{\"354\":1}}],[\"检查对象是否是由\",{\"1\":{\"354\":5}}],[\"检查插件新版本时\",{\"1\":{\"267\":1}}],[\"检查缓存中是否还存有这个页面上一次初始数据的渲染结果\",{\"1\":{\"115\":1}}],[\"检查代码\",{\"1\":{\"61\":1}}],[\"检查\",{\"1\":{\"59\":1}}],[\"该导航可以通过返回\",{\"1\":{\"563\":1}}],[\"该方法采用一个整数作为参数\",{\"1\":{\"552\":1}}],[\"该方法的参数可以是一个字符串路径\",{\"1\":{\"550\":1}}],[\"该内容再加载页面时不会被呈现\",{\"1\":{\"527\":1}}],[\"该回调将会在侦听开始之后立即调用\",{\"1\":{\"478\":1}}],[\"该回调将会在被侦听的对象的属性改变时调动\",{\"1\":{\"478\":1}}],[\"该回调函数接受被侦听源的新值和旧值\",{\"1\":{\"475\":1}}],[\"该指令只在没有构建步骤的环境下需要使用\",{\"1\":{\"436\":1}}],[\"该指令可以用于性能优化\",{\"1\":{\"432\":1}}],[\"该函数可以返回一个\",{\"1\":{\"571\":1}}],[\"该函数会在安装插件时执行\",{\"1\":{\"423\":1,\"424\":1}}],[\"该函数接受\",{\"1\":{\"359\":1}}],[\"该对象作为一个\",{\"1\":{\"355\":1}}],[\"该代理对象只能读取属性值\",{\"1\":{\"354\":1}}],[\"该上下文对象是非响应式的\",{\"1\":{\"349\":1}}],[\"该components选项对应的是一个对象\",{\"1\":{\"338\":1}}],[\"该插槽插入什么内容取决于父组件如何使用\",{\"1\":{\"287\":1}}],[\"该工厂函数需要返回一个promise对象\",{\"1\":{\"282\":1}}],[\"该依赖\",{\"1\":{\"266\":1}}],[\"该服务还支持一些特殊的路由\",{\"1\":{\"258\":1}}],[\"该服务可以将webpack打包后的静态资源文件\",{\"1\":{\"258\":1}}],[\"该服务与静态资源服务配合使用\",{\"1\":{\"258\":1}}],[\"该命令仍然可以正常运行\",{\"1\":{\"254\":1}}],[\"该自定义组件完全接管\",{\"1\":{\"136\":1}}],[\"该规则不允许在循环体中使用\",{\"1\":{\"59\":1}}],[\"该装饰器支持在arkts卡片中使用\",{\"1\":{\"20\":2}}],[\"强制换成对应path路径跳转\",{\"1\":{\"567\":1}}],[\"强制修改到另一个路由路径上\",{\"1\":{\"567\":1}}],[\"强制重定向后\",{\"1\":{\"554\":1}}],[\"强制切换到\",{\"1\":{\"554\":1}}],[\"强制绑定为\",{\"1\":{\"437\":2}}],[\"强制同步一起执行\",{\"1\":{\"377\":1}}],[\"强制将\",{\"1\":{\"59\":1}}],[\"强制设置第一个属性的位置\",{\"1\":{\"59\":1}}],[\"强制使用组件定义名称的特定大小写\",{\"1\":{\"59\":1}}],[\"重构购物车\",{\"0\":{\"645\":1,\"649\":1}}],[\"重置为初始值\",{\"1\":{\"582\":1}}],[\"重置\",{\"1\":{\"582\":1}}],[\"重定向的字符串路径\",{\"1\":{\"554\":1}}],[\"重定向的目标也可以是一个命名的路由\",{\"1\":{\"554\":1}}],[\"重定向到\",{\"1\":{\"554\":2}}],[\"重定向也是通过\",{\"1\":{\"554\":1}}],[\"重定向\",{\"0\":{\"554\":1}}],[\"重点\",{\"0\":{\"529\":1}}],[\"重写到\",{\"1\":{\"263\":1}}],[\"重写完路径后\",{\"1\":{\"197\":1}}],[\"重新匹配数组规则\",{\"1\":{\"554\":1}}],[\"重新渲染被触发时调用\",{\"1\":{\"494\":1}}],[\"重新渲染时调用\",{\"1\":{\"494\":1}}],[\"重新赋值给el\",{\"1\":{\"416\":1}}],[\"重新\",{\"1\":{\"250\":1}}],[\"重新打包即可支持app\",{\"1\":{\"250\":1}}],[\"重新打包\",{\"1\":{\"250\":1}}],[\"重新打包时\",{\"1\":{\"234\":1}}],[\"重新部署即可\",{\"1\":{\"250\":1}}],[\"重新启动策略配置\",{\"1\":{\"142\":1,\"146\":1}}],[\"重复条件\",{\"1\":{\"59\":1}}],[\"重试时无需重新安装\",{\"1\":{\"27\":1}}],[\"防止多个模块之间\",{\"1\":{\"677\":1}}],[\"防止你在\",{\"1\":{\"546\":1}}],[\"防止<script\",{\"1\":{\"59\":1}}],[\"防止了恶意应用行为\",{\"1\":{\"33\":1}}],[\"链接到了原来的\",{\"1\":{\"509\":1}}],[\"链接\",{\"1\":{\"364\":1}}],[\"链接的单词\",{\"1\":{\"59\":1}}],[\"链中的重复条件\",{\"1\":{\"59\":1}}],[\"链中的\",{\"1\":{\"59\":1}}],[\"链式调用的形式设置通用样式\",{\"1\":{\"24\":1}}],[\"类的链接\",{\"1\":{\"539\":1}}],[\"类比默认插槽\",{\"1\":{\"294\":1}}],[\"类文件\",{\"1\":{\"269\":1}}],[\"类似computed\",{\"1\":{\"597\":1,\"658\":1}}],[\"类似data\",{\"1\":{\"597\":1}}],[\"类似计算属性\",{\"1\":{\"583\":1}}],[\"类似与mixins\",{\"1\":{\"500\":1}}],[\"类似于computed\",{\"1\":{\"656\":1}}],[\"类似于\",{\"1\":{\"518\":1,\"552\":1}}],[\"类似于v\",{\"1\":{\"458\":1}}],[\"类似于有少量限制的\",{\"1\":{\"107\":1}}],[\"类似\",{\"1\":{\"249\":1,\"282\":1,\"584\":1,\"610\":1}}],[\"类型推断性能\",{\"1\":{\"401\":1}}],[\"类型三\",{\"1\":{\"361\":1}}],[\"类型二\",{\"1\":{\"282\":1,\"361\":1}}],[\"类型一\",{\"1\":{\"282\":1,\"361\":1}}],[\"类型注解的预设\",{\"1\":{\"244\":1}}],[\"类型齐全的api\",{\"1\":{\"179\":1}}],[\"类型校验\",{\"0\":{\"72\":1}}],[\"类型\",{\"1\":{\"59\":1,\"63\":1,\"93\":1,\"121\":1,\"123\":1,\"125\":1,\"126\":1,\"132\":1,\"139\":1,\"142\":1,\"143\":2,\"144\":1,\"146\":1,\"305\":1,\"321\":1,\"469\":1,\"475\":1}}],[\"类名\",{\"1\":{\"20\":1}}],[\"规则是从前往后逐个比较path\",{\"1\":{\"548\":1}}],[\"规则\",{\"1\":{\"436\":1}}],[\"规则意外地干扰过渡效果\",{\"1\":{\"168\":1,\"171\":1}}],[\"规则作为一个错误\",{\"1\":{\"59\":1}}],[\"规定屏幕宽为750rpx\",{\"1\":{\"148\":1}}],[\"规范化期间访问的任何响应式依赖项都会被侦听器跟踪\",{\"1\":{\"505\":1}}],[\"规范化为值\",{\"1\":{\"505\":1}}],[\"规范化了后台进程管理\",{\"1\":{\"33\":1}}],[\"规范\",{\"1\":{\"65\":1}}],[\"关联的数据发生变化时\",{\"1\":{\"358\":1}}],[\"关闭所有页面\",{\"1\":{\"130\":2}}],[\"关闭当前页面\",{\"1\":{\"130\":4}}],[\"关闭空方法检查\",{\"1\":{\"59\":1}}],[\"关闭规则\",{\"1\":{\"59\":1}}],[\"关于路由\",{\"0\":{\"534\":1}}],[\"关于typescript的配置文件\",{\"1\":{\"269\":1}}],[\"关于微信小程序警告\",{\"1\":{\"110\":1}}],[\"关于原npm工程适配ohpm操作\",{\"1\":{\"34\":1}}],[\"关于资源文件\",{\"1\":{\"34\":1}}],[\"​$bus\",{\"1\":{\"314\":1,\"331\":1}}],[\"​\",{\"1\":{\"59\":2,\"76\":2,\"84\":2,\"85\":1,\"86\":1,\"88\":1,\"90\":3,\"121\":1,\"122\":1,\"125\":1}}],[\"参见注\",{\"1\":{\"142\":1}}],[\"参数3\",{\"1\":{\"567\":1}}],[\"参数2\",{\"1\":{\"567\":1}}],[\"参数1\",{\"1\":{\"567\":1}}],[\"参数标记为可选可重复\",{\"1\":{\"547\":1,\"548\":1}}],[\"参数名\",{\"1\":{\"547\":3}}],[\"参数名=值\",{\"1\":{\"547\":1}}],[\"参数传递\",{\"0\":{\"449\":1}}],[\"参数会是一个这样的对象\",{\"1\":{\"408\":1}}],[\"参数是\",{\"1\":{\"408\":1}}],[\"参数\",{\"0\":{\"386\":1},\"1\":{\"386\":1,\"437\":1,\"447\":1,\"550\":1}}],[\"参数小节中学到的指定参数与事件名的技巧\",{\"1\":{\"344\":1}}],[\"参数来指定\",{\"1\":{\"265\":1}}],[\"参数为\",{\"1\":{\"109\":1}}],[\"参数中\",{\"1\":{\"93\":1}}],[\"参数可以为调用ts方法的返回值\",{\"1\":{\"23\":1}}],[\"参考中查看完整的细节\",{\"1\":{\"544\":1}}],[\"参考文档\",{\"1\":{\"95\":1}}],[\"参考\",{\"1\":{\"58\":1,\"134\":1}}],[\"引回到store里注册\",{\"1\":{\"669\":1}}],[\"引入注册\",{\"1\":{\"612\":1}}],[\"引入vuex\",{\"1\":{\"611\":1}}],[\"引入additem和subitem2个子组件显示\",{\"1\":{\"603\":1}}],[\"引入\",{\"0\":{\"523\":1}}],[\"引入的内容\",{\"1\":{\"402\":1}}],[\"引入h函数\",{\"1\":{\"388\":1}}],[\"引入loadsh\",{\"1\":{\"57\":2}}],[\"引用对象\",{\"1\":{\"477\":1}}],[\"引用中的值\",{\"1\":{\"358\":1}}],[\"引用\",{\"1\":{\"106\":1,\"335\":1}}],[\"引擎为小程序提供开发\",{\"1\":{\"92\":1}}],[\"引起ui的重新渲染\",{\"1\":{\"35\":1}}],[\"yellow\",{\"1\":{\"419\":1,\"420\":1,\"421\":1}}],[\"yes\",{\"1\":{\"59\":1}}],[\"yyyy\",{\"1\":{\"413\":1,\"415\":1,\"416\":1}}],[\"yuejs\",{\"1\":{\"251\":1}}],[\"yarn\",{\"1\":{\"186\":2,\"267\":2,\"269\":3,\"532\":4,\"581\":1,\"611\":2}}],[\"y=\",{\"1\":{\"124\":1}}],[\"your\",{\"1\":{\"59\":6,\"250\":1,\"251\":1,\"349\":1,\"573\":1}}],[\"you\",{\"1\":{\"59\":4,\"98\":1,\"105\":1,\"251\":1,\"268\":1,\"563\":2}}],[\"y\",{\"1\":{\"55\":2,\"186\":2,\"268\":2,\"503\":11,\"509\":3,\"513\":2}}],[\"常规参数只匹配\",{\"1\":{\"548\":1}}],[\"常规变量\",{\"1\":{\"36\":1}}],[\"常见的前端框架如angularjs\",{\"1\":{\"538\":1}}],[\"常见情景是从微信聊天列表页下拉启动\",{\"1\":{\"140\":1}}],[\"常用指令\",{\"1\":{\"65\":1}}],[\"常用\",{\"0\":{\"55\":1},\"1\":{\"252\":1}}],[\"待拷贝对象\",{\"0\":{\"55\":1}}],[\"keepalive>\",{\"1\":{\"278\":1,\"279\":3,\"280\":1,\"284\":1}}],[\"keepalive\",{\"1\":{\"278\":1,\"279\":1}}],[\"keep\",{\"0\":{\"278\":1},\"1\":{\"278\":1,\"494\":2}}],[\"kebab\",{\"1\":{\"59\":1,\"306\":2,\"322\":2,\"335\":4,\"442\":2}}],[\"key属性主要用在vue的虚拟dom算法\",{\"1\":{\"460\":1}}],[\"keyup\",{\"1\":{\"450\":2}}],[\"keyalias\",{\"1\":{\"447\":1,\"450\":1}}],[\"keyword\",{\"1\":{\"176\":3}}],[\"keyframes\",{\"1\":{\"160\":1,\"167\":1,\"170\":1}}],[\"key=value\",{\"1\":{\"547\":1}}],[\"key=\",{\"1\":{\"123\":1,\"136\":1,\"174\":1,\"176\":1,\"275\":1,\"276\":1,\"328\":1,\"463\":1,\"570\":1}}],[\"keys\",{\"1\":{\"59\":2,\"186\":2,\"561\":1}}],[\"key\",{\"0\":{\"460\":1},\"1\":{\"47\":4,\"155\":1,\"173\":1,\"338\":1,\"437\":1,\"457\":4,\"458\":2,\"460\":1,\"469\":1,\"475\":1,\"547\":3,\"570\":1}}],[\"keygenerator\",{\"1\":{\"17\":1}}],[\"kobe\",{\"1\":{\"57\":1,\"176\":1,\"376\":1,\"379\":1,\"380\":1,\"445\":2,\"471\":1,\"472\":1,\"473\":1,\"474\":1,\"477\":3}}],[\"k\",{\"1\":{\"54\":2}}],[\"乒乓球\",{\"1\":{\"53\":3,\"54\":1,\"55\":1}}],[\"若使用组合式函数\",{\"1\":{\"514\":1}}],[\"若你需要在不同的钩子间共享信息\",{\"1\":{\"408\":1}}],[\"若想组合得更简单\",{\"1\":{\"284\":1}}],[\"若想启用初始渲染缓存\",{\"1\":{\"117\":1}}],[\"若\",{\"1\":{\"283\":1}}],[\"若是\",{\"1\":{\"197\":1}}],[\"若是则进行对应改写成\",{\"1\":{\"197\":1}}],[\"若对页面单独设置则会覆盖全局的配置\",{\"1\":{\"146\":2}}],[\"若对象属性还是引用类型\",{\"1\":{\"53\":1}}],[\"若图片中包含对应二维码或小程序码\",{\"1\":{\"132\":1}}],[\"若直接子节点的高度差别较大\",{\"1\":{\"124\":1}}],[\"若被拷贝对象中有引用类型\",{\"1\":{\"44\":1}}],[\"篮球\",{\"1\":{\"49\":2,\"53\":2,\"54\":1,\"55\":1,\"483\":1}}],[\"跳过不需要编译的节点\",{\"1\":{\"435\":1}}],[\"跳过本地版本检测\",{\"1\":{\"267\":1}}],[\"跳转传参\",{\"0\":{\"547\":1}}],[\"跳转应用内的某个页面\",{\"1\":{\"130\":1}}],[\"跳转方式需要改变\",{\"1\":{\"546\":1}}],[\"跳转方式\",{\"1\":{\"130\":1}}],[\"跳转到一个不同的地址\",{\"1\":{\"566\":1}}],[\"跳转到页面\",{\"1\":{\"130\":1}}],[\"跳转到\",{\"1\":{\"130\":2,\"263\":1}}],[\"跳转到应用内的某个页面\",{\"1\":{\"130\":3}}],[\"跳\",{\"1\":{\"49\":2}}],[\"唱\",{\"1\":{\"49\":1}}],[\"物理\",{\"1\":{\"48\":3}}],[\"或直接操作\",{\"1\":{\"694\":1}}],[\"或返回\",{\"1\":{\"559\":1}}],[\"或手写完整的带有参数的\",{\"1\":{\"550\":1}}],[\"或普通值作为输入参数的组合式函数的具体示例\",{\"1\":{\"508\":1}}],[\"或是\",{\"1\":{\"502\":1}}],[\"或是包含这两种类型的一个数组\",{\"1\":{\"279\":1}}],[\"或一个组件\",{\"1\":{\"437\":1}}],[\"或事件监听器应用前调用\",{\"1\":{\"408\":1}}],[\"或事件监听器被应用之前调用\",{\"1\":{\"407\":1}}],[\"或其他方式传递数据\",{\"1\":{\"314\":1,\"331\":1}}],[\"或短横线分隔\",{\"1\":{\"306\":1,\"322\":1,\"442\":1}}],[\"或更高版本\",{\"1\":{\"267\":1}}],[\"或使用\",{\"1\":{\"175\":1}}],[\"或可能看到轻微的白屏现象\",{\"1\":{\"115\":1}}],[\"或在页面\",{\"1\":{\"113\":1}}],[\"或者是一个空对象\",{\"1\":{\"571\":1}}],[\"或者是保持原先的滚动位置\",{\"1\":{\"571\":1}}],[\"或者登陆过存储了token信息可以跳转\",{\"1\":{\"568\":1}}],[\"或者组件级的\",{\"1\":{\"558\":1}}],[\"或者对于可重复的参数\",{\"1\":{\"550\":1}}],[\"或者一个描述地址的对象\",{\"1\":{\"550\":1}}],[\"或者接收一个\",{\"1\":{\"505\":1}}],[\"或者自己深拷贝一份作为保存\",{\"1\":{\"477\":1}}],[\"或者需要将多个数据结合起来进行显示\",{\"1\":{\"468\":1}}],[\"或者需要将某个\",{\"1\":{\"349\":1}}],[\"或者我们有其他的div\",{\"1\":{\"418\":1}}],[\"或者侦听器侦听函数被再次执行了\",{\"1\":{\"376\":1}}],[\"或者从\",{\"1\":{\"561\":1}}],[\"或者从接口中获得的数据\",{\"1\":{\"355\":1}}],[\"或者从终端中以\",{\"1\":{\"269\":1}}],[\"或者说从后到前的\",{\"1\":{\"216\":1}}],[\"或者说从下到上\",{\"1\":{\"216\":1}}],[\"或者使用小程序支持的\",{\"1\":{\"97\":1}}],[\"或者\",{\"1\":{\"97\":1,\"162\":1,\"163\":1,\"168\":1,\"249\":2,\"267\":1,\"339\":2,\"349\":1,\"376\":1,\"377\":3,\"437\":1,\"540\":1,\"566\":1,\"573\":1}}],[\"或\",{\"1\":{\"59\":4,\"118\":1,\"124\":1,\"162\":1,\"197\":1,\"198\":1,\"244\":2,\"264\":2,\"267\":2,\"269\":1,\"335\":1,\"349\":2,\"354\":4,\"437\":1,\"475\":1,\"505\":1,\"508\":5,\"511\":1,\"520\":1,\"550\":1,\"559\":2,\"561\":1,\"573\":2}}],[\"或多个变量\",{\"1\":{\"48\":1}}],[\"或多个元素\",{\"1\":{\"48\":1}}],[\"或称为状态变量\",{\"1\":{\"38\":1}}],[\"允许您在\",{\"1\":{\"696\":1}}],[\"允许您在应用程序中执行异步操作\",{\"1\":{\"695\":1}}],[\"允许您在编写css时使用变量\",{\"1\":{\"268\":1}}],[\"允许你将多个变更归入\",{\"1\":{\"582\":1}}],[\"允许你将项目中的任何组件以一个库或\",{\"1\":{\"271\":1}}],[\"允许声明拓展另外一个组件\",{\"1\":{\"500\":1}}],[\"允许开发者以声明式的方式将\",{\"1\":{\"429\":1}}],[\"允许在不刷新整个页面的情况下更新部分模块\",{\"1\":{\"252\":1}}],[\"允许在浏览器实现模块化\",{\"1\":{\"195\":1}}],[\"允许使用function\",{\"1\":{\"59\":1}}],[\"允许一个表达式在期望多个参数\",{\"1\":{\"48\":1}}],[\"允许系统组件的参数是ts方法的返回值\",{\"1\":{\"23\":1}}],[\"展开运算符时\",{\"1\":{\"381\":1}}],[\"展开语法\",{\"0\":{\"48\":1},\"1\":{\"48\":1}}],[\"展示由\",{\"1\":{\"539\":1}}],[\"展示的是后备内容\",{\"1\":{\"283\":1}}],[\"展示自定义的加载提示\",{\"1\":{\"115\":1}}],[\"展示\",{\"1\":{\"12\":1,\"16\":1}}],[\"x中\",{\"1\":{\"521\":1}}],[\"x的时候\",{\"1\":{\"519\":2,\"521\":1}}],[\"xml\",{\"1\":{\"393\":1}}],[\"xuanyu\",{\"1\":{\"374\":1,\"375\":1}}],[\"x>\",{\"1\":{\"124\":1}}],[\"x=\",{\"1\":{\"124\":1}}],[\"x\",{\"1\":{\"55\":2,\"59\":4,\"171\":2,\"236\":1,\"267\":1,\"349\":2,\"480\":1,\"503\":11,\"509\":6,\"513\":3,\"520\":3,\"521\":1,\"527\":2,\"686\":1}}],[\"xiaomi\",{\"1\":{\"69\":1}}],[\"xiang\",{\"1\":{\"58\":1}}],[\"xia\",{\"1\":{\"51\":1}}],[\"xkc\",{\"1\":{\"47\":2}}],[\"xxx\",{\"1\":{\"15\":1,\"16\":1,\"18\":1,\"84\":4,\"93\":1,\"106\":1,\"110\":3,\"349\":1}}],[\"拷贝的就是内存地址\",{\"1\":{\"46\":1}}],[\"拷贝的就是基本类型的值\",{\"1\":{\"46\":1}}],[\"中定义和使用\",{\"1\":{\"696\":1}}],[\"中计算状态或过滤数据\",{\"1\":{\"696\":1}}],[\"中存放的就是全局共享的数据\",{\"1\":{\"691\":1}}],[\"中存在参数\",{\"1\":{\"544\":1}}],[\"中推荐使用\",{\"1\":{\"686\":1}}],[\"中断当前的导航\",{\"1\":{\"566\":1}}],[\"中增加一个属性\",{\"1\":{\"553\":1}}],[\"中做如下配置\",{\"1\":{\"543\":1}}],[\"中引入\",{\"1\":{\"543\":1}}],[\"中继续使用\",{\"1\":{\"514\":1}}],[\"中返回\",{\"1\":{\"513\":1}}],[\"中被移除\",{\"1\":{\"510\":1}}],[\"中保留了\",{\"1\":{\"496\":1}}],[\"中更改如下\",{\"1\":{\"477\":1}}],[\"中更改应用\",{\"1\":{\"250\":1}}],[\"中书写的模板时\",{\"1\":{\"436\":1}}],[\"中后\",{\"1\":{\"410\":1}}],[\"中可用\",{\"1\":{\"408\":1}}],[\"中可以使用\",{\"1\":{\"250\":1}}],[\"中配置别名\",{\"1\":{\"555\":1}}],[\"中配置\",{\"1\":{\"395\":1,\"396\":1}}],[\"中访问组合式\",{\"1\":{\"351\":1}}],[\"中访问\",{\"1\":{\"351\":1}}],[\"中数据可变的\",{\"1\":{\"347\":1}}],[\"中创建全局事件总线\",{\"1\":{\"314\":1,\"331\":1}}],[\"中创建scripts脚本\",{\"1\":{\"209\":1}}],[\"中间还有很多未知的或者乱序的节点\",{\"1\":{\"464\":1}}],[\"中间区域可能显示一个搜索框\",{\"1\":{\"286\":1}}],[\"中间\",{\"1\":{\"286\":1}}],[\"中以\",{\"1\":{\"269\":1}}],[\"中给定的相对路径\",{\"1\":{\"264\":1}}],[\"中查找加载\",{\"1\":{\"256\":1}}],[\"中加载\",{\"1\":{\"256\":1}}],[\"中直接修改样式\",{\"1\":{\"255\":1}}],[\"中用于导入模块的函数\",{\"1\":{\"250\":1}}],[\"中使用组合式函数\",{\"0\":{\"513\":1}}],[\"中使用组合式\",{\"1\":{\"401\":1}}],[\"中使用解构\",{\"1\":{\"294\":1}}],[\"中使用\",{\"0\":{\"250\":1},\"1\":{\"254\":1,\"695\":1}}],[\"中使用最新的特性\",{\"1\":{\"223\":1}}],[\"中使用require\",{\"1\":{\"59\":1}}],[\"中只需要\",{\"1\":{\"222\":1,\"249\":1}}],[\"中时被写入代码中\",{\"1\":{\"201\":1}}],[\"中客户端的\",{\"1\":{\"201\":1}}],[\"中获取状态的函数\",{\"1\":{\"696\":1}}],[\"中获取全局的数据\",{\"1\":{\"691\":1}}],[\"中获取\",{\"1\":{\"197\":1}}],[\"中约定若\",{\"1\":{\"197\":1}}],[\"中了解\",{\"1\":{\"178\":1}}],[\"中文文档\",{\"1\":{\"171\":1}}],[\"中文设置\",{\"0\":{\"28\":1}}],[\"中移除时调用\",{\"1\":{\"168\":1}}],[\"中相同的选择器\",{\"1\":{\"152\":1}}],[\"中相同的配置项\",{\"1\":{\"146\":1}}],[\"中生效\",{\"1\":{\"146\":1}}],[\"中先定义\",{\"1\":{\"143\":1}}],[\"中写\",{\"1\":{\"141\":1}}],[\"中有\",{\"1\":{\"119\":1}}],[\"中指定为\",{\"1\":{\"117\":1}}],[\"中所有绑定了\",{\"1\":{\"110\":1,\"111\":1,\"112\":1}}],[\"中\",{\"1\":{\"110\":1,\"150\":2,\"247\":1,\"262\":1,\"314\":2,\"331\":2,\"347\":1,\"408\":3,\"411\":1,\"430\":1,\"450\":1,\"479\":1,\"483\":1,\"496\":1,\"500\":1,\"519\":1,\"544\":1,\"554\":1,\"557\":1,\"560\":1,\"573\":1,\"694\":5,\"695\":1}}],[\"中设置\",{\"1\":{\"98\":1,\"146\":1}}],[\"中调用就好了\",{\"1\":{\"584\":1}}],[\"中调用基类组件的\",{\"1\":{\"500\":1}}],[\"中调用\",{\"1\":{\"93\":1,\"508\":1,\"513\":1}}],[\"中一些能力都无法使用\",{\"1\":{\"92\":1}}],[\"中编辑\",{\"1\":{\"73\":1}}],[\"中不支持\",{\"1\":{\"73\":1}}],[\"中才支持\",{\"1\":{\"73\":1}}],[\"中的参数\",{\"1\":{\"547\":1}}],[\"中的两个文件\",{\"1\":{\"543\":1}}],[\"中的html\",{\"1\":{\"385\":1}}],[\"中的导航和路由功能\",{\"1\":{\"268\":1}}],[\"中的一个配置选项\",{\"1\":{\"264\":1}}],[\"中的一种特性标志\",{\"1\":{\"251\":1}}],[\"中的module\",{\"1\":{\"214\":1}}],[\"中的样式为全局样式\",{\"1\":{\"152\":1}}],[\"中的配置都可以在页面覆盖或单独指定\",{\"1\":{\"146\":1}}],[\"中的部分配置\",{\"1\":{\"146\":1}}],[\"中的脚本段\",{\"1\":{\"107\":1}}],[\"中的\",{\"0\":{\"460\":1},\"1\":{\"69\":1,\"91\":1,\"136\":1,\"146\":1,\"250\":1,\"270\":1,\"271\":1,\"284\":1,\"540\":4,\"584\":1,\"694\":1}}],[\"中的深拷贝实现\",{\"0\":{\"57\":1}}],[\"中的深浅拷贝\",{\"0\":{\"45\":1}}],[\"两种变更\",{\"1\":{\"582\":1}}],[\"两种跳转方式有区别\",{\"1\":{\"546\":1}}],[\"两种选项\",{\"1\":{\"530\":1}}],[\"两类\",{\"1\":{\"197\":1}}],[\"两个插槽都只允许一个直接子节点\",{\"1\":{\"283\":1}}],[\"两个效果\",{\"1\":{\"124\":1}}],[\"两个对象属性完成相同\",{\"1\":{\"52\":1}}],[\"两个对象指向不同的地址\",{\"1\":{\"44\":1}}],[\"两个对象指向同一个地址\",{\"1\":{\"44\":1}}],[\"两个数组都包含项\",{\"1\":{\"40\":1}}],[\"两者示意图如下\",{\"1\":{\"44\":1}}],[\"则是为了简单的状态变化\",{\"1\":{\"694\":1}}],[\"则是通过提交\",{\"1\":{\"694\":1}}],[\"则是用于修改状态的函数\",{\"1\":{\"694\":1}}],[\"则重定向到登录页面\",{\"1\":{\"569\":1}}],[\"则导航的状态就是\",{\"1\":{\"566\":1}}],[\"则导航是有效的\",{\"1\":{\"559\":1}}],[\"则可以维持这一响应性连接\",{\"1\":{\"509\":1}}],[\"则一般更关注继承关系\",{\"1\":{\"500\":1}}],[\"则一些\",{\"1\":{\"155\":1}}],[\"则\",{\"1\":{\"437\":1,\"505\":1,\"559\":1}}],[\"则返回内部值\",{\"1\":{\"358\":1}}],[\"则会进入挂起状态\",{\"1\":{\"283\":1}}],[\"则它会在加载器函数返回的\",{\"1\":{\"282\":1}}],[\"则最久没有被访问的缓存实例将被销毁\",{\"1\":{\"280\":1}}],[\"则将其转发到http\",{\"1\":{\"262\":1}}],[\"则需要手动指定\",{\"1\":{\"250\":1}}],[\"则需要在\",{\"1\":{\"141\":1}}],[\"则这个回调是可选参数\",{\"1\":{\"168\":2}}],[\"则750rpx\",{\"1\":{\"148\":1}}],[\"则页面整体不能上下滚动\",{\"1\":{\"146\":1}}],[\"则滚动条长度可能会不准确\",{\"1\":{\"124\":1}}],[\"则在屏幕旋转时\",{\"1\":{\"113\":1}}],[\"则还会在堆内存中开辟另一块空间存储引用类型的真实数据\",{\"1\":{\"44\":1}}],[\"则arkui框架会使用默认的键值生成函数\",{\"1\":{\"17\":1}}],[\"深度侦听\",{\"1\":{\"477\":2}}],[\"深层还是可读\",{\"1\":{\"354\":1}}],[\"深层还是原生对象\",{\"1\":{\"354\":1}}],[\"深层级过渡与显式过渡时长\",{\"0\":{\"163\":1}}],[\"深拷贝开辟一个新的栈\",{\"1\":{\"52\":1}}],[\"深拷贝是新开栈\",{\"1\":{\"44\":1}}],[\"深拷贝是递归拷贝深层次\",{\"1\":{\"44\":1}}],[\"深拷贝\",{\"0\":{\"52\":1},\"1\":{\"44\":1}}],[\"深浅拷贝\",{\"0\":{\"43\":1}}],[\"概念\",{\"0\":{\"44\":1,\"361\":1}}],[\"后退\",{\"1\":{\"571\":1}}],[\"后的路径被改变成\",{\"1\":{\"554\":1}}],[\"后面的括号中加入\",{\"1\":{\"548\":1}}],[\"后面会讲到\",{\"1\":{\"228\":1,\"349\":1}}],[\"后参数\",{\"1\":{\"547\":1}}],[\"后端代码\",{\"0\":{\"577\":1}}],[\"后端不需要进行任何处理\",{\"1\":{\"537\":1}}],[\"后端专注于数据上\",{\"1\":{\"537\":1}}],[\"后端只提供api来返回数据\",{\"1\":{\"537\":1}}],[\"后端路由的缺点\",{\"1\":{\"536\":1}}],[\"后端路由阶段\",{\"0\":{\"536\":1},\"1\":{\"535\":1}}],[\"后添加\",{\"1\":{\"487\":1,\"488\":1}}],[\"后备内容不会立即展示出来\",{\"1\":{\"283\":1}}],[\"后类似一个\",{\"1\":{\"280\":1}}],[\"后续会基于volar开发官方的vscode插件\",{\"1\":{\"531\":1}}],[\"后续会讲到\",{\"1\":{\"479\":1}}],[\"后续我们需要通过babel来进行转换和设置\",{\"1\":{\"208\":1}}],[\"后续将不会再刷新\",{\"1\":{\"35\":1}}],[\"后缀的文件时\",{\"1\":{\"199\":1}}],[\"后\",{\"1\":{\"168\":1,\"263\":1,\"264\":4}}],[\"后者是将其地址存在栈内存中\",{\"1\":{\"42\":1}}],[\"找到需要引入到合适的模块代码\",{\"1\":{\"264\":1}}],[\"找到其中的device\",{\"1\":{\"30\":1}}],[\"找出新增\",{\"1\":{\"40\":1}}],[\"比较\",{\"1\":{\"464\":2}}],[\"比较常见的是两种方式\",{\"1\":{\"340\":1}}],[\"比较两个数据结构的差异\",{\"1\":{\"40\":1}}],[\"比react项目轻量级的preact项目\",{\"1\":{\"186\":1}}],[\"比如``counter\",{\"1\":{\"581\":1}}],[\"比如id为app的dⅳv\",{\"1\":{\"527\":1}}],[\"比如is\",{\"1\":{\"526\":1}}],[\"比如vue\",{\"1\":{\"524\":1}}],[\"比如created中会使用某一个method来修改data的数据\",{\"1\":{\"521\":1}}],[\"比如你可能已经用过的\",{\"1\":{\"502\":1}}],[\"比如都有methods选项\",{\"1\":{\"498\":1}}],[\"比如组件创建完后就请求一些服\",{\"1\":{\"492\":1}}],[\"比如hobbies的三个输入框值basketball\",{\"1\":{\"483\":1}}],[\"比如hello\",{\"1\":{\"469\":1}}],[\"比如gender的两个输入框值male\",{\"1\":{\"483\":1}}],[\"比如deep\",{\"1\":{\"479\":1}}],[\"比如data定义数据\",{\"1\":{\"346\":1}}],[\"比如点击\",{\"1\":{\"447\":1}}],[\"比如某段文字的颜色\",{\"1\":{\"442\":1}}],[\"比如某种情况下我们使用组件\",{\"1\":{\"286\":1}}],[\"比如下面的问题\",{\"1\":{\"460\":1}}],[\"比如下面的几种都是可以的\",{\"1\":{\"423\":1}}],[\"比如下面的模板希望抽离到一个单独的组件\",{\"1\":{\"336\":1}}],[\"比如移动到body元素上\",{\"1\":{\"418\":1}}],[\"比如reactive或者ref\",{\"1\":{\"379\":1}}],[\"比如raw\",{\"1\":{\"231\":1}}],[\"比如说想要上面的例子实现响应式\",{\"1\":{\"353\":1}}],[\"比如message\",{\"1\":{\"349\":1}}],[\"比如typescript\",{\"1\":{\"339\":1}}],[\"比如之前的app组件中\",{\"1\":{\"338\":1}}],[\"比如有一些深度嵌套的组件\",{\"1\":{\"313\":1,\"330\":1}}],[\"比如有这样一个\",{\"1\":{\"289\":1}}],[\"比如在开发中我们需要在侦听函数中执行网络请求\",{\"1\":{\"376\":1}}],[\"比如在开发vue或者react项目时\",{\"1\":{\"236\":1}}],[\"比如在组件中发生了点击\",{\"1\":{\"310\":1,\"326\":1}}],[\"比如父组件有一些数据\",{\"1\":{\"302\":1,\"318\":1}}],[\"比如父子组件之间\",{\"1\":{\"1\":1}}],[\"比如app可能使用了多个header\",{\"1\":{\"301\":1,\"317\":1}}],[\"比如animate\",{\"1\":{\"170\":1}}],[\"比如logo\",{\"1\":{\"269\":1}}],[\"比如less\",{\"1\":{\"188\":1}}],[\"比如模块热替换\",{\"1\":{\"252\":1}}],[\"比如我们需要对多个data数据进行运算\",{\"1\":{\"468\":1}}],[\"比如我们需要转换箭头函数\",{\"1\":{\"243\":1}}],[\"比如我们注册了三个全局组件\",{\"1\":{\"338\":1}}],[\"比如我们现在想要实现了一个功能\",{\"1\":{\"274\":1}}],[\"比如我们的一个api请求是\",{\"1\":{\"262\":1}}],[\"比如我们将webpack\",{\"1\":{\"212\":1}}],[\"比如添加一个noscript标签\",{\"1\":{\"236\":1}}],[\"比如打包优化\",{\"1\":{\"233\":1}}],[\"比如加载图片\",{\"1\":{\"232\":1}}],[\"比如保留原来的文件名\",{\"1\":{\"228\":1}}],[\"比如webpack中的postcss\",{\"1\":{\"219\":1}}],[\"比如自动添加浏览器前缀\",{\"1\":{\"219\":1}}],[\"比如箭头函数\",{\"1\":{\"208\":1}}],[\"比如开发完成后我们还需要将代码进行压缩\",{\"1\":{\"203\":1}}],[\"比如开发过程中\",{\"1\":{\"203\":1}}],[\"比如开发过程中我们需要通过模块化的方式来开发\",{\"1\":{\"203\":1}}],[\"比如通过es6+\",{\"1\":{\"203\":1}}],[\"比如也会使用一些高级的特性来加快我们的开发效率或者安全性\",{\"1\":{\"203\":1}}],[\"比如页面导航栏的背景色\",{\"1\":{\"84\":1}}],[\"比如使用tsc\",{\"1\":{\"200\":1}}],[\"比如使用\",{\"1\":{\"68\":1}}],[\"比如\",{\"1\":{\"54\":1,\"55\":2,\"84\":1,\"158\":1,\"161\":1,\"168\":1,\"213\":1,\"339\":1,\"361\":1,\"439\":1,\"459\":1,\"520\":1,\"527\":2}}],[\"比如两个数组或两个树\",{\"1\":{\"40\":1}}],[\"比如示例中的column\",{\"1\":{\"3\":1}}],[\"哪些需要被添加或删除\",{\"1\":{\"40\":1}}],[\"对其他暂无影响\",{\"1\":{\"675\":1}}],[\"对其进行打包处理\",{\"1\":{\"340\":1}}],[\"对state的取值方式有影响\",{\"1\":{\"675\":1}}],[\"对路由的添加通常是通过\",{\"1\":{\"572\":1}}],[\"对激活的类名做出样式的编写\",{\"1\":{\"547\":1}}],[\"对比\",{\"0\":{\"514\":1}}],[\"对reactive返回的对象进行解构获取值\",{\"1\":{\"363\":1}}],[\"对任何嵌套属性的访问都将是只读的\",{\"1\":{\"361\":1}}],[\"对双向绑定的属性进行debounce\",{\"1\":{\"359\":1}}],[\"对异步函数进行配置\",{\"1\":{\"282\":1}}],[\"对html进行打包处理我们可以使用另外一个插件\",{\"1\":{\"235\":1}}],[\"对esm形式的\",{\"1\":{\"197\":1}}],[\"对它起作用的过渡\",{\"1\":{\"158\":1}}],[\"对\",{\"1\":{\"70\":2,\"147\":1}}],[\"对于单页应用来说确实可以\",{\"1\":{\"580\":1}}],[\"对于\",{\"1\":{\"563\":1}}],[\"对于可选参数\",{\"1\":{\"550\":1}}],[\"对于大型单页应用可能不够灵活\",{\"1\":{\"539\":1}}],[\"对于大多数的\",{\"1\":{\"160\":1}}],[\"对于方式一\",{\"1\":{\"530\":1}}],[\"对于方式三\",{\"1\":{\"530\":1}}],[\"对于任何包含响应式数据的复杂逻辑\",{\"1\":{\"468\":1}}],[\"对于相同父元素的子元素节点并不会重新渲染整个列\",{\"1\":{\"463\":1}}],[\"对于组件内部来说\",{\"1\":{\"350\":1}}],[\"对于定义props的类型\",{\"1\":{\"349\":1}}],[\"对于更老的\",{\"1\":{\"347\":1}}],[\"对于每个\",{\"1\":{\"338\":1}}],[\"对于这种情况下\",{\"1\":{\"313\":1,\"330\":1}}],[\"对于这种场景\",{\"1\":{\"291\":1}}],[\"对于扩展性和可维护性来说都是非常差的\",{\"1\":{\"299\":1,\"315\":1}}],[\"对于加载css文件来说\",{\"1\":{\"215\":1}}],[\"对于强调\",{\"1\":{\"170\":1}}],[\"对于一个带有动态参数的路径\",{\"1\":{\"563\":1}}],[\"对于一个有名字的过渡效果\",{\"1\":{\"158\":1}}],[\"对于一些习惯了\",{\"1\":{\"70\":1}}],[\"对于小程序中的每个页面\",{\"1\":{\"94\":1}}],[\"对于struct的实例化\",{\"1\":{\"20\":1}}],[\"对应页面组件接收传递过来的值\",{\"1\":{\"547\":1}}],[\"对应provide传过来的name值\",{\"1\":{\"384\":1}}],[\"对应的内容也会发生更新\",{\"1\":{\"430\":1}}],[\"对应的值是一个字符串\",{\"1\":{\"215\":1}}],[\"对应的值时一个数组\",{\"1\":{\"215\":1}}],[\"对应的组件\",{\"1\":{\"542\":1,\"543\":1}}],[\"对应的组件数值为\",{\"1\":{\"40\":1}}],[\"对应的组件不会更新\",{\"1\":{\"40\":1}}],[\"对应hbuilderx最新alpha版\",{\"1\":{\"68\":1}}],[\"对应hbuilderx最新正式版\",{\"1\":{\"68\":1}}],[\"对象作为第一个参数\",{\"1\":{\"694\":1}}],[\"对象进行管理的\",{\"1\":{\"694\":1}}],[\"对象挂载到\",{\"1\":{\"691\":1}}],[\"对象里包含5个核心概念\",{\"1\":{\"668\":1}}],[\"对象里的属性\",{\"1\":{\"338\":1}}],[\"对象还公开了其他有用的信息\",{\"1\":{\"544\":1}}],[\"对象可以像普通的实例对象一样包含实例选项\",{\"1\":{\"497\":1}}],[\"对象数组\",{\"1\":{\"497\":1}}],[\"对象的键\",{\"1\":{\"489\":1}}],[\"对象的函数\",{\"1\":{\"358\":1}}],[\"对象语法\",{\"0\":{\"440\":1,\"443\":1},\"1\":{\"439\":1,\"440\":2,\"442\":1}}],[\"对象方式\",{\"1\":{\"424\":1}}],[\"对象方式的proxy选项可以指定一个或多个代理规则\",{\"1\":{\"262\":1}}],[\"对象获取到的\",{\"1\":{\"379\":1}}],[\"对象中的键值对是\",{\"1\":{\"338\":1}}],[\"对象中可以设置多个属性\",{\"1\":{\"215\":1}}],[\"对象写法的目的是为了进行参数的验证\",{\"1\":{\"311\":1,\"327\":1}}],[\"对象或数组默认值必须从一个工厂函数获取\",{\"1\":{\"306\":2,\"322\":2}}],[\"对象类型的其他写法\",{\"1\":{\"306\":1,\"322\":1}}],[\"对象类型我们可以在指定attribute名称的同时\",{\"1\":{\"303\":1,\"319\":1}}],[\"对象类型\",{\"0\":{\"305\":1,\"321\":1,\"424\":1},\"1\":{\"303\":1,\"319\":1,\"423\":1,\"424\":1}}],[\"对象\",{\"1\":{\"86\":1,\"115\":2,\"139\":1,\"146\":1,\"294\":1,\"349\":2,\"358\":2,\"365\":2,\"379\":1,\"446\":1,\"569\":1,\"691\":1}}],[\"对象属性是否使用引号\",{\"1\":{\"59\":1,\"60\":1}}],[\"对象属性为基础数据类型\",{\"1\":{\"53\":1}}],[\"对象字面量的括号之间打印空格\",{\"1\":{\"59\":1}}],[\"对模板中的自定义组件强制实施属性命名样式\",{\"1\":{\"59\":1}}],[\"添加路由\",{\"0\":{\"573\":1}}],[\"添加新记录\",{\"1\":{\"553\":1}}],[\"添加事件侦听器时使用\",{\"1\":{\"447\":1,\"450\":1}}],[\"添加全局资源\",{\"1\":{\"423\":1}}],[\"添加全局方法或者property\",{\"1\":{\"423\":1}}],[\"添加一个插件\",{\"1\":{\"272\":1}}],[\"添加兼容性处理等\",{\"1\":{\"246\":1,\"247\":1}}],[\"添加所需的polyfill\",{\"1\":{\"223\":1}}],[\"添加style\",{\"1\":{\"216\":1}}],[\"添加\",{\"1\":{\"136\":1,\"222\":1,\"255\":1,\"510\":1}}],[\"添加这个配置项之后\",{\"1\":{\"117\":1}}],[\"添加为一个插件\",{\"1\":{\"223\":1}}],[\"添加为\",{\"1\":{\"40\":1}}],[\"添加任务\",{\"1\":{\"39\":1}}],[\"删除路由如果存在的话\",{\"1\":{\"574\":1}}],[\"删除路由\",{\"0\":{\"574\":1},\"1\":{\"574\":1}}],[\"删除了一些不必要的api\",{\"1\":{\"520\":1}}],[\"删除模块\",{\"1\":{\"255\":1}}],[\"删除操作将在浏览器的下一个动画帧后执行\",{\"1\":{\"155\":1}}],[\"删除和更新的部分\",{\"1\":{\"40\":1}}],[\"删除\",{\"1\":{\"40\":1}}],[\"数字递增效果\",{\"0\":{\"172\":1}}],[\"数组更新检测\",{\"0\":{\"459\":1}}],[\"数组元素项item是在前面的\",{\"1\":{\"457\":1}}],[\"数组通常是来自data或者prop\",{\"1\":{\"457\":1}}],[\"数组语法\",{\"0\":{\"441\":1,\"444\":1},\"1\":{\"439\":1,\"441\":2,\"442\":1}}],[\"数组可以同时包含\",{\"1\":{\"391\":1}}],[\"数组中的字符串就是attribute的名称\",{\"1\":{\"303\":1,\"319\":1}}],[\"数组中存放的是一个个的rule\",{\"1\":{\"215\":1}}],[\"数组\",{\"1\":{\"279\":1,\"457\":2,\"569\":1}}],[\"数组来定义重写规则\",{\"1\":{\"263\":1}}],[\"数组进行修改\",{\"1\":{\"141\":1}}],[\"数组的第一项代表小程序的初始页面\",{\"1\":{\"141\":1}}],[\"数组项\",{\"1\":{\"40\":2}}],[\"数学\",{\"1\":{\"48\":3}}],[\"数据管家\",{\"1\":{\"597\":1}}],[\"数据同步\",{\"1\":{\"594\":1}}],[\"数据的修改都是可追踪\",{\"1\":{\"592\":1,\"689\":1}}],[\"数据变量多\",{\"1\":{\"592\":1,\"689\":1}}],[\"数据通信\",{\"1\":{\"590\":1}}],[\"数据进行某种转化后显示\",{\"1\":{\"468\":1}}],[\"数据属性响应式地更新\",{\"1\":{\"408\":1}}],[\"数据都不再是响应式的\",{\"1\":{\"363\":1}}],[\"数据不是响应式的\",{\"1\":{\"350\":1}}],[\"数据更新\",{\"1\":{\"145\":1}}],[\"数据字段控制\",{\"1\":{\"117\":1}}],[\"数据监听器\",{\"1\":{\"110\":1}}],[\"数据处理\",{\"0\":{\"109\":1}}],[\"数据绑定\",{\"0\":{\"102\":1},\"1\":{\"106\":1}}],[\"数据绑定及事件处理同\",{\"1\":{\"65\":1}}],[\"数据2的地址和数据3的地址\",{\"1\":{\"42\":1}}],[\"数据类型\",{\"0\":{\"42\":1}}],[\"数据源\",{\"1\":{\"36\":1}}],[\"数据懒加载从数据源中按需迭代数据\",{\"1\":{\"1\":1}}],[\"和输入框的v\",{\"1\":{\"618\":1}}],[\"和输入框的中显示的值都会被更新为\",{\"1\":{\"110\":2}}],[\"和路由模块router\",{\"1\":{\"610\":1}}],[\"和之前的后端路由不同\",{\"1\":{\"537\":1}}],[\"和无渲染组件的对比\",{\"0\":{\"515\":1}}],[\"和在组件中一样\",{\"1\":{\"503\":1}}],[\"和底层组件实例的数据绑定在\",{\"1\":{\"429\":1}}],[\"和内置指令类似\",{\"1\":{\"408\":1}}],[\"和抛出事件\",{\"1\":{\"401\":1}}],[\"和字符串\",{\"1\":{\"391\":1}}],[\"和标准的组件一致\",{\"1\":{\"349\":2}}],[\"和使用过多的全局变量一样\",{\"1\":{\"338\":1}}],[\"和函数的参数类似\",{\"1\":{\"294\":1}}],[\"和函数等则是分别存储数据1的地址\",{\"1\":{\"42\":1}}],[\"和其他组件结合\",{\"0\":{\"284\":1}}],[\"和插槽传给内部组件\",{\"1\":{\"282\":1}}],[\"和为更好的缓存而做的自动的\",{\"1\":{\"271\":1}}],[\"和socket服务\",{\"1\":{\"258\":1}}],[\"和相关的babel插件和预设\",{\"1\":{\"248\":1}}],[\"和postcss一样\",{\"1\":{\"242\":1}}],[\"和发送一个单独的文件之间自动选择\",{\"1\":{\"231\":1}}],[\"和\",{\"0\":{\"65\":1,\"453\":1,\"474\":1},\"1\":{\"40\":3,\"61\":1,\"90\":2,\"92\":2,\"123\":1,\"160\":1,\"168\":1,\"178\":1,\"197\":2,\"213\":1,\"243\":1,\"250\":1,\"257\":1,\"258\":1,\"260\":1,\"263\":1,\"271\":1,\"279\":1,\"282\":1,\"283\":1,\"284\":1,\"306\":1,\"313\":1,\"322\":1,\"330\":1,\"343\":1,\"347\":3,\"349\":4,\"359\":2,\"365\":1,\"384\":1,\"391\":1,\"408\":2,\"437\":1,\"459\":1,\"468\":1,\"469\":1,\"477\":1,\"493\":1,\"498\":1,\"500\":1,\"505\":2,\"509\":1,\"520\":2,\"530\":1,\"531\":1,\"544\":1,\"550\":1,\"559\":1,\"563\":2,\"564\":3,\"571\":1,\"573\":1,\"694\":3}}],[\"和child\",{\"1\":{\"40\":1}}],[\"的地方\",{\"1\":{\"694\":2}}],[\"的例子\",{\"1\":{\"584\":1}}],[\"的唯一\",{\"1\":{\"583\":1}}],[\"的同一个条目中\",{\"1\":{\"582\":1}}],[\"的补丁对象在同一时间更改多个属性\",{\"1\":{\"582\":1}}],[\"的时间线\",{\"1\":{\"580\":1}}],[\"的时候\",{\"1\":{\"402\":1,\"520\":2,\"521\":1}}],[\"的时候保留它们的状态\",{\"1\":{\"278\":1}}],[\"的话\",{\"1\":{\"580\":1,\"584\":1}}],[\"的专属状态管理库\",{\"1\":{\"580\":1}}],[\"的行为\",{\"1\":{\"571\":1}}],[\"的行为在指定了\",{\"1\":{\"280\":1}}],[\"的浏览器中可用\",{\"1\":{\"571\":1}}],[\"的方法进行调用\",{\"1\":{\"584\":1}}],[\"的方法\",{\"1\":{\"569\":1}}],[\"的方式\",{\"1\":{\"355\":1,\"695\":1}}],[\"的方式是使用一个可写的\",{\"1\":{\"343\":1}}],[\"的$route\",{\"1\":{\"569\":1}}],[\"的回调函数\",{\"1\":{\"565\":1}}],[\"的信息在它的指南\",{\"1\":{\"560\":1}}],[\"的片段通常对应于特定的嵌套组件结构\",{\"1\":{\"557\":1}}],[\"的实例方法\",{\"1\":{\"549\":1}}],[\"的路径代表要接收具体的值\",{\"1\":{\"547\":2,\"551\":1}}],[\"的路由模式\",{\"1\":{\"540\":1}}],[\"的自动编码\",{\"1\":{\"546\":1}}],[\"的模板来呈现当前的用户\",{\"1\":{\"544\":1}}],[\"的模块\",{\"1\":{\"197\":1,\"264\":1}}],[\"的生成以及编码\",{\"1\":{\"541\":1}}],[\"的正确编码\",{\"1\":{\"539\":1}}],[\"的官方路由\",{\"1\":{\"539\":1}}],[\"的兴起\",{\"1\":{\"538\":1}}],[\"的项目\",{\"1\":{\"531\":1}}],[\"的单文件组件\",{\"1\":{\"531\":1}}],[\"的单个属性转为一个\",{\"1\":{\"349\":1}}],[\"的innerhtml\",{\"1\":{\"527\":1}}],[\"的过程\",{\"1\":{\"525\":1}}],[\"的过渡系统提供的过渡效果\",{\"1\":{\"539\":1}}],[\"的过渡系统和其他第三方\",{\"1\":{\"161\":1}}],[\"的过渡效果\",{\"0\":{\"156\":1}}],[\"的用户可能会对\",{\"1\":{\"514\":1}}],[\"的普通的非响应式对象\",{\"1\":{\"509\":1}}],[\"的答案是哈哈哈哈哈`\",{\"1\":{\"476\":2}}],[\"的改变\",{\"1\":{\"473\":1}}],[\"的改变来执行副作用\",{\"1\":{\"349\":1}}],[\"的options\",{\"0\":{\"466\":1}}],[\"的案例\",{\"0\":{\"463\":1}}],[\"的样子\",{\"1\":{\"461\":1}}],[\"的样式\",{\"1\":{\"142\":1,\"146\":1}}],[\"的样式都由该自定义组件渲染\",{\"1\":{\"135\":1}}],[\"的修饰符\",{\"0\":{\"450\":1}}],[\"的格式来定义\",{\"1\":{\"445\":1}}],[\"的文本插值\",{\"1\":{\"430\":1}}],[\"的文件\",{\"1\":{\"250\":1}}],[\"的函数\",{\"1\":{\"423\":1,\"424\":1}}],[\"的函数来创建事件总线实例\",{\"1\":{\"314\":1,\"331\":1}}],[\"的情况\",{\"1\":{\"436\":1}}],[\"的情况下创建了响应式\",{\"1\":{\"508\":1}}],[\"的情况下\",{\"1\":{\"411\":1}}],[\"的情况也类似\",{\"1\":{\"40\":1}}],[\"的值将在每个组件中以\",{\"1\":{\"544\":1}}],[\"的值\",{\"1\":{\"408\":2,\"505\":1,\"571\":1}}],[\"的值都可以是一个以英文逗号分隔的字符串\",{\"1\":{\"279\":1}}],[\"的编译时语法糖\",{\"1\":{\"401\":1}}],[\"的扩展\",{\"1\":{\"393\":1}}],[\"的语法糖函数\",{\"1\":{\"358\":1}}],[\"的语法解析配置\",{\"1\":{\"59\":1}}],[\"的解包\",{\"1\":{\"357\":1}}],[\"的解决方法\",{\"1\":{\"110\":1}}],[\"的响应性\",{\"1\":{\"354\":1,\"508\":1}}],[\"的属性都不是响应式的\",{\"1\":{\"349\":1}}],[\"的对象的侦听\",{\"1\":{\"379\":1}}],[\"的对象\",{\"1\":{\"349\":1,\"359\":1,\"365\":1}}],[\"的对应请求\",{\"1\":{\"197\":1}}],[\"的形式暴露出来\",{\"1\":{\"544\":1}}],[\"的形式使用\",{\"1\":{\"411\":1}}],[\"的形式使用其中的属性\",{\"1\":{\"349\":1}}],[\"的形式书写\",{\"1\":{\"391\":1}}],[\"的形式来使用其中的\",{\"1\":{\"349\":1}}],[\"的形式给出\",{\"1\":{\"145\":1}}],[\"的入口\",{\"1\":{\"348\":1}}],[\"的风格是基于函数的组合\",{\"1\":{\"347\":1}}],[\"的依赖注入系统\",{\"1\":{\"347\":1}}],[\"的single\",{\"1\":{\"339\":1}}],[\"的大小\",{\"1\":{\"338\":1}}],[\"的大小写命名\",{\"1\":{\"306\":1,\"322\":1}}],[\"的第一个参数是组件的名称\",{\"1\":{\"337\":1}}],[\"的标签解析为使用\",{\"1\":{\"335\":1}}],[\"的标签名在\",{\"1\":{\"335\":1}}],[\"的标准化规范\",{\"1\":{\"250\":1}}],[\"的flutter\",{\"1\":{\"333\":1}}],[\"的管理和维护就变得非常容易了\",{\"1\":{\"333\":1}}],[\"的事件\",{\"1\":{\"314\":1,\"331\":1}}],[\"的事件给逻辑层\",{\"1\":{\"91\":1}}],[\"的api\",{\"0\":{\"479\":1}}],[\"的app操作基于微信开发\",{\"1\":{\"77\":1}}],[\"的attribute\",{\"0\":{\"307\":1,\"323\":1}}],[\"的定义\",{\"0\":{\"303\":1,\"319\":1}}],[\"的词法作用域规则是一致的\",{\"1\":{\"293\":1}}],[\"的加载函数\",{\"1\":{\"282\":1}}],[\"的动态组件是指可以根据不同的数据渲染不同的组件的功能\",{\"1\":{\"276\":1,\"328\":1}}],[\"的动画机制下集成其他的第三方\",{\"1\":{\"161\":1}}],[\"的压缩\",{\"1\":{\"271\":1}}],[\"的命令\",{\"1\":{\"269\":1}}],[\"的构建模式\",{\"1\":{\"265\":1}}],[\"的资源文件所处的目录\",{\"1\":{\"264\":1}}],[\"的页面\",{\"1\":{\"263\":1}}],[\"的区别\",{\"1\":{\"260\":1}}],[\"的原理是通过在应用程序运行时\",{\"1\":{\"258\":1}}],[\"的功能可以在任何组件中轻易复用了\",{\"1\":{\"503\":1}}],[\"的功能\",{\"1\":{\"254\":1,\"418\":1}}],[\"的各种选项\",{\"1\":{\"252\":1}}],[\"的各种可能性\",{\"1\":{\"178\":1}}],[\"的内置功能\",{\"1\":{\"347\":1}}],[\"的内置\",{\"1\":{\"250\":1}}],[\"的基本方法\",{\"1\":{\"695\":1,\"696\":1}}],[\"的基本用法示例\",{\"1\":{\"250\":1}}],[\"的基础上\",{\"1\":{\"92\":1}}],[\"的默认模块系统\",{\"1\":{\"250\":1}}],[\"的版本\",{\"1\":{\"250\":1}}],[\"的一个类似\",{\"1\":{\"393\":1}}],[\"的一个函数\",{\"1\":{\"385\":1}}],[\"的一个方法\",{\"1\":{\"337\":1}}],[\"的一个配置项\",{\"1\":{\"263\":1}}],[\"的一个引用\",{\"1\":{\"97\":1}}],[\"的一部分\",{\"1\":{\"250\":1}}],[\"的一般步骤如下\",{\"1\":{\"248\":1}}],[\"的呢\",{\"1\":{\"246\":1}}],[\"的类型注解转换为普通的\",{\"1\":{\"244\":1}}],[\"的类型注解和其他特定语法转换为普通的\",{\"1\":{\"244\":1}}],[\"的预设\",{\"1\":{\"244\":1}}],[\"的示例\",{\"1\":{\"241\":1}}],[\"的插槽被称为具名插槽\",{\"1\":{\"291\":1}}],[\"的插件是用于转换\",{\"1\":{\"243\":1}}],[\"的插件\",{\"1\":{\"238\":1}}],[\"的插入\",{\"1\":{\"155\":1}}],[\"的前面\",{\"1\":{\"216\":1}}],[\"的简写\",{\"1\":{\"215\":1,\"440\":1}}],[\"的简单示例\",{\"1\":{\"107\":1}}],[\"的使用\",{\"0\":{\"215\":1}}],[\"的重新加载\",{\"1\":{\"201\":1}}],[\"的相关代码已经被插入\",{\"1\":{\"201\":1}}],[\"的相关配置项需完整声明\",{\"1\":{\"135\":1}}],[\"的热加载原理\",{\"1\":{\"201\":1}}],[\"的开发模式\",{\"1\":{\"429\":1}}],[\"的开发服务器将所有代码视为原生\",{\"1\":{\"197\":1}}],[\"的开发者来说\",{\"1\":{\"70\":1}}],[\"的写法可以参考官方文档\",{\"1\":{\"348\":1}}],[\"的写法\",{\"1\":{\"197\":1}}],[\"的请求路径满足\",{\"1\":{\"197\":1}}],[\"的代码时\",{\"1\":{\"348\":1}}],[\"的代码转换为旧\",{\"1\":{\"243\":1}}],[\"的代码\",{\"1\":{\"197\":1,\"201\":1}}],[\"的配置文件即可\",{\"1\":{\"188\":1}}],[\"的安装与使用\",{\"0\":{\"184\":1}}],[\"的class来完成动画\",{\"1\":{\"175\":1}}],[\"的缩写语法\",{\"1\":{\"338\":1}}],[\"的缩写\",{\"1\":{\"171\":1,\"540\":1}}],[\"的直接子元素上\",{\"1\":{\"163\":1}}],[\"的应用方式基本上是相同的\",{\"1\":{\"160\":1}}],[\"的集合\",{\"1\":{\"150\":1,\"347\":1}}],[\"的注册\",{\"1\":{\"145\":1}}],[\"的超时时间\",{\"1\":{\"144\":4}}],[\"的列表\",{\"1\":{\"143\":1,\"463\":1}}],[\"的背景色\",{\"1\":{\"143\":1}}],[\"的渲染\",{\"1\":{\"135\":1,\"136\":1}}],[\"的渲染结果会比较局限\",{\"1\":{\"118\":1}}],[\"的渲染结果\",{\"1\":{\"117\":1}}],[\"的渲染结果展示给用户\",{\"1\":{\"115\":1}}],[\"的菜单\",{\"1\":{\"132\":1}}],[\"的结果\",{\"1\":{\"117\":1}}],[\"的位置\",{\"1\":{\"139\":2,\"143\":1}}],[\"的位置也会被一同更新\",{\"1\":{\"110\":1,\"111\":1,\"112\":1}}],[\"的位置扩展\",{\"1\":{\"48\":1}}],[\"的指向会造成未知的错误\",{\"1\":{\"97\":1}}],[\"的操作\",{\"1\":{\"91\":1,\"359\":1}}],[\"的逻辑层框架\",{\"1\":{\"90\":1}}],[\"的梦想\",{\"1\":{\"76\":1}}],[\"的\",{\"0\":{\"159\":1,\"160\":1,\"257\":1},\"1\":{\"70\":1,\"113\":1,\"117\":1,\"118\":2,\"152\":1,\"175\":1,\"203\":1,\"250\":1,\"262\":1,\"263\":1,\"276\":1,\"282\":1,\"291\":1,\"313\":2,\"328\":1,\"330\":2,\"343\":1,\"349\":1,\"433\":1,\"463\":1,\"468\":1,\"474\":1,\"553\":1,\"557\":4,\"582\":1,\"695\":1}}],[\"的问题\",{\"1\":{\"63\":1}}],[\"的参数不能赋给类型\",{\"1\":{\"63\":1}}],[\"的浅拷贝与深拷贝\",{\"0\":{\"41\":1}}],[\"的组合式\",{\"1\":{\"502\":1}}],[\"的组合式函数是现在更推荐的方式\",{\"1\":{\"496\":1}}],[\"的组合构成自定义组件\",{\"1\":{\"20\":1}}],[\"的组件是默认关闭的\",{\"1\":{\"405\":1}}],[\"的组件中集成基于组合式\",{\"1\":{\"348\":1}}],[\"的组件示例\",{\"1\":{\"347\":1}}],[\"的组件\",{\"1\":{\"151\":2}}],[\"的组件应该怎么显示\",{\"1\":{\"147\":1}}],[\"的组件样式\",{\"1\":{\"147\":1}}],[\"的组件不会重新生成\",{\"1\":{\"40\":1}}],[\"的数组项\",{\"1\":{\"40\":2}}],[\"因而要尽量避免频繁调用\",{\"1\":{\"118\":1}}],[\"因而开销相对较大\",{\"1\":{\"118\":1}}],[\"因为调试工具要立刻产生一次记录\",{\"1\":{\"625\":1}}],[\"因为他们具有相同的名字且名字必须是唯一的\",{\"1\":{\"574\":1}}],[\"因为没有必要了\",{\"1\":{\"563\":1}}],[\"因为没有匹配到嵌套路由\",{\"1\":{\"557\":1}}],[\"因为守卫在导航确认前被调用\",{\"1\":{\"563\":1}}],[\"因为在这种情况发生的时候\",{\"1\":{\"563\":1}}],[\"因为在模板中使用了\",{\"1\":{\"237\":1}}],[\"因为当守卫执行时\",{\"1\":{\"563\":1}}],[\"因为页面只在初始化时加载一次\",{\"1\":{\"538\":1}}],[\"因为window中我们无法获取到data返回对象中的数据\",{\"1\":{\"529\":1}}],[\"因为这些是\",{\"1\":{\"511\":1}}],[\"因为这里只使用了name\",{\"1\":{\"374\":1}}],[\"因为如果这样的话你将无法在函数中通过\",{\"1\":{\"493\":1}}],[\"因为它在模板中的\",{\"1\":{\"489\":1}}],[\"因为对于列表中\",{\"1\":{\"463\":1}}],[\"因为目前我们还没有比较完整的学习组件的概念\",{\"1\":{\"461\":1}}],[\"因为v\",{\"1\":{\"453\":1}}],[\"因为传入的是一个函数\",{\"1\":{\"426\":1}}],[\"因为设置了readonly\",{\"1\":{\"384\":1}}],[\"因为只是定义了个变量\",{\"1\":{\"350\":1}}],[\"因为每个实例需要维护一份被返回对象的独立的副本\",{\"1\":{\"306\":1,\"322\":1}}],[\"因为插槽内容本身是在父组件模板中定义的\",{\"1\":{\"293\":1}}],[\"因为\",{\"1\":{\"269\":1}}],[\"因为采用了typescript所以是ts结尾\",{\"1\":{\"269\":1}}],[\"因为不会被浏览器渲染\",{\"1\":{\"527\":1}}],[\"因为不需要每次修改代码后都重新编译和写入磁盘\",{\"1\":{\"254\":1}}],[\"因为不方便管理\",{\"1\":{\"215\":1}}],[\"因为postcss需要有对应的插件才会起效果\",{\"1\":{\"222\":1}}],[\"因为loader的执行顺序是从右向左\",{\"1\":{\"216\":1}}],[\"因为css\",{\"1\":{\"216\":1}}],[\"因为我们生活中都会用到路由器\",{\"1\":{\"535\":1}}],[\"因为我们不能访问this\",{\"1\":{\"349\":1}}],[\"因为我们不再相互切换特有的元素\",{\"1\":{\"173\":1}}],[\"因为我们已经通过htmlwebpackplugin完成了index\",{\"1\":{\"238\":1}}],[\"因为我们需要添加前缀\",{\"1\":{\"221\":1}}],[\"因为我们也会继续使用其他的loader\",{\"1\":{\"215\":1}}],[\"因为我们要构建vue3的项目\",{\"1\":{\"186\":1}}],[\"因为该数据和视图层已经绑定了\",{\"1\":{\"91\":1}}],[\"因为this\",{\"1\":{\"40\":1}}],[\"因此即将登场的新组件还没被创建\",{\"1\":{\"563\":1}}],[\"因此即使没有指定输出目录\",{\"1\":{\"254\":1}}],[\"因此组件实例会被复用\",{\"1\":{\"563\":1}}],[\"因此你可以调用\",{\"1\":{\"550\":1}}],[\"因此可以确保能访问到\",{\"1\":{\"510\":1}}],[\"因此它只会执行一次\",{\"1\":{\"505\":1}}],[\"因此它在浏览器环境中通常不可用\",{\"1\":{\"250\":1}}],[\"因此让我们再来看一个需要接收一个参数的组合式函数示例\",{\"1\":{\"504\":1}}],[\"因此上面的代码其实等价于下面这段\",{\"1\":{\"343\":1,\"481\":1}}],[\"因此不需要再做进一步解析\",{\"1\":{\"264\":1}}],[\"因此在客户端中我们创建了一个\",{\"1\":{\"201\":1}}],[\"因此在模块里边随意更改\",{\"1\":{\"97\":1}}],[\"因此需要额外校验类型\",{\"1\":{\"200\":1}}],[\"因此能够只包含要运行的代码\",{\"1\":{\"195\":1}}],[\"因此我们推荐通过\",{\"1\":{\"349\":1}}],[\"因此我们也可以用它来导入\",{\"1\":{\"282\":1}}],[\"因此我们不得不将它们设为\",{\"1\":{\"164\":1}}],[\"因此我们可以为表单绑定一个空的方法\",{\"1\":{\"110\":1}}],[\"因此\",{\"1\":{\"1\":1,\"44\":2,\"92\":1,\"178\":1,\"182\":1,\"197\":1,\"251\":1,\"282\":1,\"291\":1,\"530\":1,\"544\":1,\"557\":1,\"569\":1,\"582\":1,\"694\":1}}],[\"所绑定的\",{\"1\":{\"437\":1}}],[\"所触发的切换\",{\"1\":{\"155\":2}}],[\"所有功能在一个\",{\"1\":{\"539\":1}}],[\"所有选项\",{\"1\":{\"500\":1}}],[\"所有mixin对象的选项将被\",{\"1\":{\"496\":1}}],[\"所有生命周期钩子函数的\",{\"1\":{\"493\":1}}],[\"所有后续所有的内容都要一次进行改动\",{\"1\":{\"464\":1}}],[\"所有罗列在本页的\",{\"1\":{\"368\":1}}],[\"所有的组件\",{\"1\":{\"691\":1}}],[\"所有的别名和子路由也会被同时删除\",{\"1\":{\"574\":1}}],[\"所有的非prop的attribute\",{\"1\":{\"349\":1}}],[\"所有的项目依赖包都放在这个目录下\",{\"1\":{\"269\":1}}],[\"所有的webpack配置\",{\"1\":{\"266\":1}}],[\"所有\",{\"1\":{\"135\":1,\"136\":1,\"299\":1,\"315\":1,\"468\":1}}],[\"所有声明在build\",{\"1\":{\"23\":1}}],[\"所需毫秒数\",{\"1\":{\"126\":1}}],[\"所以必须是同步的\",{\"1\":{\"625\":1}}],[\"所以必须将其添加到一个元素上\",{\"1\":{\"453\":1}}],[\"所以不支持\",{\"1\":{\"563\":1}}],[\"所以不可以通过\",{\"1\":{\"349\":1}}],[\"所以两者的规则完全相同\",{\"1\":{\"550\":1}}],[\"所以点击\",{\"1\":{\"550\":1}}],[\"所以就是window\",{\"1\":{\"529\":1}}],[\"所以就会break跳出循环\",{\"1\":{\"464\":1}}],[\"所以这些属性在第一次调用时就是可用的\",{\"1\":{\"477\":1}}],[\"所以这里我们选择vue就行了\",{\"1\":{\"186\":1}}],[\"所以目前我们先理解html元素创建出来的vnode\",{\"1\":{\"461\":1}}],[\"所以它们也将会触发视图更新\",{\"1\":{\"459\":1}}],[\"所以它是一个打包工具\",{\"1\":{\"204\":1}}],[\"所以对应的代码都是编写的类似于js的一种语法\",{\"1\":{\"429\":1}}],[\"所以对其进行操作时\",{\"1\":{\"355\":1}}],[\"所以会自动执行\",{\"1\":{\"426\":1}}],[\"所以会出现没有定义的错误\",{\"1\":{\"237\":1}}],[\"所以更改不了\",{\"1\":{\"384\":1}}],[\"所以更推荐开发者采用\",{\"1\":{\"97\":1}}],[\"所以打印为null\",{\"1\":{\"377\":1}}],[\"所以只会监听name\",{\"1\":{\"374\":1}}],[\"所以需要在生命周期中调用拿值\",{\"1\":{\"369\":1}}],[\"所以并不需要在模板中通过\",{\"1\":{\"355\":1}}],[\"所以组件化的核心思想应该是对组件进行拆分\",{\"1\":{\"299\":1,\"315\":1}}],[\"所以组件如果想要条件性地被\",{\"1\":{\"279\":1}}],[\"所以你可以使用这个异步的包装组件无缝地替换原始组件\",{\"1\":{\"282\":1}}],[\"所以多数情况下我们会将它和\",{\"1\":{\"282\":1}}],[\"所以要有定义文件\",{\"1\":{\"269\":1}}],[\"所以要安装autoprefixer\",{\"1\":{\"221\":1}}],[\"所以默认会从node\",{\"1\":{\"264\":1}}],[\"所以当你试图在组件中使用\",{\"1\":{\"250\":1}}],[\"所以相当于已经内置了\",{\"1\":{\"223\":1}}],[\"所以我们修改\",{\"1\":{\"528\":1}}],[\"所以我们在\",{\"1\":{\"528\":1}}],[\"所以我们会将计算属性直接写成一个函数\",{\"1\":{\"474\":1}}],[\"所以我们会先打印出来一个空的\",{\"1\":{\"377\":1}}],[\"所以我们可以发现\",{\"1\":{\"465\":1}}],[\"所以我们可以在package\",{\"1\":{\"212\":1}}],[\"所以我们一般会借助于一个在线工具来完成\",{\"1\":{\"428\":1}}],[\"所以我们要设置\",{\"1\":{\"381\":1}}],[\"所以我们也需要对index\",{\"1\":{\"235\":1}}],[\"所以我们需要配置它的plugin\",{\"1\":{\"222\":1}}],[\"所以我们需要将style\",{\"1\":{\"216\":1}}],[\"所以我们需要先安装node\",{\"1\":{\"206\":1}}],[\"所以我们电脑上必须有node环境\",{\"1\":{\"206\":1}}],[\"所以完全保证不了类型正确\",{\"1\":{\"200\":1}}],[\"所以从一开始就可以考虑各种性能问题\",{\"1\":{\"196\":1}}],[\"所以逻辑层也称之为\",{\"1\":{\"92\":1}}],[\"所以渲染层存在多个webview线程\",{\"1\":{\"90\":1}}],[\"所以页面相关的样式可以写在这里\",{\"1\":{\"84\":1}}],[\"所以页面结构内容写在这里\",{\"1\":{\"84\":1}}],[\"所以在开发中我们通常使用组件的时候采用的都是局部注册\",{\"1\":{\"338\":1}}],[\"所以在开发中我们可能会引用一些第三方库的动画库\",{\"1\":{\"170\":1}}],[\"所以在模板中使用驼峰式命名的props时\",{\"1\":{\"306\":1,\"322\":1}}],[\"所以在真实开发中\",{\"1\":{\"266\":1,\"339\":1}}],[\"所以在安装webpack时\",{\"1\":{\"207\":1}}],[\"所以在react中使用过渡动画我们需要使用一个第三方库\",{\"1\":{\"154\":1}}],[\"所以在页面一打开的时候会显示\",{\"1\":{\"91\":1}}],[\"所以在\",{\"1\":{\"73\":1,\"520\":1}}],[\"所以忽略掉这这些原生内容即可\",{\"1\":{\"63\":1}}],[\"所以某些属性并没有出现在相关interface上\",{\"1\":{\"63\":1}}],[\"所以\",{\"1\":{\"40\":1,\"208\":1,\"241\":1,\"265\":1,\"333\":2,\"464\":1,\"550\":1}}],[\"所以即使6个组件显示都为7\",{\"1\":{\"40\":1}}],[\"五次\",{\"1\":{\"40\":1}}],[\"六次\",{\"1\":{\"40\":1}}],[\"父子关系\",{\"1\":{\"590\":1}}],[\"父子组件之间如何进行通信呢\",{\"1\":{\"301\":1,\"317\":1}}],[\"父子组件双向同步\",{\"1\":{\"40\":1}}],[\"父子组件单向同步\",{\"1\":{\"40\":1}}],[\"父传子\",{\"0\":{\"302\":1,\"318\":1},\"1\":{\"590\":1}}],[\"父元素传入插槽内容\",{\"1\":{\"288\":1}}],[\"父组件传递过来的插槽\",{\"1\":{\"349\":1}}],[\"父组件传递给子组件\",{\"1\":{\"301\":1,\"317\":1}}],[\"父组件中通过使用$parent属性访问了父组件实例\",{\"1\":{\"342\":1}}],[\"父组件中状态变量可以传递给子组件\",{\"1\":{\"36\":1}}],[\"父组件不需要知道哪些子组件使用它\",{\"1\":{\"313\":1,\"330\":1}}],[\"父组件有一个\",{\"1\":{\"313\":1,\"330\":1}}],[\"父组件都可以作为其所有子组件的依赖提供者\",{\"1\":{\"313\":1,\"330\":1}}],[\"父组件\",{\"1\":{\"310\":1,\"326\":1}}],[\"父组件需要切换内容\",{\"1\":{\"310\":1,\"326\":1}}],[\"父组件将其数据parentvalue传递给子组件的myprop\",{\"1\":{\"306\":1,\"322\":1}}],[\"父组件使用\",{\"1\":{\"305\":1,\"321\":1}}],[\"父组件使用message=\",{\"1\":{\"304\":1,\"320\":1}}],[\"父组件使用命名参数机制\",{\"1\":{\"36\":1}}],[\"父组件模板中的表达式只能访问父组件的作用域\",{\"1\":{\"293\":1}}],[\"父组件通过指定参数传递给子组件的状态变量\",{\"1\":{\"36\":1}}],[\"是管理员\",{\"1\":{\"583\":1}}],[\"是支持给\",{\"1\":{\"563\":1}}],[\"是查询参数\",{\"1\":{\"547\":1}}],[\"是获取\",{\"1\":{\"547\":1}}],[\"是目前非常流行的架构模式\",{\"1\":{\"526\":1}}],[\"是无法劫持和监听的\",{\"1\":{\"520\":1}}],[\"是使用\",{\"1\":{\"520\":1}}],[\"是唯一在调用\",{\"1\":{\"511\":1}}],[\"是两个\",{\"1\":{\"509\":1}}],[\"是在前期被使用非常框架的架构模式\",{\"1\":{\"526\":1}}],[\"是在\",{\"1\":{\"505\":1}}],[\"是在搜索小程序的时候\",{\"1\":{\"89\":1}}],[\"是为选项式\",{\"1\":{\"500\":1}}],[\"是所有的组件都需要拥有的\",{\"1\":{\"499\":1}}],[\"是创建可重用组件逻辑的主要方式\",{\"1\":{\"496\":1}}],[\"是什么作用\",{\"0\":{\"460\":1}}],[\"是过滤的意思\",{\"1\":{\"459\":1}}],[\"是允许template中有多个根元素\",{\"1\":{\"437\":2}}],[\"是用来创建一个浅层的\",{\"1\":{\"358\":1}}],[\"是用于从\",{\"1\":{\"696\":1}}],[\"是用于服务器端渲染的版本\",{\"1\":{\"250\":1}}],[\"是用于构建工具\",{\"1\":{\"250\":1}}],[\"是用于原生\",{\"1\":{\"250\":1}}],[\"是用于直接在浏览器中引入的全局版本\",{\"1\":{\"250\":1}}],[\"是响应式的\",{\"1\":{\"349\":2}}],[\"是以\",{\"1\":{\"347\":1}}],[\"是指开发服务器\",{\"1\":{\"252\":1}}],[\"是源文件的目录\",{\"1\":{\"242\":1}}],[\"是不是很像\",{\"1\":{\"611\":1}}],[\"是不会深度监听的\",{\"1\":{\"381\":1}}],[\"是不会有任何动画效果的\",{\"1\":{\"154\":1}}],[\"是不可以的\",{\"1\":{\"211\":1}}],[\"是seajs在推广过程中对模块定义的规范化产出\",{\"1\":{\"195\":1}}],[\"是requirejs在推广过程中对模块定义的规范化产出\",{\"1\":{\"195\":1}}],[\"是做什么的\",{\"1\":{\"155\":1}}],[\"是否禁用\",{\"1\":{\"418\":1}}],[\"是否立即执行\",{\"1\":{\"381\":1}}],[\"是否深度监听\",{\"1\":{\"381\":1}}],[\"是否可行呢\",{\"1\":{\"377\":1}}],[\"是否必须\",{\"1\":{\"305\":1,\"321\":1}}],[\"是否是必须的\",{\"1\":{\"303\":1,\"319\":1}}],[\"是否启动gzip压缩\",{\"1\":{\"259\":1}}],[\"是否启用插件功能页\",{\"1\":{\"139\":1}}],[\"是否自动打开浏览器\",{\"1\":{\"259\":1}}],[\"是否自动切换\",{\"1\":{\"123\":1}}],[\"是否开启热更新\",{\"1\":{\"256\":1,\"259\":1}}],[\"是否开启当前页面下拉刷新\",{\"1\":{\"146\":1}}],[\"是否开启全局的下拉刷新\",{\"1\":{\"142\":1}}],[\"是否开启\",{\"1\":{\"139\":1}}],[\"是否采用衔接滑动\",{\"1\":{\"123\":1}}],[\"是否显示面板指示点\",{\"1\":{\"123\":1}}],[\"是否格式化一些文件中被嵌入的代码片段的风格\",{\"1\":{\"59\":1}}],[\"是一回事\",{\"1\":{\"546\":1}}],[\"是一套用于构建用户界面的渐进式框架\",{\"1\":{\"518\":1}}],[\"是一套样式语言\",{\"1\":{\"147\":1}}],[\"是一系列\",{\"1\":{\"347\":1}}],[\"是一项实验性功能\",{\"1\":{\"283\":1}}],[\"是一组预先配置的转换规则\",{\"1\":{\"244\":1}}],[\"是一组数据\",{\"1\":{\"118\":1}}],[\"是一个专为\",{\"1\":{\"591\":1,\"688\":1}}],[\"是一个顶层的\",{\"1\":{\"557\":1}}],[\"是一个在\",{\"1\":{\"505\":1}}],[\"是一个利用\",{\"1\":{\"502\":1}}],[\"是一个事件修饰符\",{\"1\":{\"450\":1}}],[\"是一个表达式\",{\"1\":{\"430\":1}}],[\"是一个函数\",{\"1\":{\"354\":1}}],[\"是一个追踪着\",{\"1\":{\"349\":1}}],[\"是一个外层包装过的组件\",{\"1\":{\"282\":1}}],[\"是一个基于\",{\"1\":{\"266\":1}}],[\"是一个socket的长连接\",{\"1\":{\"258\":1}}],[\"是一个非常流行的工具\",{\"1\":{\"241\":1}}],[\"是一个用于\",{\"1\":{\"238\":1}}],[\"是一个用于现代\",{\"1\":{\"204\":1}}],[\"是一个webpack内置的插件\",{\"1\":{\"237\":1}}],[\"是一个\",{\"1\":{\"223\":1,\"241\":1,\"508\":1}}],[\"是一个内置组件\",{\"1\":{\"155\":1,\"278\":1,\"283\":1,\"418\":1}}],[\"是一种处理异步操作并提交\",{\"1\":{\"695\":1}}],[\"是一种web应用程序的架构模式\",{\"1\":{\"538\":1}}],[\"是一种特殊的文件格式\",{\"1\":{\"531\":1}}],[\"是一种常见的网络应用程序架构\",{\"1\":{\"262\":1}}],[\"是一种项目代码管理方式\",{\"1\":{\"249\":1}}],[\"是一种具有明确建议的工具\",{\"1\":{\"178\":1}}],[\"是一种新型前端构建工具\",{\"1\":{\"178\":1}}],[\"是一种不需要下载安装即可使用的应用\",{\"1\":{\"76\":1}}],[\"是内联在\",{\"1\":{\"107\":1}}],[\"是\",{\"1\":{\"97\":1,\"125\":1,\"139\":2,\"143\":6,\"215\":1,\"250\":1,\"263\":1,\"264\":1,\"337\":1,\"347\":1,\"393\":1,\"531\":1,\"539\":1,\"540\":2,\"547\":1,\"580\":1}}],[\"是全部页面共享的\",{\"1\":{\"93\":1}}],[\"是基于\",{\"1\":{\"70\":1}}],[\"是私有的\",{\"1\":{\"38\":1}}],[\"是ts的超集\",{\"1\":{\"1\":1}}],[\"只会运行一次\",{\"1\":{\"505\":1}}],[\"只会搜索\",{\"1\":{\"264\":1}}],[\"只当点击鼠标中键时触发\",{\"1\":{\"447\":1,\"450\":1}}],[\"只当点击鼠标右键时触发\",{\"1\":{\"447\":1,\"450\":1}}],[\"只当点击鼠标左键时触发\",{\"1\":{\"447\":1,\"450\":1}}],[\"只当事件是从侦听器绑定的元素本身触发时才触发回调\",{\"1\":{\"447\":1,\"450\":1}}],[\"只触发一次回调\",{\"1\":{\"447\":1,\"450\":1}}],[\"只调用一次\",{\"1\":{\"407\":1}}],[\"只读代理是深层的\",{\"1\":{\"361\":1}}],[\"只检查第一层\",{\"1\":{\"354\":1}}],[\"只响应第一层\",{\"1\":{\"354\":1}}],[\"只更新需要变化的内容\",{\"1\":{\"255\":1}}],[\"只要分模块\",{\"1\":{\"672\":1}}],[\"只要state值变化\",{\"1\":{\"620\":1,\"693\":1}}],[\"只要你得到的是一个promise\",{\"1\":{\"584\":1}}],[\"只要他们处于同一条组件链上\",{\"1\":{\"384\":1}}],[\"只要出现多个插槽\",{\"1\":{\"297\":1}}],[\"只要有一个发生了更新\",{\"1\":{\"253\":1}}],[\"只要确保任一时刻只会有一个元素被渲染即可\",{\"1\":{\"166\":1}}],[\"只是一个组件配置对象\",{\"1\":{\"540\":1}}],[\"只是通过css的display属性来进行\",{\"1\":{\"455\":1}}],[\"只是暴露了极少数的配置项和plugin接口\",{\"1\":{\"183\":1}}],[\"只是页面\",{\"1\":{\"118\":1}}],[\"只需要一个getter方法即可\",{\"1\":{\"474\":1}}],[\"只需要将\",{\"1\":{\"289\":1}}],[\"只需要将整个项目目录复制到其他环境中\",{\"1\":{\"209\":1}}],[\"只需要直接导入即可\",{\"1\":{\"191\":1}}],[\"只需要安装postcss\",{\"1\":{\"188\":1}}],[\"只需要在逻辑层修改数据\",{\"1\":{\"91\":1}}],[\"只需执行初始化命令\",{\"1\":{\"183\":1}}],[\"只作用在对应的页面\",{\"1\":{\"152\":1}}],[\"只在进入路由时触发\",{\"1\":{\"561\":1}}],[\"只在\",{\"1\":{\"146\":1}}],[\"只在页面配置中有效\",{\"1\":{\"146\":1}}],[\"只保留右上角胶囊按钮\",{\"1\":{\"142\":1,\"146\":1}}],[\"只保证图片的短边能完全显示出来\",{\"1\":{\"132\":1}}],[\"只显示图片的右下边区域\",{\"1\":{\"132\":1}}],[\"只显示图片的右上边区域\",{\"1\":{\"132\":1}}],[\"只显示图片的右边区域\",{\"1\":{\"132\":1}}],[\"只显示图片的左下边区域\",{\"1\":{\"132\":1}}],[\"只显示图片的左上边区域\",{\"1\":{\"132\":1}}],[\"只显示图片的左边区域\",{\"1\":{\"132\":1}}],[\"只显示图片的中间区域\",{\"1\":{\"132\":1}}],[\"只显示图片的底部区域\",{\"1\":{\"132\":1}}],[\"只显示图片的顶部区域\",{\"1\":{\"132\":1}}],[\"只能接收一个参数值\",{\"1\":{\"633\":1}}],[\"只能写同步代码\",{\"1\":{\"625\":1}}],[\"只能在当前组件中使用\",{\"1\":{\"409\":1}}],[\"只能通过本地访问\",{\"1\":{\"260\":1}}],[\"只能配置最少\",{\"1\":{\"143\":1}}],[\"只能是一个单一字段的绑定\",{\"1\":{\"110\":1}}],[\"只能从组件内部访问\",{\"1\":{\"38\":1}}],[\"只有state变成函数形式\",{\"1\":{\"668\":1}}],[\"只有一个路由的以下路由\",{\"1\":{\"573\":1}}],[\"只有一点不同\",{\"1\":{\"160\":1}}],[\"只有经过身份验证的用户才能创建帖子\",{\"1\":{\"569\":1}}],[\"只有当这是一个\",{\"1\":{\"571\":1}}],[\"只有当被侦听的源发\",{\"1\":{\"378\":1}}],[\"只有当默认插槽的根节点被替换时\",{\"1\":{\"283\":1}}],[\"只有收集的依赖发生变化时\",{\"1\":{\"374\":1}}],[\"只有组件\",{\"1\":{\"119\":1}}],[\"只有这两个文件支持\",{\"1\":{\"73\":1}}],[\"只有在文章详情页查看\",{\"1\":{\"593\":1,\"690\":1}}],[\"只有在挂载完成后才能拿到值\",{\"1\":{\"369\":1}}],[\"只有在注册的组件中才能使用的组件\",{\"1\":{\"336\":1}}],[\"只有在\",{\"1\":{\"73\":1}}],[\"只有点击上面非嵌套属性时才会触发视图整体更新\",{\"1\":{\"38\":1}}],[\"只创建了一个childitem组件\",{\"1\":{\"17\":1}}],[\"go\",{\"1\":{\"552\":6}}],[\"goodslist\",{\"1\":{\"651\":2,\"652\":1,\"657\":2,\"668\":4,\"674\":3,\"696\":2}}],[\"goodsstore\",{\"1\":{\"583\":2}}],[\"goodsname\",{\"1\":{\"583\":2}}],[\"goods\",{\"1\":{\"583\":3,\"652\":1,\"657\":5,\"668\":5,\"696\":5}}],[\"good\",{\"1\":{\"559\":1}}],[\"goodbyemina\",{\"1\":{\"97\":1}}],[\"google\",{\"1\":{\"261\":1}}],[\"globoptions\",{\"1\":{\"238\":2}}],[\"globalproperties\",{\"1\":{\"314\":3,\"331\":3,\"423\":1}}],[\"globalvar\",{\"1\":{\"189\":1}}],[\"globaldata++\",{\"1\":{\"98\":1}}],[\"globaldata\",{\"1\":{\"93\":2,\"98\":3}}],[\"global\",{\"1\":{\"59\":1,\"93\":2,\"98\":1,\"250\":1,\"266\":1,\"267\":2,\"532\":2}}],[\"globals\",{\"1\":{\"59\":1,\"251\":1}}],[\"gender\",{\"1\":{\"483\":4}}],[\"generation\",{\"1\":{\"246\":1,\"247\":1}}],[\"generator\",{\"1\":{\"224\":1,\"227\":1,\"232\":1,\"428\":1}}],[\"getroutes\",{\"1\":{\"575\":1,\"578\":1}}],[\"getresult\",{\"1\":{\"471\":2,\"473\":4}}],[\"getreversemessage\",{\"1\":{\"430\":2,\"471\":2}}],[\"getelementbyid\",{\"1\":{\"571\":1}}],[\"getitem\",{\"1\":{\"568\":1}}],[\"getinstance\",{\"1\":{\"137\":1}}],[\"getfullname\",{\"1\":{\"471\":2,\"473\":7}}],[\"getfinalstyleobj\",{\"1\":{\"443\":2}}],[\"getclassobj\",{\"1\":{\"440\":2}}],[\"getcurrentpages\",{\"1\":{\"92\":1}}],[\"getters的名字冲突\",{\"1\":{\"677\":1}}],[\"getters里计算属性名\",{\"1\":{\"663\":1,\"682\":2}}],[\"getters里的计算属性名\",{\"1\":{\"661\":1,\"697\":1}}],[\"getters如何使用\",{\"1\":{\"663\":1}}],[\"getters使用方式修改\",{\"0\":{\"682\":1}}],[\"getters使用\",{\"0\":{\"659\":1}}],[\"getters有什么用\",{\"1\":{\"658\":1}}],[\"getters概念\",{\"0\":{\"656\":1},\"1\":{\"655\":1}}],[\"getters定义\",{\"0\":{\"654\":1}}],[\"getters传参\",{\"1\":{\"583\":1}}],[\"getters\",{\"0\":{\"583\":1,\"696\":1},\"1\":{\"581\":2,\"583\":6,\"597\":1,\"599\":1,\"656\":1,\"657\":2,\"661\":1,\"662\":1,\"663\":1,\"668\":2,\"670\":1,\"678\":1,\"682\":2,\"696\":4,\"697\":1,\"698\":1}}],[\"getter方法\",{\"1\":{\"474\":1}}],[\"getter\",{\"0\":{\"474\":1},\"1\":{\"343\":1,\"365\":1,\"468\":1,\"505\":3,\"508\":6,\"520\":1,\"584\":1}}],[\"gettabbar\",{\"1\":{\"135\":2,\"136\":1,\"137\":7}}],[\"getdebugpath\",{\"1\":{\"197\":1}}],[\"getmax\",{\"1\":{\"109\":6}}],[\"get\",{\"1\":{\"98\":2,\"201\":1,\"251\":1,\"263\":1,\"343\":2,\"344\":2,\"357\":1,\"359\":2,\"365\":1,\"367\":1,\"469\":1,\"474\":1,\"577\":4,\"578\":1,\"618\":1,\"631\":1}}],[\"getapp\",{\"1\":{\"92\":1,\"93\":2,\"98\":3}}],[\"g|png|gif|svg\",{\"1\":{\"224\":1,\"225\":1,\"232\":1}}],[\"g|gif|svg|ico|webp\",{\"1\":{\"198\":1}}],[\"guards\",{\"1\":{\"558\":1,\"571\":1}}],[\"gulp\",{\"1\":{\"180\":1}}],[\"guide\",{\"1\":{\"59\":2,\"155\":1,\"177\":1,\"278\":1,\"281\":1,\"283\":1,\"284\":1,\"285\":1,\"336\":1,\"343\":1,\"347\":1,\"357\":1,\"423\":1,\"483\":1,\"501\":1,\"531\":1,\"546\":1,\"558\":1}}],[\"guides\",{\"1\":{\"17\":1,\"35\":1}}],[\"gui\",{\"1\":{\"58\":1}}],[\"gsap是the\",{\"1\":{\"171\":1}}],[\"gsap\",{\"0\":{\"171\":1,\"172\":1},\"1\":{\"171\":7,\"172\":3,\"176\":4}}],[\"gradient\",{\"1\":{\"288\":1,\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1}}],[\"graph\",{\"1\":{\"204\":1}}],[\"greetingmessage\",{\"1\":{\"294\":4}}],[\"greet\",{\"1\":{\"241\":5}}],[\"greensock动画平台\",{\"1\":{\"171\":1}}],[\"greensock\",{\"1\":{\"168\":1,\"171\":1}}],[\"green\",{\"1\":{\"106\":1,\"419\":1,\"420\":1,\"421\":1}}],[\"grid\",{\"1\":{\"223\":1}}],[\"group>\",{\"1\":{\"174\":1,\"176\":1}}],[\"group\",{\"1\":{\"154\":1,\"174\":1,\"176\":1}}],[\"groups\",{\"1\":{\"59\":1}}],[\"gideon\",{\"1\":{\"105\":1}}],[\"gionee\",{\"1\":{\"69\":1}}],[\"gitignore\",{\"1\":{\"269\":1}}],[\"githubusercontent\",{\"1\":{\"438\":1}}],[\"github\",{\"1\":{\"68\":2,\"237\":1,\"246\":1,\"251\":1,\"692\":2}}],[\"gitee\",{\"1\":{\"68\":2,\"686\":1}}],[\"g\",{\"1\":{\"68\":1,\"185\":1,\"267\":2,\"532\":1}}],[\"gf\",{\"1\":{\"38\":9}}],[\"管理组件拥有的状态\",{\"0\":{\"37\":1}}],[\"初始值\",{\"1\":{\"615\":1}}],[\"初始渲染缓存不会被自动启用\",{\"1\":{\"118\":1}}],[\"初始渲染缓存的方式\",{\"1\":{\"118\":1}}],[\"初始渲染缓存记录的是页面\",{\"1\":{\"117\":1}}],[\"初始渲染缓存\",{\"0\":{\"115\":1}}],[\"初始化新的工程\",{\"1\":{\"602\":1}}],[\"初始化页面\",{\"1\":{\"115\":1}}],[\"初始化\",{\"1\":{\"59\":1}}],[\"初始化也可选择使用命名参数机制从父组件完成初始化\",{\"1\":{\"38\":1}}],[\"初始化子组件对应的状态变量\",{\"1\":{\"36\":1}}],[\"初始化子节点\",{\"1\":{\"36\":1}}],[\"初次体验建议选择\",{\"1\":{\"68\":1}}],[\"初识arkts语言\",{\"0\":{\"0\":1}}],[\"它接收\",{\"1\":{\"694\":1}}],[\"它采用集中式存储管理数据\",{\"1\":{\"591\":1,\"688\":1}}],[\"它让你可以自定义路由切换时页面如何滚动\",{\"1\":{\"571\":1}}],[\"它让我们可以在组件树上层等待下层的多个嵌套异步依赖项解析完成\",{\"1\":{\"283\":1}}],[\"它仍然是被支持的\",{\"1\":{\"559\":1}}],[\"它仍然会出现在打包后的\",{\"1\":{\"338\":1}}],[\"它渲染顶层路由匹配的组件\",{\"1\":{\"557\":1}}],[\"它取代了当前的条目\",{\"1\":{\"553\":1}}],[\"它在导航时不会向\",{\"1\":{\"553\":1}}],[\"它在接收一些输入后立刻返回所期望的输出\",{\"1\":{\"502\":1}}],[\"它应该对所有用户进行渲染\",{\"1\":{\"544\":1}}],[\"它应该被写为\",{\"1\":{\"278\":1}}],[\"它与\",{\"1\":{\"539\":1}}],[\"它更小巧\",{\"1\":{\"530\":1}}],[\"它就应该在\",{\"1\":{\"510\":1}}],[\"它有两种编写方式\",{\"1\":{\"423\":1}}],[\"它都可用\",{\"1\":{\"408\":1}}],[\"它需要一个工厂函数\",{\"1\":{\"359\":1}}],[\"它依然是一个\",{\"1\":{\"355\":1}}],[\"它内部的值是在ref的\",{\"1\":{\"355\":1}}],[\"它跟踪其自身\",{\"1\":{\"354\":1}}],[\"它要求我们必须传入的是一个对象或者数组类型\",{\"1\":{\"353\":1}}],[\"它里面包含三个属性\",{\"1\":{\"349\":1}}],[\"它允许你用一个\",{\"1\":{\"582\":1}}],[\"它允许你跨组件或页面共享状态\",{\"1\":{\"580\":1}}],[\"它允许你在任何组件中触发事件并在其他组件中监听和响应这些事件\",{\"1\":{\"314\":1,\"331\":1}}],[\"它允许您以编程方式直接引用和操作这些组件或元素\",{\"1\":{\"342\":1}}],[\"它允许您使用最新的\",{\"1\":{\"223\":1}}],[\"它允许父组件向子组件传递数据\",{\"1\":{\"302\":1,\"318\":1}}],[\"它不一定会最终成为稳定功能\",{\"1\":{\"283\":1}}],[\"它不会渲染一个元素的包裹器\",{\"1\":{\"173\":1}}],[\"它添加了类型注解和其他特性\",{\"1\":{\"268\":1}}],[\"它也让我们能够把组件逻辑提取到可复用的单元里\",{\"1\":{\"514\":1}}],[\"它也会返回\",{\"1\":{\"354\":1}}],[\"它也为每个工具提供了调整配置的灵活性\",{\"1\":{\"266\":1}}],[\"它也是大部分状态变量的数据源\",{\"1\":{\"38\":1}}],[\"它确保了各种构建工具能够基于智能的默认配置即可平稳衔接\",{\"1\":{\"266\":1}}],[\"它可能匹配多个路由记录\",{\"1\":{\"569\":1}}],[\"它可能在\",{\"1\":{\"264\":1}}],[\"它可以返回所需的位置描述符\",{\"1\":{\"571\":1}}],[\"它可以访问组件实例\",{\"1\":{\"563\":1}}],[\"它可以出现多于一次\",{\"1\":{\"559\":1}}],[\"它可以在组件编译完毕前隐藏原始模板\",{\"1\":{\"436\":1}}],[\"它可以将一个组件内部的一部分模板\",{\"1\":{\"418\":1}}],[\"它可以将客户端的请求转发到另一个服务器进行处理\",{\"1\":{\"262\":1}}],[\"它可以将\",{\"1\":{\"244\":3}}],[\"它可以将进入和离开动画应用到通过默认插槽传递给它的元素或组件上\",{\"1\":{\"155\":1}}],[\"它可以帮助我们将一些现代的css特性\",{\"1\":{\"223\":1}}],[\"它可以通过javascript为css属性\",{\"1\":{\"171\":1}}],[\"它可以应用到所有的wxml文件中\",{\"1\":{\"87\":1}}],[\"它只能通过本地计算机或设备上的回环接口进行访问\",{\"1\":{\"260\":1}}],[\"它通常映射到回环地址\",{\"1\":{\"260\":1}}],[\"它通过动态加载页面内容\",{\"1\":{\"538\":1}}],[\"它通过以下几个方面实现了对复杂应用的优化\",{\"1\":{\"33\":1}}],[\"它通过pageability\",{\"1\":{\"32\":1}}],[\"它还支持一些其他功能\",{\"1\":{\"252\":1}}],[\"它还支持将\",{\"1\":{\"241\":1}}],[\"它是一个非递归合并所有\",{\"1\":{\"569\":1}}],[\"它是一个概括性的术语\",{\"1\":{\"347\":1}}],[\"它是\",{\"1\":{\"250\":1}}],[\"它是与babel配合使用的常用工具之一\",{\"1\":{\"248\":1}}],[\"它能够准确地描述源代码的语法和语义\",{\"1\":{\"247\":1}}],[\"它能够准确地描述代码的语法和语义\",{\"1\":{\"246\":1}}],[\"它根据你在\",{\"1\":{\"244\":1}}],[\"它将在跟踪到的任何依赖项更改时重新运行\",{\"1\":{\"505\":1}}],[\"它将在内部组件加载时先行显示\",{\"1\":{\"282\":1}}],[\"它将监听所有可用的网络接口\",{\"1\":{\"260\":1}}],[\"它将使用\",{\"1\":{\"223\":1}}],[\"它将返回目标对象\",{\"1\":{\"49\":1}}],[\"它们在开发过程中可以帮助我们跟踪状态的变化\",{\"1\":{\"694\":1}}],[\"它们可以通过\",{\"1\":{\"584\":1}}],[\"它们可以执行各种任务\",{\"1\":{\"214\":1}}],[\"它们只注册一个新的路由\",{\"1\":{\"573\":1}}],[\"它们只有在\",{\"1\":{\"561\":1}}],[\"它们也反映了\",{\"1\":{\"560\":1}}],[\"它们也只能被同步调用\",{\"1\":{\"511\":1}}],[\"它们对于分析\",{\"1\":{\"560\":1}}],[\"它们会映射到\",{\"1\":{\"544\":1}}],[\"它们会被添加到mycomponent的根元素上\",{\"1\":{\"307\":1,\"323\":1}}],[\"它们将使用一定的选项合并逻辑与最终的选项进行合并\",{\"1\":{\"497\":1}}],[\"它们将会被逐一调用\",{\"1\":{\"478\":1}}],[\"它们最终在vue中表示出来的都是一个个vnode\",{\"1\":{\"461\":1}}],[\"它们总是会随着组件自身的更新而更新\",{\"1\":{\"349\":1}}],[\"它们的\",{\"1\":{\"338\":1}}],[\"它们存在如下关系\",{\"1\":{\"301\":1,\"317\":1}}],[\"它们仍然可以有异步组件作为后代\",{\"1\":{\"284\":1}}],[\"它们两个有什么区别呢\",{\"1\":{\"249\":1}}],[\"它们都是离不开babel的\",{\"1\":{\"241\":1}}],[\"它们如何可以自动转换呢\",{\"1\":{\"218\":1}}],[\"它们作为webpack的一部分\",{\"1\":{\"214\":1}}],[\"它们均为静态资源\",{\"1\":{\"204\":1}}],[\"它被拆分成\",{\"1\":{\"199\":1}}],[\"它省略了开发环境的打包过程\",{\"1\":{\"178\":1}}],[\"它使用\",{\"1\":{\"178\":1}}],[\"它使用了不同的持续时间和速度曲线来过渡多个属性\",{\"1\":{\"159\":1}}],[\"它基于\",{\"1\":{\"178\":1,\"540\":1}}],[\"它主要由两部分组成\",{\"1\":{\"178\":1}}],[\"它会中断当前的导航\",{\"1\":{\"559\":1}}],[\"它会原样返回参数\",{\"1\":{\"505\":1}}],[\"它会调用函数并返回其返回值\",{\"1\":{\"505\":1}}],[\"它会返回\",{\"1\":{\"505\":1}}],[\"它会是这样的\",{\"1\":{\"503\":1}}],[\"它会自动将\",{\"1\":{\"489\":1}}],[\"它会自动解包\",{\"1\":{\"357\":1}}],[\"它会基于key的变化重新排列元素顺序\",{\"1\":{\"460\":1}}],[\"它会先执行该元素上的事件处理函数\",{\"1\":{\"450\":1}}],[\"它会被自动聚焦\",{\"1\":{\"410\":1}}],[\"它会被添加一个使其位移的\",{\"1\":{\"175\":1}}],[\"它会将接收到的\",{\"1\":{\"282\":1}}],[\"它会根据组件的\",{\"1\":{\"279\":1}}],[\"它会根据更新代码进行处理\",{\"1\":{\"258\":1}}],[\"它会帮助你分析包中包含的模块们的大小\",{\"1\":{\"271\":1}}],[\"它会在自己的上层作用于中来查找this\",{\"1\":{\"529\":1}}],[\"它会在元素\",{\"1\":{\"377\":2}}],[\"它会在元素改变位置的过程中应用\",{\"1\":{\"175\":1}}],[\"它会在内部从一个或多个入口点构建一个\",{\"1\":{\"204\":1}}],[\"它会直接使用esbuild来完成编译\",{\"1\":{\"191\":1}}],[\"它的作用类似于\",{\"1\":{\"553\":1}}],[\"它的工作方式类似于\",{\"1\":{\"505\":1}}],[\"它的工作原理如下\",{\"1\":{\"115\":1}}],[\"它的设计目的是将\",{\"1\":{\"505\":1}}],[\"它的默认值是一个空对象\",{\"1\":{\"489\":1}}],[\"它的默认值是pre\",{\"1\":{\"377\":1}}],[\"它的dom实际都是有渲染的\",{\"1\":{\"455\":1}}],[\"它的优点是使组件之间的依赖关系更加明确\",{\"1\":{\"338\":1}}],[\"它的模板是一个<div>元素\",{\"1\":{\"307\":1,\"323\":1}}],[\"它的功能是在多个组件间动态切换时缓存被移除的组件实例\",{\"1\":{\"278\":1}}],[\"它的\",{\"1\":{\"271\":1,\"361\":1,\"544\":1}}],[\"它的目的设置代理来解决跨域访问的问题\",{\"1\":{\"262\":1}}],[\"它的主要功能是将单个文件或整个目录复制到构建目录\",{\"1\":{\"238\":1}}],[\"它的改变永远不会引起ui的刷新\",{\"1\":{\"36\":1}}],[\"它自动做了适配\",{\"1\":{\"87\":1}}],[\"它实现了应用\",{\"1\":{\"76\":1}}],[\"通信方案\",{\"0\":{\"590\":1}}],[\"通配符\",{\"1\":{\"539\":1}}],[\"通用的plugin接口\",{\"1\":{\"179\":1}}],[\"通过definestore\",{\"1\":{\"581\":1}}],[\"通过调用\",{\"1\":{\"574\":1}}],[\"通过一个路由地址重定向到一个不同的地址\",{\"1\":{\"559\":1}}],[\"通过编写代码来实现\",{\"1\":{\"549\":1}}],[\"通过传递\",{\"1\":{\"540\":1,\"543\":1}}],[\"通过交叉分析模板和逻辑代码能进行更多编译时优化\",{\"1\":{\"531\":1}}],[\"通过npm包管理工具安装使用它\",{\"1\":{\"522\":1}}],[\"通过抽取组合式函数改善代码结构\",{\"0\":{\"512\":1}}],[\"通过返回值暴露所管理的状态\",{\"1\":{\"503\":1}}],[\"通过对生命周期函数的回调\",{\"1\":{\"492\":1}}],[\"通过索引值获取到对象\",{\"1\":{\"480\":1}}],[\"通过把它们添加到\",{\"1\":{\"423\":1}}],[\"通过this\",{\"1\":{\"342\":2}}],[\"通过template编写自己的模板\",{\"1\":{\"339\":1}}],[\"通过components属性选项来进行注册\",{\"1\":{\"338\":1}}],[\"通过component方法传入组件名称\",{\"1\":{\"337\":1}}],[\"通过全局\",{\"1\":{\"423\":1}}],[\"通过全局事件总线\",{\"1\":{\"314\":1,\"331\":1}}],[\"通过全局函数\",{\"1\":{\"98\":1}}],[\"通过将事件总线实例添加到全局属性中\",{\"1\":{\"314\":1,\"331\":1}}],[\"通过$emit触发事件\",{\"1\":{\"301\":1,\"317\":1}}],[\"通过props属性\",{\"1\":{\"301\":1,\"317\":1}}],[\"通过子组件标签上的\",{\"1\":{\"294\":1}}],[\"通过使用\",{\"1\":{\"574\":1}}],[\"通过使用插槽\",{\"1\":{\"288\":1}}],[\"通过使用这些工具\",{\"1\":{\"257\":1}}],[\"通过v\",{\"1\":{\"274\":1}}],[\"通过vite来启动项目\",{\"1\":{\"185\":1}}],[\"通过设置参数来区分它们\",{\"1\":{\"265\":1}}],[\"通过设置compress选项为true\",{\"1\":{\"261\":1}}],[\"通过设置open选项为true\",{\"1\":{\"261\":1}}],[\"通过设置port选项\",{\"1\":{\"261\":1}}],[\"通过hmr\",{\"1\":{\"258\":1}}],[\"通过长连接\",{\"1\":{\"258\":1}}],[\"通过开发服务器向客户端发送更新的模块代码\",{\"1\":{\"258\":1}}],[\"通过live\",{\"1\":{\"252\":1}}],[\"通过禁用不需要的特性\",{\"1\":{\"251\":1}}],[\"通过正确配置特性标志\",{\"1\":{\"251\":1}}],[\"通过配置\",{\"1\":{\"264\":2}}],[\"通过配置webpack的规则\",{\"1\":{\"248\":1}}],[\"通过配置文件达到一站式配置\",{\"1\":{\"180\":1}}],[\"通过添加一个名称冲突的路由\",{\"1\":{\"574\":1}}],[\"通过添加\",{\"1\":{\"231\":1}}],[\"通过局部安装webpack\",{\"1\":{\"209\":1}}],[\"通过在命令行中使用\",{\"1\":{\"253\":1}}],[\"通过在项目中局部安装webpack\",{\"1\":{\"209\":1}}],[\"通过在一开始将应用中的模块区分为\",{\"1\":{\"197\":1}}],[\"通过sass\",{\"1\":{\"203\":1}}],[\"通过不同的消息触发一些事件\",{\"1\":{\"201\":1}}],[\"通过该数组的值获取判断是否为一个\",{\"1\":{\"197\":1}}],[\"通过下面的代码实现\",{\"1\":{\"154\":1}}],[\"通过资料查询和微信开发者社区询问\",{\"1\":{\"110\":1}}],[\"通过命令行创建\",{\"0\":{\"68\":1},\"1\":{\"66\":1}}],[\"通过\",{\"0\":{\"67\":1},\"1\":{\"66\":1,\"107\":1,\"124\":1,\"135\":1,\"178\":1,\"266\":2,\"475\":1,\"500\":1,\"530\":1,\"540\":2,\"557\":1,\"563\":1}}],[\"通过以下代码\",{\"1\":{\"10\":1}}],[\"通常用来预防用户在还未保存修改前突然离开\",{\"1\":{\"563\":1}}],[\"通常用于前端开发环境\",{\"1\":{\"252\":1}}],[\"通常我们会在这个对象中定义很多的方法\",{\"1\":{\"529\":1}}],[\"通常我们向vue全局添加一些功能时\",{\"1\":{\"423\":1}}],[\"通常使用\",{\"1\":{\"527\":1}}],[\"通常情况下\",{\"1\":{\"526\":1}}],[\"通常成对一起使用\",{\"1\":{\"384\":1}}],[\"通常只在以下情况下使用\",{\"1\":{\"348\":1}}],[\"通常是\",{\"1\":{\"263\":1}}],[\"通常是webpack\",{\"1\":{\"214\":1}}],[\"通常将应用程序绑定到localhost以进行本地开发和测试\",{\"1\":{\"260\":1}}],[\"通常会设置成正则表达式\",{\"1\":{\"215\":1}}],[\"通常命名为webpack\",{\"1\":{\"213\":1}}],[\"通常意义为父组件传给子组件的数据\",{\"1\":{\"36\":1}}],[\"通常应用于辅助计算\",{\"1\":{\"36\":1}}],[\"示例那样\",{\"1\":{\"510\":1}}],[\"示例中看到的一样\",{\"1\":{\"510\":1}}],[\"示例代码\",{\"1\":{\"149\":1}}],[\"示例同上\",{\"1\":{\"36\":1}}],[\"示例\",{\"0\":{\"167\":1},\"1\":{\"36\":4}}],[\"指令名称\",{\"1\":{\"412\":1}}],[\"指令绑定到的元素\",{\"1\":{\"408\":1}}],[\"指令钩子\",{\"0\":{\"408\":1}}],[\"指令\",{\"1\":{\"294\":1,\"423\":1}}],[\"指令的定义对象\",{\"1\":{\"408\":1}}],[\"指令的钩子会传递以下几种参数\",{\"1\":{\"408\":1}}],[\"指令的生命周期\",{\"0\":{\"407\":1}}],[\"指令的值被访问到\",{\"1\":{\"295\":1}}],[\"指令的值\",{\"1\":{\"294\":1}}],[\"指令的\",{\"1\":{\"291\":1}}],[\"指向项目根目录下的\",{\"1\":{\"264\":1}}],[\"指向\",{\"1\":{\"250\":1,\"555\":1}}],[\"指向堆内存的地址\",{\"1\":{\"44\":1}}],[\"指单个仓库中管理多个项目\",{\"1\":{\"249\":1}}],[\"指明\",{\"1\":{\"139\":2}}],[\"指示点颜色\",{\"1\":{\"123\":1}}],[\"指定的组件将会当作第一个\",{\"1\":{\"500\":1}}],[\"指定将其中的内容移动到的目标元素\",{\"1\":{\"418\":1}}],[\"指定ref\",{\"1\":{\"370\":1,\"371\":1}}],[\"指定它需要传递的类型\",{\"1\":{\"303\":1,\"319\":1}}],[\"指定输出目录\",{\"1\":{\"271\":1}}],[\"指定环境模式\",{\"1\":{\"270\":1,\"271\":1,\"272\":1}}],[\"指定端口号为8080\",{\"1\":{\"261\":1}}],[\"指定服务器的ip地址\",{\"1\":{\"259\":1}}],[\"指定哪些模块发生更新时\",{\"1\":{\"256\":1}}],[\"指定哪些页面允许被搜索到\",{\"1\":{\"89\":1}}],[\"指定哪些页面可以被搜索\",{\"1\":{\"89\":1}}],[\"指定静态资源的路径\",{\"1\":{\"252\":1}}],[\"指定使用的插件\",{\"1\":{\"248\":1}}],[\"指定使用升级后的weui样式\",{\"1\":{\"139\":1}}],[\"指定要输出的文件dist\",{\"1\":{\"242\":1}}],[\"指定要输出的文件夹dist\",{\"1\":{\"242\":1}}],[\"指定要使用的解析器\",{\"1\":{\"59\":1,\"60\":1}}],[\"指定我们要使用的模块所在的路径\",{\"1\":{\"236\":1}}],[\"指定配置文件\",{\"0\":{\"212\":1}}],[\"指定小程序的默认启动路径\",{\"1\":{\"140\":1}}],[\"指定需要引用的扩展库\",{\"1\":{\"139\":1}}],[\"指定跳转方式\",{\"1\":{\"130\":1}}],[\"指定是否阻止本节点的祖先节点出现点击态\",{\"1\":{\"121\":1}}],[\"指定按下去的样式类\",{\"1\":{\"121\":1}}],[\"指定页面的初始数据\",{\"1\":{\"94\":1}}],[\"指定\",{\"1\":{\"59\":1,\"270\":2}}],[\"指定如何解析语法\",{\"1\":{\"59\":1}}],[\"指定node目录即可\",{\"1\":{\"26\":1}}],[\"指的是创建新的数据\",{\"1\":{\"46\":1}}],[\"指驱动ui更新的数据\",{\"1\":{\"35\":1}}],[\"指将build方法内的ui描述和\",{\"1\":{\"35\":1}}],[\"用getters的2种方式\",{\"0\":{\"697\":1}}],[\"用这种语法的话\",{\"1\":{\"582\":1}}],[\"用这个来开始离开动画\",{\"1\":{\"168\":1}}],[\"用这个来开始进入动画\",{\"1\":{\"168\":1}}],[\"用这个来设置元素的\",{\"1\":{\"168\":1}}],[\"用一种标准化的方式\",{\"1\":{\"559\":2}}],[\"用冒号\",{\"1\":{\"544\":1}}],[\"用多个较小且逻辑独立的单元来组合形成复杂的逻辑\",{\"1\":{\"503\":1}}],[\"用途\",{\"1\":{\"437\":1}}],[\"用数组或对象的形式书写\",{\"1\":{\"391\":1}}],[\"用readonly包裹一下\",{\"1\":{\"384\":1}}],[\"用来暴露数据\",{\"1\":{\"405\":1}}],[\"用来发射事件给父组件\",{\"1\":{\"404\":1}}],[\"用来接收从父组件传递过来的数据\",{\"1\":{\"403\":1}}],[\"用来做响应性追踪\",{\"1\":{\"361\":1}}],[\"用来给各个插槽分配唯一的\",{\"1\":{\"291\":1}}],[\"用来在组件树中协调对异步依赖的处理\",{\"1\":{\"283\":1}}],[\"用来配置那些文件不归git管理\",{\"1\":{\"269\":1}}],[\"用来配置代理\",{\"1\":{\"259\":1}}],[\"用来指定静态资源的根目录\",{\"1\":{\"256\":1,\"259\":1}}],[\"用来指定打包后的代码在哪个环境下运行\",{\"1\":{\"256\":1,\"259\":1}}],[\"用来决定\",{\"1\":{\"147\":1}}],[\"用法如下\",{\"1\":{\"475\":1}}],[\"用法\",{\"1\":{\"267\":1,\"270\":1,\"271\":1,\"272\":1,\"437\":1,\"447\":1}}],[\"用法二\",{\"1\":{\"170\":1}}],[\"用法一\",{\"1\":{\"170\":1}}],[\"用自定义组件的方式编写即可\",{\"1\":{\"136\":1}}],[\"用方法的话\",{\"1\":{\"130\":1}}],[\"用\",{\"0\":{\"70\":1},\"1\":{\"93\":1,\"149\":1,\"540\":1,\"547\":2,\"548\":1}}],[\"用户模块对象\",{\"1\":{\"668\":2}}],[\"用户名存在vuex中\",{\"1\":{\"593\":1,\"690\":1}}],[\"用户名\",{\"1\":{\"578\":1}}],[\"用户可能先看到的是还没编译完成的双大括号标签\",{\"1\":{\"436\":1}}],[\"用户在下载对应的javascript时也会增加包\",{\"1\":{\"338\":1}}],[\"用户将看到小程序的标准载入画面\",{\"1\":{\"115\":1}}],[\"用户扫一扫或搜一下即可打开应用\",{\"1\":{\"76\":1}}],[\"用户通过触发组件的事件方法\",{\"1\":{\"35\":1}}],[\"用户构建了一个ui模型\",{\"1\":{\"35\":1}}],[\"用于处理异步操作并提交\",{\"1\":{\"694\":1}}],[\"用于确定当前活跃的组件实例的上下文\",{\"1\":{\"511\":1}}],[\"用于可能会想要添加一些属于自己的代码逻辑\",{\"1\":{\"492\":1}}],[\"用于声明在数据更改时调用的侦听回调\",{\"1\":{\"475\":1}}],[\"用于阻止事件冒泡\",{\"1\":{\"450\":1}}],[\"用于隐藏尚未完成编译的\",{\"1\":{\"436\":1}}],[\"用于更新元素的\",{\"1\":{\"434\":1}}],[\"用于原生元素\",{\"1\":{\"386\":1}}],[\"用于手动触发与\",{\"1\":{\"358\":1}}],[\"用于创建一个只读的代理对象\",{\"1\":{\"354\":1}}],[\"用于创建模块的别名\",{\"1\":{\"264\":1}}],[\"用于跟踪对象的属性的变化\",{\"1\":{\"354\":1}}],[\"用于模拟用户在应用程序中执行的实际操作\",{\"1\":{\"268\":1}}],[\"用于验证应用程序中各个部分的功能是否按预期工作\",{\"1\":{\"268\":1}}],[\"用于强制执行一致的代码风格和检测潜在的错误\",{\"1\":{\"268\":1}}],[\"用于实现单页面应用程序\",{\"1\":{\"268\":1}}],[\"用于将新版本的javascript代码转换为向后兼容的旧版本\",{\"1\":{\"268\":1}}],[\"用于将特定版本的\",{\"1\":{\"244\":1}}],[\"用于配置在导入模块时\",{\"1\":{\"264\":1}}],[\"用于配置在导入模块时可以省略的文件扩展名\",{\"1\":{\"264\":1}}],[\"用于配置\",{\"1\":{\"264\":1}}],[\"用于配置模块解析的规则\",{\"1\":{\"264\":1}}],[\"用于代替\",{\"1\":{\"263\":1}}],[\"用于控制当使用\",{\"1\":{\"263\":1}}],[\"用于控制vue框架的不同特性的开启和关闭\",{\"1\":{\"251\":1}}],[\"用于与客户端建立websocket通信\",{\"1\":{\"258\":1}}],[\"用于与客户端进行实时通信\",{\"1\":{\"258\":1}}],[\"用于在大型应用程序中管理和共享状态\",{\"1\":{\"268\":1}}],[\"用于在开发过程中启用hmr功能\",{\"1\":{\"257\":1}}],[\"用于在开发过程中提供一个简单的服务器\",{\"1\":{\"252\":1}}],[\"用于在打包过程中对文件进行预处理\",{\"1\":{\"214\":1}}],[\"用于转换\",{\"1\":{\"244\":3}}],[\"用于对\",{\"1\":{\"215\":1}}],[\"用于管理项目的信息\",{\"1\":{\"209\":1}}],[\"用于展示你的内容\",{\"1\":{\"204\":1}}],[\"用于指定符号类型的属性\",{\"1\":{\"306\":1,\"322\":1}}],[\"用于指定函数类型的属性\",{\"1\":{\"306\":1,\"322\":1}}],[\"用于指定日期类型的属性\",{\"1\":{\"306\":1,\"322\":1}}],[\"用于指定对象类型的属性\",{\"1\":{\"306\":1,\"322\":1}}],[\"用于指定数组类型的属性\",{\"1\":{\"306\":1,\"322\":1}}],[\"用于指定数字类型的属性\",{\"1\":{\"306\":1,\"322\":1}}],[\"用于指定布尔类型的属性\",{\"1\":{\"306\":1,\"322\":1}}],[\"用于指定字符串类型的属性\",{\"1\":{\"306\":1,\"322\":1}}],[\"用于指定样式规则\",{\"1\":{\"150\":1}}],[\"用于指定小程序由哪些页面组成\",{\"1\":{\"141\":1}}],[\"用于描述\",{\"1\":{\"147\":1}}],[\"用于设置小程序的状态栏\",{\"1\":{\"142\":1}}],[\"用于双向绑定的表达式有如下限制\",{\"1\":{\"110\":1}}],[\"用于解构赋值\",{\"1\":{\"48\":1}}],[\"用于数组字面量\",{\"1\":{\"48\":1}}],[\"用于函数调用\",{\"1\":{\"48\":1}}],[\"用于存放三方库依赖信息\",{\"1\":{\"34\":1}}],[\"用于存放应用\",{\"1\":{\"34\":1}}],[\"用于存放arkts源码\",{\"1\":{\"34\":1}}],[\"用于标识对应的组件\",{\"1\":{\"17\":1}}],[\"用于访问通过data\",{\"1\":{\"9\":1}}],[\"用于装饰类\",{\"1\":{\"3\":1}}],[\"产品配置等\",{\"1\":{\"34\":1}}],[\"默认hash值路径\",{\"1\":{\"554\":1}}],[\"默认你已经注册了\",{\"1\":{\"543\":1}}],[\"默认传入event对象\",{\"1\":{\"449\":1}}],[\"默认的class和动态的class结合\",{\"1\":{\"440\":1}}],[\"默认的空项目模板\",{\"1\":{\"67\":1}}],[\"默认会利用\",{\"1\":{\"437\":1}}],[\"默认会缓存内部的所有组件实例\",{\"1\":{\"279\":1}}],[\"默认显示时间类型\",{\"1\":{\"415\":1}}],[\"默认实现方式\",{\"0\":{\"410\":1}}],[\"默认插槽和具名插槽混合\",{\"0\":{\"297\":1}}],[\"默认插槽和具名插槽的使用方式有一些小区别\",{\"1\":{\"294\":1}}],[\"默认插件是从此处指定的版本升级上来\",{\"1\":{\"267\":1}}],[\"默认内容\",{\"1\":{\"289\":1}}],[\"默认为false\",{\"1\":{\"251\":1}}],[\"默认为true\",{\"1\":{\"251\":1}}],[\"默认为harmonyos\",{\"1\":{\"34\":1}}],[\"默认不包含模板编译器\",{\"1\":{\"250\":1}}],[\"默认32个字符太长了\",{\"1\":{\"228\":1}}],[\"默认配置必然\",{\"1\":{\"211\":1}}],[\"默认返回\",{\"1\":{\"197\":1}}],[\"默认是浅层的\",{\"1\":{\"477\":1}}],[\"默认是localhost\",{\"1\":{\"259\":1}}],[\"默认是vue3项目\",{\"1\":{\"186\":1}}],[\"默认是navigate\",{\"1\":{\"130\":1}}],[\"默认输出单独的构建模块\",{\"1\":{\"180\":1}}],[\"默认情况下我们的侦听器只会针对监听的数据本身的改变\",{\"1\":{\"477\":1}}],[\"默认情况下它是惰性的\",{\"1\":{\"378\":1}}],[\"默认情况下是8080\",{\"1\":{\"261\":1}}],[\"默认情况下会使用\",{\"1\":{\"250\":1}}],[\"默认情况下url\",{\"1\":{\"225\":1}}],[\"默认情况下\",{\"1\":{\"163\":1,\"173\":1,\"255\":1,\"262\":1,\"264\":1,\"278\":1,\"377\":1,\"433\":1,\"486\":1}}],[\"默认样式\",{\"1\":{\"142\":1,\"146\":1}}],[\"默认关闭\",{\"1\":{\"139\":3}}],[\"默认self\",{\"1\":{\"130\":1}}],[\"默认值等等\",{\"1\":{\"303\":1,\"305\":1,\"319\":1,\"321\":1}}],[\"默认值和其他验证规则\",{\"1\":{\"302\":1,\"318\":1}}],[\"默认值是\",{\"1\":{\"264\":1,\"282\":1}}],[\"默认值是false\",{\"1\":{\"261\":2}}],[\"默认值是localhost\",{\"1\":{\"260\":1}}],[\"默认值\",{\"1\":{\"93\":1,\"121\":1,\"123\":1,\"125\":1,\"126\":1,\"132\":1,\"142\":1,\"143\":1,\"144\":1,\"146\":1,\"270\":5,\"271\":4,\"272\":1,\"305\":1,\"321\":1,\"377\":1,\"384\":1}}],[\"默认2个空格\",{\"1\":{\"59\":1,\"60\":1}}],[\"默认css\",{\"1\":{\"59\":1}}],[\"默认auto\",{\"1\":{\"59\":1}}],[\"默认false\",{\"1\":{\"59\":1}}],[\"默认本地没有任何设备\",{\"1\":{\"30\":1}}],[\"服务器渲染好整个页面\",{\"1\":{\"536\":1}}],[\"服务器会通过正则对该url进行匹配\",{\"1\":{\"536\":1}}],[\"服务器直接生产渲染好对应的html页面\",{\"1\":{\"536\":1}}],[\"服务器可以直接发送文件到客户端\",{\"1\":{\"258\":1}}],[\"服务及插件\",{\"1\":{\"267\":1}}],[\"服务并与服务端建立了连接\",{\"1\":{\"201\":1}}],[\"服务端做的就是监听代码文件的改变\",{\"1\":{\"201\":1}}],[\"服务端\",{\"1\":{\"201\":1}}],[\"服务端发送消息通知客户端去请求修改模块的代码\",{\"1\":{\"201\":1}}],[\"服务端口\",{\"1\":{\"67\":1}}],[\"服务的全局配置信息\",{\"1\":{\"34\":1}}],[\"服务的入口\",{\"1\":{\"34\":1}}],[\"服务在具体设备上的配置信息以及应用\",{\"1\":{\"34\":1}}],[\"服务所用到的资源文件\",{\"1\":{\"34\":1}}],[\"服务包含的页面\",{\"1\":{\"34\":1}}],[\"提交mutation修改state中的数据\",{\"1\":{\"651\":1,\"668\":1}}],[\"提交mutations传入值\",{\"1\":{\"630\":1,\"631\":1}}],[\"提前在路由规则\",{\"1\":{\"547\":1}}],[\"提前展示广告\",{\"1\":{\"115\":1}}],[\"提取store里的state叫count的变量\",{\"1\":{\"619\":1}}],[\"提取\",{\"1\":{\"205\":1}}],[\"提高开发效率\",{\"1\":{\"688\":1}}],[\"提高开发的效率\",{\"1\":{\"203\":1}}],[\"提高传输速度\",{\"1\":{\"261\":1}}],[\"提高了代码的可读性\",{\"1\":{\"33\":1}}],[\"提升用户体验\",{\"1\":{\"115\":1}}],[\"提供的导航守卫主要用来通过跳转或取消的方式守卫导航\",{\"1\":{\"558\":1}}],[\"提供的全局组件\",{\"1\":{\"547\":1}}],[\"提供的基于\",{\"1\":{\"540\":1}}],[\"提供的一种路由模式\",{\"1\":{\"540\":1}}],[\"提供的属性值\",{\"1\":{\"384\":1}}],[\"提供的属性名称\",{\"1\":{\"384\":1}}],[\"提供自动补全和对模板中表达式的类型检查\",{\"1\":{\"531\":1}}],[\"提供自己的\",{\"1\":{\"423\":1}}],[\"提供给浏览器访问\",{\"1\":{\"258\":1}}],[\"提供静态资源的服务\",{\"1\":{\"258\":1}}],[\"提供了两个功能来查看现有的路由\",{\"1\":{\"575\":1}}],[\"提供了内置的支持\",{\"1\":{\"257\":1}}],[\"提供了一个开发服务器\",{\"1\":{\"252\":1}}],[\"提供了\",{\"1\":{\"178\":1,\"282\":1,\"530\":1}}],[\"提供了特定场景的应用组件\",{\"1\":{\"33\":1}}],[\"提供模块化能力\",{\"1\":{\"92\":1}}],[\"提供丰富的\",{\"1\":{\"92\":1}}],[\"提供\",{\"1\":{\"57\":1,\"266\":1}}],[\"使我们能够将一个\",{\"1\":{\"531\":1}}],[\"使我们可以在使用响应式\",{\"1\":{\"347\":1}}],[\"使我们可以在组件各个生命周期阶段添加逻辑\",{\"1\":{\"347\":1}}],[\"使我们可以直接创建响应式状态\",{\"1\":{\"347\":1}}],[\"使我们可以使用函数而不是声明选项的方式书写\",{\"1\":{\"347\":1}}],[\"使我们可以一次定义一个过渡的各个方面\",{\"1\":{\"159\":1}}],[\"使一个组件可以继承另一个组件的组件选项\",{\"1\":{\"500\":1}}],[\"使一个祖先组件作为其后代组件的依赖注入方\",{\"1\":{\"384\":1}}],[\"使其更加灵活\",{\"1\":{\"505\":1}}],[\"使其自身的\",{\"1\":{\"354\":1}}],[\"使其符合统一的样式规范\",{\"1\":{\"268\":1}}],[\"使它们都能按照预期的方式运行\",{\"1\":{\"284\":1}}],[\"使得数据能够按照设定的规则正确地传输到目的地\",{\"1\":{\"535\":1}}],[\"使得在开发过程中可以实时地修改代码并查看更新后的效果\",{\"1\":{\"258\":1}}],[\"使得在浏览器中可以正常运行这些模块化代码\",{\"1\":{\"208\":1}}],[\"使得应用组件可以在不同设备上使用同一套生命周期\",{\"1\":{\"33\":1}}],[\"使图片的长边能完全显示出来\",{\"1\":{\"132\":1}}],[\"使图片的宽高完全拉伸至填满\",{\"1\":{\"132\":1}}],[\"使文本在不换行的情况下继续显示\",{\"1\":{\"124\":1}}],[\"使小程序中的页面支持屏幕旋转的方法是\",{\"1\":{\"113\":1}}],[\"使变量拥有状态属性的装饰器\",{\"1\":{\"38\":1}}],[\"使用devtools调试vuex数据\",{\"0\":{\"684\":1}}],[\"使用dayjs\",{\"1\":{\"416\":1}}],[\"使用2种方式给计算属性值\",{\"1\":{\"662\":1,\"698\":1}}],[\"使用getters的2种方式\",{\"0\":{\"661\":1}}],[\"使用go语言编写的\",{\"1\":{\"196\":1}}],[\"使用actions的2种方式\",{\"0\":{\"641\":1}}],[\"使用actions\",{\"1\":{\"640\":1}}],[\"使用alpha版\",{\"1\":{\"68\":1}}],[\"使用state2种方式\",{\"0\":{\"616\":1}}],[\"使用storetorefs可以保证解构出来的数据也是响应式的\",{\"1\":{\"585\":1}}],[\"使用store\",{\"1\":{\"581\":1}}],[\"使用步骤\",{\"0\":{\"611\":1}}],[\"使用原生\",{\"1\":{\"584\":1}}],[\"使用选项式\",{\"1\":{\"582\":1}}],[\"使用前端路由\",{\"1\":{\"571\":1}}],[\"使用动态过渡名称\",{\"1\":{\"570\":1}}],[\"使用动态导入对懒加载组件进行了内置支持\",{\"1\":{\"284\":1}}],[\"使用和刚才非常相似的片段\",{\"1\":{\"570\":1}}],[\"使用任何自定义过渡和回退到\",{\"1\":{\"570\":1}}],[\"使用任意标签\",{\"1\":{\"527\":1}}],[\"使用例子\",{\"1\":{\"567\":1}}],[\"使用组合\",{\"0\":{\"564\":1}}],[\"使用组合式\",{\"1\":{\"496\":1}}],[\"使用熟悉的\",{\"1\":{\"531\":1}}],[\"使用h函数来编写渲染的内容\",{\"1\":{\"530\":1}}],[\"使用html\",{\"1\":{\"213\":1}}],[\"使用proxy进行数据劫持\",{\"1\":{\"520\":1}}],[\"使用prop的值\",{\"1\":{\"306\":1,\"322\":1}}],[\"使用props选项并传递一个对象来定义message属性\",{\"1\":{\"305\":1,\"321\":1}}],[\"使用props选项并传递一个字符串数组来定义message属性\",{\"1\":{\"304\":1,\"320\":1}}],[\"使用限制\",{\"0\":{\"511\":1}}],[\"使用一个组合式函数来自动帮你做这些事\",{\"1\":{\"510\":1}}],[\"使用一下\",{\"1\":{\"390\":1}}],[\"使用全局的方法\",{\"1\":{\"480\":1}}],[\"使用计算属性\",{\"1\":{\"480\":1}}],[\"使用计算属性computed\",{\"1\":{\"469\":1}}],[\"使用computed\",{\"1\":{\"473\":1}}],[\"使用最多的语法是\",{\"1\":{\"430\":1}}],[\"使用基于html的模板语法\",{\"1\":{\"429\":1}}],[\"使用自定义指令的生命周期\",{\"1\":{\"412\":1}}],[\"使用局部指令\",{\"0\":{\"411\":1}}],[\"使用局部的webpack\",{\"1\":{\"209\":1}}],[\"使用该指令的组件实例\",{\"1\":{\"408\":1}}],[\"使用大括号来嵌入动态值\",{\"1\":{\"393\":1}}],[\"使用torefs包裹需要结构的reactive对象\",{\"1\":{\"363\":1}}],[\"使用的时候是用\",{\"1\":{\"355\":1}}],[\"使用的是live\",{\"1\":{\"255\":1}}],[\"使用ref\",{\"1\":{\"356\":1}}],[\"使用ref对象必须\",{\"1\":{\"59\":1}}],[\"使用reactive\",{\"1\":{\"353\":1}}],[\"使用导出的方法\",{\"1\":{\"350\":1}}],[\"使用导出的变量\",{\"1\":{\"350\":1}}],[\"使用接受过来的参数\",{\"1\":{\"349\":1}}],[\"使用​$root属性访问了根组件实例\",{\"1\":{\"342\":1}}],[\"使用emits选项可以提供类型检查和错误提示\",{\"1\":{\"311\":1,\"327\":1}}],[\"使用eslint进行错误检查\",{\"1\":{\"268\":3}}],[\"使用对象类型的方式\",{\"1\":{\"305\":1,\"321\":1}}],[\"使用字符串数组的方式\",{\"1\":{\"304\":1,\"320\":1}}],[\"使用特殊的元素就可以为封装组件开启一个插槽\",{\"1\":{\"287\":1}}],[\"使用现代模式构建应用\",{\"1\":{\"271\":1}}],[\"使用yarn后自动生成的文件\",{\"1\":{\"269\":1}}],[\"使用指定的\",{\"1\":{\"267\":1}}],[\"使用相同的一个入口配置文件\",{\"1\":{\"265\":1}}],[\"使用哪个字段作为模块的主入口\",{\"1\":{\"264\":1}}],[\"使用mutations的2种方式\",{\"0\":{\"629\":1}}],[\"使用mutations2种方式\",{\"1\":{\"628\":1}}],[\"使用methods\",{\"1\":{\"473\":1}}],[\"使用method对逻辑进行抽取\",{\"0\":{\"471\":1},\"1\":{\"469\":1}}],[\"使用markdown语法进行编写\",{\"1\":{\"269\":1}}],[\"使用md4的散列函数处理\",{\"1\":{\"228\":1}}],[\"使用mini\",{\"1\":{\"213\":1}}],[\"使用babel来处理我们的源代码\",{\"1\":{\"242\":1}}],[\"使用babel\",{\"1\":{\"213\":1,\"248\":1}}],[\"使用简单\",{\"0\":{\"183\":1}}],[\"使用js开发的工具通常需要很长的时间才能启动开发服务器\",{\"1\":{\"182\":1}}],[\"使用v\",{\"1\":{\"447\":1}}],[\"使用vue\",{\"1\":{\"340\":1}}],[\"使用vue3\",{\"1\":{\"68\":2}}],[\"使用vite进行开发\",{\"1\":{\"178\":1}}],[\"使用参考\",{\"1\":{\"170\":1}}],[\"使用到的插件\",{\"1\":{\"139\":1}}],[\"使用竖向滚动时\",{\"1\":{\"124\":1}}],[\"使用\",{\"0\":{\"95\":1,\"136\":1,\"283\":1,\"693\":1},\"1\":{\"97\":1,\"112\":1,\"124\":1,\"137\":1,\"149\":1,\"173\":1,\"186\":2,\"213\":3,\"248\":1,\"254\":2,\"264\":2,\"270\":1,\"291\":1,\"314\":2,\"331\":2,\"335\":2,\"337\":1,\"400\":1,\"405\":1,\"450\":1,\"479\":1,\"520\":1,\"527\":1,\"530\":1,\"531\":1,\"540\":3,\"543\":1,\"550\":1,\"695\":1}}],[\"使用wx提供的api开发\",{\"1\":{\"77\":1}}],[\"使用正式版\",{\"1\":{\"68\":1}}],[\"使用制表符而不是空格缩进行\",{\"1\":{\"59\":1,\"60\":1}}],[\"使用单引号\",{\"1\":{\"59\":1,\"60\":1}}],[\"使用网络图片时\",{\"1\":{\"10\":1}}],[\"使用文本内容创建相应的按钮组件\",{\"1\":{\"8\":1}}],[\"同步流程的代码\",{\"1\":{\"626\":1}}],[\"同步修改state值代码\",{\"1\":{\"624\":1}}],[\"同步修改\",{\"0\":{\"622\":1}}],[\"同步\",{\"1\":{\"597\":1}}],[\"同步加异步\",{\"1\":{\"581\":1}}],[\"同步源\",{\"1\":{\"36\":1}}],[\"同一个路径可能需要多个路由\",{\"1\":{\"555\":1}}],[\"同一个生命周期可以使用多次\",{\"1\":{\"368\":1}}],[\"同样地\",{\"1\":{\"557\":1}}],[\"同样\",{\"1\":{\"550\":1}}],[\"同\",{\"1\":{\"500\":1}}],[\"同意协议\",{\"1\":{\"483\":1}}],[\"同意协议后下一步即可\",{\"1\":{\"26\":1}}],[\"同名的\",{\"1\":{\"437\":1}}],[\"同css的color\",{\"1\":{\"125\":1}}],[\"同时用相同的\",{\"1\":{\"559\":1}}],[\"同时可以看到\",{\"1\":{\"537\":1}}],[\"同时又在同一个仓库下方便管理\",{\"1\":{\"519\":1}}],[\"同时需要\",{\"1\":{\"449\":1}}],[\"同时提供上面提到的一个或多个功能\",{\"1\":{\"423\":1}}],[\"同时具有\",{\"1\":{\"343\":1}}],[\"同时会将不同的元素使用\",{\"1\":{\"287\":1}}],[\"同时实现延迟加载\",{\"1\":{\"282\":1}}],[\"同时显示更新后的效果\",{\"1\":{\"258\":1}}],[\"同时显示的滑块数量\",{\"1\":{\"123\":1}}],[\"同时为了防止重复\",{\"1\":{\"228\":1}}],[\"同时为了更适合开发微信小程序\",{\"1\":{\"147\":1}}],[\"同时它会根据您的目标环境自动添加必要的回退\",{\"1\":{\"223\":1}}],[\"同时也让你对各个loader有一个全局的概览\",{\"1\":{\"215\":1}}],[\"同时也无需在启动开发服务器前进行编译\",{\"1\":{\"182\":1}}],[\"同时hmr更新反应到浏览器的时间会小于50ms\",{\"1\":{\"200\":1}}],[\"同时利用浏览器的缓存\",{\"1\":{\"182\":1}}],[\"同时设置过渡和动画\",{\"0\":{\"162\":1}}],[\"同时其余\",{\"1\":{\"136\":1}}],[\"同时\",{\"1\":{\"110\":1,\"178\":1,\"258\":1,\"262\":1}}],[\"同时接受视图层的事件反馈\",{\"1\":{\"92\":1}}],[\"同时减少了内存占用\",{\"1\":{\"33\":1}}],[\"多选框\",{\"1\":{\"483\":1}}],[\"多次使用方法的时候\",{\"1\":{\"471\":1}}],[\"多次使用的时候\",{\"1\":{\"470\":1}}],[\"多平台的渲染\",{\"1\":{\"461\":1}}],[\"多个组件共享的值\",{\"1\":{\"594\":1}}],[\"多个组件共享状态\",{\"1\":{\"593\":1,\"690\":1}}],[\"多个来自不同作者的\",{\"1\":{\"514\":1}}],[\"多个teleport\",{\"0\":{\"421\":1}}],[\"多个\",{\"0\":{\"344\":1,\"490\":1},\"1\":{\"514\":1}}],[\"多个根节点的attribute如果没有显示的绑定\",{\"1\":{\"309\":1,\"325\":1}}],[\"多个根节点的attribute\",{\"0\":{\"309\":1,\"325\":1}}],[\"多个可能的类型\",{\"1\":{\"306\":1,\"322\":1}}],[\"多个插槽的效果\",{\"0\":{\"290\":1}}],[\"多个应用组件共享同一个arkts引擎实例\",{\"1\":{\"33\":1}}],[\"多模块项目开发中启动慢\",{\"1\":{\"182\":1}}],[\"多端场景\",{\"1\":{\"139\":1}}],[\"多端模式场景接入身份管理服务时开启小程序授权页相关配置\",{\"1\":{\"139\":1}}],[\"多行时尽可能打印尾随逗号\",{\"1\":{\"59\":1,\"60\":1}}],[\"多媒体\",{\"1\":{\"34\":1}}],[\"多设备和多窗口形态成为主流\",{\"1\":{\"32\":1}}],[\"进来\",{\"1\":{\"540\":1}}],[\"进项目路径\",{\"1\":{\"186\":1}}],[\"进度增加1\",{\"1\":{\"126\":1}}],[\"进度条从左往右的动画\",{\"1\":{\"126\":1}}],[\"进度条颜色\",{\"1\":{\"126\":1}}],[\"进度条线的宽度\",{\"1\":{\"126\":1}}],[\"进度条\",{\"0\":{\"126\":1},\"1\":{\"126\":1}}],[\"进行管道中的下一个钩子\",{\"1\":{\"566\":1}}],[\"进行管理\",{\"1\":{\"33\":1}}],[\"进行跳转\",{\"1\":{\"547\":1}}],[\"进行处理\",{\"1\":{\"521\":1,\"536\":1}}],[\"进行抽取\",{\"0\":{\"413\":1}}],[\"进行更冗长的等价展开\",{\"1\":{\"343\":1,\"481\":1}}],[\"进行配置\",{\"1\":{\"283\":1}}],[\"进行快速开发的完整系统\",{\"1\":{\"266\":1}}],[\"进行前端路由跳转时\",{\"1\":{\"263\":1}}],[\"进行hmr\",{\"1\":{\"256\":1}}],[\"进行匹配的\",{\"1\":{\"215\":1}}],[\"进行扩展\",{\"1\":{\"178\":1}}],[\"进行了扩充以及修改\",{\"1\":{\"147\":1}}],[\"进行了绑定\",{\"1\":{\"91\":1}}],[\"进行构造\",{\"1\":{\"95\":1}}],[\"进行程序注册和页面注册\",{\"1\":{\"92\":1}}],[\"进行渲染\",{\"1\":{\"90\":1,\"173\":1}}],[\"进行递归\",{\"1\":{\"53\":1}}],[\"进入任何页面\",{\"1\":{\"573\":1}}],[\"进入到\",{\"1\":{\"561\":2}}],[\"进入该组件本身的选项中\",{\"1\":{\"496\":1}}],[\"进入完成状态后\",{\"1\":{\"283\":1}}],[\"进入和离开的元素都是在同时开始动画的\",{\"1\":{\"164\":1}}],[\"进入和离开动画可以使用不同\",{\"1\":{\"159\":1}}],[\"进入动画的结束状态\",{\"1\":{\"157\":1}}],[\"进入动画的生效状态\",{\"1\":{\"157\":1}}],[\"进入动画的起始状态\",{\"1\":{\"157\":1}}],[\"进入或离开可以由以下的条件之一触发\",{\"1\":{\"155\":1}}],[\"进入详情页<\",{\"1\":{\"130\":1}}],[\"进入第一个页面时\",{\"1\":{\"115\":1}}],[\"进入小程序后继续网络请求数据\",{\"1\":{\"76\":1}}],[\"进入项目目录\",{\"1\":{\"69\":1}}],[\"进入hello\",{\"1\":{\"67\":1}}],[\"进入harmonyos的sdk安装目录选择页面以及同意协议\",{\"1\":{\"26\":1}}],[\"进入创建模拟器页面\",{\"1\":{\"30\":1}}],[\"进入诊断页面\",{\"1\":{\"27\":1}}],[\"进入配置选择页面\",{\"1\":{\"26\":1}}],[\"舞台\",{\"1\":{\"33\":1}}],[\"将创建的共享数据对象挂载到\",{\"1\":{\"691\":1}}],[\"将整个\",{\"1\":{\"582\":1}}],[\"将用户重定向到登录页面\",{\"1\":{\"559\":1}}],[\"将匹配以\",{\"1\":{\"548\":1}}],[\"将匹配所有内容并将其放在\",{\"1\":{\"548\":1}}],[\"将显示与\",{\"1\":{\"542\":1}}],[\"将呈现一个带有正确\",{\"1\":{\"540\":1,\"543\":1}}],[\"将代码复制到其中\",{\"1\":{\"524\":1}}],[\"将计算属性和监听器注册到该组件实例上\",{\"1\":{\"511\":1}}],[\"将生命周期钩子注册到该组件实例上\",{\"1\":{\"511\":1}}],[\"将返回它的规范化值\",{\"1\":{\"508\":1}}],[\"将返回的对象放到一个methods\",{\"1\":{\"440\":1}}],[\"将对象放到一个单独的属性中\",{\"1\":{\"440\":1}}],[\"将短横线命名的\",{\"1\":{\"437\":1}}],[\"将不可见\",{\"1\":{\"436\":1}}],[\"将不接受在\",{\"1\":{\"262\":1}}],[\"将内部原生\",{\"1\":{\"343\":1,\"481\":1}}],[\"将parentmessage属性作为字符串传递给子组件\",{\"1\":{\"305\":1,\"321\":1}}],[\"将message属性作为字符串传递给子组件\",{\"1\":{\"304\":1,\"320\":1}}],[\"将其想成一个函数\",{\"1\":{\"294\":1}}],[\"将其转换为\",{\"1\":{\"241\":1}}],[\"将其转换成javascript\",{\"1\":{\"205\":1}}],[\"将这部分模板片段传入子组件的\",{\"1\":{\"291\":1}}],[\"将在哪里被渲染\",{\"1\":{\"288\":1}}],[\"将在内存中渲染其默认的插槽内容\",{\"1\":{\"283\":1}}],[\"将导致在替换默认内容时立即显示后备内容\",{\"1\":{\"283\":1}}],[\"将会匹配父路由记录\",{\"1\":{\"569\":1}}],[\"将会被作为默认内容渲染\",{\"1\":{\"289\":1}}],[\"将会切换为展示后备内容\",{\"1\":{\"283\":1}}],[\"将会是\",{\"1\":{\"158\":1}}],[\"将可能引发错误\",{\"1\":{\"270\":1}}],[\"将被视为该元素的相对偏移量\",{\"1\":{\"571\":1}}],[\"将被渲染到\",{\"1\":{\"557\":3}}],[\"将被合并为同一个对象\",{\"1\":{\"498\":1}}],[\"将被侦听的数组的变更方法进行了包裹\",{\"1\":{\"459\":1}}],[\"将被调用\",{\"1\":{\"383\":1}}],[\"将被指定为唯一入口\",{\"1\":{\"270\":1}}],[\"将被保留\",{\"1\":{\"40\":1}}],[\"将babel\",{\"1\":{\"268\":2}}],[\"将所有的代码逻辑全部放到一个组件中\",{\"1\":{\"299\":1,\"315\":1}}],[\"将所有其他路径都重写到\",{\"1\":{\"263\":1}}],[\"将所有变量的本地取值都变为\",{\"1\":{\"40\":1}}],[\"将根路径\",{\"1\":{\"263\":1}}],[\"将webpack与服务器集成\",{\"1\":{\"252\":1}}],[\"将webpack安装在项目的本地目录中\",{\"1\":{\"209\":1}}],[\"将源代码转换为目标浏览器或环境所支持的语法\",{\"1\":{\"248\":1}}],[\"将修改后的ast转换为目标语言的代码\",{\"1\":{\"247\":1}}],[\"将令牌序列转换为抽象语法树\",{\"1\":{\"247\":1}}],[\"将输入的源代码字符串转换为一个令牌\",{\"1\":{\"247\":1}}],[\"将解构赋值转换为普通赋值\",{\"1\":{\"243\":1}}],[\"将类转换为\",{\"1\":{\"243\":1}}],[\"将箭头函数转换为普通函数\",{\"1\":{\"243\":1}}],[\"将使用新\",{\"1\":{\"243\":1}}],[\"将新的\",{\"1\":{\"243\":1}}],[\"将es6转换成es5的语法\",{\"1\":{\"205\":1}}],[\"将ts转换成js后\",{\"1\":{\"200\":1}}],[\"将this\",{\"1\":{\"40\":1}}],[\"将有许多内部模块的\",{\"1\":{\"197\":1}}],[\"将默认为\",{\"1\":{\"140\":1}}],[\"将页面初始数据渲染结果记录下来\",{\"1\":{\"115\":1}}],[\"将相关数据发送给视图层\",{\"1\":{\"115\":1}}],[\"将公共代码引入\",{\"1\":{\"97\":1}}],[\"将\",{\"1\":{\"91\":1,\"117\":1,\"124\":1,\"243\":4,\"250\":1,\"262\":1,\"349\":2,\"477\":1,\"584\":1,\"691\":2}}],[\"将标签视为原始组件\",{\"1\":{\"63\":1}}],[\"将指定参数传递给子组件\",{\"1\":{\"36\":1}}],[\"将应用组件和window窗口作为\",{\"1\":{\"33\":1}}],[\"将成员变量color初始化为this\",{\"1\":{\"22\":1}}],[\"特别是在和自定义元素打交道时\",{\"1\":{\"437\":1}}],[\"特别是1+8+n的战略被提出\",{\"1\":{\"32\":1}}],[\"特性转换为向后兼容的代码\",{\"1\":{\"243\":1}}],[\"特性\",{\"1\":{\"223\":1,\"244\":1}}],[\"特殊字符\",{\"1\":{\"26\":1}}],[\"拥有独立的js\",{\"1\":{\"32\":1}}],[\"为何分模块\",{\"0\":{\"666\":1}}],[\"为何要分模块\",{\"1\":{\"665\":1}}],[\"为何学vuex\",{\"1\":{\"594\":1}}],[\"为调试工具可追踪\",{\"1\":{\"638\":1}}],[\"为学习准备\",{\"1\":{\"601\":1}}],[\"为只读\",{\"1\":{\"354\":1}}],[\"为名注册的组件\",{\"1\":{\"335\":1}}],[\"为现代浏览器交付原生支持的\",{\"1\":{\"271\":1}}],[\"为例\",{\"1\":{\"197\":2}}],[\"为模块分配内存\",{\"1\":{\"195\":1}}],[\"为编译时加载\",{\"1\":{\"195\":1}}],[\"为过渡效果命名\",{\"0\":{\"158\":1}}],[\"为\",{\"1\":{\"143\":2,\"197\":1,\"580\":1}}],[\"为了让它能够被正确追踪\",{\"1\":{\"508\":1}}],[\"为了实现这一点\",{\"1\":{\"505\":1}}],[\"为了方便阅读\",{\"1\":{\"386\":1}}],[\"为了方便\",{\"1\":{\"335\":1}}],[\"为了避免这种情况\",{\"1\":{\"263\":1}}],[\"为了完成自动编译\",{\"1\":{\"252\":1}}],[\"为了运行需要有两个操作\",{\"1\":{\"252\":1}}],[\"为了优化请求数量和速度\",{\"1\":{\"197\":1}}],[\"为了适应广大的前端开发者\",{\"1\":{\"147\":1}}],[\"为了保证低版本兼容以及区分哪些页面是\",{\"1\":{\"135\":1}}],[\"为了保证大小\",{\"1\":{\"132\":1}}],[\"为了更好地适应复杂应用的开发需求\",{\"1\":{\"33\":1}}],[\"为平台名称\",{\"1\":{\"69\":1}}],[\"为自己的小程序appid\",{\"1\":{\"69\":1}}],[\"为自己本机高版本\",{\"1\":{\"68\":1}}],[\"为什么分模块\",{\"1\":{\"670\":1}}],[\"为什么学习vuex\",{\"1\":{\"589\":1}}],[\"为什么要使用\",{\"1\":{\"531\":1}}],[\"为什么要用\",{\"1\":{\"70\":1}}],[\"为什么是window呢\",{\"1\":{\"529\":1}}],[\"为什么不能使用箭头函数\",{\"1\":{\"529\":1}}],[\"为什么使用\",{\"0\":{\"181\":1,\"580\":1}}],[\"为什么选\",{\"1\":{\"178\":1}}],[\"为什么\",{\"0\":{\"351\":1},\"1\":{\"40\":1}}],[\"为父子传递同步参数的主要手段\",{\"1\":{\"36\":1}}],[\"为开发者提供了构建应用的基础\",{\"1\":{\"32\":1}}],[\"为base64字符串数据\",{\"1\":{\"9\":1}}],[\"模式或\",{\"1\":{\"539\":1}}],[\"模式添加侦听器\",{\"1\":{\"447\":1,\"450\":1}}],[\"模式\",{\"0\":{\"137\":1},\"1\":{\"139\":1,\"145\":1,\"447\":1,\"450\":1,\"539\":1,\"540\":2}}],[\"模式下的名字\",{\"1\":{\"271\":1}}],[\"模式下\",{\"1\":{\"135\":1,\"137\":1}}],[\"模板>到自己今天文件夹下\",{\"1\":{\"647\":1}}],[\"模板语法\",{\"0\":{\"429\":1}}],[\"模板编译器会对\",{\"1\":{\"343\":1,\"481\":1}}],[\"模板中有一些奇怪的语法\",{\"1\":{\"527\":1}}],[\"模板中表达式的初衷是用于简单的计算\",{\"1\":{\"470\":1}}],[\"模板中存在大量的复杂逻辑\",{\"1\":{\"470\":1}}],[\"模板中的解包是浅层的解包\",{\"1\":{\"357\":1}}],[\"模板中的表达式只能访问其定义时所处的作用域\",{\"1\":{\"293\":1}}],[\"模板中是不可用的\",{\"1\":{\"335\":1}}],[\"模板文件的特殊性\",{\"1\":{\"199\":1}}],[\"模板\",{\"0\":{\"105\":1},\"1\":{\"106\":1,\"336\":1,\"436\":1}}],[\"模板项目存放于\",{\"1\":{\"68\":1}}],[\"模块对象\",{\"1\":{\"669\":1,\"670\":1}}],[\"模块名\",{\"1\":{\"669\":1,\"670\":1,\"673\":2,\"675\":1,\"679\":2,\"680\":2,\"681\":2,\"682\":2}}],[\"模块拆分\",{\"1\":{\"597\":1}}],[\"模块二\",{\"1\":{\"585\":1}}],[\"模块一\",{\"1\":{\"585\":1}}],[\"模块动态导入也会返回一个\",{\"1\":{\"282\":1}}],[\"模块路径\",{\"1\":{\"264\":1}}],[\"模块的热替换\",{\"1\":{\"258\":1}}],[\"模块的浏览器中可以使用\",{\"1\":{\"250\":1}}],[\"模块热替换是指在\",{\"1\":{\"255\":1}}],[\"模块热更新\",{\"1\":{\"178\":1}}],[\"模块系统的一部分\",{\"1\":{\"250\":1}}],[\"模块导入的版本\",{\"1\":{\"250\":1}}],[\"模块三个模块进行分别处理\",{\"1\":{\"199\":1}}],[\"模块异步\",{\"1\":{\"195\":2}}],[\"模块同步\",{\"1\":{\"195\":1}}],[\"模块打包工具\",{\"1\":{\"180\":1}}],[\"模块\",{\"1\":{\"178\":1,\"197\":3,\"241\":1,\"250\":1}}],[\"模块只有通过\",{\"1\":{\"97\":1}}],[\"模块化module\",{\"1\":{\"204\":1}}],[\"模块化\",{\"0\":{\"97\":1,\"585\":1},\"1\":{\"539\":1}}],[\"模块和命名空间\",{\"1\":{\"59\":1}}],[\"模块级编译构建任务脚本\",{\"1\":{\"34\":1}}],[\"模型的区别\",{\"0\":{\"31\":1}}],[\"模拟器安装\",{\"0\":{\"30\":1}}],[\"与之相反\",{\"1\":{\"509\":1}}],[\"与其关联的表单控件会获得焦点\",{\"1\":{\"483\":1}}],[\"与组合式\",{\"1\":{\"401\":1}}],[\"与watcheffect的比较\",{\"1\":{\"378\":1}}],[\"与此同时\",{\"1\":{\"266\":1}}],[\"与commonjs\",{\"1\":{\"195\":1}}],[\"与视图层的\",{\"1\":{\"91\":1}}],[\"与声明式范式中的其他被装饰变量一样\",{\"1\":{\"38\":1}}],[\"与\",{\"0\":{\"31\":1},\"1\":{\"38\":1,\"118\":1,\"135\":1,\"147\":1,\"391\":1,\"462\":1,\"550\":1,\"552\":2,\"563\":1,\"694\":1}}],[\"与ui相关联的数据可以在组件内使用\",{\"1\":{\"1\":1}}],[\"首字母大写命名\",{\"1\":{\"335\":1}}],[\"首页\",{\"1\":{\"136\":1,\"140\":1,\"141\":1}}],[\"首次进入此页面\",{\"1\":{\"30\":1}}],[\"首次点击时\",{\"1\":{\"30\":1}}],[\"首先让我们回忆一下\",{\"1\":{\"343\":1,\"481\":1}}],[\"首先正则匹配请求路径\",{\"1\":{\"197\":1}}],[\"首先\",{\"1\":{\"30\":1,\"90\":1,\"118\":1,\"185\":1,\"223\":1,\"234\":1,\"310\":1,\"326\":1,\"455\":1,\"569\":1}}],[\"设计的\",{\"1\":{\"500\":1}}],[\"设备\",{\"1\":{\"148\":1}}],[\"设备可以是\",{\"1\":{\"30\":1}}],[\"设置id\",{\"1\":{\"527\":1}}],[\"设置初始时间格式\",{\"1\":{\"416\":1}}],[\"设置初始时间戳\",{\"1\":{\"415\":1,\"416\":1}}],[\"设置值\",{\"1\":{\"367\":1}}],[\"设置source\",{\"1\":{\"239\":1}}],[\"设置production\",{\"1\":{\"239\":1}}],[\"设置模式\",{\"1\":{\"239\":1}}],[\"设置一些额外的选项\",{\"1\":{\"238\":1}}],[\"设置从哪一个源中开始复制\",{\"1\":{\"238\":1}}],[\"设置文件的存放路径\",{\"0\":{\"230\":1}}],[\"设置文件名称\",{\"0\":{\"229\":1}}],[\"设置了元素为内联块级元素\",{\"1\":{\"174\":1}}],[\"设置为true会打开浏览器\",{\"1\":{\"261\":1}}],[\"设置为\",{\"1\":{\"146\":1,\"262\":1}}],[\"设置自身的属性\",{\"1\":{\"112\":1}}],[\"设置多\",{\"1\":{\"86\":1}}],[\"设置网络超时时间\",{\"1\":{\"86\":1}}],[\"设置\",{\"1\":{\"28\":1,\"67\":2,\"124\":1,\"263\":1,\"437\":1}}],[\"点相关的代码收集在一起会更\",{\"1\":{\"346\":1}}],[\"点右侧预览器即可预览效果\",{\"1\":{\"29\":1}}],[\"点击事件\",{\"1\":{\"632\":1,\"642\":1,\"643\":1}}],[\"点击事件绑定\",{\"1\":{\"630\":1}}],[\"点击一个tab\",{\"1\":{\"274\":1}}],[\"点击查看设置背景色详情\",{\"1\":{\"146\":1}}],[\"点击时执行\",{\"1\":{\"95\":1}}],[\"点击工具栏的运行\",{\"1\":{\"67\":1}}],[\"点击工具栏里的运行按钮\",{\"1\":{\"67\":1}}],[\"点击完成即可创建项目\",{\"1\":{\"67\":1}}],[\"点击下一步\",{\"1\":{\"67\":1}}],[\"点击replace\",{\"1\":{\"40\":1}}],[\"点击后面的运行按钮即可启动设备模拟器\",{\"1\":{\"30\":1}}],[\"点击异常项后面的set\",{\"1\":{\"27\":1}}],[\"点击界面左下方的\",{\"1\":{\"27\":1}}],[\"按名称删除路由\",{\"1\":{\"574\":1}}],[\"按照上面的配置\",{\"1\":{\"557\":1}}],[\"按照惯例\",{\"1\":{\"503\":1}}],[\"按照如上的拆分方式后\",{\"1\":{\"300\":1,\"316\":1}}],[\"按顺序执行\",{\"1\":{\"195\":1}}],[\"按数组的顺序排序\",{\"1\":{\"143\":1}}],[\"按住后多久出现点击态\",{\"1\":{\"121\":1}}],[\"按要求填写目录即可\",{\"1\":{\"29\":1}}],[\"按钮1发生了点击\",{\"1\":{\"448\":1}}],[\"按钮时\",{\"1\":{\"342\":1,\"571\":1}}],[\"按钮的点击\",{\"1\":{\"337\":1,\"339\":1}}],[\"按钮\",{\"1\":{\"27\":1}}],[\"创建modules模块对象\",{\"0\":{\"668\":1}}],[\"创建mycomponent实例\",{\"1\":{\"22\":1}}],[\"创建定义导出store对象\",{\"1\":{\"611\":1}}],[\"创建store对象并注入到vue实例中\",{\"1\":{\"648\":1}}],[\"创建store仓库对象\",{\"1\":{\"611\":1}}],[\"创建store仓库\",{\"1\":{\"608\":1}}],[\"创建store\",{\"1\":{\"581\":1}}],[\"创建根存储\",{\"1\":{\"581\":1}}],[\"创建好的组件实例会作为回调函数的参数传入\",{\"1\":{\"565\":1}}],[\"创建别名\",{\"1\":{\"555\":1}}],[\"创建和挂载根实例\",{\"1\":{\"540\":1}}],[\"创建单页应用非常简单\",{\"1\":{\"540\":1}}],[\"创建完成\",{\"1\":{\"494\":1}}],[\"创建完成后\",{\"1\":{\"30\":1,\"67\":1}}],[\"创建组件\",{\"1\":{\"391\":1}}],[\"创建原生元素\",{\"1\":{\"391\":1}}],[\"创建的组件构造器\",{\"1\":{\"540\":1}}],[\"创建的对象的代理\",{\"1\":{\"354\":1}}],[\"创建的响应式代理\",{\"1\":{\"354\":1}}],[\"创建的只读代理\",{\"1\":{\"354\":2}}],[\"创建的另一个代理\",{\"1\":{\"354\":1}}],[\"创建的最新的\",{\"1\":{\"68\":1}}],[\"创建一个新的\",{\"1\":{\"691\":1}}],[\"创建一个新的文件\",{\"1\":{\"524\":1}}],[\"创建一个新导航\",{\"1\":{\"559\":1}}],[\"创建一个自定义的ref\",{\"1\":{\"359\":1}}],[\"创建一个只读代理对象\",{\"1\":{\"354\":1}}],[\"创建一个普通对象\",{\"1\":{\"354\":1}}],[\"创建一个浅层的\",{\"1\":{\"358\":1}}],[\"创建一个浅层只读代理对象\",{\"1\":{\"354\":1}}],[\"创建一个浅层只读代理\",{\"1\":{\"354\":1}}],[\"创建一个浅层响应式代理对象\",{\"1\":{\"354\":1}}],[\"创建一个浅层响应式代理\",{\"1\":{\"354\":1}}],[\"创建一个响应式对象\",{\"1\":{\"354\":1}}],[\"创建一个响应式代理对象\",{\"1\":{\"354\":1}}],[\"创建一个响应式代理\",{\"1\":{\"354\":1}}],[\"创建一个\",{\"1\":{\"354\":1}}],[\"创建一个名为\",{\"1\":{\"314\":1,\"331\":1}}],[\"创建一个项目\",{\"0\":{\"268\":1}}],[\"创建一个webpack配置文件\",{\"1\":{\"213\":1}}],[\"创建了一个别名\",{\"1\":{\"264\":1}}],[\"创建package\",{\"1\":{\"209\":1}}],[\"创建以\",{\"1\":{\"68\":2}}],[\"创建uni\",{\"1\":{\"68\":1}}],[\"创建\",{\"0\":{\"67\":1},\"1\":{\"66\":1,\"540\":1,\"543\":1,\"549\":1,\"691\":1}}],[\"创建项目\",{\"0\":{\"29\":1,\"66\":1},\"1\":{\"601\":1}}],[\"√即可\",{\"1\":{\"27\":1}}],[\"u\",{\"1\":{\"438\":1}}],[\"umi等\",{\"1\":{\"249\":1}}],[\"umd\",{\"1\":{\"197\":2}}],[\"ua\",{\"1\":{\"236\":1,\"480\":1}}],[\"utf\",{\"1\":{\"236\":1,\"480\":1}}],[\"utils\",{\"1\":{\"198\":1}}],[\"uri\",{\"1\":{\"231\":2}}],[\"url中出现打字错误\",{\"1\":{\"546\":1}}],[\"url会发送到服务器\",{\"1\":{\"536\":1}}],[\"url=\",{\"1\":{\"130\":5}}],[\"url属性\",{\"1\":{\"130\":1}}],[\"url\",{\"0\":{\"225\":1,\"226\":1},\"1\":{\"65\":2,\"118\":1,\"136\":2,\"225\":4,\"226\":1,\"231\":4,\"236\":1,\"237\":3,\"251\":1,\"262\":1,\"270\":1,\"396\":4,\"504\":2,\"505\":13,\"539\":1,\"540\":4,\"541\":2,\"542\":1,\"543\":1,\"544\":2,\"546\":1,\"547\":1,\"548\":2,\"550\":5,\"554\":1,\"557\":2,\"559\":2,\"566\":2,\"569\":1,\"578\":1,\"651\":3,\"668\":3}}],[\"us\",{\"1\":{\"447\":1}}],[\"usingcomponents\",{\"1\":{\"136\":2,\"139\":1,\"146\":1}}],[\"useauthstore\",{\"1\":{\"584\":2}}],[\"usecounterstore\",{\"1\":{\"584\":2,\"585\":3}}],[\"usecouterstore\",{\"1\":{\"581\":4}}],[\"usegoods\",{\"1\":{\"583\":3}}],[\"useuserstore\",{\"1\":{\"585\":5}}],[\"useusers\",{\"1\":{\"584\":1}}],[\"useuser\",{\"1\":{\"582\":1}}],[\"usefeaturec\",{\"1\":{\"512\":2}}],[\"usefeatureb\",{\"1\":{\"512\":2}}],[\"usefeaturea\",{\"1\":{\"512\":2}}],[\"usefeature\",{\"1\":{\"508\":1}}],[\"usefetch\",{\"1\":{\"504\":3,\"505\":6,\"508\":1,\"513\":2}}],[\"usemouse\",{\"1\":{\"503\":6,\"504\":1,\"509\":2,\"510\":1,\"513\":2}}],[\"usermodule\",{\"1\":{\"668\":2,\"669\":2}}],[\"userdata\",{\"1\":{\"584\":3}}],[\"userdetails\",{\"1\":{\"561\":3,\"563\":1}}],[\"userhome\",{\"1\":{\"557\":2}}],[\"userprofile\",{\"1\":{\"557\":2}}],[\"userposts\",{\"1\":{\"557\":2}}],[\"userpost\",{\"1\":{\"544\":4}}],[\"usergeneric\",{\"1\":{\"548\":1}}],[\"userouter\",{\"1\":{\"551\":2,\"578\":4}}],[\"useroute\",{\"1\":{\"547\":2,\"573\":1}}],[\"userstore\",{\"1\":{\"582\":3,\"583\":2}}],[\"users\",{\"1\":{\"544\":12,\"550\":2,\"561\":6,\"563\":3,\"584\":2}}],[\"username\",{\"1\":{\"393\":1,\"544\":6,\"546\":1,\"550\":6,\"577\":3,\"578\":2,\"582\":2,\"583\":2}}],[\"user\",{\"1\":{\"221\":5,\"544\":6,\"546\":2,\"548\":2,\"550\":9,\"557\":22,\"584\":1,\"585\":4,\"668\":2,\"669\":2}}],[\"useeventlistener\",{\"1\":{\"503\":3,\"510\":1}}],[\"useentry是一个对象\",{\"1\":{\"215\":1}}],[\"useentry\",{\"1\":{\"215\":1}}],[\"useextendedlib\",{\"1\":{\"139\":1}}],[\"use属性\",{\"1\":{\"215\":1}}],[\"usedebounceref\",{\"1\":{\"359\":1}}],[\"used\",{\"1\":{\"98\":1}}],[\"usetabs\",{\"1\":{\"59\":1,\"60\":1}}],[\"useless\",{\"1\":{\"59\":1}}],[\"usesettingsstore\",{\"1\":{\"584\":1}}],[\"usestore\",{\"1\":{\"582\":1,\"585\":3,\"693\":2,\"694\":2}}],[\"uses\",{\"1\":{\"59\":1}}],[\"use\",{\"1\":{\"59\":6,\"186\":2,\"197\":1,\"198\":2,\"215\":4,\"216\":1,\"218\":1,\"221\":1,\"222\":1,\"225\":1,\"227\":1,\"241\":1,\"248\":1,\"424\":1,\"425\":1,\"426\":1,\"503\":1,\"507\":1,\"540\":1,\"543\":1,\"563\":1,\"581\":1,\"611\":1,\"669\":1,\"691\":2}}],[\"u=2364493189\",{\"1\":{\"123\":1}}],[\"u=3016274568\",{\"1\":{\"123\":1}}],[\"u=3033226715\",{\"1\":{\"123\":1}}],[\"u=1948650034\",{\"1\":{\"123\":1}}],[\"ul>\",{\"1\":{\"299\":1,\"300\":1,\"315\":1,\"316\":1,\"457\":3,\"458\":1,\"459\":1,\"463\":1,\"544\":1}}],[\"ul\",{\"1\":{\"119\":1,\"176\":1}}],[\"u011296285\",{\"1\":{\"58\":1}}],[\"unsaved\",{\"1\":{\"563\":1}}],[\"unshift\",{\"1\":{\"459\":1}}],[\"unpkg\",{\"1\":{\"523\":1,\"540\":2}}],[\"unmonnted\",{\"1\":{\"494\":1}}],[\"unmounted\",{\"1\":{\"368\":1,\"407\":1,\"408\":1,\"493\":1,\"494\":3}}],[\"unmount\",{\"1\":{\"368\":1}}],[\"unwatch\",{\"1\":{\"479\":2}}],[\"unref\",{\"1\":{\"358\":3,\"505\":1}}],[\"underline\",{\"1\":{\"444\":1}}],[\"underfin\",{\"1\":{\"192\":1}}],[\"undef\",{\"1\":{\"59\":2}}],[\"undefined\",{\"1\":{\"42\":1,\"43\":1,\"109\":2,\"351\":1,\"477\":1,\"550\":1,\"559\":1}}],[\"unix编程艺术\",{\"1\":{\"480\":1}}],[\"unit\",{\"1\":{\"268\":1}}],[\"universal\",{\"1\":{\"179\":1}}],[\"union\",{\"1\":{\"69\":1}}],[\"uniapp项目\",{\"1\":{\"67\":1}}],[\"uniapp\",{\"1\":{\"64\":1,\"68\":1}}],[\"uniapp+vite+vue3+ts配置eslint代码检查及prettier规范检查\",{\"0\":{\"58\":1}}],[\"uni\",{\"0\":{\"64\":1,\"65\":1,\"70\":1,\"702\":1},\"1\":{\"63\":4,\"65\":1,\"66\":1,\"67\":4,\"68\":6,\"70\":1,\"72\":6,\"73\":1}}],[\"unexpected\",{\"1\":{\"59\":1}}],[\"unused\",{\"1\":{\"59\":3}}],[\"upgrade\",{\"1\":{\"267\":3}}],[\"upstream\",{\"1\":{\"198\":1}}],[\"uploadfile\",{\"1\":{\"144\":2}}],[\"update=\",{\"1\":{\"391\":1}}],[\"updatemodule\",{\"1\":{\"201\":1}}],[\"updated\",{\"1\":{\"201\":2,\"368\":1,\"407\":1,\"408\":3,\"493\":1,\"494\":3}}],[\"updatepayload\",{\"1\":{\"201\":1}}],[\"updates\",{\"1\":{\"201\":1}}],[\"update\",{\"1\":{\"112\":1,\"201\":2,\"258\":2,\"267\":1,\"343\":6,\"344\":8,\"368\":1,\"481\":2,\"489\":4,\"490\":4,\"503\":6,\"564\":1}}],[\"updating\",{\"1\":{\"95\":1}}],[\"up\",{\"1\":{\"27\":1,\"531\":1}}],[\"ui命令创建和管理项目\",{\"1\":{\"268\":1}}],[\"ui项目模板\",{\"1\":{\"67\":1}}],[\"ui会发生对应的渲染改变\",{\"1\":{\"38\":1}}],[\"ui渲染\",{\"1\":{\"35\":1}}],[\"ui\",{\"1\":{\"35\":2,\"63\":1,\"268\":1,\"557\":1,\"572\":1}}],[\"ui只能在初始化时渲染\",{\"1\":{\"35\":1}}],[\"ui作为返回结果\",{\"1\":{\"35\":1}}],[\"ui是程序状态的运行结果\",{\"1\":{\"35\":1}}],[\"ui从\",{\"1\":{\"21\":2}}],[\"ui描述需要遵循以下规则\",{\"1\":{\"23\":1}}],[\"ui描述\",{\"1\":{\"3\":1}}],[\"而直接操作\",{\"1\":{\"694\":1}}],[\"而直接提前将页面初始\",{\"1\":{\"115\":1}}],[\"而事实上是\",{\"1\":{\"592\":1,\"689\":1}}],[\"而如果使用\",{\"1\":{\"580\":1}}],[\"而如果是直接使用模块名比如\",{\"1\":{\"197\":1}}],[\"而这个钩子就会在这个情况下被调用\",{\"1\":{\"563\":1}}],[\"而一个组合式函数的返回值可以作为另一个组合式函数的参数被传入\",{\"1\":{\"514\":1}}],[\"而非原始值的情况\",{\"1\":{\"508\":1}}],[\"而非额外的追加入口\",{\"1\":{\"270\":1}}],[\"而组件自身也有一个\",{\"1\":{\"497\":1}}],[\"而组件本身又可以在多个地方进行复用\",{\"1\":{\"333\":1}}],[\"而嵌套属性的变化不会触发\",{\"1\":{\"477\":1}}],[\"而嵌套对象的属性不会被设置为只读\",{\"1\":{\"354\":1}}],[\"而嵌套对象的属性不会被设置为响应式\",{\"1\":{\"354\":1,\"358\":1}}],[\"而计算属性虽然使用了多次\",{\"1\":{\"473\":1}}],[\"而进行重新计算\",{\"1\":{\"473\":1}}],[\"而使用key时\",{\"1\":{\"460\":1}}],[\"而vnode组合在一起形成一颗树结构\",{\"1\":{\"385\":1}}],[\"而vite利用了esm和浏览器缓存技术\",{\"1\":{\"182\":1}}],[\"而当dom挂载时\",{\"1\":{\"377\":1}}],[\"而当使用在一个组件上时\",{\"1\":{\"343\":1,\"481\":1}}],[\"而函数式编程通常强调数据不可变\",{\"1\":{\"347\":1}}],[\"而值就是相应组件的实现\",{\"1\":{\"338\":1}}],[\"而每一个组件又可以进行细分\",{\"1\":{\"333\":1}}],[\"而且更好\",{\"1\":{\"571\":1}}],[\"而且通常情况下html代码和数据以及对应的逻辑会混在一起\",{\"1\":{\"536\":1}}],[\"而且模块划分的更加清晰\",{\"1\":{\"519\":1}}],[\"而且我们多次提到计算属性有缓存\",{\"1\":{\"473\":1}}],[\"而且\",{\"1\":{\"348\":1}}],[\"而且不利于后续的管理以及扩展\",{\"1\":{\"333\":1}}],[\"而且它有默认的高度\",{\"1\":{\"123\":1}}],[\"而其内部的内容由父组件提供\",{\"1\":{\"288\":1}}],[\"而将其绑定到0\",{\"1\":{\"260\":1}}],[\"而0\",{\"1\":{\"260\":1}}],[\"而无需每次都从服务器请求新的页面\",{\"1\":{\"538\":1}}],[\"而无需额外的选项\",{\"1\":{\"344\":1,\"490\":1}}],[\"而无需显式地通过\",{\"1\":{\"314\":1,\"331\":1}}],[\"而无需重新加载整个页面\",{\"1\":{\"258\":1}}],[\"而无需重新刷新整个页面\",{\"1\":{\"255\":1}}],[\"而无需手动刷新页面\",{\"1\":{\"257\":1}}],[\"而无需经过字节码\",{\"1\":{\"196\":1}}],[\"而devserver就是webpack提供的一个功能\",{\"1\":{\"252\":1}}],[\"而最终打包的dist文件夹中是没有index\",{\"1\":{\"235\":1}}],[\"而295kb的不会\",{\"1\":{\"226\":1}}],[\"而大的图片也进行转换\",{\"1\":{\"226\":1}}],[\"而后发送请求\",{\"1\":{\"197\":1}}],[\"而webpack\",{\"1\":{\"182\":1,\"207\":1}}],[\"而swiper\",{\"1\":{\"123\":1}}],[\"而小程序上面所有的标签都没有\",{\"1\":{\"119\":1}}],[\"而不必使用嵌套的\",{\"1\":{\"557\":1}}],[\"而不必花好几天去纠结配置的问题\",{\"1\":{\"266\":1}}],[\"而不需要在多个options之间寻找\",{\"1\":{\"521\":1}}],[\"而不需要担心兼容性问题\",{\"1\":{\"223\":1}}],[\"而不一定需要全部使用vue来开发整个\",{\"1\":{\"518\":1}}],[\"而不会被添加到根元素上\",{\"1\":{\"308\":1,\"324\":1}}],[\"而不包含未使用的代码\",{\"1\":{\"251\":1}}],[\"而不能通过\",{\"1\":{\"117\":1}}],[\"而不是添加一个新的路由\",{\"1\":{\"573\":1}}],[\"而不是去检查每条路由记录\",{\"1\":{\"569\":1}}],[\"而不是直接使用template模板\",{\"1\":{\"530\":1}}],[\"而不是使用div来完成\",{\"1\":{\"458\":1}}],[\"而不是使用第三方\",{\"1\":{\"196\":1}}],[\"而不是作为\",{\"1\":{\"437\":1}}],[\"而不是由前端框架或工具来处理\",{\"1\":{\"263\":1}}],[\"而不是硬盘上的某个目录中\",{\"1\":{\"254\":1}}],[\"而不是这个组\",{\"1\":{\"173\":1}}],[\"而不是\",{\"1\":{\"59\":1,\"158\":1,\"500\":1,\"509\":1}}],[\"而在任何的子组件或更深层的子组件中都不可用\",{\"1\":{\"338\":1}}],[\"而在子组件的javascript代码中\",{\"1\":{\"306\":1,\"322\":1}}],[\"而在嵌套的过渡中\",{\"1\":{\"163\":1}}],[\"而在\",{\"1\":{\"73\":1,\"520\":1}}],[\"而\",{\"1\":{\"70\":1,\"343\":1,\"500\":1,\"694\":1}}],[\"而引用类型的值则是拷贝了\",{\"1\":{\"44\":1}}],[\"而引用数据类型如\",{\"1\":{\"42\":1}}],[\"而真实数据存储在堆内存中\",{\"1\":{\"42\":1}}],[\"而是状态管理中的一部分\",{\"1\":{\"694\":1}}],[\"而是一个模块对应一个store\",{\"1\":{\"585\":1}}],[\"而是使用一个自定义组件\",{\"1\":{\"541\":1}}],[\"而是说\",{\"1\":{\"468\":1}}],[\"而是有一大堆的元素\",{\"1\":{\"462\":1}}],[\"而是有一个依赖图\",{\"1\":{\"197\":1}}],[\"而是会生成新的数组\",{\"1\":{\"459\":1}}],[\"而是可以借助于构建工具\",{\"1\":{\"222\":1}}],[\"而是其他的名字呢\",{\"1\":{\"212\":1}}],[\"而是类似于自\",{\"1\":{\"207\":1}}],[\"而是在一个\",{\"1\":{\"160\":1}}],[\"而是将其移动到第一位\",{\"1\":{\"40\":1}}],[\"而是再次打开deveco\",{\"1\":{\"27\":1}}],[\"而没有创建多个具有相同键值的组件\",{\"1\":{\"17\":1}}],[\"一天的早上\",{\"1\":{\"592\":1,\"689\":1}}],[\"一种组件通信方案\",{\"1\":{\"590\":1}}],[\"一种情况是整个页面的模块由后端人员来编写和维护的\",{\"1\":{\"536\":1}}],[\"一切类型也都是可以被自动推断出来的\",{\"1\":{\"584\":1}}],[\"一些应用程序的\",{\"1\":{\"557\":1}}],[\"一些较大的依赖\",{\"1\":{\"197\":1}}],[\"一起使用\",{\"1\":{\"550\":1}}],[\"一起参与页面\",{\"1\":{\"118\":1}}],[\"一样\",{\"1\":{\"500\":1,\"563\":1}}],[\"一旦注册\",{\"1\":{\"499\":1}}],[\"一旦变量拥有了状态属性\",{\"1\":{\"38\":1}}],[\"一定会执行一次\",{\"1\":{\"477\":1}}],[\"一套完全图形化的创建和管理\",{\"1\":{\"266\":1}}],[\"一套构建指令\",{\"1\":{\"178\":1}}],[\"一共有\",{\"1\":{\"157\":1}}],[\"一个户外商店有两名员工\",{\"1\":{\"592\":1,\"689\":1}}],[\"一个路由匹配到的所有路由记录会暴露为\",{\"1\":{\"569\":1}}],[\"一个路由地址\",{\"1\":{\"559\":1}}],[\"一个被渲染的组件也可以包含自己嵌套的\",{\"1\":{\"557\":1}}],[\"一个页面有自己对应的网址\",{\"1\":{\"536\":1}}],[\"一个组合式函数可以调用一个或多个其他的组合式函数\",{\"1\":{\"503\":1}}],[\"一个组合式函数也可以挂靠在所属组件的生命周期上\",{\"1\":{\"503\":1}}],[\"一个组件\",{\"1\":{\"500\":1}}],[\"一个组件实例在被替换掉后会被销毁\",{\"1\":{\"278\":1}}],[\"一个简单的例子是跟踪当前鼠标在页面中的位置\",{\"1\":{\"502\":1}}],[\"一个mixin对象可以包含任何组件选项\",{\"1\":{\"496\":1}}],[\"一个参数\",{\"1\":{\"457\":1}}],[\"一个库\",{\"1\":{\"423\":1}}],[\"一个function\",{\"1\":{\"423\":1,\"425\":1}}],[\"一个自定义指令由一个包含类似组件生命周期钩子的对象来定义\",{\"1\":{\"410\":1}}],[\"一个包含修饰符的对象\",{\"1\":{\"408\":1}}],[\"一个对象\",{\"1\":{\"408\":1,\"423\":1,\"424\":1,\"440\":1}}],[\"一个指令的定义对象可以提供几种钩子函数\",{\"1\":{\"408\":1}}],[\"一个指令定义的对象\",{\"1\":{\"407\":1}}],[\"一个getter函数引用可响应式的对象\",{\"1\":{\"379\":1}}],[\"一个getter函数\",{\"1\":{\"379\":1}}],[\"一个\",{\"1\":{\"349\":2}}],[\"一个正则表达式\",{\"1\":{\"279\":1}}],[\"一个丰富的官方插件集合\",{\"1\":{\"266\":1}}],[\"一个运行时依赖\",{\"1\":{\"266\":1}}],[\"一个用于hmr的websocket\",{\"1\":{\"182\":1}}],[\"一个用于页面加载\",{\"1\":{\"182\":1}}],[\"一个开发服务器\",{\"1\":{\"178\":1}}],[\"一个小程序存在多个界面\",{\"1\":{\"90\":1}}],[\"一个struct只能被一个\",{\"1\":{\"20\":1}}],[\"一般使用如下\",{\"1\":{\"548\":1}}],[\"一般会在\",{\"1\":{\"543\":1}}],[\"一般需要对dom元素进行底层操作时使用\",{\"1\":{\"409\":1}}],[\"一般\",{\"1\":{\"366\":2}}],[\"一般写法\",{\"1\":{\"311\":1,\"327\":1}}],[\"一般都会搭配原生\",{\"1\":{\"159\":1}}],[\"一般不需要修改\",{\"1\":{\"88\":1}}],[\"一般就是因为你本地原本的node\",{\"1\":{\"27\":1}}],[\"一行最多多少个字符\",{\"1\":{\"59\":1,\"60\":1}}],[\"但又想避免名字的冲突\",{\"1\":{\"574\":1}}],[\"但由于使用场景可能存在的差异和复杂性\",{\"1\":{\"571\":1}}],[\"但我们必须自己处理编码\",{\"1\":{\"550\":1}}],[\"但我们可以通过\",{\"1\":{\"279\":1}}],[\"但用户\",{\"1\":{\"544\":1}}],[\"但可以去掉\",{\"1\":{\"540\":1}}],[\"但可能因为小程序更新\",{\"1\":{\"115\":1}}],[\"但作为回报带来了以下优点\",{\"1\":{\"531\":1}}],[\"但也带来了更好的性能和更小的文件大小\",{\"1\":{\"530\":1}}],[\"但也带来了一定的内存占用\",{\"1\":{\"32\":1}}],[\"但随后可以在运行时使用\",{\"1\":{\"527\":1}}],[\"但请注意以下规则\",{\"1\":{\"510\":1}}],[\"但对函数有特殊处理\",{\"1\":{\"505\":1}}],[\"但对于组件间的逻辑复用\",{\"1\":{\"496\":1}}],[\"但解包得到的值是只读的\",{\"1\":{\"361\":1}}],[\"但不执行嵌套对象的深度只读转换\",{\"1\":{\"354\":1}}],[\"但不执行嵌套对象的深层响应式转换\",{\"1\":{\"354\":1}}],[\"但不跳转tabber页面\",{\"1\":{\"130\":1}}],[\"但包裹了由\",{\"1\":{\"354\":1}}],[\"但反过来则不行\",{\"1\":{\"351\":1}}],[\"但基本原理差不多\",{\"1\":{\"348\":1}}],[\"但组合式\",{\"1\":{\"347\":1}}],[\"但并没有被使用的组件无法在生产打包时被自动移除\",{\"1\":{\"338\":1}}],[\"但有以下几个问题\",{\"1\":{\"338\":1}}],[\"但没有对应的prop定义的attribute\",{\"1\":{\"307\":1,\"323\":1}}],[\"但如果应用在服务器端渲染\",{\"1\":{\"580\":1}}],[\"但如果我们想通过模板引用将这个组件的方法暴露给父组件\",{\"1\":{\"350\":1}}],[\"但如果我们提供了插槽内容\",{\"1\":{\"289\":1}}],[\"但如果\",{\"1\":{\"333\":1}}],[\"但如果用户修改了输入框里的值\",{\"1\":{\"110\":2}}],[\"但在这个例子中\",{\"1\":{\"278\":1}}],[\"但在父组件index中\",{\"1\":{\"40\":1}}],[\"但强烈建议正确配置它们以便在最终的打包文件中实现正确的树摇效果\",{\"1\":{\"251\":1}}],[\"但浏览器只能通过相对路径去寻找\",{\"1\":{\"197\":1}}],[\"但造成了配置不灵活\",{\"1\":{\"180\":1}}],[\"但这里不需要额外指定\",{\"1\":{\"146\":1}}],[\"但这些字段不会作用于自定义\",{\"1\":{\"135\":1}}],[\"但它们里面用到的内置组件也遵循上述限制\",{\"1\":{\"116\":1}}],[\"但为uni\",{\"1\":{\"67\":1}}],[\"但是该组件被复用时调用\",{\"1\":{\"563\":1}}],[\"但是该getter函数必须引用可响应式的对象\",{\"1\":{\"379\":1}}],[\"但是只能在所有的逻辑路径都不重叠的情况下\",{\"1\":{\"559\":1}}],[\"但是整个设计是受到它的启发的\",{\"1\":{\"526\":1}}],[\"但是组件和组件之间有时候会存在相同的代码逻辑\",{\"1\":{\"496\":1}}],[\"但是watch不会侦听到\",{\"1\":{\"477\":2}}],[\"但是如果对象的key相同\",{\"1\":{\"498\":1}}],[\"但是如果依赖的数据发生变化\",{\"1\":{\"473\":1}}],[\"但是如果我们使用箭头函数\",{\"1\":{\"529\":1}}],[\"但是如果我们希望切换的是多个元素呢\",{\"1\":{\"453\":1}}],[\"但是如果我们的配置文件并不是webpack\",{\"1\":{\"212\":1}}],[\"但是如果我们同时使用了过渡和动画呢\",{\"1\":{\"162\":1}}],[\"但是计算的过程只调用了一次\",{\"1\":{\"473\":1}}],[\"但是我们在使用的时候不需要加\",{\"1\":{\"472\":1}}],[\"但是我们并不希望div这种元素被渲染\",{\"1\":{\"453\":1}}],[\"但是我们并没有设置过这个常量值\",{\"1\":{\"237\":1}}],[\"但是都变成了一种方法的调用\",{\"1\":{\"471\":1}}],[\"但是设计它们的初衷是用于简单的运算\",{\"1\":{\"468\":1}}],[\"但是依然有旧的节点\",{\"1\":{\"464\":1}}],[\"但是依然有新的节点\",{\"1\":{\"464\":1}}],[\"但是因为我们的c被f所使用了\",{\"1\":{\"464\":1}}],[\"但是某些方法不会替换原来的数组\",{\"1\":{\"459\":1}}],[\"但是最终template不会被渲染出来\",{\"1\":{\"453\":1}}],[\"但是注意\",{\"1\":{\"449\":1}}],[\"但是大多数情况下\",{\"1\":{\"429\":1}}],[\"但是大的图片直接使用图片即可\",{\"1\":{\"226\":1}}],[\"但是必须包含一个\",{\"1\":{\"423\":1,\"424\":1}}],[\"但是为了简便在vue将之简化为\",{\"1\":{\"385\":1}}],[\"但是为了让这个组件具备更强的通用性\",{\"1\":{\"286\":1}}],[\"但是经过readonly处理的原来的对象是允许被修改的\",{\"1\":{\"361\":1}}],[\"但是有一个很大的缺陷就是\",{\"1\":{\"521\":1}}],[\"但是有一个问题\",{\"1\":{\"208\":1}}],[\"但是有两个注意事项\",{\"1\":{\"355\":1}}],[\"但是这个模板的写法有点过于别扭了\",{\"1\":{\"527\":1}}],[\"但是这种代码有一个很大的弊端\",{\"1\":{\"346\":1}}],[\"但是这些资源并不需要通过\",{\"1\":{\"238\":1}}],[\"但是它们还是会分离开来\",{\"1\":{\"339\":1}}],[\"但是随着项目越来越复杂\",{\"1\":{\"339\":1}}],[\"但是思想都是一样的\",{\"1\":{\"333\":1}}],[\"但是服务器上并没有对应的\",{\"1\":{\"263\":1}}],[\"但是babel对于前端开发来说\",{\"1\":{\"241\":1}}],[\"但是开发中我们往往是小的图片需要转换\",{\"1\":{\"226\":1}}],[\"但是在某些情况下\",{\"1\":{\"475\":1,\"572\":1}}],[\"但是在某些情况\",{\"1\":{\"468\":1}}],[\"但是在使用\",{\"1\":{\"381\":1}}],[\"但是在网络请求还没有达到的时候\",{\"1\":{\"376\":1}}],[\"但是在真实开发中我们不可能每一个项目从头来完成\",{\"1\":{\"266\":1}}],[\"但是在dist文件夹中\",{\"1\":{\"225\":1}}],[\"但是在项目中我们会编写大量的css\",{\"1\":{\"218\":1}}],[\"但是可以将较小的文件\",{\"1\":{\"225\":1}}],[\"但是你也可以显式用\",{\"1\":{\"437\":1}}],[\"但是你会发现这个css在我们的代码中并没有生效\",{\"1\":{\"216\":1}}],[\"但是你可以指定一个元素并以\",{\"1\":{\"173\":1}}],[\"但是每次这样执行命令来对源码进行编译\",{\"1\":{\"212\":1}}],[\"但是通过使用webpack的打包功能\",{\"1\":{\"208\":1}}],[\"但是事实上它本身是没有自动刷新浏览器的功能的\",{\"1\":{\"254\":1}}],[\"但是事实上\",{\"1\":{\"203\":1}}],[\"但是\",{\"1\":{\"200\":1,\"254\":1,\"284\":1,\"297\":1,\"333\":1,\"335\":1,\"468\":1,\"474\":1,\"503\":1,\"569\":1}}],[\"但是对于配置monorepos项目是比较麻烦的\",{\"1\":{\"249\":1}}],[\"但是对于很多的前端开发者来说\",{\"1\":{\"203\":1}}],[\"但是对于哪些其他需要移动的节点是没有动画的\",{\"1\":{\"175\":1}}],[\"但是对应两个不同的地址\",{\"1\":{\"52\":1}}],[\"但是不能去修改readonly返回的对象info\",{\"1\":{\"361\":1}}],[\"但是不能跳到\",{\"1\":{\"130\":1}}],[\"但是不允许它们修改时\",{\"1\":{\"361\":1}}],[\"但是不允许跳转到\",{\"1\":{\"130\":2}}],[\"但是小程序中的组件除了包裹功能\",{\"1\":{\"119\":1}}],[\"但是编辑器\",{\"1\":{\"40\":1}}],[\"但是变化不会同步回其父组件\",{\"1\":{\"40\":1}}],[\"但是版本不一致\",{\"1\":{\"26\":1}}],[\"但允许在方法或者函数里使用\",{\"1\":{\"23\":1}}],[\"也许你确实想在那里渲染一些东西\",{\"1\":{\"557\":1}}],[\"也增加了\",{\"1\":{\"520\":1}}],[\"也需要多次计算\",{\"1\":{\"471\":1}}],[\"也是为了代码组织\",{\"1\":{\"512\":1}}],[\"也是根据一个条件决定是否显示元素或者组件\",{\"1\":{\"454\":1}}],[\"也是我们应用程序的根\",{\"1\":{\"334\":1}}],[\"也只能渲染一次\",{\"1\":{\"432\":1}}],[\"也允许我们来自定义自己的指令\",{\"1\":{\"409\":1}}],[\"也有人把vue\",{\"1\":{\"346\":1}}],[\"也叫\",{\"1\":{\"338\":1}}],[\"也叫定义文件\",{\"1\":{\"269\":1}}],[\"也\",{\"1\":{\"335\":1}}],[\"也可通过\",{\"1\":{\"584\":1}}],[\"也可能是像触摸手势或与数据库的连接状态这样的更复杂的逻辑\",{\"1\":{\"502\":1}}],[\"也可能是子组件中发生了事件\",{\"1\":{\"301\":1,\"317\":1}}],[\"也可能是一个图标\",{\"1\":{\"286\":1}}],[\"也可能是一个标题\",{\"1\":{\"286\":1}}],[\"也可能是一个列表\",{\"1\":{\"286\":1}}],[\"也可能什么都不显示\",{\"1\":{\"286\":1}}],[\"也可能显示一个返回按钮\",{\"1\":{\"286\":1}}],[\"也可能会发生变化\",{\"1\":{\"283\":1}}],[\"也可能来自第三方库\",{\"1\":{\"264\":1}}],[\"也可以这么写\",{\"1\":{\"571\":1}}],[\"也可以根据目标路由和当前路由之间的关系\",{\"1\":{\"570\":1}}],[\"也可以直接在传递给\",{\"1\":{\"553\":1}}],[\"也可以直接这样调用命令\",{\"1\":{\"269\":1}}],[\"也可以传入一个对象\",{\"1\":{\"528\":1}}],[\"也可以用字符串形式的\",{\"1\":{\"503\":1}}],[\"也可以有多个键值对\",{\"1\":{\"440\":1}}],[\"也可以调用函数\",{\"1\":{\"430\":1}}],[\"也可以不用\",{\"1\":{\"403\":1}}],[\"也可以定义复杂类型的数据\",{\"1\":{\"355\":1}}],[\"也可以返回一个渲染函数\",{\"1\":{\"350\":1}}],[\"也可以设置为类似于\",{\"1\":{\"261\":1}}],[\"也可以\",{\"1\":{\"244\":1,\"337\":1}}],[\"也可以单独使用\",{\"1\":{\"168\":1}}],[\"也可以作用于动态组件之间的切换\",{\"1\":{\"164\":1}}],[\"也可以在\",{\"1\":{\"136\":1}}],[\"也可以在不同组件层级间传递\",{\"1\":{\"1\":1}}],[\"也可以使用\",{\"1\":{\"87\":1}}],[\"也可以是其他方式\",{\"1\":{\"457\":1}}],[\"也可以是组件的\",{\"1\":{\"437\":1}}],[\"也可以是一个javascript的表达式\",{\"1\":{\"430\":1}}],[\"也可以是一个\",{\"1\":{\"386\":1}}],[\"也可以是一个函数\",{\"1\":{\"262\":1}}],[\"也可以是ipv6的\",{\"1\":{\"260\":1}}],[\"也可以是经过转换后的新代码\",{\"1\":{\"246\":1}}],[\"也可以是\",{\"1\":{\"30\":1}}],[\"也不需要复制\",{\"1\":{\"238\":1}}],[\"也包括生命\",{\"1\":{\"346\":1}}],[\"也包括我们的script是在一个全局的作用域下\",{\"1\":{\"339\":1}}],[\"也包括会自动帮助我们添加\",{\"1\":{\"223\":1}}],[\"也包括它涉及到的所有自定义组件的\",{\"1\":{\"115\":1}}],[\"也方便后期的维护\",{\"1\":{\"215\":1}}],[\"也支持在高级选项中处理这些状态\",{\"1\":{\"282\":1}}],[\"也支持\",{\"1\":{\"164\":1}}],[\"也支持对单个页面进行配置\",{\"1\":{\"146\":1}}],[\"也没有提供\",{\"1\":{\"155\":1}}],[\"也会发生改变\",{\"1\":{\"528\":1}}],[\"也会更新\",{\"1\":{\"357\":1}}],[\"也会一起被注\",{\"1\":{\"338\":1}}],[\"也会显示这里配置的报错组件\",{\"1\":{\"282\":1}}],[\"也会同时变更\",{\"1\":{\"111\":1,\"112\":1}}],[\"也会同时改变\",{\"1\":{\"110\":1}}],[\"也会被正常触发\",{\"1\":{\"110\":1}}],[\"也就是url\",{\"1\":{\"536\":1}}],[\"也就是虚拟节点\",{\"1\":{\"461\":1}}],[\"也就是\",{\"1\":{\"157\":2}}],[\"也就是说可以通过setup的返回值来替代data选项\",{\"1\":{\"350\":1}}],[\"也就是说\",{\"1\":{\"132\":2,\"573\":1}}],[\"也就是说swiper内部只能放swiper\",{\"1\":{\"123\":1}}],[\"也就是屏幕宽度等于\",{\"1\":{\"87\":1}}],[\"也就是类似npm的包管理工具\",{\"1\":{\"26\":1}}],[\"也将进行对应的改变\",{\"1\":{\"35\":1}}],[\"下\",{\"1\":{\"548\":2}}],[\"下文中的代码的意思是\",{\"1\":{\"459\":1}}],[\"下文中也会采用native来代指微信客户端\",{\"1\":{\"90\":1}}],[\"下次访问相同路径直接从\",{\"1\":{\"197\":1}}],[\"下声明它们\",{\"1\":{\"160\":1}}],[\"下面例子是从\",{\"1\":{\"554\":1}}],[\"下面是正确的版本\",{\"1\":{\"559\":1}}],[\"下面是它在组件中使用的方式\",{\"1\":{\"503\":1}}],[\"下面是一个使用\",{\"1\":{\"584\":1}}],[\"下面是一个使用组合式\",{\"1\":{\"347\":1}}],[\"下面是一个例子\",{\"1\":{\"571\":1}}],[\"下面是一个基本的例子\",{\"1\":{\"540\":1}}],[\"下面是一个单文件组件的示例\",{\"1\":{\"531\":1}}],[\"下面是一个自定义指令的例子\",{\"1\":{\"410\":1}}],[\"下面是一个示例\",{\"1\":{\"160\":1}}],[\"下面是一个更高级的例子\",{\"1\":{\"159\":1}}],[\"下面会介绍各个参数的细节\",{\"1\":{\"408\":1}}],[\"下面我们来看一个非常大的组件\",{\"1\":{\"346\":1}}],[\"下面我们将先展示默认插槽如何接受\",{\"1\":{\"294\":1}}],[\"下面我们会解释这些\",{\"1\":{\"155\":1}}],[\"下面的score在进行判断的过程中会进行隐式转化的\",{\"1\":{\"487\":1}}],[\"下面的示例展示了如何嵌套这些组件\",{\"1\":{\"284\":1}}],[\"下面的代码38kb的图片会进行base64编码\",{\"1\":{\"226\":1}}],[\"下面的\",{\"1\":{\"109\":1}}],[\"下拉\",{\"1\":{\"142\":1,\"146\":1}}],[\"下的精度问题\",{\"1\":{\"139\":1}}],[\"下图展示了state和view\",{\"1\":{\"35\":1}}],[\"下载vuex\",{\"1\":{\"611\":2,\"647\":1,\"648\":1}}],[\"下载vue的源码\",{\"1\":{\"524\":1}}],[\"下载vue的javascript文件\",{\"1\":{\"522\":1}}],[\"下载和引入\",{\"0\":{\"524\":1}}],[\"下载模板\",{\"1\":{\"68\":2}}],[\"下载安装\",{\"1\":{\"67\":1}}],[\"下载安装包\",{\"1\":{\"26\":1}}],[\"下载必要的sdk依赖\",{\"1\":{\"30\":1}}],[\"下一步安装\",{\"1\":{\"26\":1}}],[\"正如其名\",{\"1\":{\"558\":1}}],[\"正如它的名字所暗示的那样\",{\"1\":{\"553\":1}}],[\"正如你在上面的例子中所看到的那样\",{\"1\":{\"159\":1}}],[\"正则表达式\",{\"1\":{\"279\":1,\"548\":2}}],[\"正常放行\",{\"1\":{\"567\":1}}],[\"正常来说都这么使用\",{\"1\":{\"366\":1}}],[\"正常情况下默认所有资源文件都被打包发布到所有平台\",{\"1\":{\"139\":1}}],[\"正常安装包\",{\"1\":{\"26\":1}}],[\"正确的做法\",{\"1\":{\"117\":1}}],[\"正在加载中\",{\"1\":{\"283\":1}}],[\"正在加载\",{\"1\":{\"117\":1,\"118\":1,\"284\":1}}],[\"正例\",{\"1\":{\"23\":2}}],[\">更改\",{\"1\":{\"694\":1}}],[\">延迟1秒\",{\"1\":{\"642\":1,\"643\":1}}],[\">库存\",{\"1\":{\"632\":1}}],[\">库存+1<\",{\"1\":{\"630\":1}}],[\">randomize<\",{\"1\":{\"584\":1}}],[\">req<\",{\"1\":{\"546\":2}}],[\">relaunch\",{\"1\":{\"130\":1}}],[\">redirect\",{\"1\":{\"130\":1}}],[\">作者排行<\",{\"1\":{\"578\":1}}],[\">排行热榜<\",{\"1\":{\"578\":1}}],[\">阅读文章<\",{\"1\":{\"578\":1}}],[\">提交登录<\",{\"1\":{\"578\":1}}],[\">朋友\",{\"1\":{\"547\":2,\"551\":2}}],[\">朋友<\",{\"1\":{\"547\":2,\"551\":1}}],[\">发现音乐<\",{\"1\":{\"547\":2}}],[\">发送<\",{\"1\":{\"404\":1}}],[\">发送消息<\",{\"1\":{\"314\":2,\"331\":2}}],[\">跳转b<\",{\"1\":{\"543\":1}}],[\">跳转a<\",{\"1\":{\"543\":1}}],[\">跳转到首页<\",{\"1\":{\"130\":1}}],[\">go\",{\"1\":{\"540\":2}}],[\">home<\",{\"1\":{\"546\":1}}],[\">hhhh<\",{\"1\":{\"527\":1}}],[\">hello\",{\"1\":{\"168\":1,\"170\":1,\"171\":1,\"393\":1}}],[\">hello<\",{\"1\":{\"155\":1,\"159\":1,\"161\":1}}],[\">oops\",{\"1\":{\"504\":1}}],[\">香蕉<\",{\"1\":{\"483\":1}}],[\">橘子<\",{\"1\":{\"483\":1}}],[\">苹果<\",{\"1\":{\"483\":1}}],[\">女\",{\"1\":{\"483\":1}}],[\">男\",{\"1\":{\"483\":1}}],[\">移除<\",{\"1\":{\"480\":1}}],[\">改变info\",{\"1\":{\"477\":2}}],[\">改变info<\",{\"1\":{\"477\":1}}],[\">查找答案<\",{\"1\":{\"476\":1}}],[\">插入f元素<\",{\"1\":{\"463\":1}}],[\">插件\",{\"1\":{\"28\":1}}],[\">添加电影<\",{\"1\":{\"459\":1}}],[\">添加数字<\",{\"1\":{\"174\":1}}],[\">良好<\",{\"1\":{\"452\":1}}],[\">优秀<\",{\"1\":{\"452\":1}}],[\">div<\",{\"1\":{\"448\":1}}],[\">demo\",{\"1\":{\"384\":1}}],[\">呵呵呵呵<\",{\"1\":{\"440\":4,\"443\":2,\"455\":1}}],[\">哈哈哈哈<\",{\"1\":{\"440\":1,\"441\":3,\"443\":3,\"446\":3,\"454\":1,\"455\":1}}],[\">哈哈哈<\",{\"1\":{\"377\":1,\"433\":1,\"444\":1,\"445\":2}}],[\">百度一下<\",{\"1\":{\"437\":1,\"438\":1}}],[\">切换<\",{\"1\":{\"430\":1,\"440\":1,\"453\":1}}],[\">app\",{\"1\":{\"384\":1}}],[\">app组件<\",{\"1\":{\"154\":1}}],[\">修改message<\",{\"1\":{\"494\":1}}],[\">修改fullname<\",{\"1\":{\"474\":1}}],[\">修改firstname<\",{\"1\":{\"473\":1}}],[\">修改数据<\",{\"1\":{\"379\":1,\"380\":1}}],[\">修改age<\",{\"1\":{\"376\":1}}],[\">修改name<\",{\"1\":{\"376\":1}}],[\">我的音乐<\",{\"1\":{\"547\":2}}],[\">我的第一个微信程序<\",{\"1\":{\"121\":1}}],[\">我是迪迦<\",{\"1\":{\"370\":1}}],[\">+<\",{\"1\":{\"480\":1}}],[\">+1<\",{\"1\":{\"398\":1,\"399\":1,\"400\":1,\"432\":3,\"527\":2}}],[\">+age<\",{\"1\":{\"363\":1}}],[\">+\",{\"1\":{\"350\":1,\"353\":1,\"356\":1}}],[\">点击了\",{\"1\":{\"347\":1}}],[\">点我跳转<\",{\"1\":{\"130\":1}}],[\">login<\",{\"1\":{\"546\":1}}],[\">log\",{\"1\":{\"342\":1}}],[\">传递数据给父组件<\",{\"1\":{\"310\":1,\"326\":1}}],[\">submit<\",{\"1\":{\"289\":1}}],[\">save<\",{\"1\":{\"166\":1,\"289\":1}}],[\">favicon\",{\"1\":{\"236\":1}}],[\">import\",{\"1\":{\"201\":1}}],[\">数字洗牌<\",{\"1\":{\"174\":1}}],[\">删除数字<\",{\"1\":{\"174\":1}}],[\">changeage<\",{\"1\":{\"374\":1,\"375\":1}}],[\">changename<\",{\"1\":{\"374\":1,\"375\":1}}],[\">change<\",{\"1\":{\"367\":1}}],[\">chinese\",{\"1\":{\"28\":1}}],[\">click\",{\"1\":{\"288\":1}}],[\">cancel<\",{\"1\":{\"166\":1}}],[\">edit<\",{\"1\":{\"166\":1}}],[\">toggle<\",{\"1\":{\"155\":1,\"161\":1}}],[\">显示\",{\"1\":{\"154\":1,\"167\":1,\"168\":1,\"171\":1}}],[\">退出小程序<\",{\"1\":{\"130\":1}}],[\">进入详情页<\",{\"1\":{\"130\":1}}],[\">按钮<\",{\"1\":{\"361\":1,\"402\":1,\"450\":2,\"497\":1,\"500\":1}}],[\">按钮点击<\",{\"1\":{\"339\":1}}],[\">按钮4<\",{\"1\":{\"128\":1}}],[\">按钮3<\",{\"1\":{\"128\":2}}],[\">按钮2<\",{\"1\":{\"128\":1,\"449\":1}}],[\">按钮1<\",{\"1\":{\"128\":1,\"448\":2,\"449\":1}}],[\">8<\",{\"1\":{\"124\":1}}],[\">7<\",{\"1\":{\"124\":1}}],[\">6<\",{\"1\":{\"124\":1}}],[\">5<\",{\"1\":{\"124\":1}}],[\">4<\",{\"1\":{\"124\":1}}],[\">3<\",{\"1\":{\"124\":1}}],[\">2<\",{\"1\":{\"124\":1}}],[\">1<\",{\"1\":{\"124\":1}}],[\">正在加载<\",{\"1\":{\"117\":1}}],[\">是否加样式<\",{\"1\":{\"106\":1}}],[\"><\",{\"1\":{\"105\":3,\"121\":6,\"124\":6,\"125\":3,\"133\":1,\"136\":2,\"164\":1,\"167\":1,\"236\":2,\"276\":1,\"284\":1,\"291\":4,\"294\":1,\"295\":2,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"310\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"326\":1,\"328\":1,\"337\":2,\"342\":1,\"403\":1,\"404\":1,\"405\":1,\"408\":1,\"420\":2,\"421\":1,\"430\":1,\"432\":2,\"433\":2,\"434\":1,\"440\":2,\"441\":2,\"443\":2,\"444\":2,\"445\":3,\"446\":2,\"448\":4,\"449\":2,\"450\":2,\"452\":1,\"453\":2,\"457\":2,\"458\":3,\"459\":2,\"463\":2,\"471\":1,\"472\":1,\"473\":3,\"474\":1,\"476\":2,\"477\":2,\"480\":3,\"483\":3,\"523\":1,\"524\":1,\"527\":3,\"540\":2,\"570\":1}}],[\">设置\",{\"1\":{\"68\":1}}],[\">node路径\",{\"1\":{\"68\":2}}],[\">运行配置\",{\"1\":{\"68\":2}}],[\">偏好设置\",{\"1\":{\"68\":1}}],[\">启用即可\",{\"1\":{\"28\":1}}],[\">其他工具\",{\"1\":{\"28\":1}}],[\">已安装\",{\"1\":{\"28\":1}}],[\">\",{\"0\":{\"55\":1,\"577\":1},\"1\":{\"23\":1,\"29\":2,\"34\":13,\"55\":2,\"67\":11,\"91\":2,\"102\":1,\"103\":2,\"104\":4,\"105\":2,\"108\":2,\"109\":4,\"110\":7,\"111\":3,\"112\":1,\"116\":6,\"118\":1,\"121\":9,\"123\":4,\"124\":11,\"126\":4,\"130\":3,\"133\":1,\"136\":5,\"137\":2,\"150\":2,\"158\":1,\"159\":1,\"160\":2,\"161\":1,\"162\":1,\"163\":5,\"164\":2,\"167\":1,\"168\":5,\"170\":1,\"171\":2,\"172\":2,\"174\":2,\"176\":3,\"195\":2,\"197\":1,\"236\":8,\"250\":3,\"275\":4,\"276\":2,\"277\":1,\"278\":2,\"279\":9,\"280\":2,\"283\":2,\"284\":5,\"288\":4,\"289\":4,\"291\":8,\"292\":2,\"294\":2,\"295\":2,\"300\":1,\"304\":2,\"305\":3,\"306\":3,\"308\":1,\"309\":1,\"310\":2,\"311\":1,\"316\":1,\"320\":2,\"321\":3,\"322\":3,\"324\":1,\"325\":1,\"326\":2,\"327\":1,\"328\":2,\"337\":2,\"338\":1,\"343\":8,\"344\":3,\"349\":6,\"350\":3,\"353\":2,\"356\":2,\"359\":1,\"361\":1,\"363\":1,\"366\":3,\"370\":1,\"371\":2,\"375\":1,\"379\":1,\"380\":1,\"384\":1,\"390\":2,\"392\":1,\"398\":4,\"399\":4,\"400\":6,\"402\":2,\"404\":1,\"405\":1,\"408\":1,\"410\":3,\"415\":1,\"416\":1,\"419\":3,\"420\":9,\"421\":5,\"430\":7,\"432\":1,\"433\":1,\"434\":1,\"435\":2,\"437\":8,\"438\":7,\"440\":7,\"441\":3,\"443\":4,\"444\":1,\"445\":3,\"446\":2,\"448\":6,\"449\":3,\"450\":3,\"452\":4,\"453\":2,\"454\":1,\"455\":1,\"457\":6,\"458\":2,\"459\":4,\"463\":2,\"470\":2,\"471\":1,\"472\":1,\"473\":5,\"474\":1,\"476\":2,\"477\":2,\"480\":11,\"481\":3,\"483\":19,\"486\":2,\"487\":2,\"488\":1,\"489\":4,\"490\":3,\"494\":1,\"497\":1,\"504\":1,\"527\":4,\"540\":6,\"543\":6,\"544\":6,\"546\":2,\"547\":8,\"550\":6,\"551\":4,\"554\":1,\"557\":3,\"570\":13,\"578\":8,\"581\":1,\"584\":1,\"603\":4,\"618\":1,\"631\":1,\"694\":2}}],[\">=16\",{\"1\":{\"68\":1}}],[\">=\",{\"1\":{\"16\":1,\"109\":1,\"470\":1,\"471\":1,\"472\":1,\"473\":2,\"583\":2}}],[\"请传一个对象\",{\"1\":{\"633\":1}}],[\"请再次回忆一下vue\",{\"1\":{\"611\":1}}],[\"请输入密码\",{\"1\":{\"578\":1}}],[\"请输入用户名\",{\"1\":{\"578\":1}}],[\"请输入图片宽度\",{\"1\":{\"16\":1}}],[\"请检查是否已登录\",{\"1\":{\"569\":1}}],[\"请登录\",{\"1\":{\"567\":1}}],[\"请确保在组件挂载后才调用的生命周期钩子中执行\",{\"1\":{\"510\":1}}],[\"请确保要么使用\",{\"1\":{\"508\":1}}],[\"请谨慎使用\",{\"1\":{\"354\":1}}],[\"请始终为所有的插槽使用完整的基于\",{\"1\":{\"297\":1}}],[\"请在项目目录下运行\",{\"1\":{\"267\":1}}],[\"请在开发时尽量避免这种情况\",{\"1\":{\"148\":1}}],[\"请运行\",{\"1\":{\"267\":1}}],[\"请注意如果你解构了\",{\"1\":{\"349\":1}}],[\"请注意\",{\"1\":{\"257\":1,\"338\":1,\"541\":1,\"561\":1,\"584\":1}}],[\"请注意升级你的\",{\"1\":{\"185\":1}}],[\"请求\",{\"1\":{\"263\":1}}],[\"请求获取已经提前写好的关于\",{\"1\":{\"201\":1}}],[\"请求路径是\",{\"1\":{\"197\":1}}],[\"请尽量避免将静态的样式写进\",{\"1\":{\"150\":1}}],[\"请使用\",{\"1\":{\"361\":1}}],[\"请使用activecolor\",{\"1\":{\"126\":1}}],[\"请使用if\",{\"1\":{\"23\":1}}],[\"请参考组合\",{\"1\":{\"564\":1}}],[\"请参考wxs\",{\"1\":{\"107\":1}}],[\"请参考历史工程迁移\",{\"1\":{\"34\":1}}],[\"请直接访问\",{\"1\":{\"68\":2}}],[\"根store如何注册\",{\"1\":{\"670\":1}}],[\"根目录下新建\",{\"1\":{\"222\":1}}],[\"根组件是vue应用的最顶层组件\",{\"1\":{\"342\":1}}],[\"根组件\",{\"1\":{\"269\":1,\"691\":1}}],[\"根组件定位需为\",{\"1\":{\"137\":1}}],[\"根组件需要添加\",{\"1\":{\"137\":1}}],[\"根据路径的深度动态添加信息到\",{\"1\":{\"570\":1}}],[\"根据上面的路由配置\",{\"1\":{\"569\":1}}],[\"根据时间格式来格式化时间\",{\"1\":{\"416\":1}}],[\"根据name和age两个变量发送网络请求\",{\"1\":{\"376\":1}}],[\"根据事件名称触发对应的事件\",{\"1\":{\"310\":1,\"326\":1}}],[\"根据这个属性的值来决定渲染哪个子组件\",{\"1\":{\"276\":1,\"328\":1}}],[\"根据目标环境自动确定需要的转换规则\",{\"1\":{\"244\":1}}],[\"根据需要\",{\"1\":{\"213\":2}}],[\"根据文件的不同使用不同的loader来解析\",{\"1\":{\"213\":1}}],[\"根据自己需求选择\",{\"1\":{\"59\":1}}],[\"根据diff算法\",{\"1\":{\"40\":1}}],[\"根据装饰器的规则来初始化自定义组件的参数\",{\"1\":{\"22\":1}}],[\"根节点唯一且必要\",{\"1\":{\"23\":2}}],[\"其对应的元素压根不会被渲染到dom中\",{\"1\":{\"455\":1}}],[\"其判断的内容完全不会被渲染或者会被销毁掉\",{\"1\":{\"453\":1}}],[\"其次\",{\"1\":{\"310\":1,\"326\":1,\"455\":1}}],[\"其意思就是\",{\"1\":{\"291\":1}}],[\"其概念是类似的\",{\"1\":{\"288\":1}}],[\"其实更准备的命名是\",{\"1\":{\"385\":1}}],[\"其实可以获取到一个参数\",{\"1\":{\"376\":1}}],[\"其实按照这种设置方式就可以了\",{\"1\":{\"230\":1}}],[\"其实就是在客户端与服务端建立了一个\",{\"1\":{\"201\":1}}],[\"其属性值是样式规则中类选择器名\",{\"1\":{\"150\":1}}],[\"其属性值如下\",{\"1\":{\"143\":1}}],[\"其信息有\",{\"1\":{\"145\":1}}],[\"其他暂时不变\",{\"1\":{\"672\":1}}],[\"其他子路由\",{\"1\":{\"557\":1}}],[\"其他选项\",{\"1\":{\"513\":1}}],[\"其他方式\",{\"0\":{\"478\":1}}],[\"其他方法\",{\"0\":{\"56\":1}}],[\"其他参数都是只读的\",{\"1\":{\"408\":1}}],[\"其他参数都是可选的\",{\"1\":{\"391\":1}}],[\"其他写法\",{\"0\":{\"391\":1}}],[\"其他计算机或设备无法直接访问\",{\"1\":{\"260\":1}}],[\"其他配置项\",{\"1\":{\"189\":1,\"190\":1,\"263\":1,\"264\":1,\"265\":1}}],[\"其他未列举可以在官方文档中查看\",{\"1\":{\"139\":1}}],[\"其他\",{\"0\":{\"306\":1,\"322\":1,\"422\":1},\"1\":{\"93\":1}}],[\"其他文件不支持\",{\"1\":{\"73\":1}}],[\"其build\",{\"1\":{\"23\":2}}],[\"其中键是需要侦听的响应式组件实例属性\",{\"1\":{\"475\":1}}],[\"其中一种方式就是将逻辑抽取到一个method中\",{\"1\":{\"468\":1}}],[\"其中的逻辑功能按照颜色进行了划分\",{\"1\":{\"346\":1}}],[\"其中两个重要的特性标志包括\",{\"1\":{\"251\":1}}],[\"其中可以编写需要忽略的文件\",{\"1\":{\"238\":1}}],[\"其中只可放置swiper\",{\"1\":{\"123\":1}}],[\"其中应用的运行时的状态是参数\",{\"1\":{\"35\":1}}],[\"其中targets中可配置当前运行环境\",{\"1\":{\"34\":1}}],[\"其中ohpm是open\",{\"1\":{\"26\":1}}],[\"其中foreach禁止作为根节点\",{\"1\":{\"23\":2}}],[\"其中\",{\"1\":{\"9\":1,\"36\":1,\"69\":1,\"118\":1,\"143\":1,\"540\":1}}],[\"刷新为\",{\"1\":{\"21\":2}}],[\"函数用于同步地改变状态\",{\"1\":{\"694\":1}}],[\"函数用于定义自定义组件的声明式ui描述\",{\"1\":{\"20\":1}}],[\"函数名\",{\"1\":{\"624\":1,\"637\":1}}],[\"函数名不能和系统组件名相同\",{\"1\":{\"20\":1}}],[\"函数侦听整个\",{\"1\":{\"582\":1}}],[\"函数接收\",{\"1\":{\"571\":1}}],[\"函数体\",{\"1\":{\"567\":1,\"619\":1}}],[\"函数来创建一个新的状态对象\",{\"1\":{\"582\":1}}],[\"函数来编写组件\",{\"1\":{\"564\":1}}],[\"函数来类比可能更有助于你来理解具名插槽\",{\"1\":{\"291\":1}}],[\"函数也不会改变导航本身\",{\"1\":{\"560\":1}}],[\"函数也可以用来导入你自己的模块\",{\"1\":{\"250\":1}}],[\"函数方式\",{\"1\":{\"425\":1}}],[\"函数类型\",{\"0\":{\"425\":1},\"1\":{\"423\":1,\"425\":1}}],[\"函数声明\",{\"1\":{\"402\":1}}],[\"函数组件和插槽的使用\",{\"0\":{\"392\":1}}],[\"函数再返回h函数创建的vnode\",{\"1\":{\"387\":1}}],[\"函数是一个用于创建\",{\"1\":{\"385\":1}}],[\"函数是用来替代以前的\",{\"1\":{\"351\":1}}],[\"函数注册生命周期钩子\",{\"1\":{\"368\":1}}],[\"函数返回的值\",{\"1\":{\"365\":1}}],[\"函数中使用\",{\"1\":{\"365\":1}}],[\"函数作为参数\",{\"1\":{\"359\":1}}],[\"函数作类比\",{\"1\":{\"288\":1}}],[\"函数内部\",{\"1\":{\"355\":1}}],[\"函数的\",{\"1\":{\"349\":2}}],[\"函数的第一个参数是组件的\",{\"1\":{\"349\":2}}],[\"函数的语言\",{\"1\":{\"23\":1}}],[\"函数传入了一个对象app\",{\"1\":{\"334\":1}}],[\"函数等高级功能\",{\"1\":{\"268\":1}}],[\"函数需要开启开发者工具\",{\"1\":{\"124\":1}}],[\"函数下的根节点唯一且必要\",{\"1\":{\"23\":2}}],[\"函数\",{\"0\":{\"23\":1,\"415\":1},\"1\":{\"20\":2,\"109\":2,\"124\":1,\"349\":2,\"385\":3,\"430\":1,\"505\":1,\"559\":1,\"584\":1}}],[\"不建议\",{\"1\":{\"638\":1}}],[\"不建议保留对原始对象的持久引用\",{\"1\":{\"354\":1}}],[\"不可能把多个模块的数据都定义到一个store中\",{\"1\":{\"585\":1}}],[\"不可以是window\",{\"1\":{\"529\":1}}],[\"不是管理员\",{\"1\":{\"583\":1}}],[\"不是在元素插入后立即移除\",{\"1\":{\"160\":1}}],[\"不容易出错\",{\"1\":{\"583\":1}}],[\"不必重载页面即可修改\",{\"1\":{\"580\":1}}],[\"不过\",{\"1\":{\"563\":1,\"582\":1}}],[\"不过需要注意\",{\"1\":{\"30\":1}}],[\"不过需要先配置模拟器\",{\"1\":{\"30\":1}}],[\"不断地嵌套视图\",{\"1\":{\"557\":1}}],[\"不然会报警告\",{\"1\":{\"547\":1}}],[\"不使用箭头函数的情况下\",{\"1\":{\"529\":1}}],[\"不得不提供一些特殊的api\",{\"1\":{\"520\":1}}],[\"不清晰的数据来源\",{\"1\":{\"514\":1}}],[\"不管多深都会侦听到\",{\"1\":{\"477\":1}}],[\"不管传入的是基本类型还是引用类型\",{\"1\":{\"355\":1}}],[\"不及格\",{\"1\":{\"470\":1,\"471\":1,\"472\":1,\"473\":2}}],[\"不便于维护\",{\"1\":{\"470\":1}}],[\"不一定一一对应\",{\"1\":{\"462\":1}}],[\"不带参数\",{\"1\":{\"437\":1}}],[\"不常用指令\",{\"0\":{\"431\":1}}],[\"不要更改它们\",{\"1\":{\"408\":1}}],[\"不要这么做\",{\"1\":{\"117\":1}}],[\"不用导入\",{\"1\":{\"403\":1}}],[\"不用通过compoents注册\",{\"1\":{\"402\":1}}],[\"不用作过多介绍\",{\"1\":{\"269\":1}}],[\"不让子组件随便修改\",{\"1\":{\"384\":1}}],[\"不推荐\",{\"1\":{\"377\":1}}],[\"不同组件数据保持同步\",{\"1\":{\"592\":1,\"689\":1}}],[\"不同的地方\",{\"1\":{\"694\":1}}],[\"不同的是\",{\"1\":{\"584\":1}}],[\"不同的文件中可以声明相同名字的变量和函数\",{\"1\":{\"98\":1}}],[\"不同\",{\"1\":{\"349\":1,\"544\":1}}],[\"不再需要为了抽象而重新组织代码\",{\"1\":{\"346\":1}}],[\"不太容易定位子组件的实现\",{\"1\":{\"338\":1}}],[\"不局限于文本\",{\"1\":{\"288\":1}}],[\"不应用其他格式化规则\",{\"1\":{\"268\":1}}],[\"不重新加载整个页面\",{\"1\":{\"255\":1}}],[\"不和webpack等构建工具配置来单独使用\",{\"1\":{\"242\":1}}],[\"不显示\",{\"1\":{\"143\":2}}],[\"不缩放图片\",{\"1\":{\"132\":9}}],[\"不保持纵横比缩放图片\",{\"1\":{\"132\":1}}],[\"不包含任何\",{\"1\":{\"117\":1}}],[\"不注册可以开发小程序\",{\"1\":{\"79\":1}}],[\"不占内存\",{\"1\":{\"78\":1}}],[\"不需要单独加载任何的js和css\",{\"1\":{\"536\":1}}],[\"不需要单独安装\",{\"1\":{\"237\":1}}],[\"不需要使用count\",{\"1\":{\"356\":1}}],[\"不需要再次安装全局的webpack\",{\"1\":{\"209\":1}}],[\"不需要管理依赖\",{\"1\":{\"182\":1}}],[\"不需要自动在文件开头插入\",{\"1\":{\"59\":1,\"60\":1}}],[\"不需要写文件开头的\",{\"1\":{\"59\":1,\"60\":1}}],[\"不影响代码执行\",{\"1\":{\"59\":1}}],[\"不仅会在栈中开辟另一块空间\",{\"1\":{\"44\":1}}],[\"不会在\",{\"1\":{\"561\":1}}],[\"不会处理\",{\"1\":{\"500\":1}}],[\"不会执行\",{\"1\":{\"357\":1}}],[\"不会受到其他项目的影响\",{\"1\":{\"209\":1}}],[\"不会互相影响\",{\"1\":{\"98\":1}}],[\"不会改变另一个对象的属性\",{\"1\":{\"52\":1}}],[\"不会影响到另一个变量的值\",{\"1\":{\"43\":1,\"44\":1}}],[\"不会触发视图更新\",{\"1\":{\"38\":1}}],[\"不支持sourcemap\",{\"1\":{\"180\":1}}],[\"不支持网络图片\",{\"1\":{\"143\":2}}],[\"不支持带页面路径参数\",{\"1\":{\"140\":1}}],[\"不支持简单类型和复杂类型的联合类型\",{\"1\":{\"38\":1}}],[\"不支持any\",{\"1\":{\"38\":1}}],[\"不支持该image组件被跨包\",{\"1\":{\"9\":1}}],[\"不能\",{\"1\":{\"563\":1}}],[\"不能获取组件实例\",{\"1\":{\"563\":1}}],[\"不能与\",{\"1\":{\"550\":1}}],[\"不能侦听到旧值\",{\"1\":{\"477\":1}}],[\"不能修改属性值\",{\"1\":{\"354\":1}}],[\"不能使用\",{\"0\":{\"351\":1}}],[\"不能发布\",{\"1\":{\"79\":1}}],[\"不能为空值\",{\"1\":{\"38\":1}}],[\"不能调用没有用\",{\"1\":{\"23\":1}}],[\"不能有继承关系\",{\"1\":{\"20\":1}}],[\"不允许多个空行\",{\"1\":{\"59\":1}}],[\"不允许\",{\"1\":{\"59\":1}}],[\"不允许重复字段名称\",{\"1\":{\"59\":1}}],[\"不允许添加要在\",{\"1\":{\"59\":1}}],[\"不允许组件\",{\"1\":{\"59\":1}}],[\"不允许在import\",{\"1\":{\"59\":1}}],[\"不允许在ui描述里直接使用console\",{\"1\":{\"23\":1}}],[\"不允许使用undefined和null\",{\"1\":{\"38\":1}}],[\"不允许使用表达式\",{\"1\":{\"23\":2}}],[\"不允许使用switch语法\",{\"1\":{\"23\":1}}],[\"不允许switch语法\",{\"1\":{\"23\":1}}],[\"不允许调用没有用\",{\"1\":{\"23\":1}}],[\"不允许本地作用域\",{\"1\":{\"23\":1}}],[\"不允许创建本地的作用域\",{\"1\":{\"23\":1}}],[\"不允许console\",{\"1\":{\"23\":1}}],[\"不允许声明本地变量\",{\"1\":{\"23\":2}}],[\"86\",{\"1\":{\"686\":1}}],[\"8d\",{\"1\":{\"686\":1}}],[\"85\",{\"1\":{\"480\":1}}],[\"8em\",{\"1\":{\"291\":1}}],[\"8s\",{\"1\":{\"159\":1}}],[\"8px\",{\"1\":{\"136\":1,\"288\":1,\"480\":1}}],[\"81rpx\",{\"1\":{\"148\":1}}],[\"81px\",{\"1\":{\"143\":4}}],[\"81\",{\"1\":{\"132\":1}}],[\"8b\",{\"1\":{\"124\":3,\"132\":1}}],[\"89\",{\"1\":{\"124\":2,\"686\":1}}],[\"87\",{\"1\":{\"123\":1,\"124\":1}}],[\"8c\",{\"1\":{\"123\":1}}],[\"83457107\",{\"1\":{\"123\":1}}],[\"8888\",{\"1\":{\"259\":1,\"265\":1}}],[\"88\",{\"1\":{\"123\":2,\"124\":1,\"366\":1,\"446\":2,\"457\":1,\"458\":1}}],[\"8f\",{\"1\":{\"123\":1}}],[\"82\",{\"1\":{\"68\":1,\"686\":1}}],[\"8\",{\"0\":{\"635\":1},\"1\":{\"18\":1,\"68\":4,\"126\":1,\"139\":1,\"142\":2,\"146\":2,\"159\":1,\"174\":1,\"236\":1,\"480\":1}}],[\"8080\",{\"1\":{\"261\":1,\"263\":1,\"270\":1}}],[\"8000\",{\"1\":{\"262\":1}}],[\"800\",{\"1\":{\"163\":1}}],[\"80rpx\",{\"1\":{\"123\":3,\"136\":1}}],[\"80px\",{\"1\":{\"121\":1,\"124\":1}}],[\"80\",{\"1\":{\"16\":3,\"126\":1,\"471\":1,\"472\":1}}],[\"700\",{\"1\":{\"443\":2}}],[\"7777\",{\"1\":{\"259\":1,\"265\":1}}],[\"750物理像素\",{\"1\":{\"148\":1}}],[\"750rpx\",{\"1\":{\"87\":1}}],[\"750\",{\"1\":{\"87\":1,\"148\":2}}],[\"7以下版本\",{\"1\":{\"68\":1}}],[\"7\",{\"0\":{\"627\":1},\"1\":{\"18\":1,\"40\":10,\"126\":1,\"132\":1,\"139\":3,\"146\":2,\"174\":1,\"347\":1}}],[\"666\",{\"1\":{\"291\":1}}],[\"647eff\",{\"1\":{\"288\":1}}],[\"600\",{\"1\":{\"480\":1}}],[\"60000\",{\"1\":{\"144\":4}}],[\"60\",{\"1\":{\"126\":1,\"452\":1,\"470\":1,\"471\":1,\"472\":1,\"473\":2}}],[\"60rpx\",{\"1\":{\"124\":1}}],[\"6\",{\"0\":{\"622\":1},\"1\":{\"18\":1,\"39\":1,\"55\":2,\"68\":1,\"126\":1,\"130\":1,\"139\":1,\"142\":4,\"146\":3,\"157\":1,\"174\":1,\"224\":1,\"225\":1,\"227\":2,\"232\":1,\"259\":1,\"388\":1,\"478\":1,\"611\":1}}],[\"4px\",{\"1\":{\"603\":1}}],[\"4110305242\",{\"1\":{\"123\":1}}],[\"4g\",{\"1\":{\"68\":1}}],[\"42d392\",{\"1\":{\"288\":1}}],[\"42px\",{\"1\":{\"148\":1}}],[\"42\",{\"1\":{\"50\":3,\"54\":2}}],[\"4\",{\"0\":{\"607\":1},\"1\":{\"18\":1,\"39\":1,\"40\":7,\"50\":3,\"59\":2,\"60\":1,\"68\":1,\"103\":1,\"109\":2,\"113\":1,\"124\":1,\"125\":1,\"126\":2,\"130\":1,\"137\":1,\"139\":2,\"142\":1,\"146\":3,\"161\":1,\"174\":1,\"186\":1,\"231\":1,\"259\":1,\"267\":1,\"370\":1,\"371\":1,\"388\":1,\"430\":2,\"478\":1,\"480\":1,\"483\":1,\"540\":1,\"611\":1}}],[\"404在最后\",{\"1\":{\"548\":1}}],[\"404\",{\"0\":{\"548\":1},\"1\":{\"263\":8}}],[\"40kb\",{\"1\":{\"143\":2}}],[\"40rpx\",{\"1\":{\"136\":2}}],[\"400rpx\",{\"1\":{\"123\":1}}],[\"400\",{\"1\":{\"121\":1,\"577\":1}}],[\"40\",{\"1\":{\"12\":1,\"16\":1,\"40\":2,\"126\":1}}],[\"会导致state臃肿\",{\"1\":{\"670\":1}}],[\"会调用\",{\"1\":{\"582\":1}}],[\"会调用多次\",{\"1\":{\"473\":1}}],[\"会先删除路由\",{\"1\":{\"574\":1}}],[\"会先在\",{\"1\":{\"264\":1}}],[\"会回到之前的\",{\"1\":{\"550\":1}}],[\"会刷新整个页面\",{\"1\":{\"546\":1}}],[\"会给予你足够的灵活性\",{\"1\":{\"512\":1}}],[\"会给title的ref对象赋值新的值\",{\"1\":{\"377\":1}}],[\"会立即运行\",{\"1\":{\"505\":1}}],[\"会立即在浏览器更新\",{\"1\":{\"255\":1}}],[\"会尽量利用我们的key来进行优化操作\",{\"1\":{\"465\":1}}],[\"会保留在所绑定的元素上\",{\"1\":{\"436\":1}}],[\"会采用插件的模式\",{\"1\":{\"423\":1}}],[\"会合并\",{\"1\":{\"421\":1}}],[\"会更新\",{\"1\":{\"357\":1}}],[\"会返回一个ref对象\",{\"1\":{\"367\":1}}],[\"会返回一个可变的响应式对象\",{\"1\":{\"355\":1}}],[\"会返回一个响应式对象\",{\"1\":{\"353\":1,\"356\":1}}],[\"会返回一个默认的\",{\"1\":{\"263\":1}}],[\"会报一个警告\",{\"1\":{\"353\":1}}],[\"会报错\",{\"1\":{\"40\":1}}],[\"会是\",{\"1\":{\"351\":1}}],[\"会将它作为\",{\"1\":{\"437\":1}}],[\"会将节点转换成vnode\",{\"1\":{\"385\":1}}],[\"会将子组件实例打印到控制台\",{\"1\":{\"342\":1}}],[\"会将特殊的hmr运行时代码注入到应用程序中的每个模块中\",{\"1\":{\"258\":1}}],[\"会通过任何类型验证\",{\"1\":{\"306\":1,\"322\":1}}],[\"会通过websocket与webpack\",{\"1\":{\"258\":1}}],[\"会展示之前\",{\"1\":{\"283\":1}}],[\"会直接进入完成状态\",{\"1\":{\"283\":1}}],[\"会进入完成状态\",{\"1\":{\"283\":1}}],[\"会创建一个只带有初始状态的新实例\",{\"1\":{\"278\":1}}],[\"会根据构建统计生成报告\",{\"1\":{\"271\":1}}],[\"会内联在\",{\"1\":{\"271\":1}}],[\"会拼接此上下文路径\",{\"1\":{\"264\":1}}],[\"会优先使用\",{\"1\":{\"264\":1}}],[\"会自动选择正确的方式来分配它\",{\"1\":{\"391\":1}}],[\"会自动匹配到对应的ref的\",{\"1\":{\"370\":1,\"371\":1}}],[\"会自动解包\",{\"1\":{\"356\":1}}],[\"会自动尝试解析\",{\"1\":{\"264\":1}}],[\"会自动检测目标元素是否应用了\",{\"1\":{\"155\":1}}],[\"会生成两个文件\",{\"1\":{\"258\":1}}],[\"会生成一个\",{\"1\":{\"213\":1}}],[\"会暴露一个全局的vue来使用\",{\"1\":{\"250\":1}}],[\"会设置development\",{\"1\":{\"239\":1}}],[\"会设置响应类型为js\",{\"1\":{\"197\":1}}],[\"会默认复制到打包的目录下\",{\"1\":{\"238\":1}}],[\"会有一些类似这样的语法<\",{\"1\":{\"236\":1}}],[\"会有报错提示\",{\"1\":{\"73\":1}}],[\"会非常繁琐\",{\"1\":{\"212\":1}}],[\"会执行node\",{\"1\":{\"207\":1}}],[\"会接受到来自客户端的消息\",{\"1\":{\"201\":1}}],[\"会被调用两次\",{\"1\":{\"559\":1}}],[\"会被忽略\",{\"1\":{\"550\":1}}],[\"会被自动解包\",{\"1\":{\"509\":1}}],[\"会被解包\",{\"1\":{\"357\":1}}],[\"会被展开为如下的形式\",{\"1\":{\"343\":1,\"481\":1}}],[\"会被认为是一个静态资源\",{\"1\":{\"198\":1}}],[\"会被覆盖\",{\"1\":{\"36\":1}}],[\"会出现页面初始化时一次发送数百个模块请求的情况\",{\"1\":{\"197\":1}}],[\"会出现4个文件\",{\"1\":{\"84\":1}}],[\"会找到代码中以\",{\"1\":{\"197\":1}}],[\"会向当前域名发送一个请求获取对应的资源\",{\"1\":{\"195\":1}}],[\"会发现请求的依然是ts的代码\",{\"1\":{\"191\":1}}],[\"会发生下面这些事情\",{\"1\":{\"155\":1}}],[\"会覆盖相应阶段的默认\",{\"1\":{\"161\":1}}],[\"会以其名字而不是\",{\"1\":{\"158\":1}}],[\"会提示选择项目模板\",{\"1\":{\"68\":1}}],[\"会影响到另一个变量的值\",{\"1\":{\"44\":1}}],[\"会弹出一个窗口\",{\"1\":{\"30\":1}}],[\"会隐藏\",{\"1\":{\"18\":1}}],[\"会在实例生命周期的不同阶段被调用\",{\"1\":{\"493\":1}}],[\"会在每次\",{\"1\":{\"486\":1}}],[\"会在适当的时机被添加和移除\",{\"1\":{\"155\":1}}],[\"会在一个元素或组件进入和离开\",{\"1\":{\"155\":1}}],[\"会在项目目录下生成\",{\"1\":{\"69\":1}}],[\"会在根目录生成\",{\"1\":{\"62\":1}}],[\"会在栈中开辟另一块空间\",{\"1\":{\"44\":1}}],[\"会在\",{\"1\":{\"6\":1,\"271\":1}}],[\"补充\",{\"0\":{\"18\":1,\"251\":1,\"351\":1},\"1\":{\"249\":1}}],[\"lru\",{\"1\":{\"280\":1}}],[\"lf\",{\"1\":{\"59\":1,\"60\":1}}],[\"lock文件中\",{\"1\":{\"269\":1}}],[\"lock\",{\"1\":{\"269\":1}}],[\"location\",{\"1\":{\"201\":3}}],[\"localstorage\",{\"1\":{\"568\":1,\"582\":1}}],[\"localhost指的是本地计算机或设备自身\",{\"1\":{\"260\":1}}],[\"localhost是一个主机名\",{\"1\":{\"260\":1}}],[\"localhost\",{\"1\":{\"197\":2,\"259\":1,\"260\":2,\"262\":6,\"263\":1,\"265\":1}}],[\"localvalue\",{\"1\":{\"98\":5}}],[\"local\",{\"1\":{\"60\":1}}],[\"long\",{\"1\":{\"313\":1,\"330\":1}}],[\"longitude=\",{\"1\":{\"133\":1}}],[\"longitude\",{\"1\":{\"133\":1}}],[\"longpress\",{\"1\":{\"132\":1}}],[\"loaded\",{\"1\":{\"504\":1}}],[\"loader对其进行编译和处理\",{\"1\":{\"530\":1}}],[\"loader可以将指定的javascript文件传递给babel进行转换\",{\"1\":{\"248\":1}}],[\"loader可以将不同类型的文件\",{\"1\":{\"214\":1}}],[\"loader是一个用于在webpack构建过程中将javascript代码转换的加载器\",{\"1\":{\"248\":1}}],[\"loader是用于特定的模块类型进行转换\",{\"1\":{\"233\":1}}],[\"loader是用于对不同类型的文件进行转换和处理的模块\",{\"1\":{\"214\":1}}],[\"loader中和\",{\"1\":{\"228\":1}}],[\"loader有一个options属性limit\",{\"1\":{\"226\":1}}],[\"loader会将所有的图片文件转成base64编码\",{\"1\":{\"225\":1}}],[\"loader和file\",{\"1\":{\"225\":1}}],[\"loader时\",{\"1\":{\"223\":1}}],[\"loader处理\",{\"0\":{\"218\":1}}],[\"loader写到\",{\"1\":{\"216\":1}}],[\"loader只是负责将\",{\"1\":{\"216\":1}}],[\"loader来处理的\",{\"1\":{\"222\":1}}],[\"loader来加载css文件了\",{\"1\":{\"216\":1}}],[\"loader来转换es6+代码\",{\"1\":{\"213\":1}}],[\"loader属性\",{\"1\":{\"215\":2}}],[\"loader的limit\",{\"0\":{\"226\":1}}],[\"loader的工作方式是相似的\",{\"1\":{\"225\":1}}],[\"loader的作用就是帮助我们处理import\",{\"1\":{\"224\":1}}],[\"loader的安装\",{\"1\":{\"215\":1}}],[\"loader的配置是通过webpack的配置文件\",{\"1\":{\"214\":1}}],[\"loader的使用\",{\"0\":{\"214\":1}}],[\"loader通常以链式调用的方式使用\",{\"1\":{\"214\":1}}],[\"loaders\",{\"1\":{\"214\":1,\"228\":1}}],[\"loader\",{\"0\":{\"215\":1,\"216\":1,\"219\":1,\"222\":1,\"224\":1,\"225\":1,\"248\":1},\"1\":{\"183\":1,\"213\":2,\"214\":1,\"215\":12,\"216\":8,\"218\":5,\"219\":1,\"222\":4,\"224\":3,\"225\":5,\"227\":2,\"228\":1,\"231\":8,\"248\":7,\"249\":2,\"250\":4,\"257\":3,\"282\":2}}],[\"loader进行资源转换\",{\"1\":{\"180\":1}}],[\"loading>\",{\"1\":{\"283\":1}}],[\"loadingcomponent\",{\"1\":{\"282\":2}}],[\"loadinghint\",{\"1\":{\"118\":2}}],[\"loading\",{\"1\":{\"117\":6,\"118\":2,\"142\":1,\"146\":1,\"222\":1,\"282\":2}}],[\"loadsh\",{\"1\":{\"57\":1}}],[\"loopback\",{\"1\":{\"260\":1}}],[\"loop\",{\"1\":{\"59\":1}}],[\"lodash\",{\"1\":{\"57\":2,\"174\":1,\"197\":2,\"502\":1}}],[\"login的错误用例\",{\"1\":{\"559\":1}}],[\"login\",{\"1\":{\"543\":1,\"546\":3,\"559\":7,\"569\":1,\"577\":8,\"578\":8,\"584\":2,\"694\":3}}],[\"logchildref\",{\"1\":{\"342\":2}}],[\"logo\",{\"1\":{\"195\":2}}],[\"logs\",{\"1\":{\"141\":2,\"143\":3}}],[\"log\",{\"1\":{\"23\":1,\"38\":1,\"40\":1,\"47\":2,\"48\":2,\"49\":2,\"50\":2,\"51\":2,\"53\":2,\"54\":2,\"55\":2,\"57\":2,\"93\":2,\"95\":3,\"97\":2,\"98\":1,\"106\":1,\"110\":1,\"168\":6,\"171\":2,\"201\":5,\"241\":2,\"256\":1,\"277\":1,\"310\":1,\"311\":1,\"313\":1,\"326\":1,\"327\":1,\"330\":1,\"337\":1,\"339\":1,\"342\":4,\"347\":1,\"349\":13,\"350\":2,\"353\":1,\"354\":3,\"356\":1,\"357\":7,\"358\":1,\"361\":1,\"363\":1,\"368\":7,\"370\":1,\"371\":3,\"374\":1,\"375\":1,\"376\":3,\"377\":2,\"379\":7,\"380\":1,\"381\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":2,\"411\":1,\"415\":1,\"424\":1,\"425\":1,\"448\":2,\"449\":2,\"450\":3,\"473\":4,\"474\":1,\"476\":2,\"477\":2,\"478\":7,\"479\":1,\"487\":1,\"489\":1,\"493\":1,\"494\":10,\"497\":2,\"499\":1,\"509\":1,\"513\":1,\"529\":1,\"566\":1,\"578\":4,\"581\":1,\"619\":1,\"693\":1}}],[\"lazy=\",{\"1\":{\"486\":1}}],[\"lazy\",{\"0\":{\"486\":1},\"1\":{\"486\":1}}],[\"lazycodeloading\",{\"1\":{\"139\":1}}],[\"layout\",{\"1\":{\"371\":2}}],[\"layoutweight\",{\"1\":{\"39\":1}}],[\"landing\",{\"1\":{\"263\":1}}],[\"landscape\",{\"1\":{\"113\":1,\"142\":2,\"146\":2}}],[\"lang=\",{\"1\":{\"236\":1,\"392\":1,\"398\":1,\"399\":1,\"400\":1,\"480\":1}}],[\"latform\",{\"1\":{\"171\":1}}],[\"latitude=\",{\"1\":{\"133\":1}}],[\"latitude\",{\"1\":{\"133\":1}}],[\"latest\",{\"1\":{\"59\":1,\"186\":1,\"267\":1}}],[\"last\",{\"1\":{\"124\":1,\"344\":2,\"490\":2}}],[\"lastname\",{\"1\":{\"105\":5,\"344\":4,\"366\":2,\"367\":3,\"469\":1,\"470\":1,\"471\":2,\"472\":2,\"473\":3,\"474\":4,\"490\":4}}],[\"launch\",{\"1\":{\"93\":1}}],[\"label=\",{\"1\":{\"578\":2}}],[\"label>\",{\"1\":{\"483\":7}}],[\"labels\",{\"1\":{\"59\":1}}],[\"label\",{\"1\":{\"8\":1}}],[\"lexing\",{\"1\":{\"247\":1}}],[\"lexer\",{\"1\":{\"197\":2}}],[\"learn\",{\"0\":{\"705\":1},\"1\":{\"405\":1}}],[\"leave=\",{\"1\":{\"168\":5,\"171\":1,\"176\":1}}],[\"leave\",{\"1\":{\"155\":2,\"157\":4,\"158\":2,\"159\":2,\"160\":2,\"161\":4,\"163\":3,\"167\":3,\"168\":7,\"170\":1,\"171\":3,\"174\":3,\"176\":4,\"563\":1,\"564\":1}}],[\"leaf\",{\"1\":{\"110\":4,\"112\":1}}],[\"left\",{\"1\":{\"121\":3,\"124\":3,\"132\":3,\"447\":1,\"450\":1,\"480\":1,\"543\":1,\"570\":2,\"571\":2}}],[\"less$\",{\"1\":{\"218\":1}}],[\"lessc\",{\"1\":{\"217\":1}}],[\"less工具处理\",{\"0\":{\"217\":1}}],[\"less等方式来编写\",{\"1\":{\"203\":1}}],[\"less\",{\"0\":{\"218\":1},\"1\":{\"188\":1,\"203\":1,\"205\":1,\"217\":3,\"218\":2,\"268\":1,\"339\":1}}],[\"lessons\",{\"1\":{\"48\":4}}],[\"leshi\",{\"1\":{\"69\":1}}],[\"length\",{\"1\":{\"39\":2,\"40\":2,\"109\":1,\"174\":1,\"305\":1,\"313\":2,\"321\":1,\"330\":2,\"413\":1,\"415\":1,\"416\":1,\"459\":1,\"480\":1,\"561\":1,\"570\":2}}],[\"letters\",{\"1\":{\"463\":3}}],[\"letv\",{\"1\":{\"69\":1}}],[\"let\",{\"1\":{\"23\":1,\"43\":1,\"47\":2,\"48\":2,\"49\":2,\"50\":2,\"51\":2,\"53\":2,\"54\":1,\"59\":1,\"243\":1,\"350\":2,\"356\":1,\"359\":1,\"363\":1,\"364\":1,\"374\":2,\"375\":2,\"384\":2,\"413\":1,\"415\":2,\"416\":1,\"480\":2,\"489\":1,\"568\":1,\"619\":1}}],[\"lidongxuwork\",{\"1\":{\"686\":1}}],[\"lifecycle\",{\"1\":{\"368\":1,\"494\":2}}],[\"live\",{\"1\":{\"254\":1}}],[\"limit\",{\"1\":{\"225\":1}}],[\"literals\",{\"1\":{\"251\":1}}],[\"lit\",{\"1\":{\"186\":1}}],[\"lilei\",{\"1\":{\"176\":1}}],[\"li>\",{\"1\":{\"176\":1,\"299\":5,\"300\":5,\"315\":5,\"316\":5,\"457\":3,\"458\":3,\"459\":1,\"463\":1,\"544\":2}}],[\"lightning\",{\"1\":{\"179\":1}}],[\"light\",{\"1\":{\"142\":2,\"146\":1}}],[\"li\",{\"1\":{\"119\":1,\"463\":2}}],[\"libs\",{\"1\":{\"161\":1}}],[\"lib\",{\"1\":{\"63\":1,\"72\":1,\"271\":1}}],[\"like\",{\"1\":{\"59\":2}}],[\"lisi\",{\"1\":{\"53\":2,\"54\":1,\"55\":1}}],[\"list>\",{\"1\":{\"300\":1,\"316\":1}}],[\"list><\",{\"1\":{\"300\":1,\"316\":1}}],[\"listeners\",{\"1\":{\"314\":6,\"331\":6}}],[\"listen\",{\"1\":{\"201\":1}}],[\"listitemalign\",{\"1\":{\"39\":1}}],[\"listitemexample\",{\"1\":{\"18\":1}}],[\"listitem\",{\"0\":{\"18\":1},\"1\":{\"18\":2,\"39\":1}}],[\"list\",{\"0\":{\"18\":1},\"1\":{\"18\":2,\"39\":1,\"124\":2,\"136\":3,\"143\":4,\"651\":1,\"652\":2,\"668\":1,\"674\":3}}],[\"lin\",{\"1\":{\"105\":1}}],[\"linter\",{\"1\":{\"268\":2}}],[\"lint\",{\"1\":{\"61\":2,\"62\":1,\"268\":3,\"269\":2}}],[\"linear\",{\"1\":{\"288\":1,\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1}}],[\"line\",{\"1\":{\"121\":2,\"123\":2}}],[\"lines\",{\"1\":{\"59\":1}}],[\"linebreak\",{\"1\":{\"59\":1}}],[\"linethrough\",{\"1\":{\"17\":1,\"39\":1}}],[\"link>\",{\"1\":{\"540\":2,\"543\":2,\"546\":2,\"547\":5,\"549\":1,\"550\":1,\"578\":3}}],[\"link>`\",{\"1\":{\"540\":1,\"543\":1}}],[\"link装饰的变量与其父组件中的数据源共享相同的值\",{\"1\":{\"40\":1}}],[\"link装饰的变量与其父组件中对应的数据源建立双向数据绑定\",{\"1\":{\"40\":1}}],[\"link\",{\"0\":{\"40\":1,\"541\":1},\"1\":{\"38\":1,\"40\":2,\"251\":1,\"437\":1,\"438\":2,\"540\":3,\"541\":1,\"543\":4,\"544\":4,\"546\":2,\"547\":9,\"550\":2,\"553\":1,\"578\":3}}],[\"商品列表\",{\"1\":{\"17\":1}}],[\"3个关系是什么\",{\"1\":{\"634\":1}}],[\"3时\",{\"1\":{\"311\":1,\"327\":1}}],[\"3中\",{\"1\":{\"292\":1,\"342\":1,\"351\":1,\"354\":1}}],[\"3版本开始\",{\"1\":{\"251\":1}}],[\"38\",{\"1\":{\"250\":2}}],[\"32个十六进制\",{\"1\":{\"228\":1}}],[\"3s\",{\"1\":{\"159\":1,\"163\":1}}],[\"34rpx\",{\"1\":{\"148\":1}}],[\"375px\",{\"1\":{\"148\":1}}],[\"315deg\",{\"1\":{\"288\":1}}],[\"31\",{\"1\":{\"139\":1}}],[\"312\",{\"1\":{\"40\":2}}],[\"39\",{\"1\":{\"133\":1,\"480\":1}}],[\"3999\",{\"1\":{\"17\":1}}],[\"3起支持传入其余单位\",{\"1\":{\"125\":1}}],[\"353535\",{\"1\":{\"121\":1,\"124\":1}}],[\"36rpx\",{\"1\":{\"121\":3,\"124\":3}}],[\"36px\",{\"1\":{\"121\":1}}],[\"360\",{\"1\":{\"69\":1}}],[\"36d\",{\"1\":{\"39\":1}}],[\"3666\",{\"1\":{\"17\":1}}],[\"3\",{\"0\":{\"600\":1},\"1\":{\"18\":1,\"33\":1,\"40\":15,\"50\":1,\"51\":1,\"68\":1,\"103\":1,\"109\":2,\"121\":4,\"123\":1,\"124\":4,\"126\":2,\"130\":1,\"132\":1,\"136\":1,\"139\":6,\"146\":2,\"174\":1,\"192\":2,\"195\":1,\"250\":1,\"251\":1,\"259\":1,\"268\":1,\"314\":2,\"331\":2,\"347\":2,\"357\":3,\"370\":1,\"371\":1,\"388\":1,\"400\":1,\"404\":1,\"405\":1,\"430\":2,\"437\":2,\"478\":2,\"480\":2,\"483\":1,\"496\":1,\"505\":2,\"514\":1,\"540\":1,\"547\":2,\"552\":2,\"561\":1,\"573\":1,\"611\":1,\"619\":1,\"632\":1,\"643\":1,\"694\":4,\"695\":2,\"696\":1}}],[\"304\",{\"1\":{\"197\":1,\"198\":1}}],[\"30px\",{\"1\":{\"163\":1,\"174\":1,\"443\":2,\"444\":1}}],[\"300px\",{\"1\":{\"603\":3}}],[\"3000服务器上\",{\"1\":{\"262\":2}}],[\"3000但是本地启动服务器的域名是\",{\"1\":{\"262\":1}}],[\"3000\",{\"1\":{\"197\":2,\"262\":2,\"263\":1,\"282\":1}}],[\"300rpx\",{\"1\":{\"121\":2,\"124\":4}}],[\"300\",{\"1\":{\"16\":1,\"24\":1,\"40\":1,\"359\":1}}],[\"30\",{\"1\":{\"14\":14,\"15\":10,\"16\":1,\"17\":1,\"39\":1,\"126\":1,\"139\":2,\"146\":2,\"483\":1,\"578\":1}}],[\"2`\",{\"1\":{\"563\":1}}],[\"2scrlta\",{\"1\":{\"529\":1}}],[\"2+\",{\"1\":{\"437\":2,\"565\":1}}],[\"25s\",{\"1\":{\"163\":1}}],[\"25\",{\"1\":{\"160\":1,\"288\":1}}],[\"2rpx\",{\"1\":{\"148\":1}}],[\"23\",{\"1\":{\"125\":1}}],[\"22\",{\"1\":{\"139\":1,\"375\":1}}],[\"220rpx\",{\"1\":{\"124\":3}}],[\"2238019049\",{\"1\":{\"123\":1}}],[\"2782d7\",{\"1\":{\"121\":1,\"124\":1}}],[\"26rpx\",{\"1\":{\"121\":1,\"136\":1}}],[\"2666\",{\"1\":{\"17\":1}}],[\"2409824853\",{\"1\":{\"123\":1}}],[\"24\",{\"1\":{\"39\":3,\"139\":1,\"142\":1,\"146\":2}}],[\"21\",{\"1\":{\"38\":1,\"125\":1}}],[\"2g\",{\"1\":{\"30\":1}}],[\"2\",{\"0\":{\"595\":1},\"1\":{\"18\":1,\"23\":1,\"36\":1,\"39\":1,\"40\":9,\"50\":1,\"51\":1,\"59\":34,\"93\":2,\"98\":1,\"103\":1,\"109\":2,\"113\":2,\"121\":4,\"124\":5,\"125\":2,\"126\":6,\"130\":1,\"132\":2,\"139\":17,\"142\":7,\"143\":3,\"146\":12,\"148\":1,\"167\":1,\"174\":1,\"186\":1,\"192\":1,\"256\":1,\"259\":1,\"268\":1,\"347\":2,\"354\":7,\"357\":2,\"370\":1,\"371\":1,\"388\":1,\"390\":1,\"398\":1,\"399\":1,\"400\":1,\"402\":1,\"404\":2,\"405\":1,\"408\":1,\"426\":1,\"430\":2,\"437\":1,\"438\":1,\"459\":1,\"463\":1,\"473\":1,\"478\":1,\"480\":2,\"483\":5,\"496\":1,\"514\":1,\"547\":2,\"561\":3,\"565\":2,\"581\":2,\"611\":1,\"616\":1,\"619\":1,\"629\":1,\"632\":1,\"641\":1,\"643\":1,\"661\":1,\"694\":1,\"697\":1}}],[\"2999\",{\"1\":{\"17\":1}}],[\"20<\",{\"1\":{\"544\":1}}],[\"2015+\",{\"1\":{\"241\":1}}],[\"20+\",{\"1\":{\"185\":1}}],[\"20px\",{\"1\":{\"159\":1,\"578\":1,\"603\":1}}],[\"20rpx\",{\"1\":{\"124\":1}}],[\"20210601212946879\",{\"1\":{\"689\":1}}],[\"20231031200224648\",{\"1\":{\"483\":1}}],[\"20231031204213497\",{\"1\":{\"334\":1}}],[\"20231022182300781\",{\"1\":{\"464\":1}}],[\"20231022182341619\",{\"1\":{\"464\":1}}],[\"20231022182251535\",{\"1\":{\"464\":1}}],[\"20231022182241976\",{\"1\":{\"464\":1}}],[\"20231022182232738\",{\"1\":{\"464\":1}}],[\"20231022182140133\",{\"1\":{\"464\":1}}],[\"20231022182012027\",{\"1\":{\"464\":1}}],[\"20231020164733530\",{\"1\":{\"464\":1}}],[\"20231020163154944\",{\"1\":{\"462\":1}}],[\"20231020162812819\",{\"1\":{\"461\":1}}],[\"20231019222841008\",{\"1\":{\"455\":1}}],[\"20231019005251770\",{\"1\":{\"450\":1}}],[\"20231019004604619\",{\"1\":{\"449\":1}}],[\"20231018083558572\",{\"1\":{\"433\":1}}],[\"20231016233051010\",{\"1\":{\"428\":1}}],[\"20231223002327799\",{\"1\":{\"547\":1}}],[\"20231223000208274\",{\"1\":{\"544\":1}}],[\"20231219001638121\",{\"1\":{\"421\":1}}],[\"20231219001340177\",{\"1\":{\"420\":1}}],[\"20231219000840061\",{\"1\":{\"419\":1}}],[\"20231218195545969\",{\"1\":{\"392\":1}}],[\"20231218002757954\",{\"1\":{\"368\":1}}],[\"20231217231330425\",{\"1\":{\"379\":1}}],[\"20231217231108219\",{\"1\":{\"379\":1}}],[\"20231217214736939\",{\"1\":{\"377\":1}}],[\"20231217214139261\",{\"1\":{\"371\":1}}],[\"20231217170024283\",{\"1\":{\"363\":1}}],[\"20231216000029755\",{\"1\":{\"346\":1}}],[\"20231205013406501\",{\"1\":{\"294\":1}}],[\"20231205012902405\",{\"1\":{\"292\":1}}],[\"20231205012048085\",{\"1\":{\"291\":1}}],[\"20231205011717002\",{\"1\":{\"290\":1}}],[\"20231205010910410\",{\"1\":{\"288\":1}}],[\"20231130195805276\",{\"1\":{\"313\":1,\"330\":1}}],[\"20231124000011715\",{\"1\":{\"301\":1,\"317\":1}}],[\"20231122103654515\",{\"1\":{\"268\":1}}],[\"20231122103618450\",{\"1\":{\"268\":1}}],[\"20231122103332793\",{\"1\":{\"268\":1}}],[\"20231122171839049\",{\"1\":{\"182\":1}}],[\"20231122171817220\",{\"1\":{\"182\":1}}],[\"20231119222920881\",{\"1\":{\"265\":1}}],[\"20231119203330239\",{\"1\":{\"258\":1}}],[\"20231119201428778\",{\"1\":{\"256\":1}}],[\"20231119190420271\",{\"1\":{\"254\":1}}],[\"20231117234618957\",{\"1\":{\"251\":1}}],[\"20231116220536704\",{\"1\":{\"248\":1}}],[\"20231116205317664\",{\"1\":{\"247\":1}}],[\"20231116205304599\",{\"1\":{\"247\":1}}],[\"20231112151429444\",{\"1\":{\"233\":1}}],[\"20231111211324041\",{\"1\":{\"225\":1}}],[\"20231105235229201\",{\"1\":{\"209\":1}}],[\"20231102102926580\",{\"1\":{\"204\":1}}],[\"20240121215332766\",{\"1\":{\"128\":1}}],[\"20240121004604493\",{\"1\":{\"126\":1}}],[\"20240120160819935\",{\"1\":{\"146\":1}}],[\"20240120160151572\",{\"1\":{\"143\":1}}],[\"20240120162353536\",{\"1\":{\"121\":1}}],[\"20240120161419501\",{\"1\":{\"119\":1}}],[\"20240119215440525\",{\"1\":{\"83\":1}}],[\"20240417123240912\",{\"1\":{\"30\":1}}],[\"20240417123227197\",{\"1\":{\"30\":1}}],[\"20240417123220059\",{\"1\":{\"30\":1}}],[\"20240417123155182\",{\"1\":{\"30\":1}}],[\"20240417123136573\",{\"1\":{\"30\":1}}],[\"20240417123115419\",{\"1\":{\"30\":1}}],[\"20240417123103057\",{\"1\":{\"30\":1}}],[\"20240417123043858\",{\"1\":{\"30\":1}}],[\"20240417123032281\",{\"1\":{\"30\":1}}],[\"20240417122953229\",{\"1\":{\"30\":1}}],[\"20240417122932610\",{\"1\":{\"30\":1}}],[\"20240417122904349\",{\"1\":{\"29\":1}}],[\"20240417122439395\",{\"1\":{\"28\":1}}],[\"20240417122305876\",{\"1\":{\"27\":1}}],[\"20240417122238577\",{\"1\":{\"27\":1}}],[\"20240417122147373\",{\"1\":{\"27\":1}}],[\"20240417121951184\",{\"1\":{\"26\":1}}],[\"20240417121841096\",{\"1\":{\"26\":1}}],[\"20240417121810196\",{\"1\":{\"26\":1}}],[\"20240417121723826\",{\"1\":{\"26\":1}}],[\"202404182317729\",{\"1\":{\"17\":6}}],[\"20220608183526635\",{\"1\":{\"82\":1}}],[\"20220122201456358\",{\"1\":{\"82\":1}}],[\"20220122170116175\",{\"1\":{\"81\":1}}],[\"2008\",{\"1\":{\"480\":1}}],[\"2006\",{\"1\":{\"480\":3}}],[\"200ms\",{\"1\":{\"282\":1}}],[\"2000\",{\"1\":{\"282\":1,\"376\":1}}],[\"200px\",{\"1\":{\"167\":1,\"543\":1}}],[\"2004271\",{\"1\":{\"139\":1}}],[\"200rpx\",{\"1\":{\"121\":2}}],[\"200\",{\"1\":{\"16\":1,\"24\":1,\"39\":1,\"40\":1,\"171\":2}}],[\"20\",{\"1\":{\"12\":1,\"16\":3,\"17\":3,\"18\":1,\"39\":3,\"126\":1,\"139\":1,\"544\":1}}],[\"华为mate6\",{\"1\":{\"17\":1}}],[\"华为mate5\",{\"1\":{\"17\":1}}],[\"华为mate4\",{\"1\":{\"17\":1}}],[\"华为mate3\",{\"1\":{\"17\":1}}],[\"华为mate2\",{\"1\":{\"17\":1}}],[\"华为mate1\",{\"1\":{\"17\":1}}],[\"www\",{\"1\":{\"438\":1,\"651\":1,\"668\":1,\"692\":1}}],[\"wc\",{\"1\":{\"271\":2}}],[\"wk\",{\"1\":{\"212\":3}}],[\"w=500\",{\"1\":{\"123\":1}}],[\"w=1200\",{\"1\":{\"123\":1}}],[\"w=800\",{\"1\":{\"123\":2}}],[\"wrap\",{\"1\":{\"547\":1,\"551\":1}}],[\"wrapper\",{\"1\":{\"121\":4}}],[\"wrp\",{\"1\":{\"121\":3}}],[\"write\",{\"1\":{\"61\":1}}],[\"we\",{\"0\":{\"703\":1}}],[\"weight\",{\"1\":{\"480\":1}}],[\"weixin\",{\"1\":{\"69\":2,\"80\":1,\"81\":1,\"86\":1,\"89\":1,\"91\":3,\"99\":1,\"106\":2,\"107\":1,\"110\":2,\"113\":1,\"114\":1,\"119\":1,\"123\":2,\"124\":2,\"128\":1,\"130\":1,\"132\":2,\"133\":1,\"134\":1,\"139\":1,\"147\":1,\"529\":1}}],[\"welcome\",{\"1\":{\"349\":1}}],[\"webkit\",{\"1\":{\"221\":1,\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1}}],[\"websocket\",{\"1\":{\"201\":5}}],[\"webpack能解析三种文件路径\",{\"1\":{\"264\":1}}],[\"webpack依赖图中的所有文件\",{\"1\":{\"253\":1}}],[\"webpack依然需要构建完整的模块依赖图\",{\"1\":{\"182\":1}}],[\"webpack给我们提供了watch模式\",{\"1\":{\"253\":1}}],[\"webpack给我们提供了大量的placeholders来显示不同的内容\",{\"1\":{\"228\":1}}],[\"webpack提供了几种可选的方式\",{\"1\":{\"252\":1}}],[\"webpack是一个流行的前端构建工具\",{\"1\":{\"252\":1}}],[\"webpack是如何确定我们的入口的呢\",{\"1\":{\"208\":1}}],[\"webpack会默认将打包后的文件输出到内存中\",{\"1\":{\"254\":1}}],[\"webpack会自动重新编译代码\",{\"1\":{\"252\":1}}],[\"webpack会根据我们的预设来加载对应的插件列表\",{\"1\":{\"248\":1}}],[\"webpack会查找当前目录下的\",{\"1\":{\"208\":1}}],[\"webpack5中不再使用\",{\"1\":{\"215\":1}}],[\"webpack5\",{\"1\":{\"214\":1}}],[\"webpack将根据配置文件进行打包\",{\"1\":{\"213\":1}}],[\"webpack通过以下步骤对项目进行打包\",{\"1\":{\"213\":1}}],[\"webpack需要打包的项目是非常复杂的\",{\"1\":{\"211\":1}}],[\"webpack配置\",{\"0\":{\"210\":1}}],[\"webpack可以将多个模块打包成一个或多个浏览器可识别的文件\",{\"1\":{\"208\":1}}],[\"webpack可以将帮助我们进行打包\",{\"1\":{\"204\":1}}],[\"webpack在执行时是依赖webpack\",{\"1\":{\"207\":1}}],[\"webpack的依赖\",{\"0\":{\"213\":1}}],[\"webpack的默认打包\",{\"0\":{\"208\":1}}],[\"webpack的安装目前分为两个\",{\"1\":{\"207\":1}}],[\"webpack的安装\",{\"0\":{\"207\":1}}],[\"webpack的运行是依赖node环境的\",{\"1\":{\"206\":1}}],[\"webpack的中文官方文档是webpack\",{\"1\":{\"206\":1}}],[\"webpack的官方文档是webpack\",{\"1\":{\"206\":1}}],[\"webpack的使用\",{\"0\":{\"206\":1}}],[\"webpack默认支持各种模块化开发\",{\"1\":{\"204\":1}}],[\"webpack到底是什么呢\",{\"0\":{\"204\":1}}],[\"webpack\",{\"0\":{\"202\":1,\"209\":1,\"211\":1,\"240\":1,\"250\":1,\"252\":1,\"253\":1,\"254\":1},\"1\":{\"180\":2,\"182\":1,\"197\":1,\"204\":3,\"207\":2,\"208\":3,\"209\":4,\"212\":2,\"213\":1,\"214\":1,\"222\":1,\"228\":1,\"234\":2,\"235\":1,\"236\":1,\"237\":2,\"238\":4,\"248\":2,\"249\":1,\"250\":2,\"251\":1,\"252\":3,\"253\":2,\"254\":4,\"255\":1,\"256\":2,\"257\":1,\"258\":5,\"259\":1,\"262\":2,\"263\":3,\"264\":11,\"265\":9,\"266\":1,\"270\":1,\"272\":5,\"282\":1,\"339\":1}}],[\"web\",{\"0\":{\"700\":1},\"1\":{\"92\":1,\"256\":1,\"259\":1,\"268\":1,\"271\":2,\"447\":1,\"686\":1}}],[\"webview\",{\"1\":{\"69\":19,\"104\":2,\"124\":1,\"132\":9}}],[\"wechat\",{\"1\":{\"63\":1,\"72\":2}}],[\"wxs>\",{\"1\":{\"108\":1,\"109\":1}}],[\"wxs\",{\"0\":{\"107\":1},\"1\":{\"107\":7,\"109\":1}}],[\"wxss文件\",{\"0\":{\"87\":1}}],[\"wxss\",{\"0\":{\"147\":1},\"1\":{\"84\":1,\"87\":1,\"90\":1,\"124\":1,\"136\":1,\"141\":1,\"147\":5,\"149\":3,\"152\":3}}],[\"wxml\",{\"0\":{\"101\":1},\"1\":{\"84\":1,\"90\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":1,\"107\":1,\"108\":1,\"109\":1,\"110\":2,\"111\":2,\"112\":1,\"117\":1,\"118\":1,\"136\":1,\"141\":1,\"147\":2}}],[\"wx\",{\"1\":{\"65\":1,\"103\":1,\"104\":3,\"117\":1,\"118\":1,\"123\":2,\"135\":1,\"136\":6,\"144\":4}}],[\"woff2\",{\"1\":{\"198\":1}}],[\"work\",{\"1\":{\"236\":1}}],[\"worker\",{\"1\":{\"139\":1}}],[\"workers\",{\"1\":{\"139\":1}}],[\"worklet\",{\"1\":{\"124\":2}}],[\"word\",{\"1\":{\"59\":1}}],[\"world>\",{\"1\":{\"250\":1}}],[\"world><\",{\"1\":{\"250\":1}}],[\"world<\",{\"1\":{\"168\":1,\"170\":1,\"171\":1}}],[\"world的显示和隐藏\",{\"1\":{\"154\":1}}],[\"world`\",{\"1\":{\"23\":1,\"24\":1}}],[\"world\",{\"1\":{\"21\":6,\"23\":1,\"29\":1,\"108\":1,\"250\":2,\"268\":1,\"359\":1,\"392\":1,\"430\":1,\"441\":1,\"443\":1,\"444\":1,\"448\":1,\"449\":1,\"450\":1,\"469\":1,\"471\":1,\"472\":1,\"476\":1,\"483\":1,\"497\":1,\"527\":2}}],[\"would\",{\"1\":{\"59\":2}}],[\"why\",{\"1\":{\"167\":7,\"174\":7,\"175\":1,\"176\":6,\"313\":2,\"330\":2,\"344\":3,\"376\":3,\"379\":3,\"380\":2,\"440\":1,\"446\":2,\"457\":1,\"458\":1,\"474\":1,\"477\":2,\"527\":4}}],[\"when\",{\"1\":{\"93\":3}}],[\"where\",{\"1\":{\"59\":1,\"268\":1}}],[\"whilelist\",{\"1\":{\"568\":2}}],[\"which\",{\"1\":{\"59\":2}}],[\"white\",{\"1\":{\"39\":2,\"124\":2,\"142\":2,\"143\":1,\"146\":2}}],[\"what\",{\"1\":{\"59\":2,\"347\":1,\"525\":1}}],[\"whole\",{\"1\":{\"40\":1}}],[\"will\",{\"1\":{\"236\":1}}],[\"wiki\",{\"1\":{\"171\":1}}],[\"with\",{\"1\":{\"98\":1,\"186\":1,\"251\":1,\"268\":1,\"544\":1}}],[\"without\",{\"1\":{\"98\":1,\"236\":1}}],[\"window\",{\"0\":{\"142\":1},\"1\":{\"92\":1,\"113\":1,\"117\":2,\"139\":1,\"142\":1,\"146\":2,\"503\":5,\"529\":4,\"552\":1,\"563\":1}}],[\"windows\",{\"1\":{\"67\":1,\"68\":1,\"142\":1,\"146\":1,\"267\":1}}],[\"windowstage等类\",{\"1\":{\"33\":1}}],[\"widthfix\",{\"1\":{\"132\":1}}],[\"width=device\",{\"1\":{\"236\":1,\"480\":1}}],[\"width=\",{\"1\":{\"126\":1}}],[\"width\",{\"1\":{\"3\":1,\"14\":24,\"15\":24,\"16\":6,\"17\":4,\"18\":2,\"24\":1,\"38\":1,\"39\":5,\"40\":2,\"121\":3,\"123\":1,\"124\":4,\"126\":1,\"136\":2,\"167\":1,\"236\":1,\"480\":1,\"578\":2,\"603\":3}}],[\"watch的选项\",{\"0\":{\"381\":1}}],[\"watch的api完全等同于组件watch选项的property\",{\"1\":{\"378\":1}}],[\"watch侦听函数的数据源有两种类型\",{\"1\":{\"379\":1}}],[\"watch允许我们\",{\"1\":{\"378\":1}}],[\"watch需要侦听特定的数据源\",{\"1\":{\"378\":1}}],[\"watch需要手动指定侦听的数据源\",{\"1\":{\"372\":1}}],[\"watcheffect的执行时机\",{\"0\":{\"377\":1}}],[\"watcheffect传入的函数才会再次执行\",{\"1\":{\"374\":1}}],[\"watcheffect传入的函数会被立即执行一次\",{\"1\":{\"374\":1}}],[\"watcheffect用于自动收集响应式数据的依赖\",{\"1\":{\"372\":1}}],[\"watcheffect\",{\"0\":{\"373\":1},\"1\":{\"361\":2,\"374\":2,\"375\":2,\"376\":3,\"377\":4,\"505\":4,\"508\":1}}],[\"watch中监听属性改变\",{\"1\":{\"346\":1}}],[\"watch命令即可开启watch模式\",{\"1\":{\"253\":1}}],[\"watch参数来开启watch模式\",{\"1\":{\"253\":1}}],[\"watch选项启用监听模式等\",{\"1\":{\"213\":1}}],[\"watch\",{\"0\":{\"253\":1,\"378\":1,\"475\":1},\"1\":{\"172\":1,\"252\":1,\"253\":2,\"271\":1,\"379\":9,\"380\":3,\"381\":2,\"382\":1,\"383\":1,\"475\":2,\"476\":1,\"477\":5,\"478\":2,\"479\":1,\"505\":1,\"508\":1,\"582\":2}}],[\"waiting\",{\"1\":{\"125\":1}}],[\"waite\",{\"1\":{\"17\":6,\"58\":1}}],[\"warning\",{\"1\":{\"306\":1,\"322\":1,\"361\":1}}],[\"warnfailedfetch\",{\"1\":{\"201\":1}}],[\"warn\",{\"1\":{\"59\":3,\"125\":2,\"128\":1,\"250\":1}}],[\"want\",{\"1\":{\"59\":2,\"563\":1}}],[\"wang\",{\"1\":{\"17\":6,\"58\":1}}],[\"以相应的规则保证状态以一种可预测的方式发生变化\",{\"1\":{\"591\":1,\"688\":1}}],[\"以对象的方式返回以供组件使用\",{\"1\":{\"581\":1}}],[\"以使滚动行为与你的页面过渡很好地结合起来\",{\"1\":{\"571\":1}}],[\"以取消导航\",{\"1\":{\"559\":1}}],[\"以避免目标\",{\"1\":{\"548\":1}}],[\"以避免二者同时存在时出现的布局问题\",{\"1\":{\"164\":1}}],[\"以适应你的布局\",{\"1\":{\"542\":1,\"543\":1}}],[\"以供\",{\"1\":{\"449\":1}}],[\"以应用一个\",{\"1\":{\"441\":1}}],[\"以动态地切换\",{\"1\":{\"440\":1}}],[\"以像搭建积木一下来搭建我们的项目\",{\"1\":{\"333\":1}}],[\"以实现动态插槽名的效果\",{\"1\":{\"292\":1}}],[\"以实现一致的代码样式\",{\"1\":{\"268\":1}}],[\"以确定每一处要渲染的内容\",{\"1\":{\"291\":1}}],[\"以确保提交的代码符合规范\",{\"1\":{\"268\":1}}],[\"以英文逗号分隔的字符串\",{\"1\":{\"279\":1}}],[\"以帮助分析包内容\",{\"1\":{\"271\":2}}],[\"以验证整个应用程序的功能和流程\",{\"1\":{\"268\":1}}],[\"以提供更强大的开发工具和更可靠的代码\",{\"1\":{\"268\":1}}],[\"以提高样式表的可维护性和可重用性\",{\"1\":{\"268\":1}}],[\"以提高开发效率\",{\"1\":{\"252\":1}}],[\"以提高后续页面加载性能\",{\"1\":{\"197\":1}}],[\"以上所有都同\",{\"1\":{\"559\":1}}],[\"以上\",{\"1\":{\"267\":1}}],[\"以改变请求头中的origin字段\",{\"1\":{\"262\":1}}],[\"以减小文件大小\",{\"1\":{\"261\":1}}],[\"以获取更详细的关于hmr的配置和使用说明\",{\"1\":{\"257\":1}}],[\"以获得更好的开发和部署体验\",{\"1\":{\"251\":1}}],[\"以启用hmr\",{\"1\":{\"257\":1}}],[\"以满足你的开发需求\",{\"1\":{\"252\":1}}],[\"以满足更多个性化的场景\",{\"1\":{\"135\":1}}],[\"以修改和优化ast\",{\"1\":{\"247\":1}}],[\"以便以后再来\",{\"1\":{\"569\":1}}],[\"以便暴露给\",{\"1\":{\"513\":1}}],[\"以便为新的实例腾出空间\",{\"1\":{\"280\":1}}],[\"以便进行测试和调试\",{\"1\":{\"252\":1}}],[\"以便在该组件被卸载时停止监听\",{\"1\":{\"511\":1}}],[\"以便在将来的项目中重用\",{\"1\":{\"268\":1}}],[\"以便在不同浏览器和环境中运行\",{\"1\":{\"268\":1}}],[\"以便在开发过程中实现更快的热更新\",{\"1\":{\"257\":1}}],[\"以便在当前和旧版浏览器或环境中运行\",{\"1\":{\"241\":1}}],[\"以便在部署应用程序时使用\",{\"1\":{\"238\":1}}],[\"以便在应用程序中使用\",{\"1\":{\"214\":1}}],[\"以便让vue知道过渡已经完成\",{\"1\":{\"171\":1}}],[\"以后会采用\",{\"1\":{\"214\":1}}],[\"以\",{\"1\":{\"197\":2,\"250\":1,\"267\":1,\"548\":1,\"557\":1}}],[\"以html入口\",{\"1\":{\"180\":1}}],[\"以毫秒为单位\",{\"1\":{\"163\":1}}],[\"以免影响渲染速度\",{\"1\":{\"150\":1}}],[\"以保证\",{\"1\":{\"135\":1}}],[\"以兼容\",{\"1\":{\"124\":1}}],[\"以方便小程序的开发\",{\"1\":{\"92\":1}}],[\"以及其他\",{\"1\":{\"584\":1}}],[\"以及自动补全✨\",{\"1\":{\"584\":1}}],[\"以及子路由记录\",{\"1\":{\"569\":1}}],[\"以及组合式函数\",{\"0\":{\"495\":1}}],[\"以及该操作的目标对象和键\",{\"1\":{\"494\":1}}],[\"以及可以帮助我\",{\"1\":{\"346\":1}}],[\"以及一个自定义的验证函数\",{\"1\":{\"305\":1,\"321\":1}}],[\"以及一些其他的\",{\"1\":{\"223\":1}}],[\"以及手动编写渲染函数时使用作用域插槽的方式非常类似了\",{\"1\":{\"294\":1}}],[\"以及相应的样式\",{\"1\":{\"288\":1}}],[\"以及在编辑器中进行实时错误检测和提示\",{\"1\":{\"268\":1}}],[\"以及在webpack配置文件中配置hmr选项\",{\"1\":{\"257\":1}}],[\"以及\",{\"1\":{\"124\":1,\"143\":1,\"379\":1,\"402\":1}}],[\"以及基于\",{\"1\":{\"90\":1}}],[\"以及哪些可以被保留而不进行重新渲染\",{\"1\":{\"40\":1}}],[\"以及这些类型的数组\",{\"1\":{\"38\":1}}],[\"以下报错\",{\"1\":{\"438\":1}}],[\"以下的代码\",{\"1\":{\"348\":1}}],[\"以下为不使用深度监听\",{\"1\":{\"477\":1}}],[\"以下为内部判断\",{\"1\":{\"474\":1}}],[\"以下为错误写法\",{\"1\":{\"430\":1}}],[\"以下为\",{\"1\":{\"249\":1}}],[\"以下使用\",{\"1\":{\"248\":1}}],[\"以下版本\",{\"1\":{\"146\":1}}],[\"以下简单列举了一部分\",{\"1\":{\"139\":1}}],[\"以下我会给出\",{\"1\":{\"124\":1}}],[\"以下会介绍一些常用的标签\",{\"1\":{\"119\":1}}],[\"以下是在\",{\"1\":{\"695\":1,\"696\":1}}],[\"以下是在单个页面\",{\"1\":{\"113\":1}}],[\"以下是完整代码\",{\"1\":{\"379\":1}}],[\"以下是最基本用法的示例\",{\"1\":{\"155\":1}}],[\"以下是横向滚动案例\",{\"1\":{\"124\":1}}],[\"以下是一些名词解释\",{\"1\":{\"354\":1}}],[\"以下是一些常用的\",{\"1\":{\"244\":1}}],[\"以下是一些常见的框架的hmr支持方式\",{\"1\":{\"257\":1}}],[\"以下是一些常见的\",{\"1\":{\"243\":1}}],[\"以下是一些使用\",{\"1\":{\"107\":1}}],[\"以下是一个小\",{\"1\":{\"544\":1}}],[\"以下是一个示例\",{\"1\":{\"311\":1,\"314\":1,\"327\":1,\"331\":1}}],[\"以下是一个示例配置\",{\"1\":{\"263\":1}}],[\"以下是一个使用\",{\"1\":{\"241\":1}}],[\"以下是一个简单示例\",{\"1\":{\"143\":1}}],[\"以下是一个简单的示例\",{\"1\":{\"310\":1,\"326\":1}}],[\"以下是一个简单的自定义\",{\"1\":{\"136\":1}}],[\"以下是一个简单的轮播图效果\",{\"1\":{\"123\":1}}],[\"以下是一个简单例子\",{\"1\":{\"17\":1}}],[\"以下是一个\",{\"1\":{\"121\":1,\"250\":1,\"694\":1}}],[\"以下就是微信小程序开发工具的界面\",{\"1\":{\"82\":1}}],[\"以下示例中数据源为count\",{\"1\":{\"36\":1}}],[\"以下示例中increaseby变量为常规变量\",{\"1\":{\"36\":1}}],[\"以声明式的方式来描述ui的结构\",{\"1\":{\"3\":1}}],[\"这很有用\",{\"1\":{\"574\":1}}],[\"这在为不同的路由重用守卫时很有用\",{\"1\":{\"561\":1}}],[\"这在长期维护的大型项目中非常关键\",{\"1\":{\"346\":1}}],[\"这允许你利用组件嵌套\",{\"1\":{\"557\":1}}],[\"这跟代码调用\",{\"1\":{\"546\":1}}],[\"这有以下优点\",{\"1\":{\"546\":1}}],[\"这有助于提高代码的可维护性和可靠性\",{\"1\":{\"311\":1,\"327\":1}}],[\"这时候就可以使用别名\",{\"1\":{\"555\":1}}],[\"这时后端只是负责提供api了\",{\"1\":{\"537\":1}}],[\"这时就需要使用代理将客户端的api请求转发到后端api服务器上\",{\"1\":{\"262\":1}}],[\"这使追溯实现和理解组件行为变得困难\",{\"1\":{\"514\":1}}],[\"这使得\",{\"1\":{\"541\":1}}],[\"这使得我们可以在开发过程中更方便地编写和调试模板\",{\"1\":{\"530\":1}}],[\"这使得我们可以像使用多个组件组合成整个应用一样\",{\"1\":{\"503\":1}}],[\"这使得它们隐性地耦合在一起\",{\"1\":{\"514\":1}}],[\"这使得组件之间可以方便地共享对象和状态\",{\"1\":{\"33\":1}}],[\"这使得组件之间相互隔离\",{\"1\":{\"32\":1}}],[\"这确保了在\",{\"1\":{\"505\":1}}],[\"这将会删除之前已经添加的路由\",{\"1\":{\"574\":1}}],[\"这将会重新触发\",{\"1\":{\"505\":1}}],[\"这将有助于提高应用程序的性能和加载速度\",{\"1\":{\"251\":1}}],[\"这正是为什么我们决定将实现了这一设计模式的\",{\"1\":{\"503\":1}}],[\"这次更新对于ul和button是不需要进行更新\",{\"1\":{\"463\":1}}],[\"这次因为某些样式我们需要根据数据动态来决定\",{\"1\":{\"442\":1}}],[\"这三个指令与javascript的条件语句if\",{\"1\":{\"452\":1}}],[\"这三大框架的创建过程我们都是借助于脚手架\",{\"1\":{\"203\":1}}],[\"这就是ref名称的来源\",{\"1\":{\"355\":1}}],[\"这就是composition\",{\"1\":{\"346\":1}}],[\"这就意味着每个组件都会有自己的模板\",{\"1\":{\"339\":1}}],[\"这就意味着\",{\"1\":{\"40\":1}}],[\"这让我们能够使用同样的\",{\"1\":{\"335\":1}}],[\"这部分独立的功能\",{\"1\":{\"333\":1}}],[\"这也允许你在相同路由上使用不同的参数触发过渡\",{\"1\":{\"570\":1}}],[\"这也是数据可预测特性里不可缺少的一环\",{\"1\":{\"684\":1}}],[\"这也是我们推荐在组合式函数中使用\",{\"1\":{\"514\":1}}],[\"这也是官方推荐的写法\",{\"1\":{\"306\":1,\"322\":1}}],[\"这也就出现了多个模块化方案\",{\"1\":{\"195\":1}}],[\"这已经和作用域插槽的最终代码编译结果\",{\"1\":{\"294\":1}}],[\"这和\",{\"1\":{\"293\":1}}],[\"这类打包工具\",{\"1\":{\"340\":1}}],[\"这类带\",{\"1\":{\"291\":1}}],[\"这类的模块化语法\",{\"1\":{\"195\":1}}],[\"这两个工具函数\",{\"1\":{\"349\":1}}],[\"这两个\",{\"1\":{\"279\":1}}],[\"这两个线程的通信会经由微信客户端\",{\"1\":{\"90\":1}}],[\"这会取消导航并且调用\",{\"1\":{\"559\":1}}],[\"这会导致它丢失其中所有已变化的状态\",{\"1\":{\"278\":1}}],[\"这会带来一个小问题\",{\"1\":{\"163\":1}}],[\"这\",{\"1\":{\"262\":1}}],[\"这包括设置服务器的端口\",{\"1\":{\"252\":1}}],[\"这意味着你可以简单地写\",{\"1\":{\"569\":1}}],[\"这意味着你可以向任何导航守卫传递第三个参数\",{\"1\":{\"559\":1}}],[\"这意味着你应当避免解构它们\",{\"1\":{\"349\":1}}],[\"这意味着我们需要更多的代码来实现相同的功能\",{\"1\":{\"530\":1}}],[\"这意味着对嵌套对象属性的修改不会触发响应\",{\"1\":{\"358\":1}}],[\"这意味着一个以\",{\"1\":{\"335\":1}}],[\"这意味着其他计算机或设备可以通过网络访问该应用程序\",{\"1\":{\"260\":1}}],[\"这意味着只有本地计算机或设备上的进程可以访问该应用程序\",{\"1\":{\"260\":1}}],[\"这意味着当您运行\",{\"1\":{\"223\":1}}],[\"这意味着您可以在\",{\"1\":{\"223\":1}}],[\"这意味着它在任意别的组件中都可以被使用\",{\"1\":{\"155\":1}}],[\"这可能会使你的应用暴露出一些安全漏洞\",{\"1\":{\"580\":1}}],[\"这可能会影响应用长期的可维护性\",{\"1\":{\"338\":1}}],[\"这可能会导致意外的行为\",{\"1\":{\"171\":1}}],[\"这可以用于直接操作\",{\"1\":{\"408\":1}}],[\"这可以使得页面对用户可见的时间大大提前\",{\"1\":{\"115\":1}}],[\"这可以提高性能并减少不必要的dom操作\",{\"1\":{\"40\":1}}],[\"这是与\",{\"1\":{\"694\":1}}],[\"这是导入的组件\",{\"1\":{\"402\":1}}],[\"这是一个常见的错误来源\",{\"1\":{\"559\":1}}],[\"这是一个例子\",{\"1\":{\"306\":1,\"307\":1,\"322\":1,\"323\":1}}],[\"这是一个保存预设供以后使用的选项\",{\"1\":{\"268\":1}}],[\"这是一个函数\",{\"1\":{\"17\":1}}],[\"这是\",{\"1\":{\"250\":1,\"358\":1}}],[\"这是什么的工作呢\",{\"1\":{\"246\":1}}],[\"这是因为计算属性会基于它们的依赖关系进行缓存\",{\"1\":{\"473\":1}}],[\"这是因为setup函数在执行时就会立即执行传入的副作用函数\",{\"1\":{\"377\":1}}],[\"这是因为在网络状况较好时\",{\"1\":{\"282\":1}}],[\"这是因为我们必须添加\",{\"1\":{\"250\":1}}],[\"这是因为我的两张图片的大小分别是38kb和295kb\",{\"1\":{\"225\":1}}],[\"这是因为小的图片转换base64之后可以和页面一起被请求\",{\"1\":{\"226\":1}}],[\"这是因为默认情况下webpack并不清楚我们打包后的文\",{\"1\":{\"208\":1}}],[\"这是因为目前前端开发我们通常都会直接使用三大框架来开发\",{\"1\":{\"203\":1}}],[\"这是因为vite中的服务器connect会对我们的请求进行转发\",{\"1\":{\"191\":1}}],[\"这是必要的\",{\"1\":{\"171\":1}}],[\"这显式地向\",{\"1\":{\"168\":1,\"171\":1}}],[\"这对于\",{\"1\":{\"161\":1}}],[\"这些事情可以通过接收属性对象的meta属性来实现\",{\"1\":{\"569\":1}}],[\"这些都会传递给\",{\"1\":{\"544\":1,\"557\":1}}],[\"这些都是模板特有的语法\",{\"1\":{\"527\":1}}],[\"这些资源包括html+css+js\",{\"1\":{\"537\":1}}],[\"这些方法可以被绑定到\",{\"1\":{\"529\":1}}],[\"这些标签会替换掉我们挂载到的元素\",{\"1\":{\"527\":1}}],[\"这些限制很重要\",{\"1\":{\"511\":1}}],[\"这些\",{\"1\":{\"497\":1}}],[\"这些被包裹过的方法包括\",{\"1\":{\"459\":1}}],[\"这些内容只有在条件为true时\",{\"1\":{\"452\":1}}],[\"这些属性在处理组件之间的通信或访问全局状态时非常有用\",{\"1\":{\"342\":1}}],[\"这些attribute会被添加到组件的根元素上\",{\"1\":{\"307\":1,\"323\":1}}],[\"这些组件可以照常触发\",{\"1\":{\"284\":1}}],[\"这些组件都通常与\",{\"1\":{\"284\":1}}],[\"这些与异步组件不同\",{\"1\":{\"284\":1}}],[\"这些模块可能来自于自己编写的代码\",{\"1\":{\"264\":1}}],[\"这些更新代码会被热更新运行时处理\",{\"1\":{\"258\":1}}],[\"这些更新通知包含了被修改的模块的更新代码\",{\"1\":{\"258\":1}}],[\"这些hmr运行时代码负责与开发服务器建立连接\",{\"1\":{\"258\":1}}],[\"这些框架通常会提供开发服务器或开发工具\",{\"1\":{\"257\":1}}],[\"这些规则可以执行各种操作\",{\"1\":{\"247\":1}}],[\"这些生成的代码可以是与输入代码相同的版本\",{\"1\":{\"246\":1}}],[\"这些插件和预设可以执行各种转换操作\",{\"1\":{\"246\":1}}],[\"这些预设可以根据你的项目需求进行选择和配置\",{\"1\":{\"244\":1}}],[\"这些钩子不会接受\",{\"1\":{\"560\":1}}],[\"这些钩子仅会在浏览器中被调用\",{\"1\":{\"510\":1}}],[\"这些钩子可以与\",{\"1\":{\"168\":1}}],[\"这些钩子函数会在适当时机被调用\",{\"1\":{\"155\":1}}],[\"这些运行时的状态变化所带来的ui的重新渲染\",{\"1\":{\"35\":1}}],[\"这一个库实现\",{\"1\":{\"254\":1}}],[\"这一部分数据将被应用于界面上\",{\"1\":{\"118\":1}}],[\"这一行为类似\",{\"1\":{\"92\":1}}],[\"这种模式需要服务器端支持来处理路由\",{\"1\":{\"540\":1}}],[\"这种模式在不需要服务器端支持的情况下可以工作\",{\"1\":{\"540\":1}}],[\"这种绑定的方式\",{\"1\":{\"445\":1}}],[\"这种做法有一个直观的弊端\",{\"1\":{\"468\":1}}],[\"这种做法相当于已经在state\",{\"1\":{\"364\":1}}],[\"这种做法只包含页面\",{\"1\":{\"117\":1}}],[\"这种碎片化的代码使用理解和维护这个复杂的组件变得异常困难\",{\"1\":{\"346\":1}}],[\"这种方式使得状态管理更加灵活\",{\"1\":{\"694\":1}}],[\"这种方式提高了用户体验和应用性能\",{\"1\":{\"538\":1}}],[\"这种方式需要通过特定的代码来对模板进行解析\",{\"1\":{\"530\":1}}],[\"这种方式是之前经常使用的方式\",{\"1\":{\"530\":1}}],[\"这种方式一致存在一个缺陷就是当给对象添加或者删除属性时\",{\"1\":{\"520\":1}}],[\"这种方式称为内存编译\",{\"1\":{\"254\":1}}],[\"这种方式可以更好的表示loader的配置\",{\"1\":{\"215\":1}}],[\"这种写法大概率就是\",{\"1\":{\"249\":1}}],[\"这种情况下渲染好的页面\",{\"1\":{\"536\":1}}],[\"这种情况下对于\",{\"1\":{\"168\":1}}],[\"这种情况下可以使用\",{\"1\":{\"118\":1}}],[\"这种情况下\",{\"1\":{\"117\":2}}],[\"这几个字受到\",{\"1\":{\"117\":1}}],[\"这个list就是组件内普通的计算属性名\",{\"1\":{\"674\":1}}],[\"这个loader最常用的是css\",{\"1\":{\"215\":1}}],[\"这个步骤并不是必需的\",{\"1\":{\"610\":1}}],[\"这个就是所谓的数据保持同步\",{\"1\":{\"592\":1,\"689\":1}}],[\"这个就是页面文件\",{\"1\":{\"84\":1}}],[\"这个方法会向\",{\"1\":{\"550\":1}}],[\"这个映射表决定了数据的流向\",{\"1\":{\"535\":1}}],[\"这个版本不包含对template模板的编译代码\",{\"1\":{\"530\":1}}],[\"这个版本包含了vue的完整功能\",{\"1\":{\"530\":1}}],[\"这个版本的文件体积相对较大\",{\"1\":{\"530\":1}}],[\"这个版本的\",{\"1\":{\"250\":1,\"505\":1}}],[\"这个函数封装了无状态的逻辑\",{\"1\":{\"502\":1}}],[\"这个函数会在安装插件时自动执行\",{\"1\":{\"423\":1,\"425\":1}}],[\"这个过程就是值绑定\",{\"1\":{\"483\":1}}],[\"这个过程经常操作会影响我们的开发效率\",{\"1\":{\"252\":1}}],[\"这个数据不是响应式的\",{\"1\":{\"582\":1}}],[\"这个数据通过插值语法等方式绑定到template中\",{\"1\":{\"475\":1}}],[\"这个数据有着原始数据属性值的一份精确拷贝\",{\"1\":{\"46\":1}}],[\"这个后面讲setter和getter时会讲到\",{\"1\":{\"472\":1}}],[\"这个案例是当我点击按钮时会在中间插入一个f\",{\"1\":{\"463\":1}}],[\"这个案例我们可以通过两种不同的实现思路来实现\",{\"1\":{\"274\":1}}],[\"这个key属性有什么作用呢\",{\"1\":{\"460\":1}}],[\"这个别名可以自定来定义\",{\"1\":{\"457\":1}}],[\"这个行为我们称之为数据修改是可追踪的\",{\"1\":{\"592\":1,\"689\":1}}],[\"这个行为在大多数情况都符合期望的绑定值类型\",{\"1\":{\"437\":1}}],[\"这个行为可以通过一个\",{\"1\":{\"283\":1}}],[\"这个效率会更高点\",{\"1\":{\"364\":1}}],[\"这个在以渲染函数返回时会有作用\",{\"1\":{\"349\":1}}],[\"这个在vue2中也有\",{\"1\":{\"269\":1}}],[\"这个功能只在支持\",{\"1\":{\"571\":1}}],[\"这个功能对应的代码逻辑会被拆分到各个属性中\",{\"1\":{\"346\":1}}],[\"这个功能在你想要在\",{\"1\":{\"161\":1}}],[\"这个对象其实本质上就是一个组件\",{\"1\":{\"334\":1}}],[\"这个值必须匹配下列字符串中的一个\",{\"1\":{\"306\":1,\"322\":1}}],[\"这个组件的代码是难以阅读和理解的\",{\"1\":{\"346\":1}}],[\"这个组件分成三块区域\",{\"1\":{\"286\":1}}],[\"这个组件必须仅有一个根元素\",{\"1\":{\"155\":1}}],[\"这个选项允许你返回一个对象或函数来修改默认的\",{\"1\":{\"272\":1}}],[\"这个选项用于指定是否启用gzip压缩\",{\"1\":{\"261\":1}}],[\"这个选项用于指定是否在启动webpack开发服务器后自动打开浏览器\",{\"1\":{\"261\":1}}],[\"这个选项用于指定webpack开发服务器的端口号\",{\"1\":{\"261\":1}}],[\"这个文件会变得越来越不容易维护\",{\"1\":{\"265\":1}}],[\"这个文件中的代码被压缩和丑化了\",{\"1\":{\"208\":1}}],[\"这个文件中不会存在\",{\"1\":{\"195\":1}}],[\"这个错误是因为\",{\"1\":{\"250\":1}}],[\"这个转换过的代码可以在大多数浏览器中运行\",{\"1\":{\"241\":1}}],[\"这个是ejs模块填充数据的方式\",{\"1\":{\"236\":1}}],[\"这个我们需要一个属于自己的index\",{\"1\":{\"236\":1}}],[\"这个插件在以下情况下非常有用\",{\"1\":{\"238\":1}}],[\"这个插件就是cleanwebpackplugin\",{\"1\":{\"234\":1}}],[\"这个插件包含了\",{\"1\":{\"223\":1}}],[\"这个也是vue\",{\"1\":{\"230\":1}}],[\"这个也是vue的写法\",{\"1\":{\"229\":1}}],[\"这个工具可以帮助我们进行一些css的转换和适配\",{\"1\":{\"219\":1}}],[\"这个依赖关系图会包含应用程序中所需的所有模块\",{\"1\":{\"213\":1}}],[\"这个时候无论后面数据是否有变化\",{\"1\":{\"477\":1}}],[\"这个时候就需要用侦听器watch来完成了\",{\"1\":{\"475\":1}}],[\"这个时候就需要一个三方包进行处理\",{\"1\":{\"197\":1}}],[\"这个时候dom并没有挂载\",{\"1\":{\"377\":1}}],[\"这个时候\",{\"1\":{\"336\":1,\"342\":1,\"447\":1,\"453\":1}}],[\"这个时候我们也可以给计算属性设置一个setter的方法\",{\"1\":{\"474\":1}}],[\"这个时候我们就需要进行条件判断了\",{\"1\":{\"451\":1}}],[\"这个时候我们就可以清除上一次的副作用\",{\"1\":{\"376\":1}}],[\"这个时候我们就可以来定义插槽slot\",{\"1\":{\"287\":1}}],[\"这个时候我们就可以使用less\",{\"1\":{\"218\":1}}],[\"这个时候我们需要改变副作用函数的执行时机\",{\"1\":{\"377\":1}}],[\"这个时候我们可以获取watcheffect的返回值函数\",{\"1\":{\"375\":1}}],[\"这个时候我们可以使用v\",{\"1\":{\"456\":1}}],[\"这个时候我们可以使用defineplugin插件\",{\"1\":{\"237\":1}}],[\"这个时候我们可以使用placeholders来完成\",{\"1\":{\"228\":1}}],[\"这个时候我们可以通过props来完成组件之间的通信\",{\"1\":{\"302\":1,\"318\":1}}],[\"这个时候我们可以通过\",{\"1\":{\"212\":1}}],[\"这个时候我们可以选择使用gsap库来完成\",{\"1\":{\"171\":1}}],[\"这个时候我们要使用\",{\"1\":{\"173\":1}}],[\"这个\",{\"1\":{\"157\":2,\"158\":1,\"159\":1,\"282\":1,\"489\":1,\"563\":1,\"569\":1}}],[\"这个页面会包含前端路由所需的\",{\"1\":{\"263\":1}}],[\"这个页面暂时还不能响应用户事件\",{\"1\":{\"115\":1}}],[\"这个页面将随之旋转\",{\"1\":{\"113\":1}}],[\"这个自定义组件将自身的\",{\"1\":{\"111\":1}}],[\"这样做是为了让我们在需要的时候\",{\"1\":{\"547\":1,\"548\":1}}],[\"这样做最大的优点就是前后端责任的清晰\",{\"1\":{\"537\":1}}],[\"这样做的目的是多个包本身相互独立\",{\"1\":{\"519\":1}}],[\"这样也有利于seo的优化\",{\"1\":{\"536\":1}}],[\"这样才能\",{\"1\":{\"511\":1}}],[\"这样其中的\",{\"1\":{\"509\":1}}],[\"这样该对象在组件中被解构为\",{\"1\":{\"509\":1}}],[\"这样解构出来的值也是响应式的\",{\"1\":{\"363\":1}}],[\"这样解构出来的就是响应式的了\",{\"1\":{\"363\":1}}],[\"这样使用use方法注册指令\",{\"1\":{\"426\":1}}],[\"这样使用\",{\"1\":{\"353\":1,\"356\":1}}],[\"这样使用即可\",{\"1\":{\"353\":1,\"356\":1}}],[\"这样没有问题\",{\"1\":{\"350\":1}}],[\"这样最终打包出的javascript包就会有关于componentc的内容\",{\"1\":{\"338\":1}}],[\"这样子组件就可以使用message属性来访问父组件传递过来的数据了\",{\"1\":{\"304\":1,\"305\":1,\"320\":1,\"321\":1}}],[\"这样的应用程序可以使用它来扩展应用程序\",{\"1\":{\"572\":1}}],[\"这样的生命周期钩子中调用它们\",{\"1\":{\"511\":1}}],[\"这样的\",{\"1\":{\"436\":1,\"544\":1}}],[\"这样的原生集合类型中的\",{\"1\":{\"357\":1}}],[\"这样的构建工具也支持此语法\",{\"1\":{\"282\":1}}],[\"这样的表达式目前暂不支持\",{\"1\":{\"110\":1}}],[\"这样就可以在函数内部注册指令了\",{\"1\":{\"426\":1}}],[\"这样就可以动态地渲染不同的子组件了\",{\"1\":{\"276\":1,\"328\":1}}],[\"这样就浏览器在请求debounce时\",{\"1\":{\"197\":1}}],[\"这样你可以专注在撰写应用上\",{\"1\":{\"266\":1}}],[\"这样显示开发的效率会大大的降低\",{\"1\":{\"266\":1}}],[\"这样确保了默认路径的正确加载\",{\"1\":{\"263\":1}}],[\"这样目标服务器就可以正确识别请求来源\",{\"1\":{\"262\":1}}],[\"这样可以拿到传递过来的msg的值\",{\"1\":{\"349\":1}}],[\"这样可以保留某些应用程序的状态不丢失\",{\"1\":{\"255\":1}}],[\"这样可以更灵活地根据项目需求进行定制和配置\",{\"1\":{\"209\":1}}],[\"这样客户端在解析html是就可以执行代码了\",{\"1\":{\"197\":1}}],[\"这样\",{\"1\":{\"110\":1,\"111\":2,\"292\":1,\"296\":1,\"308\":1,\"324\":1}}],[\"这样在\",{\"1\":{\"67\":1,\"222\":1,\"249\":1}}],[\"这样支持多端开发\",{\"1\":{\"65\":1}}],[\"这里有一个在用户未能验证身份时重定向到\",{\"1\":{\"559\":1}}],[\"这里有很多方式植入路由导航中\",{\"1\":{\"558\":1}}],[\"这里有几点注意事项\",{\"1\":{\"26\":1}}],[\"这里的\",{\"1\":{\"557\":1}}],[\"这里的两个\",{\"1\":{\"293\":1}}],[\"这里涉及到箭头函数使用this的查找规则\",{\"1\":{\"529\":1}}],[\"这里其实涉及到两种不同的编程范式命令式编程和声明式编程\",{\"1\":{\"525\":1}}],[\"这里分成不同的情况来进行处理\",{\"1\":{\"498\":1}}],[\"这里指令的参数会基于组件的\",{\"1\":{\"408\":1}}],[\"这里加上setup属性\",{\"1\":{\"402\":1}}],[\"这里加上注明语言使用jsx\",{\"1\":{\"398\":1,\"399\":1,\"400\":1}}],[\"这里我们使用一个的案例\",{\"1\":{\"359\":1}}],[\"这里我们主要讲两种方式\",{\"1\":{\"312\":1,\"329\":1}}],[\"这里需要\",{\"1\":{\"357\":2}}],[\"这里还有一些有用的命令参数\",{\"1\":{\"271\":1}}],[\"这里是使用\",{\"1\":{\"168\":1}}],[\"这里会提示安装出现问题的选项\",{\"1\":{\"27\":1}}],[\"这主要与itemgenerator函数的第二个参数index以及keygenerator函数的第二个参数index有关\",{\"1\":{\"17\":1}}],[\"+1\",{\"1\":{\"389\":1,\"390\":1}}],[\"++count\",{\"1\":{\"350\":1}}],[\"++i\",{\"1\":{\"109\":1}}],[\"++\",{\"1\":{\"38\":2,\"692\":1}}],[\"+\",{\"1\":{\"17\":2,\"18\":1,\"20\":2,\"39\":1,\"40\":2,\"110\":1,\"124\":1,\"135\":1,\"195\":1,\"201\":1,\"248\":1,\"250\":2,\"266\":1,\"268\":3,\"366\":1,\"367\":1,\"408\":1,\"443\":1,\"470\":1,\"471\":2,\"472\":2,\"473\":4,\"474\":4,\"480\":3,\"489\":1,\"514\":1,\"540\":1,\"557\":17,\"578\":1,\"582\":1,\"583\":4}}],[\"+=\",{\"1\":{\"16\":1,\"480\":1,\"624\":1,\"657\":2,\"668\":2,\"696\":2}}],[\"即将要进入的目标\",{\"1\":{\"559\":1,\"566\":1}}],[\"即template模板\",{\"1\":{\"530\":1}}],[\"即不能使用箭头函数\",{\"1\":{\"529\":1}}],[\"即便不依赖于\",{\"1\":{\"508\":1}}],[\"即当刷新页面时会立刻执行一次\",{\"1\":{\"477\":1}}],[\"即在\",{\"1\":{\"351\":1}}],[\"即只包含应用程序实际使用的代码\",{\"1\":{\"251\":1}}],[\"即使在模板中也可以\",{\"1\":{\"584\":1}}],[\"即使在小型单页应用中\",{\"1\":{\"580\":1}}],[\"即使它并没有被实际使用\",{\"1\":{\"338\":1}}],[\"即使它们不支持箭头函数或\",{\"1\":{\"241\":1}}],[\"即使你没有在组件的props中定义它们\",{\"1\":{\"307\":1,\"323\":1}}],[\"即使只有很小的改动\",{\"1\":{\"182\":1}}],[\"即使使用hmr\",{\"1\":{\"182\":1}}],[\"即时服务启动\",{\"1\":{\"179\":1}}],[\"即页面的纯静态成分\",{\"1\":{\"117\":1}}],[\"即用即走\",{\"1\":{\"78\":1}}],[\"即可自动填充\",{\"1\":{\"428\":1}}],[\"即可以在模板中以\",{\"1\":{\"411\":1}}],[\"即可\",{\"1\":{\"222\":1,\"223\":1,\"463\":1}}],[\"即可在微信开发者工具里面体验uni\",{\"1\":{\"67\":1}}],[\"即可看到效果\",{\"1\":{\"67\":1}}],[\"即基本数据类型的值会被完全拷贝\",{\"1\":{\"44\":1}}],[\"即设备管理\",{\"1\":{\"30\":1}}],[\"即\",{\"1\":{\"17\":1,\"530\":1,\"531\":1}}],[\"循环控制\",{\"0\":{\"17\":1}}],[\"循环渲染可从数据源中迭代获取数据\",{\"1\":{\"1\":1}}],[\"`welcome\",{\"1\":{\"584\":1}}],[\"`fade`\",{\"1\":{\"570\":1}}],[\"`false`\",{\"1\":{\"559\":1}}],[\"`router\",{\"1\":{\"566\":1}}],[\"`routes\",{\"1\":{\"540\":1}}],[\"`routes`\",{\"1\":{\"540\":1}}],[\"`userdetails`\",{\"1\":{\"563\":1}}],[\"`undefined`\",{\"1\":{\"306\":1,\"322\":1}}],[\"`path`\",{\"1\":{\"550\":1}}],[\"`params`\",{\"1\":{\"550\":2}}],[\"`props\",{\"1\":{\"349\":1}}],[\"`props`\",{\"1\":{\"349\":2}}],[\"`https\",{\"1\":{\"651\":1,\"668\":1}}],[\"`href`\",{\"1\":{\"540\":1,\"543\":1}}],[\"`hello\",{\"1\":{\"23\":1,\"24\":1,\"97\":1,\"241\":1}}],[\"`你的问题$\",{\"1\":{\"476\":2}}],[\"`beforerouteupdate`\",{\"1\":{\"563\":1}}],[\"`baz`\",{\"1\":{\"408\":2}}],[\"`button2\",{\"1\":{\"40\":1}}],[\"`button1\",{\"1\":{\"40\":1}}],[\"`animate\",{\"1\":{\"570\":1}}],[\"`app传入到helloworld中的内容\",{\"1\":{\"392\":1}}],[\"`asynccomp`\",{\"1\":{\"282\":1}}],[\"`createrouter`\",{\"1\":{\"544\":1,\"557\":1}}],[\"`cancel`\",{\"1\":{\"383\":1}}],[\"`count\",{\"1\":{\"379\":3}}],[\"`count`\",{\"1\":{\"357\":1}}],[\"`const\",{\"1\":{\"59\":1}}],[\"`id`\",{\"1\":{\"383\":1}}],[\"`obj\",{\"1\":{\"357\":1}}],[\"`true`\",{\"1\":{\"559\":1}}],[\"`to`\",{\"1\":{\"540\":1,\"543\":1}}],[\"`this`\",{\"1\":{\"513\":1,\"563\":4}}],[\"`the\",{\"1\":{\"493\":1}}],[\"`title`\",{\"1\":{\"349\":1}}],[\"`target=\",{\"1\":{\"130\":1}}],[\"`task$\",{\"1\":{\"39\":1}}],[\"`计数器初始值为\",{\"1\":{\"347\":1}}],[\"``\",{\"1\":{\"347\":1}}],[\"``127\",{\"1\":{\"260\":1}}],[\"`next`\",{\"1\":{\"559\":1}}],[\"`new\",{\"1\":{\"478\":1}}],[\"`name`\",{\"1\":{\"550\":1}}],[\"`nativetags`\",{\"1\":{\"72\":1}}],[\"`null`\",{\"1\":{\"306\":1,\"322\":1,\"391\":1}}],[\"`<a>`\",{\"1\":{\"540\":1,\"543\":1}}],[\"`<router\",{\"1\":{\"540\":1,\"543\":1}}],[\"`<div>$\",{\"1\":{\"294\":1}}],[\"`<div\",{\"1\":{\"291\":1}}],[\"`<button\",{\"1\":{\"288\":1}}],[\"`vm`\",{\"1\":{\"563\":1}}],[\"`v\",{\"1\":{\"279\":2}}],[\"`link\",{\"1\":{\"201\":1}}],[\"`时生效\",{\"1\":{\"130\":1}}],[\"`goodbye\",{\"1\":{\"97\":1}}],[\"`experimentalruntimemode`\",{\"1\":{\"72\":1}}],[\"`quickapp\",{\"1\":{\"69\":1}}],[\"`$route\",{\"1\":{\"548\":2}}],[\"`$\",{\"1\":{\"17\":1,\"38\":3,\"40\":3,\"201\":5,\"294\":1}}],[\"`折扣价$\",{\"1\":{\"17\":1}}],[\"`原价$\",{\"1\":{\"17\":1}}],[\"`\",{\"1\":{\"16\":1,\"17\":3,\"38\":3,\"39\":1,\"40\":3,\"97\":2,\"189\":2,\"197\":2,\"201\":15,\"241\":1,\"291\":6,\"294\":1,\"347\":1,\"379\":3,\"392\":1,\"478\":1,\"493\":1,\"505\":2,\"548\":4,\"550\":4,\"557\":2,\"563\":5,\"570\":1,\"578\":6,\"584\":1}}],[\"`图片宽度\",{\"1\":{\"16\":1}}],[\"$mount\",{\"1\":{\"611\":1,\"691\":1}}],[\"$patch\",{\"1\":{\"582\":5}}],[\"$parent可以访问父组件的属性和方法\",{\"1\":{\"342\":1}}],[\"$parent属性用于访问当前组件的父组件实例\",{\"1\":{\"342\":1}}],[\"$parent和$root都是用于访问组件层级关系的特殊属性\",{\"1\":{\"342\":1}}],[\"$parent\",{\"1\":{\"342\":2}}],[\"$off\",{\"1\":{\"520\":1}}],[\"$once\",{\"1\":{\"520\":1}}],[\"$on\",{\"1\":{\"520\":1}}],[\"$delete\",{\"1\":{\"520\":1}}],[\"$store\",{\"1\":{\"611\":1,\"616\":1,\"617\":1,\"618\":1,\"621\":1,\"629\":1,\"630\":1,\"631\":2,\"634\":1,\"641\":1,\"642\":1,\"644\":1,\"661\":1,\"662\":1,\"663\":1,\"673\":2,\"674\":1,\"679\":1,\"680\":2,\"681\":2,\"682\":2,\"693\":1,\"697\":1,\"698\":1}}],[\"$store使用\",{\"1\":{\"611\":1}}],[\"$set\",{\"1\":{\"520\":1}}],[\"$slots\",{\"1\":{\"349\":1,\"392\":2}}],[\"$watchs\",{\"1\":{\"479\":1}}],[\"$watch\",{\"0\":{\"479\":1},\"1\":{\"479\":1}}],[\"$el\",{\"1\":{\"371\":1}}],[\"$event可以获取到事件发生时的事件对象\",{\"1\":{\"449\":1}}],[\"$event\",{\"1\":{\"343\":2,\"344\":2,\"449\":2,\"481\":1,\"489\":1,\"490\":2}}],[\"$emit发出事件\",{\"1\":{\"349\":1}}],[\"$emit\",{\"1\":{\"310\":1,\"326\":1,\"343\":2,\"344\":4,\"349\":1,\"489\":2,\"490\":2,\"590\":1}}],[\"$bus来触发事件和监听事件\",{\"1\":{\"314\":1,\"331\":1}}],[\"$bus\",{\"1\":{\"314\":4,\"331\":4}}],[\"$attrs\",{\"1\":{\"308\":1,\"309\":1,\"324\":1,\"325\":1,\"349\":1}}],[\"$attrs来访问所有的\",{\"1\":{\"308\":1,\"324\":1}}],[\"$arr\",{\"1\":{\"40\":1}}],[\"$\",{\"1\":{\"16\":1,\"17\":3,\"38\":3,\"97\":2,\"197\":3,\"198\":4,\"201\":7,\"224\":1,\"225\":1,\"227\":2,\"232\":1,\"241\":1,\"263\":2,\"288\":1,\"294\":1,\"347\":1,\"379\":6,\"392\":1,\"478\":2,\"505\":1,\"550\":2,\"570\":1,\"578\":4,\"584\":1}}],[\"$reset\",{\"1\":{\"582\":3}}],[\"$refs属性用于访问父组件中的子组件或dom元素\",{\"1\":{\"342\":1}}],[\"$refs\",{\"0\":{\"342\":1},\"1\":{\"342\":2,\"494\":2}}],[\"$router\",{\"1\":{\"548\":1,\"550\":2}}],[\"$route\",{\"1\":{\"544\":10,\"547\":2,\"548\":3,\"557\":2,\"569\":2,\"573\":1}}],[\"$root可以访问根组件的属性和方法\",{\"1\":{\"342\":1}}],[\"$root属性用于访问根组件实例\",{\"1\":{\"342\":1}}],[\"$root\",{\"1\":{\"342\":2}}],[\"$rawfile\",{\"1\":{\"11\":1}}],[\"$r\",{\"1\":{\"6\":1,\"11\":1,\"16\":1}}],[\"===\",{\"1\":{\"59\":2,\"106\":1,\"109\":1,\"110\":1,\"136\":5,\"137\":2,\"166\":3,\"201\":3,\"265\":1,\"275\":3,\"276\":1,\"328\":1,\"357\":1,\"367\":1,\"374\":1,\"375\":1,\"376\":1,\"379\":1,\"413\":1,\"415\":1,\"416\":1,\"567\":2,\"583\":1,\"657\":1,\"668\":1,\"696\":1}}],[\"==>\",{\"1\":{\"59\":3}}],[\"==\",{\"1\":{\"40\":2,\"47\":1,\"53\":1,\"54\":1,\"104\":3,\"136\":1,\"176\":1,\"306\":1,\"322\":1,\"559\":3,\"577\":3}}],[\"=>\",{\"0\":{\"176\":1,\"359\":1},\"1\":{\"16\":3,\"17\":6,\"18\":2,\"21\":2,\"38\":2,\"39\":5,\"40\":9,\"59\":2,\"137\":1,\"176\":1,\"197\":2,\"198\":4,\"201\":6,\"241\":1,\"256\":1,\"262\":1,\"265\":1,\"282\":9,\"294\":1,\"305\":1,\"311\":1,\"313\":1,\"314\":1,\"321\":1,\"327\":1,\"330\":1,\"331\":1,\"343\":1,\"347\":1,\"350\":5,\"353\":1,\"356\":1,\"359\":2,\"361\":2,\"363\":1,\"364\":1,\"366\":2,\"367\":1,\"368\":7,\"370\":1,\"371\":2,\"374\":3,\"375\":3,\"376\":5,\"377\":2,\"379\":11,\"380\":4,\"381\":2,\"383\":1,\"384\":2,\"386\":1,\"388\":2,\"389\":3,\"390\":3,\"391\":7,\"392\":2,\"400\":3,\"402\":1,\"403\":1,\"404\":3,\"405\":3,\"410\":2,\"415\":1,\"416\":1,\"459\":1,\"478\":1,\"480\":1,\"481\":1,\"489\":2,\"503\":7,\"504\":6,\"505\":6,\"529\":1,\"543\":2,\"546\":2,\"547\":4,\"548\":1,\"551\":4,\"554\":1,\"559\":5,\"560\":2,\"561\":1,\"563\":1,\"566\":1,\"567\":2,\"568\":1,\"569\":2,\"570\":1,\"571\":2,\"578\":8,\"581\":5,\"582\":2,\"583\":8,\"584\":3,\"585\":2,\"611\":1,\"637\":2,\"652\":1,\"657\":2,\"668\":2,\"673\":1,\"674\":1,\"691\":1,\"693\":2,\"694\":2,\"695\":2,\"696\":2}}],[\"=\",{\"1\":{\"16\":3,\"17\":8,\"18\":2,\"21\":4,\"22\":3,\"23\":1,\"36\":4,\"38\":4,\"39\":9,\"40\":4,\"43\":2,\"47\":6,\"48\":4,\"49\":3,\"50\":4,\"51\":4,\"53\":7,\"54\":6,\"55\":4,\"57\":4,\"59\":2,\"60\":1,\"87\":1,\"91\":1,\"93\":1,\"97\":3,\"98\":3,\"106\":1,\"108\":2,\"109\":5,\"110\":1,\"123\":1,\"136\":1,\"148\":10,\"154\":1,\"155\":1,\"161\":1,\"167\":1,\"168\":1,\"171\":1,\"174\":1,\"176\":2,\"188\":2,\"192\":2,\"197\":6,\"198\":9,\"201\":10,\"211\":2,\"215\":1,\"222\":1,\"234\":2,\"236\":5,\"237\":2,\"238\":1,\"239\":1,\"241\":5,\"244\":1,\"248\":1,\"249\":1,\"250\":2,\"251\":1,\"253\":1,\"256\":1,\"259\":1,\"261\":1,\"262\":4,\"263\":2,\"264\":1,\"265\":6,\"272\":1,\"276\":1,\"282\":5,\"294\":1,\"310\":1,\"314\":4,\"326\":1,\"328\":1,\"331\":4,\"337\":2,\"343\":2,\"347\":1,\"349\":3,\"350\":7,\"353\":2,\"354\":19,\"356\":2,\"357\":4,\"358\":6,\"359\":5,\"361\":4,\"363\":3,\"364\":2,\"366\":4,\"367\":7,\"370\":1,\"371\":2,\"374\":6,\"375\":7,\"376\":7,\"377\":2,\"379\":7,\"380\":4,\"381\":2,\"382\":1,\"383\":2,\"384\":4,\"386\":3,\"389\":3,\"390\":4,\"392\":1,\"393\":2,\"400\":4,\"402\":2,\"403\":1,\"404\":3,\"405\":2,\"408\":2,\"410\":2,\"412\":1,\"413\":6,\"415\":7,\"416\":8,\"430\":4,\"432\":1,\"433\":1,\"438\":1,\"440\":3,\"441\":1,\"443\":1,\"444\":1,\"445\":3,\"446\":2,\"448\":2,\"449\":1,\"450\":1,\"452\":1,\"453\":2,\"457\":1,\"458\":1,\"459\":3,\"463\":1,\"471\":1,\"472\":1,\"473\":3,\"474\":5,\"476\":2,\"477\":4,\"478\":1,\"479\":1,\"480\":3,\"481\":2,\"483\":1,\"487\":1,\"489\":2,\"494\":1,\"497\":1,\"499\":1,\"500\":2,\"503\":13,\"504\":9,\"505\":11,\"508\":1,\"509\":2,\"512\":3,\"513\":2,\"529\":3,\"540\":5,\"543\":2,\"544\":4,\"546\":1,\"547\":2,\"548\":2,\"550\":1,\"551\":6,\"554\":4,\"555\":2,\"557\":5,\"559\":2,\"561\":2,\"563\":3,\"567\":1,\"568\":2,\"569\":1,\"570\":4,\"571\":7,\"573\":2,\"574\":1,\"577\":3,\"578\":11,\"580\":1,\"581\":6,\"582\":5,\"583\":2,\"584\":9,\"585\":4,\"611\":3,\"615\":2,\"619\":1,\"624\":4,\"637\":2,\"651\":3,\"652\":1,\"657\":2,\"668\":5,\"669\":1,\"678\":1,\"691\":3,\"692\":2,\"693\":3,\"694\":3,\"695\":1,\"696\":1}}],[\"nbsp\",{\"1\":{\"578\":3}}],[\"nba\",{\"1\":{\"176\":1,\"313\":1,\"330\":1,\"477\":4}}],[\"nvm\",{\"1\":{\"267\":2}}],[\"n\",{\"1\":{\"267\":1,\"268\":2,\"457\":1,\"552\":1}}],[\"n`\",{\"1\":{\"201\":1}}],[\"n<script\",{\"1\":{\"201\":1}}],[\"nav\",{\"1\":{\"578\":2}}],[\"navbar\",{\"1\":{\"286\":1}}],[\"navigation\",{\"1\":{\"558\":1,\"560\":2,\"561\":1,\"570\":1,\"571\":1}}],[\"navigationstyle\",{\"1\":{\"142\":1,\"146\":2}}],[\"navigationbartitletext\",{\"1\":{\"142\":2,\"146\":1}}],[\"navigationbartextstyle\",{\"1\":{\"142\":2,\"146\":1}}],[\"navigationbarbackgroundcolor\",{\"1\":{\"142\":2,\"146\":1}}],[\"navigateto\",{\"1\":{\"136\":1}}],[\"navigateback\",{\"1\":{\"130\":2}}],[\"navigate\",{\"1\":{\"130\":2}}],[\"navigator>\",{\"1\":{\"130\":6}}],[\"navigator组件相当于html的超链接标签\",{\"1\":{\"130\":2}}],[\"navigator\",{\"0\":{\"130\":1},\"1\":{\"130\":1}}],[\"nativetags\",{\"1\":{\"63\":1,\"72\":1}}],[\"nan\",{\"1\":{\"59\":1}}],[\"name<\",{\"1\":{\"477\":2}}],[\"name和ref\",{\"1\":{\"364\":1}}],[\"named\",{\"1\":{\"291\":1,\"546\":1}}],[\"namedexports\",{\"1\":{\"198\":1}}],[\"name>和\",{\"1\":{\"335\":1}}],[\"name>\",{\"1\":{\"267\":1,\"335\":1}}],[\"name=小智2\",{\"1\":{\"547\":1}}],[\"name=小传\",{\"1\":{\"547\":1}}],[\"name=\",{\"1\":{\"105\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1,\"163\":1,\"164\":1,\"167\":1,\"174\":1,\"176\":1,\"236\":1,\"277\":1,\"288\":1,\"291\":4,\"295\":3,\"344\":2,\"403\":1,\"446\":1,\"480\":1,\"483\":1,\"490\":2,\"570\":3}}],[\"names\",{\"1\":{\"59\":1,\"176\":2,\"313\":4,\"330\":4,\"366\":3,\"367\":5,\"474\":3}}],[\"namespaced\",{\"1\":{\"678\":1}}],[\"namespace\",{\"1\":{\"59\":1}}],[\"name\",{\"1\":{\"10\":1,\"17\":5,\"38\":7,\"39\":2,\"47\":4,\"48\":4,\"49\":2,\"51\":2,\"53\":4,\"54\":2,\"55\":4,\"57\":4,\"59\":1,\"91\":6,\"97\":4,\"106\":4,\"110\":5,\"158\":1,\"175\":1,\"186\":2,\"195\":1,\"224\":1,\"225\":2,\"227\":3,\"228\":1,\"232\":1,\"241\":4,\"267\":1,\"271\":2,\"277\":2,\"279\":2,\"291\":3,\"300\":2,\"311\":2,\"313\":1,\"316\":2,\"327\":2,\"330\":1,\"349\":2,\"350\":1,\"353\":1,\"356\":1,\"363\":4,\"366\":1,\"367\":1,\"370\":1,\"371\":2,\"374\":8,\"375\":6,\"376\":7,\"379\":4,\"380\":5,\"384\":2,\"386\":1,\"388\":1,\"389\":1,\"390\":1,\"392\":2,\"403\":3,\"430\":2,\"445\":2,\"446\":1,\"449\":2,\"457\":1,\"458\":1,\"477\":8,\"480\":5,\"544\":1,\"546\":6,\"547\":4,\"548\":2,\"550\":3,\"551\":11,\"554\":1,\"559\":7,\"563\":2,\"570\":1,\"574\":3,\"577\":8,\"578\":6,\"582\":2,\"583\":2,\"584\":1,\"585\":1,\"668\":1,\"694\":2}}],[\"noscript>\",{\"1\":{\"236\":1}}],[\"noemit\",{\"1\":{\"200\":1}}],[\"normal\",{\"1\":{\"150\":1}}],[\"notfound\",{\"1\":{\"548\":4}}],[\"note\",{\"1\":{\"198\":1}}],[\"not\",{\"0\":{\"548\":1},\"1\":{\"110\":1,\"237\":1,\"250\":1}}],[\"nowrap\",{\"1\":{\"124\":2}}],[\"now\",{\"1\":{\"98\":1,\"493\":1}}],[\"now即可重新安装\",{\"1\":{\"27\":1}}],[\"non\",{\"1\":{\"59\":1}}],[\"none\",{\"1\":{\"59\":1,\"121\":2,\"142\":2,\"146\":1,\"221\":5,\"288\":1,\"436\":2}}],[\"no\",{\"1\":{\"59\":32,\"125\":1,\"271\":1}}],[\"node官方网站\",{\"1\":{\"206\":1}}],[\"nodemodulepath\",{\"1\":{\"197\":3}}],[\"node路径\",{\"1\":{\"68\":1}}],[\"node\",{\"1\":{\"59\":3,\"60\":1,\"68\":2,\"97\":2,\"185\":3,\"197\":4,\"198\":2,\"206\":1,\"248\":1,\"250\":4,\"264\":5,\"267\":3,\"269\":2,\"396\":1,\"461\":1}}],[\"npx\",{\"1\":{\"59\":1,\"68\":3,\"185\":1,\"208\":1,\"209\":1,\"217\":1,\"221\":1,\"242\":2,\"243\":1,\"244\":1,\"269\":2}}],[\"npm\",{\"1\":{\"57\":1,\"59\":1,\"60\":1,\"61\":2,\"62\":3,\"69\":1,\"72\":1,\"97\":1,\"170\":1,\"171\":1,\"185\":2,\"186\":4,\"188\":2,\"192\":1,\"209\":3,\"211\":1,\"212\":1,\"215\":2,\"216\":1,\"217\":2,\"218\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"234\":1,\"235\":1,\"238\":1,\"242\":1,\"243\":2,\"244\":1,\"248\":1,\"250\":3,\"252\":1,\"253\":1,\"254\":3,\"267\":2,\"269\":4,\"395\":1,\"396\":1,\"532\":2,\"543\":1,\"581\":1,\"691\":1}}],[\"next\",{\"1\":{\"197\":3,\"198\":4,\"267\":1,\"523\":1,\"559\":7,\"560\":1,\"563\":4,\"565\":1,\"566\":6,\"567\":11,\"568\":3}}],[\"need\",{\"1\":{\"186\":1}}],[\"needed\",{\"1\":{\"59\":2,\"60\":2}}],[\"nested\",{\"1\":{\"163\":6,\"354\":7}}],[\"never\",{\"1\":{\"59\":1,\"60\":1}}],[\"networktimeout\",{\"0\":{\"144\":1},\"1\":{\"139\":1}}],[\"net\",{\"1\":{\"58\":1,\"64\":1,\"67\":1,\"68\":1,\"258\":1}}],[\"newlist\",{\"1\":{\"651\":2,\"668\":2}}],[\"newline\",{\"1\":{\"59\":2}}],[\"newmovie\",{\"1\":{\"459\":4}}],[\"newiphone\",{\"1\":{\"583\":2}}],[\"newitem\",{\"1\":{\"480\":3}}],[\"newid\",{\"1\":{\"383\":2}}],[\"newinfo\",{\"1\":{\"379\":8,\"380\":2,\"477\":4,\"479\":2}}],[\"newname\",{\"1\":{\"380\":2}}],[\"newvalue变化后的新值\",{\"1\":{\"476\":1}}],[\"newvalue\",{\"1\":{\"172\":2,\"343\":2,\"359\":2,\"367\":2,\"379\":7,\"381\":2,\"474\":3,\"476\":2,\"477\":3,\"481\":2}}],[\"newobj\",{\"1\":{\"47\":3,\"53\":8,\"54\":7,\"55\":4,\"57\":1}}],[\"new\",{\"1\":{\"17\":6,\"38\":2,\"39\":1,\"234\":1,\"236\":1,\"237\":1,\"238\":1,\"251\":1,\"282\":1,\"357\":1,\"396\":1,\"415\":2,\"416\":2,\"478\":1,\"505\":1,\"569\":3,\"571\":1,\"584\":1,\"611\":2,\"615\":2,\"624\":2,\"637\":2,\"657\":2,\"669\":1,\"691\":2,\"695\":1,\"696\":1}}],[\"nuxt\",{\"1\":{\"186\":1}}],[\"nubia\",{\"1\":{\"69\":1}}],[\"null\",{\"1\":{\"43\":1,\"59\":1,\"118\":1,\"198\":1,\"311\":2,\"327\":2,\"359\":1,\"377\":2,\"386\":2,\"391\":1,\"392\":6,\"410\":1,\"504\":4,\"505\":4,\"584\":2}}],[\"null和\",{\"1\":{\"42\":1}}],[\"num<\",{\"1\":{\"694\":1}}],[\"numcounter++\",{\"1\":{\"174\":2}}],[\"numcounter\",{\"1\":{\"174\":1}}],[\"num是状态变量\",{\"1\":{\"36\":1}}],[\"num\",{\"1\":{\"36\":1,\"311\":3,\"327\":3,\"457\":2,\"637\":4,\"692\":2,\"693\":2,\"694\":3,\"695\":4}}],[\"number=\",{\"1\":{\"487\":1}}],[\"numbers\",{\"1\":{\"174\":8}}],[\"number>\",{\"1\":{\"40\":1}}],[\"number\",{\"0\":{\"487\":1},\"1\":{\"16\":2,\"17\":7,\"18\":1,\"22\":1,\"23\":1,\"36\":4,\"38\":3,\"39\":4,\"40\":5,\"43\":1,\"121\":2,\"123\":4,\"125\":1,\"126\":5,\"142\":1,\"144\":4,\"146\":1,\"172\":1,\"277\":1,\"282\":3,\"306\":4,\"322\":4,\"353\":1,\"386\":1,\"403\":1,\"487\":3,\"550\":1}}],[\"案例\",{\"0\":{\"16\":1,\"39\":1},\"1\":{\"446\":1}}],[\"沿水平方向布局容器\",{\"1\":{\"15\":1}}],[\"沿垂直方向布局的容器\",{\"1\":{\"14\":1}}],[\"rfc\",{\"1\":{\"559\":1}}],[\"r\",{\"1\":{\"267\":1,\"619\":2}}],[\"rc\",{\"1\":{\"251\":1,\"267\":1}}],[\"round\",{\"1\":{\"584\":1}}],[\"routing\",{\"1\":{\"573\":1}}],[\"routelocation\",{\"1\":{\"553\":1}}],[\"route\",{\"1\":{\"547\":5,\"566\":2,\"570\":8,\"573\":1,\"577\":3}}],[\"routes`\",{\"1\":{\"540\":1}}],[\"routes\",{\"1\":{\"540\":2,\"543\":2,\"544\":2,\"546\":2,\"547\":1,\"548\":2,\"551\":2,\"554\":5,\"555\":1,\"557\":4,\"561\":2,\"569\":2,\"570\":1,\"571\":1,\"572\":1,\"573\":1,\"577\":3,\"578\":5,\"694\":2}}],[\"router的用法\",{\"1\":{\"611\":1}}],[\"routerecord\",{\"1\":{\"574\":1}}],[\"routerview>\",{\"1\":{\"284\":1}}],[\"router是vue\",{\"1\":{\"268\":1}}],[\"router\",{\"0\":{\"539\":1,\"541\":1,\"542\":1,\"710\":1},\"1\":{\"268\":1,\"284\":2,\"539\":2,\"540\":15,\"541\":2,\"542\":1,\"543\":15,\"544\":7,\"546\":6,\"547\":12,\"549\":1,\"550\":13,\"551\":14,\"552\":7,\"553\":5,\"557\":6,\"558\":2,\"559\":10,\"560\":2,\"566\":1,\"567\":2,\"568\":1,\"569\":2,\"570\":5,\"571\":9,\"573\":11,\"574\":7,\"575\":3,\"578\":18,\"691\":1,\"694\":3}}],[\"ro\",{\"1\":{\"354\":2}}],[\"roplace\",{\"1\":{\"251\":1}}],[\"root\",{\"1\":{\"197\":2}}],[\"rollup有对应插件\",{\"1\":{\"197\":1}}],[\"rollup等\",{\"1\":{\"180\":1}}],[\"rollup\",{\"1\":{\"178\":1,\"180\":1,\"197\":1,\"250\":1,\"339\":1}}],[\"rows=\",{\"1\":{\"483\":1}}],[\"row<\",{\"1\":{\"121\":1}}],[\"rowexample\",{\"1\":{\"15\":1}}],[\"row\",{\"0\":{\"15\":1},\"1\":{\"15\":15,\"16\":2,\"17\":3,\"21\":2,\"23\":1,\"24\":1,\"39\":3,\"40\":1,\"121\":1,\"124\":10}}],[\"rrggbbaa\",{\"1\":{\"146\":1}}],[\"rich\",{\"1\":{\"179\":1}}],[\"right\",{\"1\":{\"124\":2,\"132\":3,\"174\":1,\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1,\"447\":1,\"450\":1,\"570\":2}}],[\"ring\",{\"1\":{\"39\":1}}],[\"rgba\",{\"1\":{\"123\":1}}],[\"rpx换算px\",{\"1\":{\"148\":1}}],[\"rpx\",{\"1\":{\"87\":2,\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"139\":2,\"148\":1}}],[\"rule是一个对象\",{\"1\":{\"215\":1}}],[\"rule\",{\"1\":{\"215\":2}}],[\"rules属性对应的值是一个数组\",{\"1\":{\"215\":1}}],[\"rules的配置如下\",{\"1\":{\"215\":1}}],[\"rules中允许我们配置多个loader\",{\"1\":{\"215\":1}}],[\"rules字段来完成\",{\"1\":{\"214\":1}}],[\"rules\",{\"1\":{\"59\":6,\"215\":1,\"248\":1}}],[\"running\",{\"1\":{\"251\":1}}],[\"runtime机制\",{\"1\":{\"258\":1}}],[\"runtime\",{\"1\":{\"201\":2,\"243\":1,\"250\":7,\"258\":1}}],[\"run\",{\"1\":{\"59\":1,\"61\":2,\"62\":2,\"69\":1,\"98\":1,\"186\":1,\"209\":1,\"211\":1,\"212\":1,\"252\":1,\"253\":1,\"254\":2,\"269\":1,\"577\":1}}],[\"radio\",{\"1\":{\"483\":3}}],[\"radius\",{\"1\":{\"39\":1,\"126\":1,\"136\":1,\"288\":1}}],[\"range\",{\"1\":{\"313\":1,\"330\":1}}],[\"randomizecounter\",{\"1\":{\"584\":3}}],[\"randomindex方法返回一个numbers数组的随机索引\",{\"1\":{\"174\":1}}],[\"randomindex\",{\"1\":{\"174\":3}}],[\"random\",{\"1\":{\"174\":1,\"584\":1}}],[\"rawobj\",{\"1\":{\"354\":1}}],[\"raw\",{\"1\":{\"231\":1}}],[\"rap\",{\"1\":{\"47\":3,\"49\":2}}],[\"reg\",{\"1\":{\"546\":3}}],[\"registration\",{\"1\":{\"336\":2}}],[\"registry\",{\"1\":{\"267\":2}}],[\"registeruser\",{\"1\":{\"584\":1}}],[\"registerdirectives\",{\"1\":{\"413\":3}}],[\"registerformattime\",{\"1\":{\"413\":2}}],[\"register\",{\"1\":{\"91\":1,\"106\":1,\"543\":1,\"550\":2}}],[\"reusability\",{\"1\":{\"423\":1,\"501\":1}}],[\"retry\",{\"1\":{\"282\":1}}],[\"return\",{\"1\":{\"17\":1,\"23\":1,\"47\":2,\"53\":1,\"54\":1,\"109\":1,\"154\":1,\"161\":1,\"167\":1,\"168\":1,\"171\":1,\"172\":1,\"174\":2,\"176\":2,\"186\":2,\"197\":3,\"198\":3,\"201\":2,\"250\":2,\"262\":1,\"265\":1,\"276\":1,\"282\":1,\"288\":1,\"291\":1,\"294\":3,\"295\":1,\"305\":2,\"306\":4,\"311\":2,\"313\":3,\"314\":1,\"321\":2,\"322\":4,\"327\":2,\"328\":1,\"330\":3,\"331\":1,\"337\":1,\"339\":1,\"343\":1,\"344\":2,\"349\":2,\"350\":4,\"353\":1,\"356\":1,\"359\":4,\"363\":1,\"366\":1,\"367\":2,\"368\":1,\"370\":1,\"371\":2,\"374\":1,\"375\":1,\"376\":1,\"377\":2,\"379\":1,\"380\":1,\"381\":1,\"384\":2,\"388\":2,\"389\":1,\"392\":1,\"398\":2,\"399\":2,\"415\":1,\"429\":1,\"430\":3,\"432\":1,\"433\":1,\"438\":1,\"440\":2,\"441\":1,\"443\":2,\"444\":1,\"445\":1,\"446\":1,\"448\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":1,\"457\":1,\"458\":1,\"459\":1,\"463\":1,\"471\":4,\"472\":4,\"473\":6,\"474\":3,\"476\":1,\"477\":1,\"478\":1,\"480\":5,\"483\":1,\"494\":1,\"497\":2,\"499\":1,\"500\":2,\"503\":2,\"504\":1,\"505\":1,\"513\":1,\"527\":2,\"530\":1,\"554\":2,\"559\":3,\"561\":3,\"563\":1,\"569\":1,\"571\":8,\"577\":4,\"581\":1,\"583\":7,\"584\":1,\"585\":3,\"618\":1,\"619\":1,\"631\":1,\"657\":5,\"662\":1,\"668\":6,\"674\":1,\"691\":1,\"692\":1,\"696\":4,\"698\":1}}],[\"reject\",{\"1\":{\"282\":2,\"561\":1,\"571\":1}}],[\"repository\",{\"1\":{\"519\":1}}],[\"repository仓库\",{\"1\":{\"519\":1}}],[\"repo\",{\"1\":{\"519\":1}}],[\"report\",{\"1\":{\"271\":6}}],[\"replace>\",{\"1\":{\"553\":1}}],[\"replacement\",{\"1\":{\"252\":1,\"255\":1,\"258\":1,\"270\":1}}],[\"replace\",{\"1\":{\"40\":2,\"197\":1,\"553\":4,\"559\":1,\"573\":4}}],[\"rewrites\",{\"1\":{\"263\":3}}],[\"rewritehtml\",{\"1\":{\"201\":1}}],[\"re\",{\"1\":{\"236\":1}}],[\"rerender\",{\"1\":{\"201\":3}}],[\"rel=\",{\"1\":{\"236\":1,\"480\":1}}],[\"reloading\",{\"1\":{\"254\":1,\"255\":1}}],[\"reloaded\",{\"1\":{\"201\":1}}],[\"reload\",{\"1\":{\"201\":7}}],[\"relaunch\",{\"1\":{\"130\":3}}],[\"relative\",{\"1\":{\"121\":3,\"124\":3}}],[\"render函数的方式\",{\"1\":{\"530\":1}}],[\"render函数选项中\",{\"1\":{\"387\":1}}],[\"rendertiggered\",{\"1\":{\"494\":1}}],[\"rendertracked\",{\"1\":{\"494\":1}}],[\"render\",{\"1\":{\"201\":1,\"388\":1,\"390\":1,\"392\":1,\"398\":1,\"399\":1,\"400\":1,\"530\":1,\"611\":1,\"691\":1}}],[\"render等\",{\"1\":{\"201\":1}}],[\"rendereroptions\",{\"1\":{\"139\":1,\"146\":1}}],[\"renderer\",{\"1\":{\"139\":1,\"146\":1}}],[\"rendering\",{\"1\":{\"17\":1}}],[\"removeroute\",{\"1\":{\"573\":1,\"574\":4}}],[\"removehash\",{\"1\":{\"561\":2}}],[\"removequeryparams\",{\"1\":{\"561\":3}}],[\"removeeventlistener\",{\"1\":{\"503\":3}}],[\"removebook\",{\"1\":{\"480\":2}}],[\"remove\",{\"1\":{\"388\":1}}],[\"removenum方法从numbers数组的随机位置删除一个数字\",{\"1\":{\"174\":1}}],[\"removenum\",{\"1\":{\"174\":2}}],[\"rem\",{\"1\":{\"125\":1}}],[\"really\",{\"1\":{\"563\":1}}],[\"reason\",{\"1\":{\"282\":1}}],[\"readonly返回的info对象也会被修改\",{\"1\":{\"361\":1}}],[\"readonly返回的对象都是不允许修改的\",{\"1\":{\"361\":1}}],[\"readonly了\",{\"1\":{\"361\":1}}],[\"readonlyobj\",{\"1\":{\"354\":3}}],[\"readonly\",{\"0\":{\"360\":1},\"1\":{\"354\":12,\"361\":3,\"363\":1,\"384\":2}}],[\"readonly创建的\",{\"1\":{\"354\":1}}],[\"readme\",{\"1\":{\"269\":1}}],[\"readbody\",{\"1\":{\"198\":1}}],[\"read\",{\"1\":{\"197\":1}}],[\"ready\",{\"1\":{\"118\":1}}],[\"react和vue等都支持spa的开发模式\",{\"1\":{\"538\":1}}],[\"reactivity\",{\"1\":{\"468\":1}}],[\"reactive时默认是深度侦听的\",{\"1\":{\"381\":1}}],[\"reactivestate\",{\"1\":{\"379\":2}}],[\"reactive返回的对象\",{\"1\":{\"361\":1}}],[\"reactiveobj\",{\"1\":{\"354\":3}}],[\"reactive创建的响应式代理\",{\"1\":{\"354\":1}}],[\"reactive判断的api\",{\"0\":{\"354\":1}}],[\"reactive\",{\"0\":{\"353\":1},\"1\":{\"347\":1,\"353\":3,\"354\":10,\"357\":3,\"361\":3,\"363\":2,\"366\":2,\"367\":2,\"379\":8,\"380\":2,\"509\":3,\"578\":2,\"580\":1}}],[\"react使用的jsx\",{\"1\":{\"429\":1}}],[\"react的开发模式\",{\"1\":{\"429\":1}}],[\"react脚手架中常见的设置方式\",{\"1\":{\"230\":1}}],[\"react项目\",{\"1\":{\"186\":1}}],[\"react框架本身并没有提供任何动画相关的api\",{\"1\":{\"154\":1}}],[\"react\",{\"1\":{\"59\":1,\"154\":1,\"186\":1,\"203\":2,\"243\":1,\"244\":2,\"246\":1,\"248\":1,\"257\":3,\"333\":1,\"429\":1,\"538\":1}}],[\"reset\",{\"1\":{\"505\":1}}],[\"result\",{\"1\":{\"472\":2,\"473\":4}}],[\"response\",{\"1\":{\"383\":2,\"578\":4}}],[\"responsive\",{\"1\":{\"148\":1}}],[\"res\",{\"1\":{\"262\":1,\"504\":4,\"505\":2,\"651\":2,\"668\":2}}],[\"restartstrategy\",{\"1\":{\"142\":1,\"146\":1}}],[\"resolving\",{\"1\":{\"197\":1}}],[\"resolve可以帮助webpack从每个\",{\"1\":{\"264\":1}}],[\"resolve模块解析\",{\"0\":{\"264\":1}}],[\"resolvenodemodulefile\",{\"1\":{\"197\":1}}],[\"resolver\",{\"1\":{\"197\":1}}],[\"resolve\",{\"1\":{\"190\":1,\"211\":1,\"264\":7,\"265\":1,\"282\":3,\"396\":1,\"555\":2,\"559\":1,\"571\":2}}],[\"resolvealias\",{\"1\":{\"139\":1}}],[\"resources\",{\"1\":{\"34\":1}}],[\"resourcestr\",{\"1\":{\"8\":1}}],[\"resource\",{\"1\":{\"9\":1,\"215\":1,\"227\":1,\"231\":1}}],[\"resizable\",{\"1\":{\"113\":1,\"139\":1}}],[\"ref的对象\",{\"1\":{\"361\":1}}],[\"ref判断的api\",{\"0\":{\"358\":1}}],[\"ref自动解包\",{\"0\":{\"357\":1}}],[\"ref引用\",{\"1\":{\"355\":1}}],[\"ref函数\",{\"1\":{\"355\":1}}],[\"ref<\",{\"1\":{\"342\":1}}],[\"ref=\",{\"1\":{\"342\":1,\"370\":1,\"371\":1,\"377\":1,\"379\":1,\"380\":1,\"405\":1,\"410\":1,\"494\":1}}],[\"refs\",{\"1\":{\"342\":1}}],[\"ref对象\",{\"1\":{\"313\":1,\"330\":1}}],[\"referenced\",{\"1\":{\"201\":1}}],[\"reference\",{\"1\":{\"86\":1,\"139\":1}}],[\"references\",{\"1\":{\"13\":1}}],[\"ref\",{\"0\":{\"355\":1},\"1\":{\"59\":1,\"342\":1,\"347\":3,\"349\":5,\"350\":4,\"355\":3,\"356\":2,\"357\":7,\"358\":7,\"361\":1,\"363\":1,\"365\":2,\"366\":2,\"370\":2,\"371\":2,\"374\":3,\"375\":3,\"376\":3,\"377\":4,\"379\":3,\"380\":2,\"384\":3,\"389\":2,\"390\":2,\"400\":2,\"402\":2,\"405\":2,\"410\":2,\"415\":3,\"416\":3,\"503\":9,\"504\":6,\"505\":9,\"508\":6,\"509\":7,\"514\":1,\"567\":1,\"581\":2}}],[\"req\",{\"1\":{\"262\":2,\"543\":2,\"546\":2}}],[\"requesttofile\",{\"1\":{\"197\":1}}],[\"requests\",{\"1\":{\"197\":1}}],[\"request\",{\"1\":{\"144\":2,\"376\":1,\"577\":3}}],[\"required\",{\"1\":{\"305\":1,\"306\":1,\"321\":1,\"322\":1,\"349\":1,\"350\":1}}],[\"required为true\",{\"1\":{\"305\":1,\"321\":1}}],[\"requiredprivateinfos\",{\"1\":{\"139\":1}}],[\"requiredbackgroundmodes\",{\"1\":{\"139\":1}}],[\"require\",{\"1\":{\"97\":2,\"188\":1,\"192\":1,\"195\":1,\"211\":1,\"222\":2,\"224\":1,\"234\":1,\"236\":1,\"237\":1,\"238\":1,\"250\":7,\"264\":3,\"265\":3}}],[\"requirepragma\",{\"1\":{\"59\":1,\"60\":1}}],[\"requiresauth\",{\"1\":{\"569\":4}}],[\"requires\",{\"1\":{\"59\":1,\"250\":1}}],[\"reqpermissions\",{\"1\":{\"10\":1}}],[\"record\",{\"1\":{\"569\":2}}],[\"record<string\",{\"1\":{\"17\":1,\"40\":1}}],[\"recommended\",{\"1\":{\"59\":3,\"251\":1}}],[\"reduce\",{\"1\":{\"657\":2,\"668\":2,\"696\":2}}],[\"redirect\",{\"1\":{\"130\":3,\"554\":4,\"569\":1}}],[\"redefine\",{\"1\":{\"98\":1}}],[\"red\",{\"1\":{\"17\":2,\"24\":1,\"39\":1,\"106\":1,\"250\":1,\"288\":1,\"307\":1,\"323\":1,\"391\":1,\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1,\"433\":1,\"440\":1,\"443\":3,\"444\":1}}],[\"reversemessage\",{\"1\":{\"472\":2}}],[\"reverse\",{\"1\":{\"12\":1,\"16\":1,\"160\":1,\"167\":1,\"430\":2,\"459\":1,\"470\":1,\"471\":1,\"472\":1}}],[\"13\",{\"0\":{\"659\":1}}],[\"136597099\",{\"1\":{\"58\":1}}],[\"1秒后\",{\"1\":{\"637\":2,\"695\":2}}],[\"1`\",{\"1\":{\"563\":1}}],[\"1<\",{\"1\":{\"350\":1,\"353\":1,\"356\":1,\"398\":1,\"399\":1,\"400\":1,\"527\":2,\"544\":1,\"605\":1,\"619\":1,\"632\":1}}],[\"1s\",{\"1\":{\"167\":3,\"174\":2,\"175\":1,\"176\":1}}],[\"1px\",{\"1\":{\"148\":3,\"291\":1,\"480\":2,\"603\":3}}],[\"1物理像素\",{\"1\":{\"148\":1}}],[\"14\",{\"0\":{\"664\":1},\"1\":{\"139\":1,\"583\":1}}],[\"140\",{\"1\":{\"68\":1}}],[\"1aad19\",{\"1\":{\"121\":1,\"124\":1}}],[\"1rpx\",{\"1\":{\"87\":1,\"148\":4}}],[\"127\",{\"1\":{\"577\":1,\"578\":2}}],[\"123456\",{\"1\":{\"577\":1}}],[\"123\",{\"1\":{\"544\":2}}],[\"128\",{\"1\":{\"480\":1}}],[\"12\",{\"0\":{\"654\":1},\"1\":{\"40\":3,\"126\":1,\"139\":1,\"146\":1,\"185\":1,\"692\":1}}],[\"120\",{\"1\":{\"17\":1,\"582\":1}}],[\"1成立\",{\"1\":{\"40\":1}}],[\"1f000000\",{\"1\":{\"39\":1}}],[\"115\",{\"1\":{\"133\":1}}],[\"113\",{\"1\":{\"68\":1}}],[\"11a2a2a2\",{\"1\":{\"40\":1}}],[\"11\",{\"0\":{\"649\":1},\"1\":{\"38\":1,\"88\":1,\"93\":1,\"139\":2,\"142\":1,\"146\":1,\"405\":1}}],[\"163\",{\"1\":{\"539\":1}}],[\"16px\",{\"1\":{\"480\":1}}],[\"16\",{\"0\":{\"676\":1},\"1\":{\"18\":1,\"126\":1,\"142\":2,\"146\":2}}],[\"1666\",{\"1\":{\"17\":1}}],[\"18+\",{\"1\":{\"185\":1}}],[\"1810190\",{\"1\":{\"139\":1}}],[\"18\",{\"1\":{\"17\":3,\"51\":1,\"55\":2,\"68\":1,\"139\":1,\"277\":1,\"313\":1,\"330\":1,\"363\":1,\"374\":1,\"375\":1,\"376\":1,\"379\":1,\"380\":1,\"403\":2,\"446\":2,\"449\":1,\"457\":1,\"458\":1,\"477\":2,\"583\":2,\"585\":1}}],[\"1999\",{\"1\":{\"17\":1}}],[\"15px\",{\"1\":{\"149\":1}}],[\"150px\",{\"1\":{\"123\":1}}],[\"150\",{\"1\":{\"59\":1,\"60\":1}}],[\"15\",{\"0\":{\"671\":1},\"1\":{\"14\":2,\"15\":2,\"39\":1,\"59\":1,\"142\":2,\"146\":2}}],[\"1\",{\"0\":{\"588\":1},\"1\":{\"14\":5,\"15\":5,\"18\":1,\"23\":2,\"33\":1,\"36\":4,\"39\":3,\"40\":12,\"50\":2,\"59\":3,\"87\":1,\"93\":1,\"98\":1,\"103\":1,\"109\":2,\"121\":8,\"123\":14,\"124\":4,\"125\":3,\"126\":11,\"130\":1,\"132\":1,\"136\":3,\"139\":12,\"142\":1,\"146\":4,\"148\":1,\"159\":2,\"160\":2,\"161\":2,\"167\":2,\"172\":1,\"174\":2,\"176\":3,\"256\":1,\"259\":1,\"260\":2,\"275\":1,\"294\":2,\"306\":1,\"322\":1,\"354\":2,\"357\":1,\"358\":1,\"367\":1,\"370\":1,\"371\":1,\"388\":1,\"389\":1,\"390\":2,\"398\":1,\"399\":1,\"400\":1,\"402\":2,\"404\":2,\"405\":1,\"408\":2,\"415\":1,\"416\":1,\"426\":1,\"430\":2,\"437\":1,\"438\":1,\"446\":2,\"457\":1,\"458\":1,\"470\":1,\"473\":1,\"474\":1,\"478\":3,\"480\":8,\"483\":2,\"489\":1,\"544\":1,\"547\":2,\"548\":1,\"552\":2,\"577\":1,\"578\":2,\"582\":2,\"585\":2,\"611\":1,\"616\":1,\"619\":1,\"629\":1,\"630\":1,\"632\":2,\"641\":1,\"643\":1,\"661\":1,\"686\":1,\"697\":1}}],[\"10335230\",{\"1\":{\"438\":1}}],[\"1024\",{\"1\":{\"224\":1,\"225\":1,\"232\":1}}],[\"10px\",{\"1\":{\"174\":1,\"288\":1,\"571\":1}}],[\"10rpx\",{\"1\":{\"136\":2}}],[\"107\",{\"1\":{\"15\":1}}],[\"10\",{\"0\":{\"645\":1},\"1\":{\"12\":1,\"16\":4,\"17\":3,\"18\":1,\"22\":1,\"23\":1,\"39\":3,\"43\":1,\"50\":2,\"93\":1,\"124\":1,\"132\":1,\"146\":1,\"174\":1,\"280\":1,\"311\":1,\"327\":1,\"413\":1,\"415\":1,\"416\":1,\"430\":1,\"457\":1,\"480\":1,\"483\":1,\"571\":2}}],[\"100px\",{\"1\":{\"578\":1}}],[\"100rpx\",{\"1\":{\"121\":2}}],[\"1000\",{\"1\":{\"17\":1,\"121\":1,\"413\":1,\"415\":2,\"416\":2,\"637\":2,\"695\":2}}],[\"100\",{\"1\":{\"12\":1,\"14\":4,\"15\":1,\"16\":3,\"17\":7,\"18\":4,\"38\":1,\"39\":4,\"40\":1,\"50\":3,\"121\":1,\"123\":2,\"124\":3,\"136\":1,\"160\":1,\"167\":1,\"172\":1,\"224\":1,\"225\":1,\"232\":1,\"306\":1,\"322\":1,\"349\":1,\"350\":2,\"353\":1,\"356\":1,\"384\":1,\"430\":1,\"432\":1,\"448\":1,\"487\":1,\"527\":2,\"552\":2,\"578\":2,\"584\":1,\"615\":1,\"624\":1}}],[\"5<\",{\"1\":{\"643\":1}}],[\"5+\",{\"1\":{\"565\":1}}],[\"59\",{\"1\":{\"480\":1}}],[\"5c6b77\",{\"1\":{\"480\":1}}],[\"5em\",{\"1\":{\"176\":1}}],[\"550\",{\"1\":{\"163\":1}}],[\"552px\",{\"1\":{\"148\":1}}],[\"5s\",{\"1\":{\"155\":1,\"158\":1,\"160\":2}}],[\"5px\",{\"1\":{\"148\":2,\"149\":1,\"288\":2,\"480\":1}}],[\"50px\",{\"1\":{\"443\":2}}],[\"500ms\",{\"1\":{\"571\":1}}],[\"500\",{\"1\":{\"123\":1,\"163\":1,\"571\":1}}],[\"5000\",{\"1\":{\"123\":1,\"578\":2}}],[\"50\",{\"1\":{\"14\":4,\"15\":10,\"17\":1,\"38\":2,\"39\":1,\"40\":2,\"121\":13,\"124\":12,\"125\":1,\"136\":1,\"142\":1,\"146\":1,\"160\":1,\"167\":1,\"443\":1}}],[\"5\",{\"0\":{\"613\":1},\"1\":{\"14\":2,\"15\":2,\"18\":2,\"39\":1,\"40\":8,\"55\":2,\"63\":1,\"103\":1,\"109\":1,\"113\":1,\"121\":1,\"130\":1,\"142\":3,\"143\":3,\"146\":3,\"159\":1,\"174\":1,\"176\":2,\"259\":1,\"388\":1,\"478\":1,\"611\":1,\"642\":1,\"643\":1,\"686\":1}}],[\"96\",{\"1\":{\"124\":1}}],[\"9a\",{\"1\":{\"124\":1}}],[\"9999\",{\"1\":{\"136\":1}}],[\"99\",{\"1\":{\"123\":1}}],[\"94\",{\"1\":{\"123\":2,\"686\":3}}],[\"9c\",{\"1\":{\"123\":2}}],[\"9e\",{\"1\":{\"123\":2,\"686\":1}}],[\"93\",{\"1\":{\"123\":1}}],[\"9f\",{\"1\":{\"123\":1}}],[\"95\",{\"1\":{\"39\":1,\"123\":2,\"452\":1}}],[\"9开始\",{\"1\":{\"20\":2}}],[\"90\",{\"1\":{\"14\":8,\"15\":8,\"93\":1,\"139\":1,\"366\":1,\"452\":1,\"473\":1,\"487\":1}}],[\"9\",{\"0\":{\"639\":1},\"1\":{\"14\":5,\"15\":5,\"18\":1,\"93\":1,\"123\":2,\"139\":3,\"174\":1,\"267\":1,\"480\":1}}],[\"fns\",{\"1\":{\"502\":1}}],[\"fetchpreferences\",{\"1\":{\"584\":1}}],[\"fetchuserpreferences\",{\"1\":{\"584\":1}}],[\"fetching\",{\"1\":{\"505\":1}}],[\"fetchdata\",{\"1\":{\"505\":2}}],[\"fetch\",{\"1\":{\"504\":4,\"505\":6,\"513\":1,\"584\":1}}],[\"female\",{\"1\":{\"483\":4}}],[\"featurec\",{\"1\":{\"512\":1}}],[\"featureb\",{\"1\":{\"512\":1}}],[\"featurea\",{\"1\":{\"512\":1}}],[\"feature\",{\"1\":{\"251\":5}}],[\"features\",{\"1\":{\"179\":1,\"268\":3}}],[\"featur\",{\"1\":{\"251\":1}}],[\"f7f7f7\",{\"1\":{\"480\":1}}],[\"f\",{\"0\":{\"463\":1},\"1\":{\"267\":1,\"463\":2,\"478\":2,\"529\":1}}],[\"fs\",{\"1\":{\"250\":3}}],[\"future\",{\"1\":{\"268\":1}}],[\"fullpath\",{\"1\":{\"560\":2,\"569\":1,\"573\":1}}],[\"fullname的getter和setter方法\",{\"1\":{\"474\":1}}],[\"fullname\",{\"1\":{\"366\":3,\"367\":5,\"472\":2,\"473\":9,\"474\":5}}],[\"full\",{\"1\":{\"201\":1}}],[\"fully\",{\"1\":{\"179\":1}}],[\"functions\",{\"1\":{\"243\":3}}],[\"functionalpages\",{\"1\":{\"139\":1}}],[\"function\",{\"1\":{\"39\":2,\"40\":1,\"47\":1,\"53\":1,\"54\":1,\"59\":2,\"91\":1,\"93\":7,\"95\":12,\"97\":4,\"106\":1,\"109\":1,\"110\":2,\"112\":1,\"117\":1,\"118\":1,\"137\":2,\"201\":2,\"241\":1,\"282\":1,\"288\":1,\"291\":1,\"294\":1,\"306\":5,\"314\":3,\"322\":5,\"331\":3,\"347\":1,\"359\":1,\"371\":1,\"386\":2,\"413\":2,\"425\":1,\"429\":1,\"447\":1,\"469\":3,\"474\":2,\"475\":1,\"476\":1,\"477\":1,\"478\":3,\"479\":1,\"503\":5,\"504\":1,\"505\":1,\"508\":1,\"527\":2,\"561\":2,\"585\":1,\"694\":1}}],[\"f5f5f5\",{\"1\":{\"143\":1}}],[\"fff\",{\"1\":{\"136\":1,\"288\":1}}],[\"ffffff\",{\"1\":{\"121\":2,\"124\":2,\"142\":4,\"146\":3}}],[\"f=jpeg\",{\"1\":{\"123\":4}}],[\"fmt=auto\",{\"1\":{\"123\":4}}],[\"fm=253\",{\"1\":{\"123\":4}}],[\"f1f1f1\",{\"1\":{\"121\":1,\"124\":1}}],[\"f1f2f3\",{\"1\":{\"39\":1}}],[\"flask\",{\"0\":{\"577\":1},\"1\":{\"577\":4}}],[\"flags的好处在于能够更好地控制vue框架的特性和功能\",{\"1\":{\"251\":1}}],[\"flags是构建工具\",{\"1\":{\"251\":1}}],[\"flags\",{\"1\":{\"251\":3}}],[\"flag\",{\"1\":{\"106\":2,\"251\":1}}],[\"flush\",{\"1\":{\"377\":1}}],[\"flow\",{\"1\":{\"244\":3,\"519\":1}}],[\"floor\",{\"1\":{\"174\":1}}],[\"flip\",{\"1\":{\"175\":1}}],[\"flex\",{\"1\":{\"121\":18,\"124\":1,\"136\":5}}],[\"flexalign\",{\"1\":{\"14\":2,\"15\":2,\"39\":2}}],[\"fruit\",{\"1\":{\"483\":3}}],[\"framer\",{\"1\":{\"171\":1}}],[\"framework\",{\"1\":{\"59\":1,\"89\":1,\"99\":1,\"113\":1,\"114\":1,\"134\":1,\"186\":2}}],[\"friend\",{\"1\":{\"57\":2,\"381\":2}}],[\"fromdepth\",{\"1\":{\"570\":2}}],[\"from\",{\"1\":{\"21\":1,\"57\":1,\"155\":1,\"157\":4,\"158\":1,\"159\":1,\"160\":1,\"161\":2,\"163\":1,\"167\":3,\"168\":1,\"170\":2,\"171\":2,\"172\":1,\"174\":2,\"176\":2,\"189\":1,\"190\":2,\"195\":2,\"197\":4,\"238\":2,\"250\":3,\"263\":5,\"264\":2,\"267\":1,\"276\":3,\"282\":3,\"288\":1,\"290\":1,\"291\":1,\"294\":1,\"295\":1,\"300\":5,\"304\":3,\"305\":4,\"306\":2,\"307\":1,\"310\":1,\"313\":4,\"314\":4,\"316\":5,\"320\":3,\"321\":4,\"322\":2,\"323\":1,\"326\":1,\"328\":3,\"330\":4,\"331\":4,\"338\":1,\"342\":2,\"347\":1,\"349\":3,\"350\":2,\"353\":1,\"354\":2,\"356\":1,\"358\":1,\"359\":2,\"361\":1,\"363\":1,\"366\":1,\"367\":1,\"368\":1,\"370\":1,\"371\":2,\"374\":1,\"375\":1,\"376\":1,\"377\":2,\"379\":5,\"380\":1,\"384\":3,\"388\":1,\"389\":1,\"390\":1,\"391\":2,\"392\":3,\"396\":4,\"398\":1,\"400\":1,\"402\":2,\"403\":1,\"404\":1,\"405\":2,\"410\":1,\"412\":2,\"413\":3,\"415\":2,\"416\":2,\"426\":3,\"497\":1,\"500\":2,\"503\":6,\"504\":3,\"505\":1,\"508\":1,\"512\":3,\"513\":2,\"543\":2,\"544\":2,\"547\":1,\"551\":2,\"559\":8,\"560\":2,\"561\":1,\"563\":6,\"566\":2,\"567\":2,\"568\":1,\"569\":1,\"570\":2,\"571\":8,\"577\":2,\"578\":7,\"581\":5,\"582\":1,\"583\":2,\"584\":2,\"585\":6,\"603\":2,\"611\":5,\"616\":1,\"619\":1,\"629\":1,\"632\":1,\"641\":1,\"643\":1,\"652\":1,\"661\":1,\"662\":1,\"668\":1,\"669\":4,\"691\":3,\"692\":1,\"693\":2,\"694\":2,\"697\":1,\"698\":1}}],[\"fix\",{\"1\":{\"268\":1}}],[\"fixed\",{\"1\":{\"135\":1,\"136\":1}}],[\"firstname\",{\"1\":{\"105\":5,\"151\":2,\"344\":4,\"366\":2,\"367\":3,\"469\":1,\"470\":1,\"471\":2,\"472\":2,\"473\":5,\"474\":4,\"490\":4}}],[\"first\",{\"1\":{\"59\":1,\"344\":2,\"490\":2}}],[\"fill\",{\"1\":{\"136\":4}}],[\"fileurltopath\",{\"1\":{\"396\":2}}],[\"filename\",{\"1\":{\"211\":1,\"224\":1,\"227\":1,\"232\":1,\"248\":1,\"265\":1}}],[\"files\",{\"1\":{\"59\":1,\"236\":1,\"268\":1}}],[\"file\",{\"0\":{\"224\":1},\"1\":{\"59\":1,\"98\":2,\"197\":5,\"198\":4,\"201\":1,\"224\":3,\"227\":1,\"228\":1,\"231\":2,\"242\":2,\"339\":1,\"531\":1}}],[\"filterbooks\",{\"1\":{\"480\":1}}],[\"filter\",{\"1\":{\"39\":1,\"176\":1,\"459\":3}}],[\"finalprice\",{\"1\":{\"480\":3}}],[\"finalstyleobj\",{\"1\":{\"443\":2}}],[\"finalfontsize\",{\"1\":{\"443\":2}}],[\"finalcolor\",{\"1\":{\"443\":4}}],[\"fina\",{\"1\":{\"251\":1}}],[\"find\",{\"1\":{\"59\":1,\"547\":4,\"554\":4}}],[\"finishtask\",{\"1\":{\"39\":4}}],[\"finishedtask\",{\"1\":{\"39\":1}}],[\"finished\",{\"1\":{\"39\":4}}],[\"faq\",{\"1\":{\"347\":1}}],[\"falsy\",{\"1\":{\"571\":1}}],[\"false选项\",{\"1\":{\"308\":1,\"324\":1}}],[\"false\",{\"1\":{\"12\":1,\"16\":1,\"18\":1,\"39\":1,\"59\":8,\"60\":6,\"88\":1,\"106\":1,\"121\":1,\"123\":4,\"126\":2,\"132\":1,\"142\":1,\"143\":1,\"146\":3,\"168\":3,\"171\":2,\"176\":1,\"251\":1,\"259\":1,\"262\":1,\"265\":1,\"270\":1,\"308\":1,\"311\":1,\"324\":1,\"327\":1,\"483\":1,\"550\":1,\"559\":3,\"561\":1,\"563\":2,\"566\":1,\"567\":4,\"569\":1,\"611\":1}}],[\"fallback>\",{\"1\":{\"283\":1,\"284\":1}}],[\"fallback\",{\"1\":{\"283\":2}}],[\"failure\",{\"1\":{\"560\":2}}],[\"failures\",{\"1\":{\"560\":2}}],[\"fail\",{\"1\":{\"282\":1}}],[\"fast\",{\"1\":{\"179\":1}}],[\"fade\",{\"1\":{\"158\":7,\"159\":5,\"164\":1,\"570\":2}}],[\"fa8072\",{\"1\":{\"143\":1}}],[\"fancy\",{\"1\":{\"288\":3}}],[\"fancybutton>\",{\"1\":{\"288\":3,\"293\":1}}],[\"fancybutton\",{\"1\":{\"288\":6}}],[\"fan\",{\"1\":{\"58\":1}}],[\"fa模型逐渐不再被主推\",{\"1\":{\"32\":1}}],[\"fa模型的特点是每个组件运行在自己的进程中\",{\"1\":{\"32\":1}}],[\"fa模型是harmonyos早期版本开始支持的应用模型\",{\"1\":{\"32\":1}}],[\"fa模型\",{\"0\":{\"32\":1}}],[\"fa\",{\"0\":{\"31\":1}}],[\"f8f8f8\",{\"1\":{\"17\":1}}],[\"found\",{\"0\":{\"548\":1}}],[\"fomat\",{\"1\":{\"415\":2,\"416\":1}}],[\"focus>\",{\"1\":{\"411\":1}}],[\"focus\",{\"1\":{\"410\":4,\"411\":4,\"412\":2}}],[\"following\",{\"1\":{\"186\":1}}],[\"follow\",{\"1\":{\"59\":1}}],[\"foo2\",{\"1\":{\"529\":2}}],[\"football\",{\"1\":{\"483\":4}}],[\"footer组件的父组件\",{\"1\":{\"301\":1,\"317\":1}}],[\"footer\",{\"1\":{\"291\":5,\"300\":1,\"316\":1,\"547\":1,\"551\":1}}],[\"footer>\",{\"1\":{\"291\":5}}],[\"fooref\",{\"1\":{\"380\":1}}],[\"food\",{\"1\":{\"123\":3}}],[\"foo\",{\"1\":{\"54\":2,\"380\":1,\"391\":9,\"405\":3,\"408\":6,\"497\":3,\"512\":2,\"529\":2,\"555\":2}}],[\"forward\",{\"1\":{\"552\":1}}],[\"forwards\",{\"1\":{\"126\":1}}],[\"form>\",{\"1\":{\"578\":1}}],[\"forminline\",{\"1\":{\"578\":5}}],[\"form\",{\"1\":{\"566\":2,\"578\":8}}],[\"forms\",{\"1\":{\"483\":1}}],[\"formatprice\",{\"1\":{\"480\":3}}],[\"formattype\",{\"1\":{\"415\":4}}],[\"formatter\",{\"1\":{\"268\":2}}],[\"formatstring\",{\"1\":{\"413\":3}}],[\"format\",{\"1\":{\"59\":1,\"413\":4,\"415\":2,\"416\":2}}],[\"for进行列表渲染时\",{\"1\":{\"460\":1}}],[\"for同时也支持数字的遍历\",{\"1\":{\"457\":1}}],[\"for也支持遍历对象\",{\"1\":{\"457\":1}}],[\"for支持的类型\",{\"1\":{\"457\":1}}],[\"for的基本格式是\",{\"1\":{\"457\":1}}],[\"for类似于javascript的for循环\",{\"1\":{\"456\":1}}],[\"for来完成\",{\"1\":{\"456\":1}}],[\"for=\",{\"1\":{\"103\":1,\"123\":1,\"136\":1,\"174\":1,\"176\":1,\"275\":1,\"276\":1,\"328\":1,\"457\":3,\"458\":1,\"459\":1,\"463\":1,\"480\":1,\"483\":7}}],[\"for\",{\"0\":{\"460\":1},\"1\":{\"47\":1,\"53\":1,\"54\":1,\"59\":1,\"65\":1,\"95\":1,\"109\":1,\"197\":1,\"201\":1,\"251\":1,\"268\":2,\"291\":1,\"409\":1,\"480\":1,\"483\":2}}],[\"foreachinterface\",{\"1\":{\"40\":1}}],[\"foreach最终的渲染结果是\",{\"1\":{\"40\":1}}],[\"foreach渲染相同的数据项two时\",{\"1\":{\"17\":1}}],[\"foreach提供了一个名为keygenerator的参数\",{\"1\":{\"17\":1}}],[\"foreach\",{\"1\":{\"17\":4,\"18\":1,\"39\":1,\"40\":2,\"201\":2,\"314\":1,\"331\":1,\"578\":2,\"652\":1}}],[\"fontsre\",{\"1\":{\"198\":3}}],[\"fontsize\",{\"1\":{\"14\":5,\"15\":5,\"17\":6,\"18\":1,\"38\":2,\"39\":5,\"40\":2,\"443\":2,\"444\":1}}],[\"font\",{\"1\":{\"121\":4,\"124\":3,\"126\":1,\"136\":1,\"205\":1,\"227\":3,\"291\":1,\"443\":3,\"480\":1}}],[\"fontweight\",{\"1\":{\"17\":4,\"39\":2,\"443\":2}}],[\"fontcolor\",{\"1\":{\"14\":5,\"15\":5,\"17\":3,\"39\":2,\"40\":1}}],[\"vm\",{\"1\":{\"563\":1}}],[\"vm引擎实例\",{\"1\":{\"32\":1}}],[\"volar\",{\"1\":{\"531\":1}}],[\"void\",{\"1\":{\"17\":1,\"241\":1,\"282\":2}}],[\"vjuː\",{\"1\":{\"518\":1}}],[\"v=4\",{\"1\":{\"438\":1}}],[\"vfomattime\",{\"1\":{\"416\":1}}],[\"vfocus\",{\"1\":{\"410\":1,\"411\":1}}],[\"vnode节点\",{\"1\":{\"530\":1}}],[\"vnode的本质是一个javascript的对象\",{\"1\":{\"461\":1}}],[\"vnode的全称是virtual\",{\"1\":{\"461\":1}}],[\"vnode\",{\"0\":{\"461\":1},\"1\":{\"385\":1,\"386\":4,\"391\":1,\"393\":2,\"407\":3,\"408\":10,\"411\":1,\"412\":1,\"462\":1}}],[\"vdom\",{\"1\":{\"385\":1}}],[\"v10\",{\"1\":{\"267\":1}}],[\"v8\",{\"1\":{\"267\":1}}],[\"vetur\",{\"1\":{\"531\":1}}],[\"vendor\",{\"1\":{\"271\":1}}],[\"veet\",{\"1\":{\"178\":1}}],[\"vertical\",{\"1\":{\"123\":1}}],[\"verticalalign\",{\"1\":{\"15\":2}}],[\"version\",{\"1\":{\"20\":2,\"267\":1}}],[\"vw\",{\"1\":{\"139\":1}}],[\"vscode对sfc文件的支持\",{\"0\":{\"531\":1}}],[\"vscode中的代码片段有固定的格式\",{\"1\":{\"428\":1}}],[\"vscode\",{\"0\":{\"428\":1},\"1\":{\"254\":1}}],[\"vs\",{\"0\":{\"70\":1,\"473\":1},\"1\":{\"70\":3,\"73\":2,\"306\":1,\"322\":1}}],[\"via\",{\"1\":{\"201\":1}}],[\"vit\",{\"1\":{\"178\":1}}],[\"vite环境\",{\"0\":{\"396\":1}}],[\"vite使用esbuild将ts转译到js\",{\"1\":{\"200\":1}}],[\"vite使用esbuild在初次启动开发服务器前把检测到的依赖进行预构建\",{\"1\":{\"197\":1}}],[\"vite对vue提供第一优先级支持\",{\"1\":{\"192\":1}}],[\"vite对typescript是原生支持的\",{\"1\":{\"191\":1}}],[\"vite直接支持postcss的转换\",{\"1\":{\"188\":1}}],[\"vite可以直接支持css预处理器\",{\"1\":{\"188\":1}}],[\"vite可以直接支持css的处理\",{\"1\":{\"188\":1}}],[\"vite构建vue3项目\",{\"0\":{\"186\":1}}],[\"vite的使用可谓是相当简单了\",{\"1\":{\"183\":1}}],[\"vite的主要特性\",{\"0\":{\"179\":1}}],[\"vite这类面相非打包的构建工具\",{\"1\":{\"182\":1}}],[\"vite开发环境冷启动无需打包\",{\"1\":{\"182\":1}}],[\"vite作为一个基于浏览器原生esm的构建工具\",{\"1\":{\"178\":1}}],[\"vitejs\",{\"1\":{\"177\":1,\"190\":1,\"192\":4,\"396\":3}}],[\"vite\",{\"0\":{\"177\":1,\"178\":1,\"181\":1,\"184\":1,\"187\":1,\"193\":1},\"1\":{\"68\":4,\"178\":6,\"180\":1,\"182\":1,\"185\":4,\"186\":5,\"189\":2,\"190\":2,\"192\":1,\"195\":1,\"197\":12,\"199\":1,\"201\":10,\"282\":1,\"339\":1,\"340\":1,\"396\":2,\"578\":2}}],[\"vite版要求\",{\"1\":{\"68\":1}}],[\"vite版不会提示\",{\"1\":{\"68\":1}}],[\"vite版\",{\"1\":{\"68\":1}}],[\"videocamera\",{\"1\":{\"143\":2}}],[\"visualeffectinbackground\",{\"1\":{\"142\":1,\"146\":1}}],[\"vivo\",{\"1\":{\"69\":1}}],[\"viewmode的简称\",{\"1\":{\"526\":1}}],[\"views\",{\"1\":{\"263\":3,\"544\":2,\"547\":5,\"548\":1,\"577\":1}}],[\"viewport\",{\"1\":{\"236\":1,\"480\":1}}],[\"view一个固定高度\",{\"1\":{\"124\":1}}],[\"view组件就相当于之前html中的div标签\",{\"1\":{\"121\":1}}],[\"viewtap\",{\"1\":{\"95\":1}}],[\"view><\",{\"1\":{\"540\":1,\"543\":2,\"544\":1,\"546\":1,\"547\":1,\"551\":1,\"557\":2,\"578\":2}}],[\"view>\",{\"1\":{\"91\":1,\"102\":1,\"103\":1,\"104\":3,\"105\":1,\"106\":1,\"108\":1,\"109\":1,\"117\":1,\"118\":1,\"121\":16,\"123\":1,\"124\":25,\"136\":3,\"137\":1,\"540\":1,\"543\":2,\"544\":1,\"546\":1,\"547\":1,\"551\":1,\"557\":8,\"570\":4,\"578\":2}}],[\"view\",{\"0\":{\"121\":1,\"124\":1,\"542\":1},\"1\":{\"35\":1,\"90\":1,\"91\":2,\"95\":1,\"104\":4,\"106\":1,\"110\":1,\"113\":1,\"114\":1,\"116\":1,\"124\":17,\"135\":1,\"150\":1,\"151\":8,\"279\":3,\"388\":1,\"389\":1,\"390\":1,\"398\":1,\"399\":1,\"400\":1,\"410\":1,\"419\":1,\"421\":1,\"518\":1,\"526\":2,\"542\":1,\"543\":1,\"557\":3,\"570\":4}}],[\"vanilla\",{\"1\":{\"186\":1}}],[\"val\",{\"1\":{\"358\":5,\"478\":7,\"631\":2}}],[\"validator\",{\"1\":{\"305\":1,\"306\":1,\"321\":1,\"322\":1}}],[\"valid\",{\"1\":{\"59\":2}}],[\"valueof\",{\"1\":{\"415\":2,\"416\":2}}],[\"value之间建立了\",{\"1\":{\"364\":1}}],[\"value的方式\",{\"1\":{\"355\":1}}],[\"value中\",{\"1\":{\"355\":1}}],[\"value=\",{\"1\":{\"110\":6,\"111\":2,\"112\":1,\"343\":4,\"344\":2,\"481\":3,\"483\":8,\"489\":2,\"490\":2}}],[\"value++\",{\"1\":{\"40\":1,\"347\":1,\"356\":1,\"357\":1,\"363\":1,\"364\":1,\"374\":1,\"375\":1,\"376\":1,\"384\":2,\"389\":1,\"390\":1,\"400\":1,\"581\":1}}],[\"value\",{\"1\":{\"12\":2,\"16\":4,\"39\":3,\"40\":10,\"59\":1,\"110\":15,\"111\":1,\"241\":1,\"305\":2,\"306\":2,\"313\":1,\"321\":2,\"322\":2,\"330\":1,\"343\":7,\"344\":5,\"347\":1,\"349\":1,\"350\":3,\"355\":3,\"356\":3,\"357\":7,\"358\":6,\"359\":3,\"366\":1,\"367\":2,\"370\":1,\"371\":3,\"374\":4,\"375\":5,\"376\":4,\"377\":2,\"383\":1,\"384\":1,\"389\":2,\"390\":2,\"400\":2,\"405\":1,\"408\":3,\"410\":1,\"413\":2,\"415\":1,\"416\":1,\"445\":2,\"450\":1,\"457\":5,\"458\":2,\"481\":2,\"489\":7,\"490\":2,\"503\":6,\"504\":4,\"505\":5,\"508\":1,\"567\":1,\"573\":1,\"581\":1,\"624\":6}}],[\"variables\",{\"1\":{\"223\":1}}],[\"variant\",{\"1\":{\"186\":1}}],[\"var\",{\"1\":{\"59\":3,\"91\":1,\"97\":1,\"98\":3,\"108\":1,\"109\":3,\"241\":2,\"243\":2,\"430\":2}}],[\"vars\",{\"1\":{\"59\":3}}],[\"vue直接用\",{\"0\":{\"618\":1,\"631\":1}}],[\"vue里使用\",{\"0\":{\"662\":1,\"698\":1}}],[\"vue里\",{\"1\":{\"601\":1}}],[\"vuerouter\",{\"1\":{\"540\":2}}],[\"vue等\",{\"1\":{\"538\":1}}],[\"vue虽然并没有完全遵守mvvm的模型\",{\"1\":{\"526\":1}}],[\"vue官方其实有说明\",{\"1\":{\"526\":1}}],[\"vue使用vuex\",{\"0\":{\"652\":1}}],[\"vue使用\",{\"1\":{\"519\":1}}],[\"vue在让我们选择版本时\",{\"1\":{\"530\":1}}],[\"vue在进行diff算法的时候\",{\"1\":{\"465\":1}}],[\"vue在生成真实的dom之前\",{\"1\":{\"385\":1}}],[\"vue源码对于key的判断\",{\"0\":{\"464\":1}}],[\"vue事实上会对于有key和没有key会调用两个不同的方法\",{\"1\":{\"463\":1}}],[\"vue会使用一种最大限度减少动态元素并且尽可能的尝试就地修改\",{\"1\":{\"460\":1}}],[\"vue会自动帮助我们进行解包操作\",{\"1\":{\"355\":1}}],[\"vue将模板编译成虚拟dom渲染函数\",{\"1\":{\"429\":1}}],[\"vue也支持\",{\"1\":{\"429\":1}}],[\"vue插件\",{\"0\":{\"423\":1}}],[\"vue提供了两种方式\",{\"1\":{\"527\":1}}],[\"vue提供了下面的指令来进行条件判断\",{\"1\":{\"451\":1}}],[\"vue提供了如下的几个钩子函数\",{\"1\":{\"407\":1}}],[\"vue提供了一个torefs的函数\",{\"1\":{\"363\":1}}],[\"vuehome\",{\"1\":{\"313\":3,\"330\":3}}],[\"vueheader\",{\"1\":{\"300\":3,\"316\":3}}],[\"vueheader>\",{\"1\":{\"300\":1,\"316\":1}}],[\"vueproductlist\",{\"1\":{\"300\":3,\"316\":3}}],[\"vuebanner\",{\"1\":{\"300\":3,\"316\":3}}],[\"vue组件\",{\"1\":{\"300\":4,\"316\":4}}],[\"vue组件中\",{\"1\":{\"299\":1,\"315\":1}}],[\"vuefooter\",{\"1\":{\"300\":3,\"316\":3}}],[\"vuefooter>\",{\"1\":{\"300\":1,\"316\":1}}],[\"vuemain\",{\"1\":{\"300\":4,\"316\":4}}],[\"vuemain>\",{\"1\":{\"300\":1,\"316\":1}}],[\"vue中自带的指令例如v\",{\"1\":{\"409\":1}}],[\"vue中将\",{\"1\":{\"287\":1}}],[\"vue中为我们提供一些内置组件和对应的api来完成动画\",{\"1\":{\"154\":1}}],[\"vue结尾的文件在ts中不认可\",{\"1\":{\"269\":1}}],[\"vuex里的计算属性\",{\"1\":{\"658\":1}}],[\"vuex身上的全局状态\",{\"1\":{\"656\":1}}],[\"vuex的核心是什么\",{\"1\":{\"612\":1}}],[\"vuex的基础使用\",{\"1\":{\"587\":1}}],[\"vuex目录\",{\"0\":{\"610\":1}}],[\"vuex例子准备\",{\"0\":{\"600\":1}}],[\"vuex五个核心概念是\",{\"1\":{\"599\":1}}],[\"vuex计算属性\",{\"1\":{\"597\":1}}],[\"vuex学习内容\",{\"0\":{\"595\":1}}],[\"vuex中存什么\",{\"0\":{\"593\":1,\"690\":1},\"1\":{\"594\":1}}],[\"vuex为何学\",{\"0\":{\"592\":1,\"689\":1}}],[\"vuex是什么\",{\"0\":{\"591\":1,\"688\":1}}],[\"vuex是vue官方推荐的集中式状态管理机制\",{\"1\":{\"594\":1}}],[\"vuex是vue\",{\"1\":{\"268\":1}}],[\"vuex介绍\",{\"0\":{\"588\":1,\"687\":1}}],[\"vuex\",{\"0\":{\"586\":1,\"607\":1,\"613\":1,\"622\":1,\"627\":1,\"635\":1,\"639\":1,\"645\":1,\"649\":1,\"654\":1,\"659\":1,\"664\":1,\"686\":1},\"1\":{\"268\":1,\"590\":1,\"591\":1,\"597\":1,\"602\":2,\"609\":1,\"611\":6,\"615\":2,\"616\":1,\"619\":1,\"624\":2,\"629\":1,\"632\":1,\"637\":2,\"641\":1,\"643\":1,\"652\":1,\"657\":2,\"661\":1,\"662\":1,\"669\":4,\"686\":3,\"688\":1,\"691\":7,\"692\":2,\"693\":1,\"694\":4,\"695\":3,\"696\":3,\"697\":1,\"698\":1}}],[\"vuecli\",{\"0\":{\"266\":1}}],[\"vuecompileroptions\",{\"1\":{\"63\":1,\"72\":1}}],[\"vue和angular\",{\"1\":{\"257\":1}}],[\"vue$\",{\"1\":{\"250\":1}}],[\"vue打包后不同版本解析\",{\"1\":{\"250\":1}}],[\"vue项目加载的文件有哪些呢\",{\"0\":{\"205\":1}}],[\"vue文件中的template\",{\"1\":{\"530\":1}}],[\"vue文件中的template来编写模板\",{\"1\":{\"530\":1}}],[\"vue文件中使用<template>标签编写模板\",{\"1\":{\"530\":1}}],[\"vue文件\",{\"1\":{\"205\":1,\"340\":1}}],[\"vue文件缓存\",{\"0\":{\"199\":1}}],[\"vue文件脚本和样式标签缩进\",{\"1\":{\"59\":1,\"60\":1}}],[\"vue2\",{\"0\":{\"586\":1},\"1\":{\"192\":1,\"268\":1,\"437\":1,\"520\":3,\"521\":1}}],[\"vue2插件\",{\"1\":{\"186\":1}}],[\"vue支持\",{\"0\":{\"192\":1}}],[\"vue可能无法正确地确定过渡的结束\",{\"1\":{\"171\":1}}],[\"vue为了知道过渡的完成\",{\"1\":{\"162\":1}}],[\"vue的源码全部使用\",{\"1\":{\"519\":1}}],[\"vue的开发模式\",{\"0\":{\"339\":1}}],[\"vue的组件化\",{\"0\":{\"334\":1}}],[\"vue的组件文件\",{\"1\":{\"269\":1}}],[\"vue的项目我们使用的就是vue的脚手架\",{\"1\":{\"266\":1}}],[\"vue的写法\",{\"1\":{\"250\":1}}],[\"vue的\",{\"0\":{\"155\":1}}],[\"vueindentscriptandstyle\",{\"1\":{\"59\":1,\"60\":1}}],[\"vuejs\",{\"1\":{\"59\":1,\"155\":1,\"175\":1,\"251\":1,\"266\":1,\"278\":1,\"281\":1,\"283\":1,\"284\":1,\"285\":1,\"314\":1,\"331\":1,\"336\":1,\"342\":2,\"343\":1,\"347\":1,\"368\":1,\"423\":1,\"460\":1,\"468\":1,\"478\":1,\"479\":1,\"483\":1,\"494\":1,\"501\":1,\"531\":1,\"539\":1,\"546\":1,\"558\":1,\"580\":1,\"597\":1}}],[\"vue3带来的变化\",{\"0\":{\"519\":1}}],[\"vue3不支持过滤器了\",{\"1\":{\"480\":1}}],[\"vue3全家桶实战\",{\"1\":{\"405\":1}}],[\"vue3\",{\"0\":{\"427\":1,\"686\":1},\"1\":{\"59\":1,\"68\":5,\"186\":2,\"268\":1,\"348\":1,\"405\":1,\"437\":2,\"520\":1,\"529\":1,\"686\":1,\"691\":1}}],[\"vue\",{\"0\":{\"57\":1,\"153\":1,\"250\":1,\"267\":1,\"270\":1,\"271\":1,\"272\":1,\"395\":1,\"466\":1,\"517\":1,\"518\":1,\"522\":1,\"539\":1,\"603\":1,\"604\":1,\"605\":1,\"674\":1,\"706\":1},\"1\":{\"58\":1,\"59\":19,\"61\":1,\"63\":3,\"65\":3,\"68\":9,\"72\":2,\"155\":1,\"161\":2,\"167\":2,\"168\":1,\"170\":2,\"171\":1,\"186\":3,\"190\":3,\"192\":9,\"195\":4,\"197\":6,\"199\":2,\"201\":6,\"203\":1,\"250\":30,\"251\":6,\"257\":4,\"266\":10,\"267\":15,\"268\":6,\"269\":11,\"270\":3,\"271\":2,\"272\":5,\"276\":5,\"282\":8,\"284\":2,\"288\":1,\"290\":1,\"291\":1,\"293\":1,\"294\":1,\"295\":1,\"300\":8,\"304\":3,\"305\":3,\"306\":2,\"307\":1,\"310\":1,\"313\":3,\"314\":3,\"316\":8,\"320\":3,\"321\":3,\"322\":2,\"323\":1,\"326\":1,\"328\":5,\"330\":3,\"331\":3,\"333\":1,\"334\":1,\"335\":1,\"337\":3,\"338\":1,\"339\":1,\"340\":1,\"342\":2,\"343\":2,\"347\":9,\"349\":4,\"350\":2,\"353\":1,\"354\":2,\"356\":1,\"357\":1,\"358\":1,\"359\":1,\"361\":1,\"363\":1,\"366\":1,\"367\":1,\"368\":1,\"370\":1,\"371\":2,\"374\":1,\"375\":1,\"376\":1,\"377\":2,\"379\":2,\"380\":1,\"384\":3,\"386\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":3,\"392\":3,\"395\":1,\"396\":5,\"398\":1,\"400\":1,\"402\":2,\"403\":1,\"404\":1,\"405\":2,\"409\":1,\"410\":2,\"412\":2,\"415\":1,\"416\":1,\"426\":2,\"430\":2,\"432\":2,\"433\":2,\"437\":2,\"438\":1,\"440\":2,\"441\":2,\"443\":2,\"444\":2,\"445\":2,\"446\":2,\"448\":2,\"449\":2,\"450\":3,\"452\":2,\"453\":2,\"457\":2,\"458\":2,\"459\":3,\"463\":2,\"471\":2,\"472\":2,\"473\":4,\"474\":2,\"476\":2,\"477\":3,\"480\":2,\"483\":2,\"496\":2,\"497\":1,\"500\":1,\"502\":2,\"503\":4,\"504\":2,\"505\":1,\"508\":1,\"511\":1,\"514\":2,\"518\":1,\"519\":1,\"520\":1,\"523\":1,\"524\":1,\"527\":4,\"531\":4,\"532\":1,\"539\":5,\"540\":12,\"541\":1,\"543\":6,\"544\":5,\"546\":2,\"547\":8,\"548\":1,\"550\":1,\"551\":4,\"555\":1,\"557\":1,\"558\":1,\"559\":1,\"569\":1,\"570\":1,\"571\":1,\"572\":1,\"575\":1,\"577\":6,\"578\":9,\"580\":1,\"581\":1,\"591\":1,\"601\":1,\"602\":4,\"611\":8,\"669\":3,\"688\":1,\"691\":4,\"693\":1,\"694\":9,\"695\":2,\"696\":1}}],[\"v\",{\"0\":{\"275\":1,\"343\":1,\"344\":1,\"432\":1,\"433\":1,\"434\":1,\"435\":1,\"436\":1,\"437\":1,\"447\":1,\"450\":1,\"453\":1,\"454\":1,\"455\":1,\"460\":1,\"481\":1,\"490\":1},\"1\":{\"54\":4,\"59\":7,\"65\":4,\"121\":4,\"154\":1,\"155\":7,\"157\":8,\"158\":2,\"159\":1,\"160\":1,\"161\":1,\"163\":1,\"166\":8,\"168\":2,\"170\":1,\"171\":1,\"172\":1,\"174\":1,\"175\":1,\"176\":2,\"275\":5,\"276\":1,\"284\":2,\"291\":4,\"292\":1,\"294\":6,\"295\":2,\"296\":2,\"308\":1,\"324\":1,\"328\":1,\"343\":11,\"344\":5,\"359\":1,\"408\":5,\"409\":2,\"410\":2,\"411\":3,\"415\":1,\"416\":1,\"429\":2,\"432\":4,\"433\":2,\"434\":1,\"435\":2,\"436\":4,\"437\":5,\"438\":4,\"440\":1,\"442\":1,\"446\":2,\"447\":2,\"448\":4,\"450\":1,\"451\":4,\"452\":7,\"453\":4,\"454\":2,\"455\":6,\"456\":1,\"457\":7,\"458\":1,\"459\":2,\"463\":1,\"473\":1,\"476\":1,\"480\":3,\"481\":5,\"483\":8,\"486\":2,\"487\":2,\"488\":2,\"489\":6,\"490\":4,\"504\":3,\"527\":1,\"570\":4,\"578\":14,\"618\":1,\"631\":1}}],[\"v2\",{\"1\":{\"17\":2,\"35\":2,\"686\":1}}],[\"v3\",{\"1\":{\"13\":2,\"171\":1}}],[\"c和f因为key不一致\",{\"1\":{\"464\":1}}],[\"c和d来说它们事实上并不需要有任何的改动\",{\"1\":{\"464\":1}}],[\"c元素上\",{\"1\":{\"420\":1}}],[\"cpn><\",{\"1\":{\"290\":1}}],[\"cpn>\",{\"1\":{\"290\":7}}],[\"cjs\",{\"1\":{\"249\":2,\"250\":1}}],[\"cb\",{\"1\":{\"201\":2}}],[\"cbs\",{\"1\":{\"201\":3}}],[\"cba=\",{\"1\":{\"445\":1}}],[\"cba\",{\"1\":{\"176\":1,\"313\":1,\"330\":1,\"440\":3,\"441\":2,\"445\":1}}],[\"ctx\",{\"1\":{\"197\":6,\"198\":14,\"500\":2}}],[\"cmd\",{\"1\":{\"195\":1,\"209\":1}}],[\"cmd规范常用在客户端\",{\"1\":{\"195\":1}}],[\"cdn\",{\"0\":{\"523\":1}}],[\"cdnjs\",{\"1\":{\"161\":1}}],[\"cd\",{\"1\":{\"186\":1}}],[\"circle\",{\"1\":{\"125\":1}}],[\"circular\",{\"1\":{\"123\":1}}],[\"cursor\",{\"1\":{\"288\":1}}],[\"currentroute\",{\"1\":{\"573\":1}}],[\"currenttab\",{\"1\":{\"275\":3,\"276\":4,\"277\":1,\"328\":4}}],[\"currenttarget\",{\"1\":{\"136\":1}}],[\"currently\",{\"1\":{\"201\":1}}],[\"current\",{\"1\":{\"123\":1}}],[\"cubic\",{\"1\":{\"159\":1}}],[\"customref\",{\"0\":{\"359\":1},\"1\":{\"359\":2}}],[\"custominput\",{\"1\":{\"343\":2}}],[\"customize\",{\"1\":{\"186\":1}}],[\"customupdatemap\",{\"1\":{\"201\":1}}],[\"custom\",{\"1\":{\"111\":2,\"112\":1,\"134\":1,\"136\":6,\"142\":1,\"143\":1,\"146\":1,\"161\":1,\"201\":1,\"257\":1,\"570\":1}}],[\"customdata\",{\"1\":{\"95\":1,\"201\":1}}],[\"c\",{\"1\":{\"121\":1,\"124\":1,\"420\":2,\"463\":2,\"478\":4}}],[\"csm\",{\"1\":{\"251\":1}}],[\"csspropertyvalue\",{\"1\":{\"443\":1}}],[\"csspropertyname\",{\"1\":{\"443\":1}}],[\"cssnano\",{\"1\":{\"223\":1}}],[\"css样式的重置\",{\"1\":{\"219\":1}}],[\"css文件中\",{\"1\":{\"339\":1}}],[\"css文件进行解析\",{\"1\":{\"216\":1}}],[\"css文件模块的加载\",{\"1\":{\"205\":1}}],[\"css$\",{\"1\":{\"215\":1}}],[\"css的处理\",{\"1\":{\"205\":1}}],[\"css预处理器\",{\"1\":{\"268\":1}}],[\"css预处理\",{\"1\":{\"183\":1}}],[\"css+js+icon+front\",{\"1\":{\"180\":1}}],[\"css是一个已经准备好的\",{\"1\":{\"170\":1}}],[\"css=\",{\"1\":{\"168\":3,\"171\":2,\"176\":1}}],[\"css规则\",{\"1\":{\"162\":1}}],[\"css\",{\"0\":{\"156\":1,\"157\":1,\"159\":1,\"160\":1,\"170\":1,\"188\":1,\"215\":1},\"1\":{\"147\":3,\"155\":3,\"157\":1,\"159\":2,\"160\":3,\"161\":6,\"163\":2,\"168\":5,\"170\":5,\"171\":2,\"173\":1,\"175\":3,\"189\":1,\"197\":1,\"199\":2,\"203\":1,\"213\":3,\"214\":1,\"215\":7,\"216\":2,\"217\":2,\"218\":1,\"220\":1,\"221\":3,\"223\":6,\"258\":1,\"263\":1,\"268\":1,\"271\":1,\"436\":1,\"442\":2,\"480\":2,\"503\":1,\"531\":2,\"539\":1,\"571\":1}}],[\"css|strict|ignore\",{\"1\":{\"59\":1}}],[\"csdn\",{\"1\":{\"58\":1}}],[\"clean\",{\"1\":{\"234\":2,\"271\":1}}],[\"cleanwebpackplugin\",{\"0\":{\"234\":1},\"1\":{\"234\":2}}],[\"cleartimeout\",{\"1\":{\"359\":1,\"376\":1}}],[\"clear\",{\"1\":{\"125\":1}}],[\"cloak>\",{\"1\":{\"436\":1}}],[\"cloak\",{\"0\":{\"436\":1},\"1\":{\"436\":3}}],[\"cloudflare\",{\"1\":{\"161\":1}}],[\"clone\",{\"1\":{\"57\":2}}],[\"clonedeep\",{\"1\":{\"56\":1,\"57\":2}}],[\"cli创建项目\",{\"1\":{\"522\":1}}],[\"clip\",{\"1\":{\"415\":1,\"416\":2,\"419\":2,\"420\":2,\"421\":2}}],[\"cli环境\",{\"0\":{\"395\":1}}],[\"cli来创建项目\",{\"1\":{\"340\":1}}],[\"cli已经内置了webpack相关的配置\",{\"1\":{\"266\":1}}],[\"cli方式\",{\"1\":{\"215\":1}}],[\"cli中代码执行时\",{\"1\":{\"207\":1}}],[\"cli的东西\",{\"1\":{\"207\":1}}],[\"cli的\",{\"1\":{\"207\":2}}],[\"cli都是基于webpack来帮助我们支持模块化\",{\"1\":{\"203\":1}}],[\"client`\",{\"1\":{\"201\":1}}],[\"clientpublicpath\",{\"1\":{\"201\":2}}],[\"client\",{\"1\":{\"201\":2}}],[\"click调用时\",{\"1\":{\"449\":1}}],[\"click=\",{\"1\":{\"154\":1,\"155\":1,\"161\":1,\"167\":1,\"168\":1,\"171\":1,\"174\":3,\"275\":1,\"276\":1,\"310\":1,\"314\":2,\"326\":1,\"328\":1,\"331\":2,\"339\":1,\"342\":1,\"347\":1,\"349\":1,\"350\":1,\"353\":1,\"356\":1,\"361\":1,\"363\":1,\"367\":1,\"374\":2,\"375\":2,\"376\":2,\"379\":1,\"380\":1,\"384\":2,\"402\":1,\"404\":1,\"430\":1,\"432\":3,\"440\":1,\"448\":3,\"449\":2,\"450\":2,\"453\":1,\"459\":1,\"463\":1,\"473\":1,\"474\":1,\"476\":1,\"477\":3,\"480\":3,\"494\":1,\"497\":1,\"500\":1,\"527\":4,\"551\":3,\"578\":1,\"581\":1,\"584\":1,\"630\":1,\"632\":1,\"642\":1,\"643\":1,\"694\":1}}],[\"click\",{\"1\":{\"91\":1,\"288\":2,\"429\":1,\"448\":2,\"450\":3,\"527\":1}}],[\"clinpm\",{\"1\":{\"68\":1}}],[\"cli\",{\"0\":{\"267\":1,\"270\":1,\"271\":1,\"272\":1,\"707\":1},\"1\":{\"68\":3,\"203\":2,\"207\":2,\"209\":1,\"220\":2,\"242\":2,\"254\":1,\"266\":7,\"267\":11,\"269\":9,\"270\":2,\"271\":2,\"272\":4,\"572\":1}}],[\"class><\",{\"1\":{\"445\":1}}],[\"classobj\",{\"1\":{\"440\":5}}],[\"class也是动态的\",{\"1\":{\"439\":1}}],[\"classname\",{\"1\":{\"388\":3,\"389\":1,\"390\":1,\"440\":2}}],[\"class和style就是非prop的attribute\",{\"1\":{\"307\":1,\"323\":1}}],[\"classes\",{\"1\":{\"161\":1,\"243\":1}}],[\"classify\",{\"1\":{\"136\":4}}],[\"class=\",{\"1\":{\"106\":1,\"121\":18,\"123\":3,\"124\":24,\"136\":6,\"137\":1,\"150\":1,\"151\":1,\"161\":2,\"163\":2,\"167\":1,\"168\":2,\"170\":3,\"171\":2,\"172\":1,\"174\":1,\"275\":1,\"276\":3,\"288\":2,\"291\":4,\"307\":1,\"309\":1,\"323\":1,\"325\":1,\"328\":3,\"349\":2,\"350\":1,\"353\":1,\"356\":1,\"361\":1,\"363\":1,\"398\":1,\"399\":1,\"400\":1,\"410\":1,\"419\":1,\"420\":3,\"421\":1,\"440\":9,\"441\":4,\"448\":3,\"458\":1,\"480\":1,\"546\":2,\"547\":2,\"551\":2,\"557\":1,\"570\":1,\"578\":4}}],[\"class\",{\"0\":{\"157\":1,\"161\":1,\"439\":1},\"1\":{\"17\":1,\"38\":2,\"39\":1,\"63\":1,\"121\":1,\"150\":3,\"151\":1,\"155\":2,\"157\":3,\"158\":3,\"160\":1,\"161\":9,\"163\":1,\"170\":1,\"175\":3,\"307\":1,\"309\":1,\"323\":1,\"325\":1,\"349\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":3,\"437\":1,\"440\":3,\"441\":2,\"445\":1}}],[\"cxk\",{\"1\":{\"47\":2,\"48\":2,\"49\":2,\"55\":2}}],[\"chrome等值\",{\"1\":{\"261\":1}}],[\"chunk\",{\"1\":{\"258\":1,\"271\":2}}],[\"chat\",{\"0\":{\"703\":1}}],[\"changbin1997\",{\"1\":{\"692\":1}}],[\"changenum\",{\"1\":{\"692\":1,\"694\":1}}],[\"changename\",{\"1\":{\"91\":3,\"106\":1,\"110\":1,\"367\":3,\"374\":3,\"375\":3,\"376\":3}}],[\"changetext\",{\"1\":{\"692\":1,\"694\":1}}],[\"changes\",{\"1\":{\"563\":1}}],[\"changesrcpath\",{\"1\":{\"201\":2}}],[\"change2\",{\"1\":{\"551\":2}}],[\"change1\",{\"1\":{\"551\":2}}],[\"changemessage\",{\"1\":{\"494\":2}}],[\"changeinfonbaname\",{\"1\":{\"477\":2}}],[\"changeinfoname\",{\"1\":{\"477\":2}}],[\"changeinfo\",{\"1\":{\"477\":2}}],[\"changefullname\",{\"1\":{\"474\":2}}],[\"changefirstname\",{\"1\":{\"473\":2}}],[\"change<\",{\"1\":{\"384\":1}}],[\"changedata\",{\"1\":{\"379\":3,\"380\":3}}],[\"changed\",{\"1\":{\"379\":3,\"478\":3}}],[\"changeage\",{\"1\":{\"364\":1,\"374\":3,\"375\":3,\"376\":3}}],[\"changeorigin\",{\"1\":{\"259\":1,\"262\":3,\"263\":1,\"265\":1}}],[\"change\",{\"1\":{\"91\":1,\"98\":1,\"106\":1,\"110\":1,\"349\":2,\"384\":6,\"486\":2,\"551\":2}}],[\"charat\",{\"1\":{\"489\":1}}],[\"charset=\",{\"1\":{\"236\":1,\"480\":1}}],[\"chars\",{\"1\":{\"197\":1}}],[\"checksitemap\",{\"1\":{\"88\":1}}],[\"check\",{\"1\":{\"59\":1,\"201\":1}}],[\"checkbox\",{\"1\":{\"39\":1,\"151\":2,\"483\":5}}],[\"children\",{\"1\":{\"386\":7,\"391\":2,\"557\":4,\"569\":1}}],[\"childref来访问和操作子组件\",{\"1\":{\"342\":1}}],[\"childref\",{\"1\":{\"342\":2}}],[\"child\",{\"1\":{\"40\":9,\"124\":1,\"304\":1,\"305\":3,\"306\":1,\"310\":1,\"313\":1,\"320\":1,\"321\":3,\"322\":1,\"326\":1,\"330\":1,\"342\":4}}],[\"childcomponent\",{\"1\":{\"23\":2,\"304\":4,\"305\":4,\"306\":4,\"310\":3,\"313\":3,\"320\":4,\"321\":4,\"322\":4,\"326\":3,\"330\":3,\"342\":6}}],[\"childitem\",{\"1\":{\"17\":2}}],[\"createstore\",{\"1\":{\"691\":2,\"692\":2}}],[\"createpinia\",{\"1\":{\"581\":2}}],[\"createwebhistory\",{\"1\":{\"543\":2,\"544\":2,\"551\":2,\"573\":1,\"578\":2,\"694\":2}}],[\"createwebhashhistory\",{\"1\":{\"540\":2,\"571\":1}}],[\"createrouter\",{\"1\":{\"540\":1,\"543\":2,\"544\":2,\"551\":2,\"559\":1,\"571\":7,\"573\":1,\"578\":2,\"694\":2}}],[\"created\",{\"1\":{\"407\":1,\"408\":1,\"413\":1,\"477\":1,\"478\":1,\"479\":1,\"489\":1,\"494\":3,\"497\":3,\"499\":1,\"652\":1}}],[\"createvnode\",{\"1\":{\"385\":2}}],[\"createeventbus\",{\"1\":{\"314\":3,\"331\":3}}],[\"createapp的时候\",{\"1\":{\"527\":1}}],[\"createapp\",{\"1\":{\"170\":2,\"197\":2,\"250\":3,\"314\":2,\"331\":2,\"334\":1,\"337\":2,\"412\":2,\"426\":2,\"430\":1,\"432\":1,\"433\":1,\"438\":1,\"440\":1,\"441\":1,\"443\":1,\"444\":1,\"445\":1,\"446\":1,\"448\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":1,\"457\":1,\"458\":1,\"459\":1,\"463\":1,\"471\":1,\"472\":1,\"473\":2,\"474\":1,\"476\":1,\"477\":1,\"480\":1,\"483\":1,\"499\":1,\"527\":2,\"540\":1,\"543\":1,\"691\":2}}],[\"create\",{\"1\":{\"29\":1,\"68\":2,\"186\":4,\"203\":1,\"268\":1,\"429\":1,\"602\":1}}],[\"cartmodule\",{\"1\":{\"668\":2,\"669\":2}}],[\"cart\",{\"1\":{\"668\":2,\"669\":2,\"674\":2}}],[\"cart`\",{\"1\":{\"651\":1,\"668\":1}}],[\"card\",{\"1\":{\"39\":3}}],[\"capitalize=\",{\"1\":{\"489\":2}}],[\"capitalize\",{\"1\":{\"489\":4}}],[\"capture\",{\"1\":{\"447\":2,\"450\":2}}],[\"camel\",{\"1\":{\"437\":1}}],[\"camelcase\",{\"1\":{\"306\":2,\"322\":2,\"442\":1}}],[\"canaccess\",{\"1\":{\"559\":2}}],[\"canuseraccess\",{\"1\":{\"559\":2}}],[\"canvas等设置动画\",{\"1\":{\"171\":1}}],[\"cancelled=\",{\"1\":{\"168\":2}}],[\"cancel\",{\"1\":{\"125\":1,\"376\":1,\"383\":2}}],[\"can\",{\"1\":{\"98\":2}}],[\"callback\",{\"1\":{\"95\":1,\"256\":1,\"314\":4,\"331\":4,\"382\":1,\"503\":3}}],[\"call\",{\"1\":{\"59\":1}}],[\"calctextvalue\",{\"1\":{\"23\":2}}],[\"casing\",{\"1\":{\"59\":1}}],[\"case\",{\"1\":{\"23\":2,\"59\":1,\"201\":7,\"306\":2,\"322\":2,\"335\":4,\"442\":2}}],[\"category><\",{\"1\":{\"283\":1}}],[\"category>\",{\"1\":{\"275\":1,\"283\":1}}],[\"catch\",{\"1\":{\"201\":1,\"504\":2,\"505\":1,\"584\":1}}],[\"cat\",{\"1\":{\"51\":1}}],[\"ccc\",{\"1\":{\"17\":1,\"291\":1,\"603\":1}}],[\"center\",{\"1\":{\"14\":2,\"15\":4,\"18\":1,\"39\":1,\"121\":7,\"123\":2,\"124\":6,\"132\":1,\"136\":4,\"160\":1}}],[\"cn\",{\"1\":{\"13\":1,\"17\":1,\"35\":1,\"64\":1,\"67\":1,\"68\":1,\"155\":1,\"175\":1,\"177\":1,\"278\":1,\"281\":1,\"283\":1,\"284\":1,\"285\":1,\"314\":1,\"331\":1,\"336\":1,\"342\":2,\"343\":1,\"347\":1,\"368\":1,\"423\":1,\"460\":1,\"468\":1,\"478\":1,\"479\":1,\"483\":1,\"494\":1,\"501\":1,\"531\":1,\"651\":1,\"668\":1}}],[\"cors\",{\"1\":{\"577\":3}}],[\"core\",{\"1\":{\"242\":2,\"248\":1,\"250\":2,\"251\":1,\"468\":1}}],[\"copy\",{\"1\":{\"238\":2,\"270\":1,\"361\":3}}],[\"copywebpackplugin\",{\"0\":{\"238\":1},\"1\":{\"238\":3}}],[\"could\",{\"1\":{\"198\":1}}],[\"count`\",{\"1\":{\"357\":1}}],[\"count++\",{\"1\":{\"349\":1,\"350\":1,\"353\":1,\"357\":1,\"361\":3,\"480\":1,\"581\":1,\"582\":1,\"584\":1,\"691\":1}}],[\"count=\",{\"1\":{\"294\":1}}],[\"counterstore\",{\"1\":{\"581\":4}}],[\"counter的值时\",{\"1\":{\"528\":1}}],[\"counter++\",{\"1\":{\"350\":1,\"388\":1,\"398\":1,\"399\":1,\"432\":1,\"448\":1,\"527\":2}}],[\"counter\",{\"1\":{\"172\":3,\"349\":1,\"350\":3,\"388\":3,\"389\":4,\"390\":4,\"398\":3,\"399\":3,\"400\":4,\"430\":2,\"432\":5,\"448\":2,\"480\":2,\"527\":6,\"528\":3,\"581\":3,\"585\":4}}],[\"count\",{\"1\":{\"36\":3,\"294\":5,\"347\":4,\"349\":4,\"350\":8,\"353\":3,\"354\":13,\"356\":5,\"357\":11,\"358\":6,\"361\":2,\"379\":7,\"384\":13,\"480\":8,\"581\":7,\"582\":2,\"584\":2,\"585\":2,\"615\":1,\"617\":1,\"618\":3,\"619\":4,\"624\":4,\"631\":3,\"657\":2,\"668\":2,\"691\":2,\"696\":2}}],[\"countdownfrom\",{\"1\":{\"22\":2}}],[\"cover\",{\"1\":{\"135\":2}}],[\"coolpad\",{\"1\":{\"69\":1}}],[\"coder\",{\"1\":{\"366\":1,\"473\":1,\"474\":1}}],[\"coderstar\",{\"1\":{\"366\":1}}],[\"coderwhy\",{\"1\":{\"277\":1,\"392\":1,\"449\":1}}],[\"code\",{\"0\":{\"70\":1},\"1\":{\"59\":1,\"70\":3,\"73\":2,\"247\":1,\"405\":1,\"573\":1,\"577\":1,\"686\":1}}],[\"cols=\",{\"1\":{\"483\":1}}],[\"collapse\",{\"1\":{\"480\":2}}],[\"collection\",{\"1\":{\"136\":4}}],[\"color=\",{\"1\":{\"126\":1}}],[\"color\",{\"1\":{\"22\":6,\"24\":1,\"39\":4,\"121\":8,\"123\":4,\"124\":6,\"125\":1,\"126\":1,\"136\":4,\"143\":2,\"150\":2,\"250\":1,\"288\":2,\"291\":1,\"307\":1,\"323\":1,\"391\":1,\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1,\"433\":1,\"440\":1,\"443\":3,\"444\":1,\"480\":2}}],[\"column<\",{\"1\":{\"121\":1}}],[\"columnexample\",{\"1\":{\"14\":1}}],[\"column\",{\"0\":{\"14\":1},\"1\":{\"14\":16,\"15\":1,\"16\":1,\"17\":3,\"18\":1,\"21\":2,\"22\":1,\"23\":3,\"36\":1,\"38\":1,\"39\":1,\"40\":3,\"121\":1,\"136\":1}}],[\"confirmed\",{\"1\":{\"566\":1}}],[\"confirm\",{\"1\":{\"563\":1}}],[\"configurewebpack\",{\"1\":{\"272\":2,\"555\":1}}],[\"configure\",{\"1\":{\"250\":1}}],[\"configuration\",{\"1\":{\"86\":1,\"139\":1,\"262\":1,\"263\":1,\"264\":1}}],[\"config\",{\"0\":{\"88\":1},\"1\":{\"59\":1,\"60\":2,\"88\":1,\"188\":2,\"189\":1,\"190\":1,\"192\":1,\"211\":1,\"212\":8,\"213\":1,\"214\":1,\"215\":1,\"222\":2,\"223\":1,\"244\":2,\"248\":1,\"249\":4,\"250\":1,\"253\":1,\"256\":1,\"259\":1,\"265\":8,\"268\":5,\"270\":2,\"272\":3,\"314\":3,\"331\":3,\"395\":1,\"396\":1,\"423\":1,\"555\":1,\"611\":1}}],[\"connected\",{\"1\":{\"201\":2}}],[\"connect\",{\"1\":{\"201\":1}}],[\"connectsocket\",{\"1\":{\"144\":2}}],[\"convertrpxtovw\",{\"1\":{\"139\":1}}],[\"concat\",{\"0\":{\"51\":1},\"1\":{\"51\":2,\"241\":1,\"459\":1}}],[\"consistent\",{\"1\":{\"59\":3,\"60\":1}}],[\"const等\",{\"1\":{\"208\":1}}],[\"const\",{\"1\":{\"47\":2,\"53\":2,\"54\":3,\"55\":2,\"57\":2,\"59\":3,\"93\":1,\"123\":1,\"136\":1,\"188\":1,\"192\":1,\"197\":5,\"198\":5,\"201\":9,\"211\":1,\"234\":1,\"236\":1,\"237\":1,\"238\":1,\"241\":3,\"243\":2,\"250\":2,\"262\":1,\"265\":4,\"282\":4,\"294\":1,\"310\":1,\"314\":2,\"326\":1,\"331\":2,\"337\":2,\"347\":1,\"349\":3,\"350\":5,\"353\":2,\"354\":11,\"356\":1,\"357\":4,\"358\":4,\"359\":1,\"361\":4,\"363\":2,\"364\":1,\"366\":4,\"367\":4,\"370\":1,\"371\":2,\"374\":2,\"375\":3,\"376\":6,\"377\":2,\"379\":6,\"380\":3,\"381\":1,\"382\":1,\"383\":1,\"384\":2,\"389\":3,\"390\":4,\"392\":1,\"393\":2,\"400\":4,\"402\":2,\"403\":1,\"404\":3,\"405\":2,\"408\":1,\"410\":2,\"412\":1,\"413\":1,\"415\":2,\"416\":4,\"430\":1,\"432\":1,\"433\":1,\"438\":1,\"440\":1,\"441\":1,\"443\":1,\"444\":1,\"445\":1,\"446\":1,\"448\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":1,\"457\":1,\"458\":1,\"459\":1,\"463\":1,\"471\":1,\"472\":1,\"473\":2,\"474\":2,\"476\":1,\"477\":1,\"479\":1,\"480\":1,\"483\":1,\"487\":1,\"497\":1,\"499\":1,\"500\":2,\"503\":7,\"504\":5,\"505\":6,\"508\":1,\"509\":2,\"512\":3,\"513\":2,\"529\":3,\"540\":5,\"543\":2,\"544\":4,\"546\":1,\"547\":2,\"548\":2,\"550\":1,\"551\":6,\"554\":4,\"555\":1,\"557\":5,\"559\":2,\"561\":2,\"563\":2,\"567\":1,\"568\":1,\"569\":1,\"570\":3,\"571\":7,\"573\":1,\"574\":1,\"578\":11,\"580\":1,\"581\":6,\"582\":3,\"583\":2,\"584\":6,\"585\":4,\"611\":1,\"615\":2,\"624\":2,\"637\":2,\"651\":2,\"657\":2,\"668\":4,\"669\":1,\"678\":1,\"691\":3,\"692\":1,\"693\":3,\"694\":3,\"695\":1,\"696\":1}}],[\"constructor\",{\"1\":{\"17\":1,\"38\":1}}],[\"console\",{\"1\":{\"23\":1,\"38\":1,\"40\":1,\"47\":2,\"48\":2,\"49\":2,\"50\":2,\"51\":2,\"53\":2,\"54\":2,\"55\":2,\"57\":2,\"59\":1,\"93\":2,\"95\":3,\"97\":2,\"98\":1,\"106\":1,\"110\":1,\"168\":6,\"171\":2,\"201\":5,\"241\":2,\"256\":1,\"277\":1,\"310\":1,\"311\":1,\"313\":1,\"326\":1,\"327\":1,\"330\":1,\"337\":1,\"339\":1,\"342\":3,\"347\":1,\"349\":13,\"350\":2,\"353\":1,\"354\":3,\"356\":1,\"357\":7,\"358\":1,\"361\":1,\"363\":1,\"368\":7,\"370\":1,\"371\":3,\"374\":1,\"375\":1,\"376\":3,\"377\":2,\"379\":7,\"380\":1,\"381\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":2,\"411\":1,\"415\":1,\"424\":1,\"425\":1,\"448\":2,\"449\":2,\"450\":3,\"473\":5,\"474\":1,\"476\":2,\"477\":2,\"478\":7,\"479\":1,\"487\":1,\"489\":1,\"493\":1,\"494\":10,\"497\":2,\"499\":1,\"509\":1,\"513\":1,\"529\":1,\"566\":1,\"578\":4,\"581\":1,\"619\":1,\"693\":1}}],[\"consumer\",{\"1\":{\"13\":1,\"17\":1,\"35\":1}}],[\"context\",{\"1\":{\"349\":9}}],[\"contentbase\",{\"1\":{\"259\":1,\"265\":1}}],[\"content=\",{\"1\":{\"236\":2,\"295\":1,\"480\":2}}],[\"contenthash\",{\"1\":{\"228\":1,\"265\":1}}],[\"content\",{\"1\":{\"121\":6,\"124\":6,\"136\":2,\"288\":2,\"291\":1,\"295\":4,\"308\":1,\"324\":1,\"500\":1}}],[\"contact\",{\"1\":{\"291\":1}}],[\"contain\",{\"1\":{\"197\":1}}],[\"container\",{\"1\":{\"13\":1,\"121\":2,\"124\":2,\"291\":4}}],[\"contigure\",{\"1\":{\"251\":1}}],[\"continue\",{\"1\":{\"236\":1}}],[\"controller进行各种处理\",{\"1\":{\"536\":1}}],[\"controller的简称\",{\"1\":{\"526\":1}}],[\"control\",{\"1\":{\"17\":1}}],[\"comm\",{\"1\":{\"265\":1}}],[\"commitform\",{\"1\":{\"483\":1}}],[\"commit文件\",{\"1\":{\"62\":1}}],[\"commit\",{\"1\":{\"62\":1,\"268\":1,\"629\":1,\"630\":1,\"631\":1,\"634\":1,\"637\":2,\"651\":1,\"668\":1,\"680\":2,\"694\":3,\"695\":2}}],[\"commonconfig\",{\"1\":{\"265\":2}}],[\"commonjs的模块化能力\",{\"1\":{\"339\":1}}],[\"commonjs等模块化语法在浏览器中是不被直接识别的\",{\"1\":{\"208\":1}}],[\"commonjs\",{\"1\":{\"195\":1,\"197\":2,\"204\":1,\"250\":1}}],[\"common\",{\"1\":{\"9\":1,\"97\":5,\"149\":2}}],[\"compb\",{\"1\":{\"500\":1}}],[\"composables\",{\"1\":{\"501\":1,\"502\":1}}],[\"composition\",{\"0\":{\"345\":1,\"347\":1},\"1\":{\"346\":1,\"347\":4,\"368\":1,\"405\":1,\"521\":2}}],[\"componen\",{\"1\":{\"335\":1}}],[\"componentoptions\",{\"1\":{\"497\":2}}],[\"componentc\",{\"1\":{\"338\":1}}],[\"componentb\",{\"1\":{\"338\":2}}],[\"componenta\",{\"1\":{\"338\":7,\"339\":1,\"340\":1}}],[\"component><\",{\"1\":{\"313\":1,\"330\":1,\"342\":1}}],[\"component>\",{\"1\":{\"164\":1,\"167\":1,\"276\":1,\"277\":1,\"284\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"310\":1,\"313\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"326\":1,\"328\":1,\"330\":1,\"335\":1,\"342\":2,\"570\":1}}],[\"componentframework\",{\"1\":{\"139\":1,\"146\":1}}],[\"component装饰的自定义组件\",{\"1\":{\"23\":1}}],[\"component装饰的struct\",{\"1\":{\"3\":1}}],[\"component装饰\",{\"1\":{\"20\":1}}],[\"component装饰后具备组件化的能力\",{\"1\":{\"20\":1}}],[\"component装饰器仅能装饰struct关键字声明的数据结构\",{\"1\":{\"20\":1}}],[\"component\",{\"1\":{\"14\":1,\"15\":1,\"16\":1,\"17\":3,\"18\":1,\"20\":4,\"21\":4,\"22\":2,\"23\":3,\"24\":2,\"36\":2,\"38\":1,\"39\":1,\"40\":4,\"59\":2,\"63\":1,\"72\":1,\"110\":1,\"111\":4,\"112\":3,\"118\":1,\"119\":1,\"123\":2,\"124\":2,\"128\":1,\"130\":1,\"132\":2,\"133\":1,\"136\":2,\"250\":1,\"282\":3,\"284\":3,\"304\":1,\"305\":1,\"306\":2,\"307\":1,\"310\":1,\"313\":1,\"314\":3,\"320\":1,\"321\":1,\"322\":2,\"323\":1,\"326\":1,\"330\":1,\"331\":3,\"335\":2,\"336\":1,\"337\":10,\"342\":3,\"343\":1,\"386\":2,\"422\":1,\"479\":1,\"493\":1,\"531\":1,\"540\":3,\"543\":2,\"544\":2,\"546\":2,\"547\":4,\"548\":3,\"551\":1,\"555\":1,\"557\":6,\"561\":3,\"569\":3,\"570\":10,\"573\":3,\"574\":3,\"577\":6,\"578\":7,\"694\":2}}],[\"components\",{\"0\":{\"708\":1},\"1\":{\"13\":1,\"167\":1,\"175\":1,\"195\":3,\"250\":2,\"264\":2,\"271\":2,\"276\":1,\"281\":2,\"282\":2,\"285\":1,\"288\":1,\"290\":1,\"291\":1,\"294\":1,\"295\":1,\"300\":2,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"310\":1,\"313\":2,\"316\":2,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"326\":1,\"328\":1,\"330\":2,\"336\":1,\"338\":4,\"339\":1,\"342\":2,\"343\":1,\"349\":2,\"371\":1,\"384\":2,\"498\":1,\"543\":3,\"546\":2,\"551\":1,\"578\":3,\"602\":1,\"603\":3,\"694\":2}}],[\"component表示自定义组件\",{\"1\":{\"3\":1}}],[\"component和\",{\"1\":{\"3\":1}}],[\"compression\",{\"1\":{\"261\":1}}],[\"compress是否为静态文件开启gzip\",{\"1\":{\"261\":1}}],[\"compress\",{\"0\":{\"261\":1},\"1\":{\"259\":2,\"261\":1,\"265\":1}}],[\"compilation\",{\"1\":{\"250\":1}}],[\"compiler\",{\"1\":{\"246\":1,\"247\":1,\"250\":3}}],[\"compileroptions\",{\"1\":{\"63\":1,\"72\":1}}],[\"computed的fullname中的计算\",{\"1\":{\"473\":1}}],[\"computed中定义计算属性\",{\"1\":{\"346\":1}}],[\"computed\",{\"0\":{\"365\":1,\"467\":1,\"472\":1},\"1\":{\"176\":1,\"313\":2,\"330\":2,\"338\":1,\"343\":2,\"344\":1,\"351\":1,\"365\":1,\"366\":3,\"367\":2,\"440\":1,\"468\":1,\"469\":1,\"472\":1,\"473\":2,\"474\":1,\"475\":1,\"477\":1,\"480\":1,\"521\":1,\"581\":2,\"616\":1,\"618\":1,\"619\":1,\"631\":1,\"652\":1,\"661\":1,\"662\":1,\"674\":1,\"693\":3,\"697\":1,\"698\":1}}],[\"complexity\",{\"1\":{\"59\":1}}],[\"compatible\",{\"1\":{\"236\":1,\"480\":1}}],[\"compa\",{\"1\":{\"36\":1,\"500\":2}}],[\"com\",{\"1\":{\"10\":1,\"13\":1,\"17\":1,\"35\":1,\"59\":2,\"68\":1,\"80\":1,\"81\":1,\"86\":1,\"89\":1,\"99\":1,\"113\":1,\"114\":1,\"119\":1,\"123\":6,\"124\":2,\"128\":1,\"130\":1,\"132\":2,\"133\":1,\"134\":1,\"139\":1,\"161\":1,\"171\":1,\"237\":1,\"246\":1,\"251\":1,\"262\":1,\"438\":2,\"523\":1,\"529\":1,\"539\":1,\"540\":2,\"686\":1,\"692\":2}}],[\"百分比0~100\",{\"1\":{\"126\":1}}],[\"百分比\",{\"1\":{\"12\":1,\"16\":1}}],[\"方式2\",{\"1\":{\"616\":1,\"629\":1,\"641\":1,\"644\":1,\"661\":1,\"663\":1,\"673\":1,\"674\":1,\"680\":1,\"681\":1,\"682\":1,\"693\":1,\"697\":1}}],[\"方式1\",{\"1\":{\"616\":1,\"629\":1,\"641\":1,\"644\":1,\"661\":1,\"663\":1,\"673\":1,\"674\":1,\"680\":1,\"681\":1,\"682\":1,\"693\":1,\"697\":1}}],[\"方式四\",{\"1\":{\"522\":1}}],[\"方式三\",{\"1\":{\"522\":1,\"530\":1}}],[\"方式一\",{\"0\":{\"366\":1},\"1\":{\"274\":1,\"335\":1,\"340\":1,\"365\":1,\"522\":1,\"527\":1,\"530\":1}}],[\"方式二\",{\"0\":{\"367\":1},\"1\":{\"265\":1,\"274\":1,\"335\":1,\"340\":1,\"365\":1,\"522\":1,\"527\":1,\"530\":1}}],[\"方式引入的一个文件资源\",{\"1\":{\"224\":1}}],[\"方案一\",{\"1\":{\"265\":1}}],[\"方便我们快速生成\",{\"1\":{\"428\":1}}],[\"方便我们维护和管理\",{\"1\":{\"265\":1}}],[\"方便调试代码和错误\",{\"1\":{\"239\":1}}],[\"方便在不同环境中进行迁移和共享\",{\"1\":{\"209\":1}}],[\"方便快捷\",{\"1\":{\"78\":1}}],[\"方向滑动\",{\"1\":{\"12\":1,\"16\":1}}],[\"方向\",{\"1\":{\"12\":1,\"16\":1}}],[\"方法也接受一个函数来组合这种难以用补丁对象实现的变更\",{\"1\":{\"582\":1}}],[\"方法将\",{\"1\":{\"582\":1}}],[\"方法定义\",{\"1\":{\"581\":1}}],[\"方法之类的东西\",{\"1\":{\"581\":1}}],[\"方法接收目标路由作为参数\",{\"1\":{\"554\":1}}],[\"方法接收一个返回\",{\"1\":{\"282\":1}}],[\"方法的主要区别是\",{\"1\":{\"582\":1}}],[\"方法的\",{\"1\":{\"520\":1}}],[\"方法中\",{\"1\":{\"440\":1}}],[\"方法中的代码块\",{\"1\":{\"3\":1}}],[\"方法来编写一个计算属性\",{\"1\":{\"365\":1}}],[\"方法来实现此功能\",{\"1\":{\"282\":1}}],[\"方法需触发相应的事件\",{\"1\":{\"343\":1}}],[\"方法需返回\",{\"1\":{\"343\":1}}],[\"方法获取到全局唯一的\",{\"1\":{\"93\":1}}],[\"方法注册小程序实例\",{\"1\":{\"93\":1}}],[\"方法\",{\"1\":{\"92\":2,\"350\":1,\"409\":1,\"520\":1,\"550\":1,\"569\":1,\"571\":1,\"582\":1}}],[\"方法返回一个给定对象自身可枚举属性的键值对数组\",{\"1\":{\"54\":1}}],[\"方法用于将一个\",{\"1\":{\"55\":1}}],[\"方法用于将\",{\"1\":{\"55\":1}}],[\"方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象\",{\"1\":{\"49\":1}}],[\"方法用于连接两个或多个数组\",{\"1\":{\"51\":1}}],[\"方法可从已有的数组中返回选定的元素\",{\"1\":{\"50\":1}}],[\"方法2\",{\"1\":{\"8\":1}}],[\"方法1\",{\"1\":{\"8\":1}}],[\"方法以及变量\",{\"1\":{\"3\":1}}],[\"步长\",{\"1\":{\"12\":1,\"16\":1}}],[\"最早是在后端路由中实现的\",{\"1\":{\"535\":1}}],[\"最常用的是\",{\"1\":{\"493\":1}}],[\"最好处理一下输入参数是\",{\"1\":{\"508\":1}}],[\"最好相互有关联的数据时使用\",{\"1\":{\"353\":1}}],[\"最好是添加一个\",{\"1\":{\"168\":1,\"171\":1}}],[\"最大缓存实例数\",{\"0\":{\"280\":1}}],[\"最大值\",{\"1\":{\"12\":1,\"16\":1}}],[\"最新版的\",{\"1\":{\"269\":1}}],[\"最多\",{\"1\":{\"143\":2}}],[\"最多可以使用\",{\"1\":{\"20\":1}}],[\"最少\",{\"1\":{\"143\":1}}],[\"最简单的方法是在页面的\",{\"1\":{\"117\":1}}],[\"最后我们再学习一下如果使用dev\",{\"1\":{\"684\":1}}],[\"最后通过一个根store进行整合\",{\"1\":{\"585\":1}}],[\"最后在我们的历史中两次出现在同一个位置\",{\"1\":{\"573\":1}}],[\"最后导出的一定要是个对象\",{\"1\":{\"350\":1}}],[\"最后得到的\",{\"1\":{\"282\":1}}],[\"最后是\",{\"1\":{\"264\":1}}],[\"最后会对\",{\"1\":{\"199\":1}}],[\"最后\",{\"1\":{\"195\":1,\"310\":1,\"326\":1,\"562\":1}}],[\"最后渲染页面\",{\"1\":{\"115\":1}}],[\"最后不需要引号\",{\"1\":{\"59\":1,\"60\":1}}],[\"最低版本\",{\"1\":{\"93\":1,\"121\":1,\"123\":1,\"125\":1,\"126\":1,\"132\":2,\"139\":1,\"142\":1,\"143\":1,\"146\":1}}],[\"最终都会呈现\",{\"1\":{\"573\":1}}],[\"最终生成html或者数据\",{\"1\":{\"536\":1}}],[\"最终刚好找到的是script作用于中的this\",{\"1\":{\"529\":1}}],[\"最终也是使用渲染函数生成对应的vnode\",{\"1\":{\"385\":1}}],[\"最终形成我们的应用程序\",{\"1\":{\"299\":1,\"315\":1}}],[\"最终将高版本的\",{\"1\":{\"182\":1}}],[\"最终开发的小程序打包压缩后的大小\",{\"1\":{\"76\":1}}],[\"最终重试后等待所有项都是\",{\"1\":{\"27\":1}}],[\"最小值\",{\"1\":{\"12\":1,\"16\":1}}],[\"0<\",{\"1\":{\"604\":1,\"605\":1}}],[\"04\",{\"1\":{\"405\":1}}],[\"06\",{\"1\":{\"405\":1}}],[\"0可以使其在局域网或公共网络上可访问\",{\"1\":{\"260\":1}}],[\"0表示任意主机或所有主机\",{\"1\":{\"260\":1}}],[\"0时\",{\"1\":{\"260\":1}}],[\"0是一个特殊的ip地址\",{\"1\":{\"260\":1}}],[\"00a95e\",{\"1\":{\"143\":1}}],[\"000000\",{\"1\":{\"123\":1,\"136\":3,\"142\":2,\"146\":2}}],[\"0000001524537145\",{\"1\":{\"35\":1}}],[\"0000001524537153\",{\"1\":{\"17\":1}}],[\"0000001334734185\",{\"1\":{\"13\":1}}],[\"03\",{\"1\":{\"139\":1}}],[\"02\",{\"1\":{\"139\":1}}],[\"09bb07\",{\"1\":{\"126\":2}}],[\"0起支持传入单位\",{\"1\":{\"124\":1,\"125\":1,\"126\":1}}],[\"0px\",{\"1\":{\"123\":1}}],[\"0xdcdcdc\",{\"1\":{\"18\":1}}],[\"0xffffff\",{\"1\":{\"18\":1}}],[\"0xf1f3f5\",{\"1\":{\"17\":1}}],[\"0x00ffff\",{\"1\":{\"14\":5,\"15\":5}}],[\"0xafeeee\",{\"1\":{\"14\":5,\"15\":5}}],[\"0xcccccc\",{\"1\":{\"14\":5,\"15\":5}}],[\"0\",{\"1\":{\"12\":1,\"16\":1,\"17\":1,\"18\":2,\"22\":1,\"36\":2,\"39\":2,\"40\":6,\"47\":1,\"48\":1,\"49\":1,\"50\":2,\"53\":1,\"54\":1,\"55\":1,\"59\":18,\"63\":1,\"68\":3,\"93\":2,\"109\":1,\"113\":2,\"121\":8,\"123\":22,\"124\":1,\"125\":6,\"126\":16,\"132\":3,\"136\":8,\"137\":1,\"139\":11,\"142\":7,\"143\":1,\"146\":12,\"148\":4,\"155\":2,\"158\":2,\"159\":5,\"160\":4,\"163\":3,\"167\":4,\"171\":2,\"172\":3,\"174\":3,\"176\":7,\"186\":1,\"195\":1,\"236\":1,\"241\":1,\"251\":2,\"259\":4,\"260\":23,\"265\":4,\"270\":4,\"277\":1,\"283\":1,\"291\":1,\"305\":1,\"321\":1,\"347\":1,\"349\":2,\"350\":2,\"354\":4,\"357\":2,\"358\":2,\"361\":1,\"367\":1,\"379\":3,\"388\":1,\"389\":1,\"390\":1,\"398\":1,\"399\":1,\"400\":1,\"402\":1,\"403\":1,\"463\":1,\"474\":1,\"480\":9,\"489\":1,\"503\":6,\"529\":1,\"571\":4,\"577\":2,\"578\":6,\"581\":2,\"584\":1,\"657\":2,\"668\":3,\"686\":1,\"691\":2,\"696\":2}}],[\"erina\",{\"1\":{\"546\":2}}],[\"err\",{\"1\":{\"201\":2,\"504\":4,\"505\":2}}],[\"errorcaptured\",{\"1\":{\"494\":1}}],[\"errorcomponent\",{\"1\":{\"282\":4}}],[\"error\",{\"1\":{\"59\":2,\"250\":1,\"268\":1,\"282\":2,\"504\":9,\"505\":6,\"513\":2,\"559\":1,\"584\":4}}],[\"eduardo\",{\"1\":{\"544\":8,\"550\":7,\"557\":1}}],[\"editing\",{\"1\":{\"166\":1}}],[\"edited\",{\"1\":{\"166\":1,\"201\":1}}],[\"editflag\",{\"1\":{\"18\":1}}],[\"effect\",{\"1\":{\"505\":2,\"508\":1}}],[\"e9e9e9\",{\"1\":{\"480\":2}}],[\"etc\",{\"1\":{\"268\":1}}],[\"ets\",{\"1\":{\"15\":1,\"16\":1,\"18\":1,\"34\":3}}],[\"e2e\",{\"1\":{\"268\":1}}],[\"eject\",{\"1\":{\"266\":1}}],[\"eval\",{\"1\":{\"265\":1}}],[\"event\",{\"1\":{\"314\":7,\"331\":7,\"447\":4,\"449\":5,\"450\":4,\"494\":2,\"503\":14}}],[\"events\",{\"1\":{\"137\":2,\"447\":1}}],[\"eventhandle\",{\"1\":{\"126\":1}}],[\"eventname\",{\"1\":{\"65\":2}}],[\"equiv=\",{\"1\":{\"236\":1,\"480\":1}}],[\"eqeqeq\",{\"1\":{\"59\":1}}],[\"eot|ttf|woff2\",{\"1\":{\"227\":2}}],[\"eyj2zxjzaw9uijozlcjzb3vyy2vzijpbinrlc3quy3nzil0sim5hbwvzijpbxswibwfwcgluz3mioijbqufbo0vbq0useujbqwlco0tbqwpclhncqufpqjtnqufqqixxqkfbaui7vufbakisaujbqwlco0fbq25ciiwizmlszsi6imrlbw8uy3nziiwic291cmnlc0nvbnrlbnqiolsilnrpdgxlihtcbiagdxnlci1zzwxly3q6ig5vbmu7xg59il19\",{\"1\":{\"221\":1}}],[\"ease\",{\"1\":{\"155\":1,\"158\":1,\"159\":1,\"163\":1,\"167\":3,\"174\":2,\"175\":1,\"176\":1}}],[\"ebebeb\",{\"1\":{\"126\":1}}],[\"eeeeee\",{\"1\":{\"142\":1}}],[\"eee\",{\"1\":{\"124\":1}}],[\"e4\",{\"1\":{\"124\":3,\"132\":2,\"686\":2}}],[\"e8\",{\"1\":{\"124\":1,\"686\":1}}],[\"e7\",{\"1\":{\"123\":3,\"124\":1,\"132\":2,\"686\":4}}],[\"e5\",{\"1\":{\"123\":2,\"124\":2,\"686\":2}}],[\"e6\",{\"1\":{\"123\":10,\"124\":2,\"686\":3}}],[\"e6000000\",{\"1\":{\"40\":1}}],[\"el是正在进入的元素\",{\"1\":{\"171\":1}}],[\"el和done\",{\"1\":{\"171\":1}}],[\"el\",{\"1\":{\"168\":8,\"171\":4,\"176\":9,\"201\":3,\"408\":9,\"410\":2,\"411\":2,\"412\":2,\"413\":4,\"415\":6,\"416\":6,\"571\":5,\"578\":6,\"691\":1}}],[\"element函数调用\",{\"1\":{\"429\":1}}],[\"element模块发生了变化\",{\"1\":{\"256\":1}}],[\"element\",{\"1\":{\"151\":3,\"249\":1,\"256\":1}}],[\"elif=\",{\"1\":{\"104\":1}}],[\"else一起使用\",{\"1\":{\"455\":1}}],[\"else>loading\",{\"1\":{\"504\":1}}],[\"else>不及格<\",{\"1\":{\"452\":1}}],[\"else>\",{\"1\":{\"136\":1,\"275\":1,\"453\":1,\"480\":1}}],[\"else=\",{\"1\":{\"104\":1}}],[\"else\",{\"1\":{\"17\":1,\"53\":1,\"59\":4,\"166\":4,\"201\":2,\"275\":1,\"451\":2,\"452\":5,\"504\":1,\"559\":1,\"567\":1,\"568\":1,\"571\":1,\"577\":1,\"584\":1}}],[\"e\",{\"1\":{\"91\":1,\"106\":1,\"110\":1,\"136\":2,\"478\":3,\"489\":2}}],[\"eclipse\",{\"1\":{\"70\":1}}],[\"ecmascript\",{\"1\":{\"241\":1,\"243\":1,\"250\":2}}],[\"ecmafeatures\",{\"1\":{\"59\":1}}],[\"ecmaversion\",{\"1\":{\"59\":1}}],[\"escook\",{\"1\":{\"651\":1,\"668\":1}}],[\"escape\",{\"1\":{\"59\":1}}],[\"es2015\",{\"1\":{\"271\":1,\"338\":1}}],[\"es2021\",{\"1\":{\"59\":1}}],[\"es6\",{\"1\":{\"208\":1,\"246\":1,\"339\":1}}],[\"es6出现后\",{\"1\":{\"195\":1}}],[\"esmodule\",{\"1\":{\"241\":1}}],[\"esm支持解析相对路径\",{\"1\":{\"195\":1}}],[\"esm的对外接口只是一种静态定义\",{\"1\":{\"195\":1}}],[\"esm是浏览器支持的一种模块化方案\",{\"1\":{\"195\":1}}],[\"esm\",{\"0\":{\"194\":1,\"195\":1},\"1\":{\"197\":2,\"250\":9,\"251\":1}}],[\"esm运行时\",{\"1\":{\"180\":1}}],[\"esbuild可以充分利用cpu的多内核\",{\"1\":{\"196\":1}}],[\"esbuild为什么这么快呢\",{\"1\":{\"196\":1}}],[\"esbuild的所有内容都是从零开始编写的\",{\"1\":{\"196\":1}}],[\"esbuild的构建速度和其他构建工具速度对比\",{\"1\":{\"196\":1}}],[\"esbuild的特点\",{\"1\":{\"196\":1}}],[\"esbuild\",{\"0\":{\"194\":1,\"196\":1},\"1\":{\"182\":1}}],[\"es\",{\"1\":{\"178\":1,\"197\":3,\"204\":1,\"250\":2,\"282\":1}}],[\"esnext\",{\"1\":{\"63\":1,\"72\":1}}],[\"es5\",{\"1\":{\"59\":1,\"60\":1,\"124\":1,\"241\":1,\"243\":2,\"246\":1}}],[\"essentials\",{\"1\":{\"483\":1,\"546\":1}}],[\"essential\",{\"0\":{\"709\":1},\"1\":{\"59\":1}}],[\"eslint的配置文件\",{\"1\":{\"269\":1}}],[\"eslintconfig等\",{\"1\":{\"268\":1}}],[\"eslint等配置信息保存在package\",{\"1\":{\"268\":1}}],[\"eslint等配置信息分别保存在它们各自的配置文件中\",{\"1\":{\"268\":1}}],[\"eslintignore忽略文件\",{\"1\":{\"59\":1}}],[\"eslintrc等\",{\"1\":{\"268\":1}}],[\"eslintrc\",{\"1\":{\"59\":1,\"269\":1}}],[\"eslint\",{\"1\":{\"40\":1,\"59\":24,\"60\":2,\"61\":1,\"268\":9}}],[\"emmmm\",{\"1\":{\"420\":1}}],[\"emitvalue\",{\"1\":{\"489\":2}}],[\"emit\",{\"1\":{\"314\":5,\"331\":5,\"349\":5}}],[\"emits\",{\"0\":{\"311\":1,\"327\":1},\"1\":{\"311\":2,\"327\":2,\"343\":2,\"344\":2,\"349\":1,\"404\":2,\"489\":2,\"490\":1}}],[\"embeddedappidlist\",{\"1\":{\"139\":1}}],[\"embeddedlanguageformatting\",{\"1\":{\"59\":1}}],[\"emulator\",{\"1\":{\"30\":1}}],[\"empty\",{\"1\":{\"29\":1,\"59\":2}}],[\"exection\",{\"1\":{\"371\":1}}],[\"exclude\",{\"1\":{\"248\":1,\"279\":1}}],[\"exit\",{\"1\":{\"130\":2}}],[\"externds\",{\"0\":{\"500\":1}}],[\"extensions\",{\"1\":{\"264\":4}}],[\"extends\",{\"0\":{\"495\":1},\"1\":{\"59\":1,\"63\":1,\"72\":1,\"500\":8}}],[\"extend\",{\"1\":{\"39\":1,\"56\":1,\"540\":1}}],[\"ext\",{\"1\":{\"61\":1,\"224\":1,\"225\":1,\"227\":2,\"228\":1,\"232\":1}}],[\"extras\",{\"1\":{\"347\":1}}],[\"extract\",{\"1\":{\"213\":1}}],[\"extra\",{\"1\":{\"59\":1}}],[\"expose\",{\"1\":{\"349\":1,\"350\":3}}],[\"exports\",{\"1\":{\"59\":1,\"60\":1,\"97\":8,\"108\":1,\"109\":1,\"188\":1,\"192\":1,\"211\":1,\"215\":1,\"222\":1,\"234\":1,\"236\":1,\"237\":1,\"239\":1,\"241\":3,\"244\":1,\"248\":1,\"249\":1,\"251\":1,\"253\":1,\"256\":1,\"259\":1,\"261\":1,\"262\":3,\"263\":2,\"264\":1,\"265\":2,\"272\":1,\"555\":1}}],[\"export\",{\"1\":{\"21\":1,\"59\":1,\"154\":1,\"161\":1,\"167\":1,\"168\":2,\"171\":1,\"172\":1,\"174\":1,\"176\":1,\"189\":1,\"190\":1,\"195\":1,\"197\":1,\"198\":3,\"201\":1,\"241\":1,\"250\":2,\"276\":1,\"277\":1,\"282\":1,\"288\":1,\"290\":1,\"291\":1,\"294\":2,\"295\":2,\"299\":1,\"300\":2,\"304\":2,\"305\":2,\"306\":2,\"307\":1,\"308\":1,\"310\":2,\"311\":1,\"313\":3,\"314\":2,\"315\":1,\"316\":2,\"320\":2,\"321\":2,\"322\":2,\"323\":1,\"324\":1,\"326\":2,\"327\":1,\"328\":1,\"330\":3,\"331\":2,\"338\":2,\"339\":1,\"342\":2,\"343\":2,\"344\":2,\"349\":7,\"350\":4,\"353\":1,\"356\":1,\"359\":2,\"363\":1,\"366\":1,\"367\":1,\"368\":1,\"370\":1,\"371\":2,\"374\":1,\"375\":1,\"376\":1,\"377\":2,\"379\":1,\"380\":1,\"384\":2,\"388\":1,\"389\":1,\"392\":1,\"396\":1,\"398\":1,\"399\":1,\"411\":1,\"413\":2,\"415\":1,\"478\":1,\"489\":2,\"490\":1,\"493\":1,\"494\":1,\"497\":2,\"500\":2,\"503\":3,\"504\":1,\"505\":1,\"513\":1,\"530\":1,\"543\":1,\"544\":2,\"551\":1,\"578\":1,\"580\":1,\"581\":2,\"583\":1,\"584\":3,\"585\":3,\"603\":1,\"604\":1,\"605\":1,\"611\":1,\"616\":1,\"618\":1,\"619\":1,\"629\":1,\"630\":1,\"631\":1,\"632\":1,\"641\":1,\"642\":1,\"643\":1,\"652\":1,\"661\":1,\"662\":1,\"668\":2,\"669\":1,\"692\":1,\"694\":1,\"697\":1,\"698\":1}}],[\"express\",{\"1\":{\"258\":2}}],[\"expression\",{\"1\":{\"23\":1}}],[\"expl1citly\",{\"1\":{\"251\":1}}],[\"explicit\",{\"1\":{\"59\":1}}],[\"expect\",{\"1\":{\"59\":1}}],[\"examplex新建自己的文件夹以及测试demo\",{\"1\":{\"532\":1}}],[\"example\",{\"1\":{\"10\":1,\"262\":1,\"408\":2}}],[\"encountered\",{\"1\":{\"504\":1}}],[\"encode\",{\"1\":{\"197\":1}}],[\"en\",{\"1\":{\"447\":1,\"480\":1}}],[\"enhanced\",{\"1\":{\"264\":1}}],[\"enabled\",{\"1\":{\"236\":1}}],[\"enablepulldownrefresh\",{\"1\":{\"142\":1,\"146\":1}}],[\"enablepassiveevent\",{\"1\":{\"139\":1,\"146\":1}}],[\"enable\",{\"1\":{\"124\":1,\"236\":1}}],[\"env也是一个postcss的插件\",{\"1\":{\"223\":1}}],[\"env\",{\"0\":{\"223\":1},\"1\":{\"59\":5,\"136\":1,\"188\":2,\"222\":1,\"223\":6,\"244\":4,\"248\":4,\"249\":2,\"265\":1}}],[\"environment\",{\"1\":{\"27\":1}}],[\"enterkeyup\",{\"1\":{\"450\":2}}],[\"enter函数接收两个参数\",{\"1\":{\"171\":1}}],[\"enter=\",{\"1\":{\"168\":6,\"171\":1,\"176\":2,\"450\":1}}],[\"enter\",{\"1\":{\"155\":2,\"157\":4,\"158\":4,\"159\":2,\"160\":3,\"161\":4,\"163\":4,\"167\":3,\"168\":6,\"170\":1,\"171\":3,\"174\":2,\"176\":4,\"570\":1}}],[\"entrancedeclare\",{\"1\":{\"139\":1}}],[\"entries\",{\"0\":{\"54\":1},\"1\":{\"54\":3}}],[\"entry|pattern\",{\"1\":{\"271\":1}}],[\"entrypagepath\",{\"0\":{\"140\":1},\"1\":{\"139\":2,\"141\":1}}],[\"entryability\",{\"1\":{\"34\":1}}],[\"entry可以接受一个可选的localstorage的参数\",{\"1\":{\"20\":1}}],[\"entry装饰的自定义组件\",{\"1\":{\"23\":1}}],[\"entry装饰的自定义组件将作为ui页面的入口\",{\"1\":{\"20\":1}}],[\"entry装饰一个自定义组件\",{\"1\":{\"20\":1}}],[\"entry表示该自定义组件为入口组件\",{\"1\":{\"3\":1}}],[\"entry\",{\"1\":{\"3\":1,\"10\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":2,\"18\":1,\"20\":2,\"21\":2,\"22\":1,\"23\":1,\"24\":1,\"34\":1,\"38\":1,\"39\":1,\"40\":2,\"208\":1,\"211\":1,\"248\":1,\"265\":1,\"270\":4}}],[\"entire\",{\"1\":{\"40\":3}}],[\"enum类型\",{\"1\":{\"38\":1}}],[\"endswith\",{\"1\":{\"198\":1,\"201\":2}}],[\"endofline\",{\"1\":{\"59\":1,\"60\":1}}],[\"end\",{\"1\":{\"14\":4,\"15\":2,\"39\":1,\"221\":1,\"268\":2}}],[\"h3>\",{\"1\":{\"604\":1,\"605\":1,\"617\":1,\"619\":1}}],[\"hym0jgbi25grng\",{\"1\":{\"529\":1}}],[\"hyphenation\",{\"1\":{\"59\":1}}],[\"h1\",{\"1\":{\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1,\"530\":1}}],[\"h1>\",{\"1\":{\"291\":1,\"350\":1,\"353\":1,\"356\":1,\"363\":1,\"374\":1,\"375\":1,\"384\":1,\"415\":1,\"416\":1,\"419\":1,\"420\":3,\"421\":2,\"530\":2,\"540\":1,\"543\":1,\"578\":1,\"603\":1}}],[\"hh\",{\"1\":{\"413\":1,\"415\":1,\"416\":1}}],[\"h函数可以直接返回一个虚拟节点\",{\"1\":{\"530\":1}}],[\"h函数可以在两个地方使用\",{\"1\":{\"387\":1}}],[\"h函数\",{\"0\":{\"385\":1}}],[\"h2\",{\"1\":{\"250\":1,\"388\":1,\"389\":1,\"390\":1,\"392\":1}}],[\"h2>\",{\"1\":{\"154\":1,\"168\":1,\"170\":1,\"171\":1,\"172\":1,\"250\":3,\"290\":3,\"295\":1,\"299\":5,\"300\":5,\"306\":1,\"308\":1,\"315\":5,\"316\":5,\"322\":1,\"324\":1,\"336\":2,\"337\":2,\"339\":1,\"359\":1,\"370\":2,\"376\":1,\"377\":1,\"379\":1,\"380\":1,\"384\":1,\"398\":1,\"399\":1,\"400\":1,\"430\":7,\"432\":6,\"434\":2,\"435\":1,\"452\":3,\"453\":6,\"454\":1,\"455\":2,\"457\":3,\"459\":1,\"470\":3,\"471\":3,\"472\":3,\"473\":20,\"474\":1,\"477\":1,\"480\":2,\"483\":5,\"494\":1,\"497\":1,\"500\":1,\"527\":4,\"557\":1}}],[\"href=\",{\"1\":{\"236\":1,\"437\":1,\"438\":1,\"445\":1,\"480\":1,\"546\":2,\"547\":3}}],[\"href\",{\"1\":{\"201\":2,\"445\":1,\"547\":1}}],[\"hmr利用了webpack的构建能力和热更新运行时\",{\"1\":{\"258\":1}}],[\"hmr的原理可以分为以下几个步骤\",{\"1\":{\"258\":1}}],[\"hmr的原理\",{\"0\":{\"258\":1}}],[\"hmr的全称是hot\",{\"1\":{\"255\":1}}],[\"hmr通过如下几种方式\",{\"1\":{\"255\":1}}],[\"hmrpayload\",{\"1\":{\"201\":2}}],[\"hmr等\",{\"1\":{\"183\":1}}],[\"hmr时只需让浏览器重新请求该模块\",{\"1\":{\"182\":1}}],[\"hmr时需要把改动模块及相关依赖全部编译\",{\"1\":{\"182\":1}}],[\"hmr慢的问题呢\",{\"1\":{\"182\":1}}],[\"hmr\",{\"0\":{\"255\":1,\"256\":1,\"257\":1},\"1\":{\"178\":1,\"179\":1,\"201\":2,\"257\":1,\"258\":4,\"531\":1}}],[\"hmm\",{\"1\":{\"176\":1}}],[\"h\",{\"1\":{\"124\":6,\"267\":1,\"350\":4,\"385\":2,\"386\":2,\"388\":5,\"389\":5,\"390\":5,\"391\":18,\"392\":8,\"530\":4,\"611\":2,\"691\":2}}],[\"h=313\",{\"1\":{\"123\":1}}],[\"h=675\",{\"1\":{\"123\":1}}],[\"h=500\",{\"1\":{\"123\":2}}],[\"h5\",{\"1\":{\"69\":1}}],[\"hx\",{\"1\":{\"67\":1}}],[\"hbuilderx是通用的前端开发工具\",{\"1\":{\"67\":1}}],[\"hbuilderx\",{\"0\":{\"67\":1},\"1\":{\"66\":1,\"67\":2,\"68\":6,\"70\":2,\"73\":1}}],[\"hu\",{\"1\":{\"105\":1}}],[\"hulk\",{\"1\":{\"105\":1}}],[\"husky文件夹\",{\"1\":{\"62\":1}}],[\"husky\",{\"0\":{\"62\":1},\"1\":{\"62\":2}}],[\"huawei\",{\"1\":{\"13\":1,\"17\":1,\"35\":1,\"69\":1}}],[\"http\",{\"1\":{\"236\":1,\"251\":1,\"259\":1,\"262\":4,\"263\":1,\"265\":1,\"480\":1,\"578\":2}}],[\"https\",{\"1\":{\"10\":1,\"13\":1,\"17\":7,\"35\":1,\"58\":2,\"59\":4,\"64\":1,\"67\":1,\"68\":1,\"72\":1,\"80\":1,\"81\":1,\"86\":1,\"89\":1,\"99\":1,\"113\":1,\"114\":1,\"119\":1,\"123\":6,\"124\":2,\"128\":1,\"130\":1,\"132\":2,\"133\":1,\"134\":1,\"139\":1,\"155\":1,\"161\":1,\"170\":1,\"171\":2,\"175\":1,\"177\":1,\"204\":1,\"214\":1,\"228\":1,\"237\":1,\"241\":1,\"246\":1,\"251\":2,\"262\":3,\"263\":1,\"264\":1,\"266\":1,\"270\":2,\"278\":1,\"281\":1,\"283\":1,\"284\":1,\"285\":1,\"314\":1,\"331\":1,\"336\":1,\"342\":2,\"343\":1,\"347\":1,\"368\":1,\"423\":1,\"428\":1,\"438\":2,\"447\":1,\"460\":1,\"468\":1,\"478\":1,\"479\":1,\"483\":1,\"494\":1,\"501\":1,\"523\":1,\"529\":1,\"531\":1,\"539\":2,\"540\":2,\"546\":1,\"558\":1,\"580\":1,\"597\":1,\"686\":1,\"692\":1}}],[\"htc\",{\"1\":{\"69\":1}}],[\"html=\",{\"1\":{\"433\":1}}],[\"html5\",{\"1\":{\"263\":2,\"539\":1,\"540\":2}}],[\"html代码\",{\"1\":{\"252\":1}}],[\"html的生成\",{\"1\":{\"238\":1}}],[\"html>\",{\"1\":{\"236\":2,\"480\":2}}],[\"html模块\",{\"1\":{\"236\":1}}],[\"html进行打包处理\",{\"1\":{\"235\":1}}],[\"html文件的\",{\"1\":{\"235\":1}}],[\"htmlwebpackplugin\",{\"0\":{\"235\":1},\"1\":{\"235\":1,\"236\":6}}],[\"htmlwhitespacesensitivity\",{\"1\":{\"59\":1}}],[\"html资源的处理\",{\"1\":{\"205\":1}}],[\"html预处理\",{\"1\":{\"183\":1}}],[\"html\",{\"0\":{\"433\":1},\"1\":{\"59\":3,\"60\":1,\"68\":1,\"81\":1,\"86\":1,\"89\":1,\"99\":1,\"113\":1,\"114\":1,\"119\":1,\"123\":2,\"124\":2,\"128\":1,\"130\":1,\"132\":2,\"133\":1,\"134\":1,\"139\":1,\"155\":1,\"175\":1,\"197\":1,\"201\":8,\"235\":2,\"236\":3,\"237\":1,\"238\":2,\"263\":10,\"269\":1,\"271\":3,\"278\":1,\"281\":1,\"283\":1,\"284\":1,\"285\":1,\"314\":1,\"331\":1,\"336\":1,\"342\":2,\"343\":1,\"347\":1,\"368\":1,\"423\":1,\"433\":2,\"460\":1,\"468\":1,\"478\":1,\"479\":1,\"483\":2,\"494\":1,\"501\":1,\"531\":2,\"539\":1,\"546\":1,\"558\":1,\"578\":1}}],[\"hdx\",{\"1\":{\"48\":2}}],[\"hd1\",{\"1\":{\"48\":4}}],[\"hook\",{\"1\":{\"359\":1,\"570\":1}}],[\"hooks函数增加代码的复用性\",{\"1\":{\"521\":1}}],[\"hooks\",{\"1\":{\"62\":1}}],[\"host=\",{\"1\":{\"577\":1}}],[\"host设置主机地址\",{\"1\":{\"260\":1}}],[\"host\",{\"0\":{\"260\":1},\"1\":{\"259\":2,\"265\":1,\"270\":2}}],[\"hosts\",{\"1\":{\"68\":1}}],[\"hotonly\",{\"0\":{\"260\":1}}],[\"hot\",{\"1\":{\"252\":1,\"256\":5,\"257\":1,\"258\":2,\"259\":2,\"265\":1,\"270\":1,\"577\":3,\"578\":1}}],[\"home<\",{\"1\":{\"540\":1}}],[\"homecompref\",{\"1\":{\"371\":6}}],[\"home><\",{\"1\":{\"402\":1}}],[\"home>\",{\"1\":{\"275\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":1}}],[\"home\",{\"1\":{\"143\":2,\"167\":4,\"263\":1,\"275\":1,\"276\":5,\"277\":1,\"282\":1,\"328\":5,\"350\":1,\"371\":5,\"398\":2,\"403\":1,\"404\":1,\"405\":1,\"494\":9,\"500\":2,\"540\":2,\"553\":2,\"554\":3,\"559\":1}}],[\"homepage\",{\"1\":{\"142\":1,\"146\":1,\"554\":1}}],[\"homebutton\",{\"1\":{\"142\":1,\"146\":1}}],[\"hover\",{\"1\":{\"121\":9}}],[\"how\",{\"1\":{\"59\":2,\"525\":2}}],[\"hobbies\",{\"1\":{\"49\":3,\"483\":5}}],[\"hobby\",{\"1\":{\"47\":4,\"53\":4,\"54\":2,\"55\":2}}],[\"horizontalalign\",{\"1\":{\"14\":2,\"17\":1}}],[\"horizontal\",{\"1\":{\"12\":1,\"16\":1}}],[\"haha\",{\"1\":{\"585\":1}}],[\"hahah\",{\"1\":{\"402\":1}}],[\"hack\",{\"1\":{\"520\":1}}],[\"haschanged\",{\"1\":{\"582\":1}}],[\"hasroute\",{\"1\":{\"575\":1}}],[\"hash\",{\"1\":{\"224\":1,\"225\":1,\"227\":2,\"228\":3,\"232\":1,\"539\":1,\"540\":2,\"544\":1,\"548\":3,\"550\":2,\"561\":5,\"571\":4}}],[\"hasownproperty\",{\"1\":{\"47\":1,\"53\":1,\"59\":1}}],[\"halfpage\",{\"1\":{\"139\":1}}],[\"handle3\",{\"1\":{\"478\":2}}],[\"handle2\",{\"1\":{\"478\":2}}],[\"handle1\",{\"1\":{\"478\":2}}],[\"handleclick\",{\"1\":{\"404\":2}}],[\"handledatafromchild\",{\"1\":{\"310\":2,\"326\":2}}],[\"handlemessage\",{\"1\":{\"201\":3}}],[\"handle\",{\"1\":{\"198\":1,\"478\":1}}],[\"handlewebviewpreload\",{\"1\":{\"142\":1,\"146\":1}}],[\"handler\",{\"1\":{\"110\":1,\"477\":1,\"478\":3}}],[\"handtaskchange\",{\"1\":{\"39\":4}}],[\"have\",{\"1\":{\"110\":1,\"563\":1}}],[\"haier\",{\"1\":{\"69\":1}}],[\"harmony\",{\"0\":{\"699\":1},\"1\":{\"26\":1}}],[\"harmonyos工程模块\",{\"1\":{\"34\":1}}],[\"harmonyos\",{\"1\":{\"13\":1,\"17\":1,\"33\":1,\"35\":1}}],[\"hvigorfile\",{\"1\":{\"34\":2}}],[\"history\",{\"1\":{\"263\":2,\"539\":1,\"540\":4,\"543\":1,\"544\":1,\"550\":1,\"551\":1,\"552\":1,\"553\":1,\"571\":2,\"573\":1,\"578\":1,\"694\":1}}],[\"historyapifallback\",{\"0\":{\"263\":1},\"1\":{\"263\":7}}],[\"hidden\",{\"1\":{\"142\":1,\"146\":1}}],[\"hide\",{\"1\":{\"93\":1}}],[\"hi\",{\"1\":{\"17\":1,\"95\":1}}],[\"high\",{\"1\":{\"16\":1}}],[\"header=\",{\"1\":{\"295\":1}}],[\"header\",{\"1\":{\"291\":6,\"295\":1,\"300\":1,\"316\":1}}],[\"header>\",{\"1\":{\"291\":8}}],[\"head>\",{\"1\":{\"236\":1,\"480\":1}}],[\"here\",{\"1\":{\"160\":1}}],[\"hexcolor\",{\"1\":{\"142\":2,\"143\":3,\"146\":3}}],[\"help\",{\"1\":{\"267\":1}}],[\"helper\",{\"1\":{\"63\":2,\"72\":3}}],[\"helloworld\",{\"1\":{\"195\":5,\"250\":3,\"349\":4,\"350\":1,\"353\":1,\"356\":1,\"363\":1,\"392\":3,\"551\":1}}],[\"hellomina\",{\"1\":{\"97\":1}}],[\"hellodata\",{\"1\":{\"91\":2,\"106\":1,\"110\":1}}],[\"hellocomponent自定义组件组合系统组件row和text\",{\"1\":{\"21\":2}}],[\"hellocomponent\",{\"1\":{\"21\":8}}],[\"hello\",{\"1\":{\"3\":1,\"21\":10,\"23\":1,\"29\":1,\"67\":1,\"68\":1,\"91\":3,\"102\":1,\"108\":1,\"154\":1,\"160\":1,\"163\":1,\"195\":1,\"241\":1,\"250\":3,\"268\":1,\"288\":1,\"294\":2,\"295\":1,\"304\":2,\"305\":3,\"306\":3,\"310\":1,\"313\":1,\"314\":3,\"320\":2,\"321\":3,\"322\":3,\"326\":1,\"330\":1,\"331\":3,\"349\":1,\"350\":2,\"353\":1,\"356\":1,\"359\":1,\"361\":1,\"363\":1,\"391\":8,\"392\":1,\"403\":2,\"430\":1,\"441\":1,\"443\":1,\"444\":1,\"448\":1,\"449\":1,\"450\":1,\"471\":1,\"472\":1,\"476\":1,\"483\":1,\"494\":1,\"497\":2,\"500\":1,\"527\":2}}],[\"height=\",{\"1\":{\"446\":1}}],[\"heightfix\",{\"1\":{\"132\":1}}],[\"height\",{\"1\":{\"3\":1,\"14\":13,\"15\":13,\"16\":1,\"17\":4,\"18\":2,\"24\":1,\"39\":1,\"40\":3,\"121\":5,\"123\":5,\"124\":7,\"136\":2,\"176\":3,\"446\":1,\"457\":1,\"458\":1,\"578\":1}}],[\"old\",{\"1\":{\"478\":2}}],[\"oldval\",{\"1\":{\"478\":7}}],[\"oldvalue变化前的旧值\",{\"1\":{\"476\":1}}],[\"oldvalue\",{\"1\":{\"379\":7,\"381\":2,\"408\":2,\"476\":2,\"477\":3}}],[\"oldid\",{\"1\":{\"383\":1}}],[\"oldinfo\",{\"1\":{\"379\":8,\"380\":2,\"477\":4,\"479\":2}}],[\"oldname\",{\"1\":{\"380\":2}}],[\"other\",{\"1\":{\"262\":1,\"570\":1,\"574\":2}}],[\"others\",{\"1\":{\"186\":1}}],[\"orange\",{\"1\":{\"483\":2}}],[\"or\",{\"1\":{\"267\":1,\"269\":1,\"477\":1}}],[\"original\",{\"1\":{\"354\":7,\"361\":4}}],[\"origin\",{\"1\":{\"262\":1}}],[\"org\",{\"1\":{\"59\":1,\"72\":1,\"155\":1,\"175\":1,\"204\":1,\"214\":1,\"228\":1,\"251\":2,\"262\":1,\"263\":1,\"264\":1,\"266\":1,\"278\":1,\"281\":1,\"283\":1,\"284\":1,\"285\":1,\"314\":1,\"331\":1,\"336\":1,\"342\":2,\"343\":1,\"347\":1,\"368\":1,\"423\":1,\"447\":1,\"460\":1,\"468\":1,\"478\":1,\"479\":1,\"483\":1,\"494\":1,\"501\":1,\"531\":1,\"539\":1,\"546\":1,\"558\":1,\"580\":1,\"597\":1}}],[\"o\",{\"1\":{\"221\":1}}],[\"ok\",{\"1\":{\"186\":1}}],[\"outlet\",{\"1\":{\"288\":1}}],[\"outputpath\",{\"1\":{\"225\":1,\"227\":1}}],[\"output\",{\"1\":{\"208\":1,\"211\":1,\"248\":1,\"265\":1}}],[\"out\",{\"1\":{\"159\":1,\"163\":1,\"164\":3,\"167\":1,\"242\":4,\"243\":1,\"244\":1,\"284\":1}}],[\"outer\",{\"1\":{\"12\":1,\"16\":1,\"163\":1}}],[\"our\",{\"1\":{\"91\":3}}],[\"optimization\",{\"1\":{\"265\":1}}],[\"optimized\",{\"1\":{\"179\":1}}],[\"option>\",{\"1\":{\"483\":3}}],[\"option\",{\"1\":{\"250\":1,\"581\":1}}],[\"options\",{\"0\":{\"346\":1},\"1\":{\"8\":2,\"93\":2,\"95\":1,\"215\":1,\"222\":1,\"225\":1,\"227\":1,\"236\":3,\"248\":1,\"251\":2,\"267\":1,\"270\":1,\"271\":1,\"272\":1,\"346\":1,\"478\":1,\"494\":2,\"521\":2}}],[\"opacity\",{\"1\":{\"155\":2,\"158\":2,\"159\":1,\"163\":1,\"167\":2,\"174\":1,\"176\":5}}],[\"opera等\",{\"1\":{\"195\":1}}],[\"operand\",{\"1\":{\"59\":1}}],[\"open是否打开浏览器\",{\"1\":{\"261\":1}}],[\"open\",{\"0\":{\"261\":1},\"1\":{\"128\":2,\"130\":9,\"259\":2,\"261\":1,\"265\":1,\"270\":1}}],[\"oppo\",{\"1\":{\"69\":1}}],[\"overrides\",{\"1\":{\"59\":1}}],[\"overview\",{\"1\":{\"35\":1}}],[\"off\",{\"1\":{\"59\":1}}],[\"offsety\",{\"1\":{\"39\":1}}],[\"offsetx\",{\"1\":{\"39\":1}}],[\"of\",{\"1\":{\"54\":1,\"59\":1,\"250\":1,\"251\":1,\"480\":1}}],[\"obj2\",{\"1\":{\"529\":2}}],[\"obj\",{\"0\":{\"54\":1},\"1\":{\"47\":6,\"48\":3,\"49\":3,\"53\":11,\"54\":6,\"55\":3,\"57\":4,\"354\":5,\"357\":5,\"361\":1,\"381\":4,\"529\":2,\"652\":2,\"657\":7,\"668\":7,\"696\":7}}],[\"object或boolean\",{\"1\":{\"139\":1,\"146\":1}}],[\"object\",{\"0\":{\"49\":1,\"54\":1},\"1\":{\"42\":1,\"47\":1,\"49\":2,\"53\":1,\"54\":4,\"55\":1,\"93\":1,\"139\":18,\"146\":3,\"241\":1,\"243\":2,\"306\":2,\"322\":2,\"386\":1,\"437\":1,\"447\":1,\"457\":3,\"475\":1,\"477\":1,\"480\":1,\"520\":1,\"561\":1}}],[\"objectlink装饰变量之间建立双向数据同步\",{\"1\":{\"38\":1}}],[\"oh\",{\"1\":{\"34\":1}}],[\"ohos\",{\"1\":{\"10\":1}}],[\"onsubmit\",{\"1\":{\"578\":2}}],[\"onshareappmessage\",{\"1\":{\"95\":1}}],[\"onshow\",{\"1\":{\"93\":2,\"95\":1,\"137\":1}}],[\"on支持修饰符\",{\"1\":{\"450\":1}}],[\"on=\",{\"1\":{\"448\":1}}],[\"on的用法\",{\"1\":{\"447\":1}}],[\"on的方式传入要监听的事件名称\",{\"1\":{\"310\":1,\"326\":1}}],[\"on指令\",{\"1\":{\"447\":1}}],[\"on绑定事件\",{\"1\":{\"447\":1}}],[\"oninvalidate\",{\"1\":{\"376\":4}}],[\"onupdate\",{\"1\":{\"391\":1}}],[\"onupdated\",{\"1\":{\"368\":2}}],[\"onunmounted\",{\"1\":{\"347\":1,\"368\":2,\"503\":6,\"510\":2}}],[\"onunload\",{\"1\":{\"95\":1}}],[\"onunhandledrejection\",{\"1\":{\"93\":1}}],[\"onxxx\",{\"1\":{\"391\":1}}],[\"onx\",{\"1\":{\"368\":1}}],[\"onmounted\",{\"1\":{\"347\":3,\"368\":3,\"370\":2,\"371\":2,\"405\":2,\"410\":2,\"503\":6,\"510\":1,\"511\":1,\"578\":2}}],[\"on\",{\"0\":{\"447\":1,\"450\":1},\"1\":{\"201\":1,\"268\":2,\"314\":3,\"331\":3,\"448\":3}}],[\"onafterleave\",{\"1\":{\"168\":2}}],[\"onafterenter\",{\"1\":{\"168\":2}}],[\"onbeforerouteleave\",{\"1\":{\"564\":1}}],[\"onbeforerouteupdate\",{\"1\":{\"564\":1}}],[\"onbeforeunmount\",{\"1\":{\"368\":2}}],[\"onbeforeupdate\",{\"1\":{\"349\":1,\"368\":2}}],[\"onbeforemount\",{\"1\":{\"368\":2}}],[\"onbeforeleave\",{\"1\":{\"168\":2}}],[\"onbeforeenter\",{\"1\":{\"168\":2}}],[\"ontabitemtap\",{\"1\":{\"95\":1}}],[\"onthemechange\",{\"1\":{\"93\":1}}],[\"onresize\",{\"1\":{\"95\":1}}],[\"onreachbottomdistance\",{\"1\":{\"142\":1,\"146\":1}}],[\"onreachbottom\",{\"1\":{\"95\":1,\"142\":1,\"146\":1}}],[\"onready\",{\"1\":{\"95\":1,\"118\":2}}],[\"onpagescroll\",{\"1\":{\"95\":1}}],[\"onpagenotfound\",{\"1\":{\"93\":1}}],[\"onpulldownrefresh\",{\"1\":{\"95\":1,\"142\":1,\"146\":1}}],[\"online\",{\"1\":{\"220\":1}}],[\"onleavecancelled\",{\"1\":{\"168\":2}}],[\"onleave\",{\"1\":{\"168\":2}}],[\"only\",{\"1\":{\"98\":1,\"201\":1,\"268\":1}}],[\"onload\",{\"1\":{\"95\":1,\"117\":1}}],[\"onlaunch\",{\"1\":{\"93\":2}}],[\"onhide\",{\"1\":{\"93\":2,\"95\":1}}],[\"onentercancelled\",{\"1\":{\"168\":2}}],[\"onenter\",{\"1\":{\"168\":2}}],[\"onerror\",{\"1\":{\"93\":2,\"282\":1,\"559\":1}}],[\"oneplus\",{\"1\":{\"69\":1}}],[\"one\",{\"1\":{\"17\":1,\"168\":1,\"291\":1,\"391\":1}}],[\"once\",{\"1\":{\"447\":1,\"450\":1}}],[\"once用于指定元素或者组件只渲染一次\",{\"1\":{\"432\":1}}],[\"once指令\",{\"0\":{\"432\":1}}],[\"once>\",{\"1\":{\"429\":1,\"432\":3}}],[\"oncleanup\",{\"1\":{\"383\":2}}],[\"onclick=\",{\"1\":{\"398\":2,\"399\":2,\"400\":2}}],[\"onclick\",{\"1\":{\"16\":2,\"21\":2,\"38\":2,\"39\":2,\"40\":5,\"388\":2,\"389\":2,\"390\":2,\"391\":1}}],[\"oncomplete\",{\"1\":{\"171\":3,\"176\":2}}],[\"onchange\",{\"1\":{\"16\":1,\"39\":1}}],[\"just\",{\"1\":{\"563\":1}}],[\"justify\",{\"1\":{\"121\":3,\"124\":3,\"136\":2}}],[\"justifycontent\",{\"1\":{\"14\":4,\"15\":4,\"39\":2}}],[\"jolyne\",{\"1\":{\"544\":1}}],[\"johnny\",{\"1\":{\"544\":1,\"557\":2}}],[\"join\",{\"1\":{\"430\":2,\"470\":1,\"471\":1,\"472\":1}}],[\"jpe\",{\"1\":{\"224\":1,\"225\":1,\"232\":1}}],[\"jpg\",{\"1\":{\"9\":2,\"10\":1,\"23\":1}}],[\"jian\",{\"1\":{\"58\":1}}],[\"jquery开发模式\",{\"1\":{\"537\":1}}],[\"jquery\",{\"1\":{\"56\":1}}],[\"jamiebuilds\",{\"1\":{\"246\":1}}],[\"james\",{\"1\":{\"57\":1,\"176\":1,\"477\":1}}],[\"jantimon\",{\"1\":{\"237\":1}}],[\"javascript中的展开运算符\",{\"1\":{\"379\":1}}],[\"javascript风格指南的格式化规则\",{\"1\":{\"268\":1}}],[\"javascript等\",{\"1\":{\"258\":1}}],[\"javascript的打包\",{\"1\":{\"205\":1}}],[\"javascript的api\",{\"1\":{\"196\":1}}],[\"javascript\",{\"0\":{\"168\":1},\"1\":{\"55\":1,\"59\":2,\"68\":1,\"90\":1,\"92\":5,\"98\":1,\"107\":1,\"155\":2,\"168\":1,\"171\":1,\"178\":1,\"186\":1,\"197\":1,\"204\":1,\"236\":1,\"241\":5,\"243\":3,\"244\":5,\"250\":1,\"263\":1,\"288\":1,\"291\":1,\"293\":1,\"335\":1,\"393\":1,\"476\":1,\"527\":1,\"531\":1}}],[\"jack\",{\"1\":{\"38\":1}}],[\"js把store引入\",{\"1\":{\"647\":1}}],[\"js创建导出store对象\",{\"1\":{\"647\":1}}],[\"js定义getters\",{\"1\":{\"657\":1}}],[\"js定义actions\",{\"1\":{\"637\":1}}],[\"js定义mutations\",{\"1\":{\"624\":1}}],[\"js定义state\",{\"1\":{\"615\":1}}],[\"js`\",{\"1\":{\"581\":1}}],[\"js和vue\",{\"1\":{\"532\":1}}],[\"js或者vuejs\",{\"1\":{\"518\":1}}],[\"js官方提供的状态管理库\",{\"1\":{\"268\":1}}],[\"js官方提供的路由管理器\",{\"1\":{\"268\":1}}],[\"js内置的net模块提供websocket服务\",{\"1\":{\"258\":1}}],[\"js源代码\",{\"1\":{\"255\":1}}],[\"js$\",{\"1\":{\"248\":1,\"249\":1}}],[\"js修改成了\",{\"1\":{\"212\":1}}],[\"js作为入口\",{\"1\":{\"208\":1}}],[\"js的名字\",{\"1\":{\"212\":1}}],[\"js的文件\",{\"1\":{\"208\":1}}],[\"js的数据类型分为两类\",{\"1\":{\"42\":1}}],[\"js中注册\",{\"1\":{\"412\":1}}],[\"js中\",{\"1\":{\"306\":1,\"307\":1,\"322\":1,\"323\":1,\"581\":1}}],[\"js中配置插件\",{\"1\":{\"192\":1}}],[\"js中导入animate\",{\"1\":{\"170\":1}}],[\"js中的基本数据类型\",{\"1\":{\"43\":1}}],[\"js文件中写明配置信息\",{\"1\":{\"215\":1}}],[\"js文件是整个项目的一个总体配置\",{\"1\":{\"85\":1}}],[\"js文件\",{\"0\":{\"85\":1},\"1\":{\"211\":1,\"258\":1,\"610\":1}}],[\"jsdoc规则\",{\"1\":{\"59\":1}}],[\"jsdoc\",{\"1\":{\"59\":1}}],[\"jsx等语法编译\",{\"1\":{\"196\":1}}],[\"jsx\",{\"0\":{\"393\":1},\"1\":{\"59\":1,\"192\":2,\"241\":1,\"243\":4,\"244\":2,\"264\":3,\"393\":2,\"395\":1,\"396\":4,\"398\":1,\"399\":1,\"400\":1,\"429\":1}}],[\"jsxpragma\",{\"1\":{\"59\":1}}],[\"js\",{\"0\":{\"41\":1,\"45\":1,\"200\":1,\"701\":1},\"1\":{\"26\":2,\"59\":2,\"61\":1,\"65\":1,\"72\":1,\"84\":1,\"93\":3,\"94\":1,\"95\":1,\"97\":3,\"98\":8,\"102\":1,\"103\":1,\"104\":1,\"105\":1,\"109\":2,\"110\":1,\"111\":1,\"112\":1,\"119\":1,\"124\":1,\"136\":1,\"141\":1,\"168\":1,\"185\":1,\"188\":1,\"189\":1,\"190\":1,\"197\":6,\"198\":2,\"201\":1,\"206\":2,\"208\":2,\"211\":2,\"212\":3,\"213\":2,\"214\":1,\"222\":1,\"223\":1,\"228\":1,\"244\":2,\"248\":3,\"249\":4,\"250\":20,\"251\":1,\"253\":1,\"256\":2,\"259\":1,\"264\":3,\"265\":6,\"266\":2,\"267\":1,\"269\":1,\"270\":2,\"271\":1,\"272\":1,\"276\":2,\"314\":1,\"328\":2,\"331\":1,\"337\":2,\"338\":1,\"349\":1,\"395\":1,\"396\":1,\"413\":3,\"430\":2,\"432\":2,\"433\":2,\"440\":2,\"441\":2,\"443\":2,\"444\":2,\"445\":2,\"446\":2,\"448\":2,\"449\":2,\"450\":3,\"452\":2,\"453\":2,\"457\":2,\"458\":2,\"459\":2,\"463\":2,\"471\":2,\"472\":2,\"473\":4,\"474\":2,\"476\":2,\"477\":2,\"480\":3,\"483\":2,\"497\":1,\"500\":1,\"503\":4,\"504\":2,\"505\":1,\"512\":3,\"513\":2,\"524\":3,\"527\":4,\"532\":1,\"539\":4,\"540\":1,\"543\":1,\"544\":1,\"551\":2,\"555\":1,\"578\":2,\"580\":1,\"583\":2,\"585\":1,\"591\":1,\"610\":1,\"611\":2,\"612\":2,\"668\":4,\"688\":1,\"692\":1,\"694\":1}}],[\"json中的dev后加上\",{\"1\":{\"532\":1}}],[\"json中增加一个新的脚本\",{\"1\":{\"212\":1}}],[\"jsonplugin\",{\"1\":{\"198\":1}}],[\"json文件的特定字段中\",{\"1\":{\"268\":1}}],[\"json文件是小程序项目的配置文件\",{\"1\":{\"88\":1}}],[\"json文件\",{\"0\":{\"86\":1,\"88\":1},\"1\":{\"209\":1}}],[\"json\",{\"0\":{\"55\":2,\"61\":1,\"73\":1,\"89\":1},\"1\":{\"17\":1,\"55\":8,\"62\":1,\"63\":1,\"69\":1,\"72\":1,\"73\":3,\"84\":1,\"86\":3,\"113\":3,\"117\":2,\"136\":4,\"139\":4,\"141\":2,\"146\":8,\"198\":5,\"201\":1,\"209\":1,\"221\":1,\"249\":4,\"253\":1,\"254\":1,\"258\":1,\"264\":1,\"265\":1,\"268\":1,\"269\":2,\"271\":4,\"504\":6,\"505\":3,\"577\":2,\"582\":1}}],[\"json5配置文件\",{\"1\":{\"34\":1}}],[\"json5\",{\"1\":{\"10\":1,\"34\":4}}],[\"mvvm是\",{\"1\":{\"526\":1}}],[\"mvvm模型\",{\"0\":{\"526\":1}}],[\"mvc是\",{\"1\":{\"526\":1}}],[\"mvc和mvvm都是一种软件的体系结构\",{\"1\":{\"526\":1}}],[\"mm\",{\"1\":{\"413\":2,\"415\":2,\"416\":2}}],[\"md\",{\"1\":{\"269\":1,\"550\":2,\"686\":1}}],[\"mjs\",{\"1\":{\"249\":2}}],[\"ms\",{\"1\":{\"221\":1}}],[\"msg这个getter访问了自身的getter\",{\"1\":{\"583\":1}}],[\"msg=\",{\"1\":{\"195\":1,\"349\":1}}],[\"msg\",{\"1\":{\"93\":2,\"108\":2,\"349\":3,\"433\":3,\"486\":1,\"488\":1,\"583\":1}}],[\"m\",{\"1\":{\"201\":4}}],[\"mono\",{\"1\":{\"519\":1}}],[\"monorepo\",{\"1\":{\"249\":2}}],[\"monnted\",{\"1\":{\"494\":1}}],[\"movies\",{\"1\":{\"457\":2,\"459\":5}}],[\"movie\",{\"1\":{\"457\":2,\"459\":2}}],[\"move\",{\"1\":{\"174\":1,\"175\":3}}],[\"mouse\",{\"1\":{\"503\":3,\"509\":6,\"513\":1}}],[\"mousemove\",{\"1\":{\"448\":6,\"503\":5}}],[\"mousemove=\",{\"1\":{\"448\":1}}],[\"mounted\",{\"1\":{\"342\":1,\"349\":1,\"368\":2,\"407\":1,\"408\":1,\"410\":1,\"411\":2,\"412\":1,\"413\":1,\"415\":1,\"416\":1,\"493\":4,\"494\":3,\"513\":1}}],[\"mount\",{\"1\":{\"170\":1,\"197\":1,\"250\":1,\"314\":1,\"331\":1,\"337\":1,\"368\":1,\"412\":1,\"426\":1,\"430\":1,\"432\":1,\"433\":1,\"438\":1,\"440\":1,\"441\":1,\"443\":1,\"444\":1,\"445\":1,\"446\":1,\"448\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":1,\"457\":1,\"458\":1,\"459\":1,\"463\":1,\"471\":1,\"472\":1,\"473\":2,\"474\":1,\"476\":1,\"477\":1,\"480\":1,\"483\":1,\"499\":1,\"527\":2,\"540\":1,\"543\":1}}],[\"more\",{\"1\":{\"251\":1}}],[\"mozilla\",{\"1\":{\"447\":1}}],[\"moz\",{\"1\":{\"221\":1}}],[\"motion\",{\"1\":{\"168\":1}}],[\"modifiers\",{\"1\":{\"408\":2,\"483\":1}}],[\"modern\",{\"1\":{\"271\":2}}],[\"mode配置列表\",{\"0\":{\"239\":1}}],[\"mode参数指定打包的模式\",{\"1\":{\"213\":1}}],[\"mode\",{\"1\":{\"126\":1,\"132\":1,\"164\":1,\"239\":1,\"252\":1,\"265\":6,\"270\":1,\"271\":1,\"272\":2}}],[\"mode=\",{\"1\":{\"123\":1,\"164\":3,\"167\":1,\"284\":1}}],[\"model双向绑定\",{\"1\":{\"618\":1}}],[\"modelmodifiers\",{\"1\":{\"489\":8}}],[\"model等等\",{\"1\":{\"409\":1}}],[\"modelvalue\",{\"1\":{\"343\":11,\"344\":4,\"481\":2,\"489\":8}}],[\"model=\",{\"1\":{\"172\":1,\"176\":1,\"343\":3,\"359\":1,\"452\":1,\"459\":1,\"473\":1,\"476\":1,\"481\":1,\"483\":8,\"578\":3,\"618\":1,\"631\":1}}],[\"model\",{\"0\":{\"343\":1,\"344\":1,\"481\":1,\"490\":1},\"1\":{\"59\":2,\"65\":1,\"110\":7,\"111\":2,\"112\":1,\"343\":10,\"344\":5,\"481\":6,\"486\":2,\"487\":2,\"488\":2,\"489\":6,\"490\":4,\"526\":2}}],[\"modulename\",{\"1\":{\"256\":1}}],[\"modulefiletoidmap\",{\"1\":{\"197\":1}}],[\"moduleidtofilemap\",{\"1\":{\"197\":1}}],[\"modulere\",{\"1\":{\"197\":3}}],[\"module=\",{\"1\":{\"108\":1,\"109\":1}}],[\"moduleshopcar\",{\"1\":{\"678\":1}}],[\"modules里\",{\"1\":{\"670\":1}}],[\"modules定义\",{\"0\":{\"664\":1},\"1\":{\"665\":1}}],[\"modules中查找文件\",{\"1\":{\"264\":1}}],[\"modules中指定的所有目录检索模块\",{\"1\":{\"264\":1}}],[\"modules下的\",{\"1\":{\"207\":1}}],[\"modules开头就进行后续处理\",{\"1\":{\"197\":1}}],[\"modules\",{\"1\":{\"34\":1,\"59\":2,\"60\":1,\"97\":2,\"197\":10,\"248\":1,\"264\":10,\"269\":2,\"597\":1,\"599\":1,\"668\":2,\"669\":4,\"670\":1,\"678\":1}}],[\"module\",{\"0\":{\"231\":1,\"232\":1},\"1\":{\"6\":1,\"10\":2,\"34\":1,\"59\":2,\"60\":1,\"97\":4,\"108\":1,\"109\":1,\"188\":1,\"192\":1,\"197\":2,\"201\":1,\"204\":1,\"211\":1,\"214\":1,\"215\":4,\"222\":1,\"231\":2,\"234\":1,\"236\":1,\"237\":1,\"239\":1,\"244\":1,\"248\":2,\"249\":1,\"250\":1,\"251\":1,\"252\":1,\"253\":1,\"255\":1,\"256\":4,\"258\":1,\"259\":1,\"261\":1,\"262\":3,\"263\":2,\"264\":5,\"265\":2,\"270\":1,\"272\":1,\"555\":1}}],[\"misterma\",{\"1\":{\"692\":1}}],[\"mixin的合并规则\",{\"0\":{\"498\":1}}],[\"mixin提供了一种非常灵活的方式\",{\"1\":{\"496\":1}}],[\"mixins也是由一大堆的options组成的\",{\"1\":{\"521\":1}}],[\"mixins\",{\"0\":{\"495\":1},\"1\":{\"496\":2,\"497\":5,\"500\":4,\"514\":2}}],[\"mixin\",{\"0\":{\"496\":1,\"499\":1},\"1\":{\"423\":1,\"497\":6,\"499\":2,\"500\":1,\"514\":6}}],[\"mian\",{\"1\":{\"413\":1}}],[\"mitt\",{\"0\":{\"314\":1,\"331\":1}}],[\"mitt全局事件总线\",{\"1\":{\"312\":1,\"329\":1}}],[\"might\",{\"1\":{\"291\":1}}],[\"middleware\",{\"1\":{\"252\":1}}],[\"middle\",{\"1\":{\"149\":1,\"447\":1,\"450\":1}}],[\"minimize\",{\"1\":{\"265\":1}}],[\"miniapp\",{\"1\":{\"139\":1}}],[\"mini\",{\"1\":{\"128\":4}}],[\"miniprogram\",{\"1\":{\"63\":1,\"72\":2,\"81\":1,\"86\":1,\"89\":1,\"99\":1,\"113\":1,\"114\":1,\"119\":1,\"123\":2,\"124\":2,\"128\":1,\"130\":3,\"132\":2,\"133\":1,\"134\":1,\"139\":1}}],[\"mina\",{\"1\":{\"91\":3,\"95\":1,\"97\":2,\"102\":1,\"104\":3}}],[\"min\",{\"1\":{\"12\":1,\"16\":1,\"161\":1}}],[\"m1\",{\"1\":{\"108\":2,\"109\":2}}],[\"mp4|webm|ogg|mp3|wav|flac|aac\",{\"1\":{\"198\":1}}],[\"mp\",{\"1\":{\"69\":6,\"80\":1,\"529\":1}}],[\"myfooter\",{\"0\":{\"662\":1,\"698\":1}}],[\"mytext\",{\"1\":{\"489\":2}}],[\"mydirective\",{\"1\":{\"408\":1}}],[\"myhomeref\",{\"1\":{\"405\":3}}],[\"myhome\",{\"1\":{\"402\":2,\"403\":2,\"404\":2,\"405\":2}}],[\"myprop\",{\"1\":{\"306\":2,\"322\":2}}],[\"myslotcpn\",{\"1\":{\"290\":3}}],[\"myscroll\",{\"1\":{\"124\":5}}],[\"mymodule\",{\"1\":{\"250\":3}}],[\"myvalue\",{\"1\":{\"111\":4,\"112\":4}}],[\"my\",{\"1\":{\"68\":5,\"111\":1,\"112\":1,\"290\":4,\"306\":2,\"307\":2,\"322\":2,\"323\":2,\"337\":2,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"408\":3,\"430\":2,\"432\":2,\"433\":2,\"435\":1,\"437\":1,\"438\":2,\"440\":2,\"441\":2,\"443\":2,\"444\":2,\"445\":2,\"446\":2,\"448\":2,\"449\":2,\"450\":2,\"452\":2,\"453\":2,\"454\":1,\"455\":1,\"457\":2,\"458\":2,\"459\":2,\"463\":2,\"470\":1,\"471\":2,\"472\":2,\"473\":4,\"474\":2,\"476\":2,\"477\":2,\"480\":2,\"483\":2,\"547\":4,\"567\":1}}],[\"mycomponentname\",{\"1\":{\"335\":1}}],[\"mycomponent>\",{\"1\":{\"294\":2,\"295\":1}}],[\"mycomponent2\",{\"1\":{\"24\":2}}],[\"mycomponent\",{\"1\":{\"20\":3,\"22\":2,\"23\":1,\"24\":1,\"36\":2,\"264\":7,\"282\":1,\"294\":5,\"295\":3,\"307\":3,\"323\":3,\"335\":1,\"391\":1}}],[\"mutation\",{\"1\":{\"694\":2}}],[\"mutations的是state\",{\"1\":{\"638\":1}}],[\"mutations有哪2种使用方式\",{\"1\":{\"634\":1}}],[\"mutations函数上\",{\"1\":{\"633\":1}}],[\"mutations函数名\",{\"1\":{\"632\":1}}],[\"mutations函数内\",{\"1\":{\"625\":1}}],[\"mutations里方法名\",{\"1\":{\"680\":2}}],[\"mutations里同步修改state\",{\"1\":{\"638\":1}}],[\"mutations里的函数名\",{\"1\":{\"629\":2,\"680\":2}}],[\"mutations里函数作用\",{\"1\":{\"626\":1}}],[\"mutations注意事项\",{\"1\":{\"628\":1}}],[\"mutations使用方式修改\",{\"0\":{\"680\":1}}],[\"mutations使用\",{\"0\":{\"627\":1}}],[\"mutations只能写什么样的代码\",{\"1\":{\"626\":1}}],[\"mutations是唯一能修改state的地方\",{\"1\":{\"625\":1}}],[\"mutations类似数据管家\",{\"1\":{\"624\":1}}],[\"mutations定义\",{\"0\":{\"622\":1}}],[\"mutations\",{\"0\":{\"694\":1},\"1\":{\"580\":1,\"597\":1,\"599\":1,\"624\":2,\"634\":1,\"644\":1,\"651\":1,\"668\":2,\"670\":1,\"677\":1,\"678\":1,\"691\":1,\"692\":1,\"694\":8,\"695\":2}}],[\"mutating\",{\"1\":{\"59\":1}}],[\"must\",{\"1\":{\"584\":1}}],[\"mustache的基本使用\",{\"1\":{\"430\":1}}],[\"mustache的使用\",{\"1\":{\"430\":1}}],[\"mustache中不仅仅可以是data中的属性\",{\"1\":{\"430\":1}}],[\"mustache\",{\"0\":{\"430\":1},\"1\":{\"430\":1}}],[\"music\",{\"1\":{\"539\":1}}],[\"multiupdatepayload\",{\"1\":{\"201\":1}}],[\"multiple\",{\"1\":{\"59\":1,\"123\":1,\"483\":1}}],[\"multiline\",{\"1\":{\"59\":2}}],[\"multi\",{\"1\":{\"59\":2,\"201\":1}}],[\"mu\",{\"1\":{\"58\":1}}],[\"mes\",{\"1\":{\"402\":2}}],[\"message=\",{\"1\":{\"304\":1,\"305\":2,\"320\":1,\"321\":2}}],[\"messages\",{\"1\":{\"201\":1}}],[\"message\",{\"1\":{\"17\":1,\"21\":12,\"102\":2,\"108\":2,\"201\":1,\"250\":3,\"293\":3,\"304\":2,\"305\":2,\"306\":2,\"313\":3,\"314\":4,\"320\":2,\"321\":2,\"322\":2,\"330\":3,\"331\":4,\"336\":1,\"349\":2,\"350\":1,\"359\":4,\"404\":2,\"430\":5,\"432\":3,\"434\":2,\"435\":2,\"436\":1,\"441\":1,\"443\":1,\"444\":1,\"448\":1,\"449\":1,\"450\":1,\"470\":1,\"471\":2,\"472\":2,\"494\":3,\"497\":2,\"504\":1,\"527\":4,\"530\":3,\"577\":1}}],[\"method\",{\"1\":{\"584\":1}}],[\"methods=\",{\"1\":{\"577\":3}}],[\"methods属性是一个对象\",{\"1\":{\"529\":1}}],[\"methods属性\",{\"0\":{\"529\":1}}],[\"methods的getfullname中的计算\",{\"1\":{\"473\":1}}],[\"methods中方法\",{\"1\":{\"448\":1}}],[\"methods中定义方法\",{\"1\":{\"346\":1}}],[\"methods等选项了\",{\"1\":{\"338\":1}}],[\"methods对象定义了四个方法\",{\"1\":{\"174\":1}}],[\"methods\",{\"0\":{\"473\":1},\"1\":{\"112\":1,\"136\":1,\"154\":1,\"168\":2,\"171\":1,\"174\":1,\"176\":1,\"250\":1,\"310\":2,\"313\":1,\"314\":2,\"326\":2,\"330\":1,\"331\":2,\"337\":1,\"339\":1,\"342\":1,\"351\":1,\"398\":1,\"399\":1,\"430\":1,\"432\":1,\"440\":1,\"443\":1,\"448\":1,\"449\":1,\"450\":1,\"459\":1,\"463\":1,\"471\":1,\"473\":2,\"474\":1,\"476\":1,\"477\":2,\"478\":1,\"480\":1,\"483\":1,\"489\":1,\"494\":1,\"497\":2,\"498\":1,\"499\":1,\"521\":1,\"527\":2,\"629\":1,\"630\":1,\"632\":1,\"641\":1,\"642\":1,\"643\":1,\"652\":1}}],[\"meta\",{\"1\":{\"396\":1,\"561\":1,\"569\":9,\"570\":7,\"578\":1}}],[\"merge\",{\"1\":{\"265\":3}}],[\"memfs\",{\"1\":{\"254\":1}}],[\"menus\",{\"1\":{\"577\":2,\"578\":1}}],[\"menu\",{\"1\":{\"132\":1}}],[\"me\",{\"1\":{\"91\":1,\"136\":4,\"288\":3}}],[\"meizu\",{\"1\":{\"69\":1}}],[\"mediare\",{\"1\":{\"198\":3}}],[\"media\",{\"1\":{\"11\":1,\"16\":1}}],[\"master\",{\"1\":{\"686\":1}}],[\"matching\",{\"1\":{\"686\":1}}],[\"matched\",{\"1\":{\"569\":2}}],[\"math\",{\"1\":{\"174\":2,\"584\":2}}],[\"male\",{\"1\":{\"483\":3}}],[\"maybereforgetter\",{\"1\":{\"508\":3}}],[\"maybe\",{\"1\":{\"197\":1}}],[\"mapgetters\",{\"1\":{\"661\":2,\"662\":2,\"663\":1,\"682\":2,\"697\":2,\"698\":2}}],[\"mapactions\",{\"1\":{\"641\":2,\"643\":4,\"644\":1,\"652\":2,\"681\":2}}],[\"mapmutations把方法映射到组件内直接调用\",{\"1\":{\"634\":1}}],[\"mapmutations\",{\"1\":{\"629\":2,\"632\":4,\"680\":2}}],[\"mapstate可以改变映射到原地的计算属性名吗\",{\"1\":{\"653\":1}}],[\"mapstate\",{\"1\":{\"616\":2,\"619\":5,\"621\":1,\"652\":2,\"653\":1,\"673\":3,\"674\":2,\"679\":1}}],[\"map>\",{\"1\":{\"133\":1}}],[\"map\",{\"1\":{\"133\":1,\"197\":1,\"239\":2,\"265\":3,\"357\":4,\"480\":1,\"532\":1}}],[\"mande\",{\"1\":{\"584\":4}}],[\"manually\",{\"1\":{\"268\":2}}],[\"manual\",{\"1\":{\"142\":1,\"146\":1}}],[\"manifest文件\",{\"1\":{\"258\":1}}],[\"manifest\",{\"1\":{\"69\":1,\"271\":1}}],[\"management\",{\"1\":{\"35\":1}}],[\"management的缩写\",{\"1\":{\"26\":1}}],[\"manager\",{\"1\":{\"30\":1}}],[\"mac目录下回自动生成的一个文件\",{\"1\":{\"238\":1}}],[\"mac\",{\"1\":{\"68\":1}}],[\"margin\",{\"1\":{\"12\":1,\"16\":3,\"39\":2,\"40\":3,\"121\":2,\"123\":1,\"124\":4,\"136\":2,\"167\":1,\"174\":1,\"288\":1,\"480\":1,\"543\":1,\"578\":3,\"603\":1}}],[\"max=\",{\"1\":{\"280\":1}}],[\"maxsize\",{\"1\":{\"224\":1,\"232\":1}}],[\"max\",{\"1\":{\"12\":1,\"16\":1,\"59\":1,\"109\":6,\"280\":2}}],[\"main组件是banner\",{\"1\":{\"301\":1,\"317\":1}}],[\"main>\",{\"1\":{\"291\":4}}],[\"mainfields\",{\"1\":{\"264\":5}}],[\"main\",{\"1\":{\"10\":1,\"34\":5,\"197\":2,\"208\":1,\"211\":1,\"250\":2,\"251\":1,\"264\":4,\"270\":2,\"291\":1,\"300\":1,\"301\":1,\"314\":1,\"316\":1,\"317\":1,\"331\":1,\"412\":1,\"571\":3,\"577\":4,\"578\":10,\"584\":1,\"611\":1,\"612\":1,\"647\":1,\"694\":3}}],[\"i>\",{\"1\":{\"290\":3}}],[\"ico\",{\"1\":{\"236\":1,\"269\":1}}],[\"iconpath\",{\"1\":{\"136\":5,\"143\":4}}],[\"icon的颜色\",{\"1\":{\"125\":1}}],[\"icon的大小\",{\"1\":{\"125\":1}}],[\"icon的类型\",{\"1\":{\"125\":1}}],[\"icon>\",{\"1\":{\"125\":3}}],[\"icon组件就是在页面可以显示一个图标\",{\"1\":{\"125\":1}}],[\"icon\",{\"0\":{\"125\":1},\"1\":{\"11\":1,\"16\":1,\"143\":10,\"236\":1}}],[\"ie=edge\",{\"1\":{\"236\":1,\"480\":1}}],[\"iphone\",{\"1\":{\"583\":1}}],[\"iphone5\",{\"1\":{\"148\":1}}],[\"iphone6\",{\"1\":{\"148\":4}}],[\"ipad\",{\"1\":{\"139\":1}}],[\"ignoredeprecations\",{\"1\":{\"63\":1}}],[\"ignore\",{\"1\":{\"59\":4,\"238\":1,\"578\":2}}],[\"ios\",{\"1\":{\"77\":1,\"142\":3,\"146\":4,\"537\":1}}],[\"io\",{\"1\":{\"59\":1,\"241\":1}}],[\"i\",{\"1\":{\"53\":8,\"57\":1,\"59\":1,\"72\":1,\"93\":2,\"109\":5,\"198\":1}}],[\"id`\",{\"1\":{\"563\":1}}],[\"id=\",{\"1\":{\"124\":6,\"151\":1,\"236\":1,\"300\":1,\"307\":1,\"316\":1,\"323\":1,\"337\":3,\"393\":1,\"420\":1,\"421\":1,\"430\":1,\"432\":2,\"433\":1,\"435\":1,\"437\":1,\"438\":1,\"440\":2,\"441\":2,\"443\":2,\"444\":2,\"445\":2,\"446\":2,\"448\":2,\"449\":2,\"450\":2,\"452\":1,\"453\":2,\"454\":1,\"455\":1,\"457\":2,\"458\":2,\"459\":2,\"463\":2,\"470\":1,\"471\":1,\"472\":1,\"473\":3,\"474\":1,\"476\":2,\"477\":2,\"480\":2,\"483\":9,\"527\":4,\"540\":1,\"557\":1,\"603\":1}}],[\"ide\",{\"1\":{\"70\":1,\"401\":1,\"531\":1}}],[\"id++\",{\"1\":{\"39\":1}}],[\"id\",{\"1\":{\"39\":1,\"151\":1,\"197\":9,\"201\":1,\"291\":1,\"307\":1,\"323\":1,\"349\":1,\"383\":1,\"391\":2,\"480\":4,\"483\":1,\"505\":2,\"544\":4,\"557\":8,\"561\":2,\"569\":1,\"583\":1}}],[\"it\",{\"1\":{\"27\":1,\"98\":2,\"123\":4,\"236\":1,\"251\":1}}],[\"item是我们给每项元素起的一个别名\",{\"1\":{\"457\":1}}],[\"itemclick\",{\"1\":{\"275\":1}}],[\"item>item3<\",{\"1\":{\"123\":1}}],[\"item>item2<\",{\"1\":{\"123\":1}}],[\"item>item1<\",{\"1\":{\"123\":1}}],[\"item>\",{\"1\":{\"123\":4,\"578\":4}}],[\"item组件中就可以随便放其它组件及内容了\",{\"1\":{\"123\":1}}],[\"item组件\",{\"1\":{\"123\":2}}],[\"item`\",{\"1\":{\"40\":1}}],[\"items\",{\"1\":{\"17\":2,\"40\":5,\"121\":3,\"123\":1,\"124\":3,\"136\":2,\"582\":1}}],[\"item\",{\"1\":{\"17\":26,\"18\":4,\"39\":6,\"40\":8,\"95\":4,\"103\":1,\"121\":11,\"123\":2,\"124\":8,\"136\":11,\"137\":1,\"174\":5,\"176\":5,\"275\":5,\"457\":2,\"459\":2,\"463\":3,\"480\":3,\"578\":2}}],[\"itemgenerator\",{\"1\":{\"17\":1}}],[\"isloggedin\",{\"1\":{\"569\":1}}],[\"islogin\",{\"1\":{\"567\":2}}],[\"isadmin\",{\"1\":{\"583\":2}}],[\"isadult\",{\"1\":{\"583\":5}}],[\"isauthenticated\",{\"1\":{\"559\":3,\"584\":1}}],[\"isagree\",{\"1\":{\"483\":3}}],[\"isactive\",{\"1\":{\"440\":6,\"441\":3}}],[\"isref\",{\"1\":{\"358\":5}}],[\"isreadonly\",{\"1\":{\"354\":3}}],[\"isreactive\",{\"1\":{\"354\":3}}],[\"isproxy\",{\"1\":{\"354\":3}}],[\"isdev\",{\"1\":{\"265\":4}}],[\"isimportrequest\",{\"1\":{\"198\":2}}],[\"isstaticasset\",{\"1\":{\"198\":2}}],[\"isshowha\",{\"1\":{\"453\":4}}],[\"isshow\",{\"1\":{\"167\":4,\"168\":4,\"170\":1,\"171\":4,\"430\":5,\"454\":1,\"455\":2}}],[\"is=\",{\"1\":{\"105\":3,\"164\":1,\"167\":1,\"276\":1,\"277\":1,\"278\":1,\"279\":3,\"280\":1,\"284\":1,\"328\":1,\"570\":4}}],[\"is\",{\"1\":{\"91\":3,\"95\":2,\"160\":1,\"201\":3,\"237\":1,\"250\":1,\"251\":1,\"276\":1,\"295\":1,\"328\":1,\"347\":1,\"493\":1,\"503\":2,\"509\":1}}],[\"isnan\",{\"1\":{\"59\":2}}],[\"is的配置之后再重试\",{\"1\":{\"27\":1}}],[\"is配置异常导致的\",{\"1\":{\"27\":1}}],[\"is做了一些特殊的options配置\",{\"1\":{\"26\":1}}],[\"is和hpm位置\",{\"1\":{\"26\":1}}],[\"if当条件为false时\",{\"1\":{\"455\":1}}],[\"if上使用\",{\"1\":{\"453\":1}}],[\"if是一个指令\",{\"1\":{\"453\":1}}],[\"if是惰性的\",{\"1\":{\"453\":1}}],[\"if的区别\",{\"0\":{\"455\":1}}],[\"if的用法看起来是一致的\",{\"1\":{\"454\":1}}],[\"if的渲染原理\",{\"1\":{\"453\":1}}],[\"if的判断实现\",{\"1\":{\"275\":1}}],[\"if类似\",{\"1\":{\"452\":1}}],[\"if用于根据条件来渲染某一块的内容\",{\"1\":{\"452\":1}}],[\"if显示不同的组件\",{\"0\":{\"275\":1}}],[\"if来判断\",{\"1\":{\"274\":1}}],[\"if=\",{\"1\":{\"104\":1,\"117\":1,\"118\":1,\"136\":1,\"154\":1,\"155\":1,\"159\":1,\"160\":1,\"161\":1,\"163\":1,\"166\":3,\"168\":1,\"170\":1,\"171\":1,\"275\":2,\"284\":1,\"452\":2,\"453\":1,\"455\":1,\"480\":1,\"504\":2}}],[\"if\",{\"0\":{\"453\":1},\"1\":{\"16\":2,\"17\":1,\"47\":2,\"53\":2,\"59\":6,\"65\":1,\"98\":1,\"136\":2,\"137\":2,\"155\":1,\"166\":3,\"197\":2,\"198\":3,\"201\":8,\"256\":1,\"262\":1,\"311\":1,\"314\":2,\"327\":1,\"331\":2,\"375\":1,\"413\":2,\"430\":1,\"451\":2,\"452\":1,\"455\":1,\"458\":1,\"487\":1,\"489\":1,\"559\":4,\"560\":1,\"561\":2,\"563\":1,\"567\":1,\"568\":1,\"569\":1,\"571\":3,\"577\":2,\"578\":1,\"584\":1,\"657\":2,\"668\":2,\"696\":2}}],[\"improve\",{\"1\":{\"573\":1}}],[\"importquery\",{\"1\":{\"201\":2}}],[\"imports\",{\"1\":{\"198\":1}}],[\"importer\",{\"1\":{\"197\":2,\"201\":1}}],[\"importerfilepath\",{\"1\":{\"197\":2}}],[\"import后跟需要导入的外联样式表的相对路径\",{\"1\":{\"149\":1}}],[\"import语句可以导入外联样式表\",{\"1\":{\"149\":1}}],[\"import\",{\"1\":{\"21\":1,\"57\":1,\"59\":1,\"149\":1,\"161\":1,\"167\":2,\"170\":3,\"171\":1,\"172\":1,\"174\":1,\"176\":1,\"189\":2,\"190\":2,\"195\":2,\"197\":6,\"201\":5,\"215\":1,\"250\":4,\"264\":4,\"276\":3,\"282\":6,\"288\":1,\"290\":1,\"291\":1,\"294\":1,\"295\":1,\"300\":5,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"310\":1,\"313\":3,\"314\":1,\"316\":5,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"326\":1,\"328\":3,\"330\":3,\"331\":1,\"338\":1,\"342\":2,\"347\":1,\"349\":3,\"350\":2,\"353\":1,\"354\":2,\"356\":1,\"358\":1,\"359\":2,\"361\":1,\"363\":1,\"366\":1,\"367\":1,\"368\":1,\"370\":1,\"371\":2,\"374\":1,\"375\":1,\"376\":1,\"377\":2,\"379\":2,\"380\":1,\"384\":3,\"388\":1,\"389\":1,\"390\":1,\"391\":2,\"392\":3,\"396\":5,\"398\":1,\"400\":1,\"402\":3,\"403\":1,\"404\":1,\"405\":2,\"410\":1,\"412\":2,\"413\":3,\"415\":2,\"416\":2,\"426\":3,\"497\":1,\"500\":2,\"503\":6,\"504\":3,\"505\":1,\"508\":1,\"512\":3,\"513\":2,\"540\":1,\"543\":4,\"544\":2,\"546\":2,\"547\":5,\"548\":1,\"551\":3,\"577\":2,\"578\":12,\"581\":5,\"582\":1,\"583\":2,\"584\":2,\"585\":6,\"603\":2,\"611\":5,\"616\":1,\"619\":1,\"629\":1,\"632\":1,\"641\":1,\"643\":1,\"652\":1,\"661\":1,\"662\":1,\"668\":1,\"669\":4,\"691\":3,\"692\":1,\"693\":2,\"694\":4,\"697\":1,\"698\":1}}],[\"ime\",{\"1\":{\"486\":1}}],[\"immediate\",{\"1\":{\"381\":3,\"477\":2,\"478\":1,\"479\":2}}],[\"imgurl\",{\"1\":{\"437\":3,\"438\":4}}],[\"img2\",{\"1\":{\"123\":2}}],[\"img1\",{\"1\":{\"123\":2}}],[\"img\",{\"1\":{\"96\":1,\"119\":1,\"123\":1,\"142\":1,\"143\":1,\"195\":1,\"197\":2,\"199\":1,\"207\":1,\"213\":1,\"224\":1,\"225\":2,\"229\":1,\"230\":2,\"232\":1,\"350\":1,\"367\":1,\"374\":1,\"375\":1,\"384\":1,\"395\":1}}],[\"imgwidth\",{\"1\":{\"16\":9}}],[\"imagere\",{\"1\":{\"198\":3}}],[\"images\",{\"1\":{\"136\":9}}],[\"image>\",{\"1\":{\"136\":2}}],[\"image等标签出现诸如\",{\"1\":{\"63\":1}}],[\"imageinterpolation\",{\"1\":{\"16\":1}}],[\"image\",{\"0\":{\"9\":1,\"132\":1},\"1\":{\"9\":2,\"10\":2,\"11\":2,\"16\":1,\"17\":6,\"23\":3,\"26\":4,\"27\":3,\"28\":1,\"29\":1,\"30\":11,\"81\":1,\"82\":2,\"83\":1,\"119\":1,\"121\":1,\"126\":1,\"128\":1,\"132\":3,\"135\":1,\"136\":3,\"143\":1,\"146\":1,\"182\":2,\"204\":1,\"209\":1,\"225\":1,\"233\":1,\"247\":2,\"248\":1,\"251\":1,\"254\":1,\"256\":1,\"258\":1,\"265\":1,\"268\":3,\"288\":1,\"290\":1,\"291\":1,\"292\":1,\"294\":1,\"301\":1,\"313\":1,\"317\":1,\"330\":1,\"334\":1,\"346\":1,\"363\":1,\"368\":1,\"371\":1,\"377\":1,\"379\":2,\"392\":1,\"415\":1,\"416\":1,\"419\":2,\"420\":2,\"421\":2,\"428\":1,\"433\":1,\"449\":1,\"450\":1,\"455\":1,\"461\":1,\"462\":1,\"464\":8,\"483\":1,\"544\":1,\"547\":1,\"689\":1}}],[\"input>\",{\"1\":{\"578\":1}}],[\"inputref\",{\"1\":{\"410\":3}}],[\"input\",{\"1\":{\"343\":1,\"410\":1,\"481\":1,\"486\":2,\"489\":1,\"578\":2}}],[\"input=\",{\"1\":{\"343\":2,\"344\":2,\"481\":1,\"489\":2,\"490\":2}}],[\"inputtype\",{\"1\":{\"16\":1}}],[\"inheritattrs\",{\"1\":{\"308\":1,\"324\":1}}],[\"infinity\",{\"1\":{\"282\":1}}],[\"info对象会被拆解成div的各个属性\",{\"1\":{\"446\":1}}],[\"info对象是不允许被修改的\",{\"1\":{\"361\":1}}],[\"info<\",{\"1\":{\"291\":1}}],[\"info\",{\"1\":{\"23\":3,\"49\":3,\"57\":3,\"125\":1,\"126\":2,\"145\":1,\"305\":1,\"321\":1,\"361\":1,\"363\":4,\"364\":1,\"379\":9,\"380\":5,\"381\":2,\"446\":3,\"457\":2,\"458\":2,\"477\":8,\"479\":1,\"561\":1,\"583\":1}}],[\"inject可以传入两个参数\",{\"1\":{\"384\":1}}],[\"inject用于非父子组件之间共享数据\",{\"1\":{\"313\":1,\"330\":1}}],[\"inject\",{\"0\":{\"313\":1,\"330\":1,\"384\":1},\"1\":{\"312\":1,\"313\":4,\"329\":1,\"330\":4,\"347\":1,\"384\":3}}],[\"injected\",{\"1\":{\"236\":1}}],[\"injectscripttohtml\",{\"1\":{\"201\":1}}],[\"innerhtml\",{\"1\":{\"391\":1,\"494\":2}}],[\"inner\",{\"1\":{\"163\":6}}],[\"intro\",{\"1\":{\"151\":2,\"483\":6}}],[\"interface\",{\"1\":{\"179\":1,\"282\":1,\"497\":1}}],[\"interference\",{\"1\":{\"98\":1}}],[\"interval\",{\"1\":{\"123\":1}}],[\"interpolation\",{\"1\":{\"16\":1}}],[\"internet\",{\"1\":{\"10\":2}}],[\"inline\",{\"1\":{\"124\":2,\"167\":1,\"168\":1,\"171\":1,\"174\":1,\"231\":1,\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1,\"447\":1,\"448\":1,\"578\":1}}],[\"indicator\",{\"1\":{\"123\":4}}],[\"indent\",{\"1\":{\"59\":1}}],[\"index+1\",{\"1\":{\"457\":1,\"459\":1}}],[\"indexof\",{\"1\":{\"176\":1,\"306\":1,\"322\":1}}],[\"index=\",{\"1\":{\"136\":1,\"176\":1}}],[\"index\",{\"1\":{\"16\":1,\"17\":4,\"39\":4,\"40\":1,\"95\":2,\"123\":1,\"130\":2,\"136\":18,\"141\":2,\"143\":3,\"176\":4,\"197\":2,\"201\":1,\"208\":2,\"236\":2,\"238\":2,\"248\":1,\"263\":3,\"265\":1,\"413\":1,\"457\":7,\"459\":1,\"480\":13,\"543\":1,\"551\":2,\"577\":1,\"585\":1,\"610\":2,\"611\":1,\"612\":1,\"615\":1,\"624\":1,\"637\":1,\"647\":1,\"657\":1,\"692\":1,\"694\":1}}],[\"increment\",{\"1\":{\"347\":2,\"350\":8,\"353\":3,\"356\":3,\"363\":3,\"389\":2,\"390\":2,\"398\":2,\"399\":2,\"400\":2,\"432\":4,\"480\":2,\"527\":4,\"581\":4,\"584\":1,\"691\":1}}],[\"increaseby\",{\"1\":{\"36\":2}}],[\"include=\",{\"1\":{\"279\":3}}],[\"includes\",{\"1\":{\"201\":2,\"568\":1}}],[\"include\",{\"1\":{\"63\":1,\"72\":1,\"279\":1}}],[\"initialrenderingcache\",{\"1\":{\"117\":3,\"118\":2,\"142\":1,\"146\":1}}],[\"initial\",{\"1\":{\"93\":1,\"236\":1,\"480\":1,\"505\":1}}],[\"initialindex\",{\"1\":{\"18\":1}}],[\"init\",{\"1\":{\"59\":1,\"209\":1,\"577\":1}}],[\"in\",{\"1\":{\"47\":1,\"53\":1,\"59\":2,\"98\":3,\"110\":1,\"160\":3,\"163\":1,\"164\":3,\"167\":1,\"174\":1,\"175\":1,\"176\":1,\"201\":1,\"250\":1,\"251\":1,\"268\":2,\"275\":1,\"276\":1,\"284\":1,\"328\":1,\"437\":1,\"457\":8,\"458\":1,\"459\":1,\"460\":1,\"463\":1,\"480\":1}}],[\"inspect\",{\"0\":{\"272\":1},\"1\":{\"272\":4}}],[\"ins\",{\"1\":{\"155\":1,\"278\":1,\"283\":1,\"284\":1}}],[\"instant\",{\"1\":{\"179\":1}}],[\"instance\",{\"1\":{\"98\":1,\"342\":2,\"408\":1,\"479\":1}}],[\"instanceof\",{\"1\":{\"47\":1,\"53\":1,\"54\":1}}],[\"installdirectives\",{\"1\":{\"426\":3}}],[\"installation\",{\"1\":{\"171\":1}}],[\"install\",{\"1\":{\"60\":1,\"62\":1,\"67\":1,\"68\":1,\"170\":1,\"171\":1,\"185\":2,\"186\":2,\"188\":2,\"192\":1,\"209\":1,\"215\":2,\"216\":1,\"217\":2,\"218\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"234\":1,\"235\":1,\"238\":1,\"242\":1,\"243\":2,\"244\":1,\"248\":1,\"250\":3,\"254\":1,\"267\":1,\"395\":1,\"396\":1,\"423\":1,\"424\":2,\"532\":2,\"543\":1,\"581\":1,\"691\":1}}],[\"insertf\",{\"1\":{\"463\":2}}],[\"insertpragma\",{\"1\":{\"59\":1,\"60\":1}}],[\"inset\",{\"1\":{\"12\":1,\"16\":1,\"136\":1}}],[\"从父字段到子字段\",{\"1\":{\"569\":1}}],[\"从父组件初始化\",{\"1\":{\"36\":2}}],[\"从哪里跳转的路由\",{\"1\":{\"567\":1}}],[\"从一个不同的\",{\"1\":{\"561\":1}}],[\"从一种源代码\",{\"1\":{\"246\":1}}],[\"从自动\",{\"1\":{\"550\":1}}],[\"从组合式函数返回一个响应式对象会导致在对象解构过程中丢失与组合式函数内状态的响应性连接\",{\"1\":{\"509\":1}}],[\"从实现角度来看\",{\"1\":{\"500\":1}}],[\"从服务器获取组件\",{\"1\":{\"282\":1}}],[\"从vue2开发就一直在使用的vscode支持vue的插件\",{\"1\":{\"531\":1}}],[\"从vue中导入ref\",{\"1\":{\"356\":1,\"363\":1}}],[\"从vue中导入reactive\",{\"1\":{\"353\":1}}],[\"从vue\",{\"1\":{\"251\":1}}],[\"从入口开始\",{\"1\":{\"213\":1}}],[\"从入口开始需要逐步经历语法解析\",{\"1\":{\"182\":1}}],[\"从原理上说\",{\"1\":{\"118\":1}}],[\"从小程序基础库版本\",{\"1\":{\"113\":2}}],[\"从语法上看\",{\"1\":{\"107\":1}}],[\"从而忽略了任何过渡\",{\"1\":{\"570\":1}}],[\"从而让整个应用都有路由功能\",{\"1\":{\"540\":1}}],[\"从而实现跨组件的事件通信\",{\"1\":{\"314\":1,\"331\":1}}],[\"从而实现模块的热替换\",{\"1\":{\"258\":1}}],[\"从而保证前端路由跳转的正常运行\",{\"1\":{\"263\":1}}],[\"从而提高开发效率\",{\"1\":{\"258\":1}}],[\"从而提供了更加灵活和高效的开发方式\",{\"1\":{\"33\":1}}],[\"从而有效地减少最终打包文件的大小\",{\"1\":{\"251\":1}}],[\"从而创建一个带渐进延迟的动画序列\",{\"1\":{\"163\":1}}],[\"从而视图层会自动改变为\",{\"1\":{\"91\":1}}],[\"从\",{\"1\":{\"91\":1,\"561\":1}}],[\"从上文的示例中\",{\"1\":{\"22\":1}}],[\"从api\",{\"1\":{\"20\":2}}],[\"从本地加载\",{\"0\":{\"11\":1}}],[\"从网络加载图片\",{\"0\":{\"10\":1}}],[\"从数据的传递形式来看\",{\"1\":{\"1\":1}}],[\"python\",{\"0\":{\"577\":1}}],[\"ps\",{\"1\":{\"353\":1,\"364\":1,\"405\":1,\"409\":1}}],[\"pwa是一种使用现代web技术构建的应用程序\",{\"1\":{\"268\":1}}],[\"pwa\",{\"1\":{\"268\":1}}],[\"p但是实现这些功能\",{\"1\":{\"219\":1}}],[\"p>\",{\"1\":{\"155\":1,\"159\":1,\"160\":1,\"161\":1,\"291\":3,\"295\":1,\"308\":1,\"313\":1,\"324\":1,\"330\":1,\"337\":1,\"339\":1,\"476\":2,\"530\":2,\"540\":1,\"547\":3,\"604\":1,\"605\":1,\"617\":1,\"619\":1,\"694\":2}}],[\"pc\",{\"1\":{\"139\":1}}],[\"popstate\",{\"1\":{\"571\":1}}],[\"pop\",{\"1\":{\"459\":1}}],[\"popular\",{\"1\":{\"59\":1}}],[\"port=5000\",{\"1\":{\"577\":1}}],[\"port设置监听的端口\",{\"1\":{\"261\":1}}],[\"port\",{\"0\":{\"261\":1},\"1\":{\"259\":1,\"261\":1,\"263\":1,\"265\":1,\"270\":2}}],[\"portrait\",{\"1\":{\"142\":2,\"146\":2}}],[\"postid\",{\"1\":{\"544\":4}}],[\"post\",{\"1\":{\"377\":2,\"544\":1,\"577\":1,\"578\":1,\"584\":1}}],[\"postsdetail\",{\"1\":{\"569\":1}}],[\"postsnew\",{\"1\":{\"569\":1}}],[\"postslayout\",{\"1\":{\"569\":1}}],[\"posts\",{\"1\":{\"276\":4,\"328\":4,\"505\":1,\"544\":7,\"557\":4,\"569\":3}}],[\"postcssoptions\",{\"1\":{\"222\":1}}],[\"postcss通常用于对css文件进行预处理和后处理\",{\"1\":{\"220\":1}}],[\"postcss是一个通过javascript来转换样式的工具\",{\"1\":{\"219\":1}}],[\"postcsspresetenv\",{\"1\":{\"188\":2}}],[\"postcss\",{\"0\":{\"219\":1,\"222\":1,\"223\":1},\"1\":{\"188\":5,\"220\":4,\"221\":1,\"222\":6,\"223\":11}}],[\"position\",{\"1\":{\"121\":6,\"124\":6,\"136\":1,\"137\":2,\"143\":3,\"164\":1,\"174\":1,\"503\":2,\"509\":1}}],[\"pointer\",{\"1\":{\"137\":2,\"288\":1}}],[\"px换算rpx\",{\"1\":{\"148\":1}}],[\"px\",{\"1\":{\"87\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"142\":1,\"443\":1}}],[\"publish\",{\"1\":{\"136\":6}}],[\"public\",{\"1\":{\"60\":1,\"236\":2,\"238\":1,\"256\":1,\"259\":1,\"265\":1,\"269\":1}}],[\"pushstate\",{\"1\":{\"571\":1}}],[\"push`\",{\"1\":{\"40\":1}}],[\"push\",{\"1\":{\"39\":1,\"40\":3,\"174\":1,\"313\":1,\"314\":1,\"330\":1,\"331\":1,\"459\":2,\"546\":2,\"548\":1,\"550\":14,\"551\":4,\"553\":3,\"559\":1,\"573\":1,\"578\":2,\"582\":1}}],[\"please\",{\"1\":{\"236\":1}}],[\"plus\",{\"1\":{\"148\":1,\"249\":1,\"288\":1}}],[\"plugin可以用于执行更加广泛的任务\",{\"1\":{\"233\":1}}],[\"plugin提取css文件\",{\"1\":{\"213\":1}}],[\"plugin生成html文件\",{\"1\":{\"213\":1}}],[\"plugin生态\",{\"1\":{\"183\":1}}],[\"pluginoptions\",{\"1\":{\"188\":1}}],[\"plugin等进行诸多配置\",{\"1\":{\"183\":1}}],[\"plugins=\",{\"1\":{\"243\":1}}],[\"plugins\",{\"1\":{\"59\":1,\"139\":1,\"190\":1,\"192\":1,\"222\":2,\"234\":1,\"236\":1,\"237\":1,\"251\":2,\"272\":1,\"396\":1,\"423\":2}}],[\"plugin\",{\"0\":{\"233\":1},\"1\":{\"59\":4,\"60\":1,\"179\":1,\"186\":1,\"188\":1,\"190\":1,\"192\":5,\"197\":1,\"234\":2,\"235\":1,\"236\":1,\"237\":1,\"238\":2,\"243\":11,\"251\":1,\"267\":3,\"395\":1,\"396\":3}}],[\"plan\",{\"1\":{\"550\":1}}],[\"plan=private\",{\"1\":{\"550\":1}}],[\"placing\",{\"1\":{\"268\":1}}],[\"placeholder=\",{\"1\":{\"578\":2}}],[\"placeholders\",{\"1\":{\"228\":1}}],[\"placeholder\",{\"1\":{\"16\":1}}],[\"platform\",{\"1\":{\"69\":2}}],[\"p\",{\"1\":{\"38\":9,\"68\":2,\"149\":2,\"174\":1,\"447\":1,\"530\":1}}],[\"percent=\",{\"1\":{\"126\":4}}],[\"percent\",{\"1\":{\"126\":1}}],[\"person1\",{\"1\":{\"47\":4}}],[\"person\",{\"1\":{\"38\":6,\"47\":3}}],[\"permission\",{\"1\":{\"10\":2,\"139\":1}}],[\"piniastate\",{\"1\":{\"582\":1}}],[\"pinia\",{\"0\":{\"579\":1,\"580\":1},\"1\":{\"580\":4,\"581\":5,\"582\":3,\"583\":1,\"585\":3,\"686\":1}}],[\"pink\",{\"1\":{\"22\":1,\"121\":1,\"126\":1,\"419\":1,\"420\":1,\"421\":1}}],[\"pick\",{\"1\":{\"268\":2}}],[\"pixel\",{\"1\":{\"148\":1}}],[\"pixelmap\",{\"1\":{\"9\":1}}],[\"pig\",{\"1\":{\"51\":2}}],[\"pre>\",{\"1\":{\"435\":1,\"504\":1}}],[\"pre用于跳过元素和它的子元素的编译过程\",{\"1\":{\"435\":1}}],[\"preventdefault\",{\"1\":{\"447\":1,\"450\":1}}],[\"prevent\",{\"1\":{\"447\":1,\"450\":1}}],[\"prevention\",{\"1\":{\"268\":1}}],[\"prevnode\",{\"1\":{\"408\":1,\"411\":1,\"412\":1}}],[\"prevvnode\",{\"1\":{\"408\":7}}],[\"prevbar\",{\"1\":{\"380\":1}}],[\"prevfoo\",{\"1\":{\"380\":1}}],[\"previous\",{\"1\":{\"123\":1}}],[\"preview版本引入了stage模型\",{\"1\":{\"33\":1}}],[\"preprocessoroptions\",{\"1\":{\"189\":1}}],[\"preact\",{\"1\":{\"186\":1}}],[\"preloadrule\",{\"1\":{\"139\":1}}],[\"present\",{\"1\":{\"250\":1}}],[\"presets=\",{\"1\":{\"244\":1}}],[\"presets\",{\"1\":{\"244\":1,\"248\":2,\"249\":1}}],[\"preset\",{\"0\":{\"223\":1,\"244\":1},\"1\":{\"68\":5,\"188\":2,\"222\":1,\"223\":7,\"244\":8,\"248\":4,\"249\":2,\"268\":1}}],[\"preserve\",{\"1\":{\"59\":3,\"60\":3}}],[\"pre\",{\"0\":{\"435\":1},\"1\":{\"62\":1,\"268\":1,\"377\":1}}],[\"preferences\",{\"1\":{\"584\":2}}],[\"preferconst\",{\"1\":{\"198\":1}}],[\"prefer\",{\"1\":{\"59\":1,\"268\":1}}],[\"prettierignore忽略文件\",{\"1\":{\"60\":1}}],[\"prettier\",{\"0\":{\"60\":1},\"1\":{\"59\":5,\"60\":6,\"61\":3,\"62\":1,\"268\":1}}],[\"pro\",{\"1\":{\"583\":1}}],[\"provide可以传入两个参数\",{\"1\":{\"384\":1}}],[\"provide\",{\"0\":{\"313\":1,\"330\":1,\"384\":1},\"1\":{\"312\":1,\"313\":6,\"329\":1,\"330\":6,\"347\":1,\"384\":3}}],[\"provided\",{\"1\":{\"250\":1}}],[\"proxy对象\",{\"1\":{\"371\":1}}],[\"proxyoptions\",{\"1\":{\"262\":1}}],[\"proxy选项可以是一个对象\",{\"1\":{\"262\":1}}],[\"proxy是我们开发中非常常用的一个配置选项\",{\"1\":{\"262\":1}}],[\"proxy\",{\"0\":{\"262\":1},\"1\":{\"259\":2,\"262\":4,\"263\":1,\"265\":1,\"354\":2,\"403\":1,\"477\":1,\"520\":1}}],[\"productlist组件的父组件\",{\"1\":{\"301\":1,\"317\":1}}],[\"productlist组件\",{\"1\":{\"300\":1,\"316\":1}}],[\"product\",{\"1\":{\"300\":2,\"316\":2}}],[\"productiontip\",{\"1\":{\"611\":1}}],[\"production\",{\"1\":{\"59\":2,\"239\":1,\"271\":1,\"272\":1}}],[\"prod\",{\"1\":{\"250\":3,\"251\":2,\"265\":1}}],[\"proceed\",{\"1\":{\"186\":1}}],[\"processors\",{\"1\":{\"268\":1}}],[\"process\",{\"1\":{\"59\":2}}],[\"promise<component>\",{\"1\":{\"282\":1}}],[\"promise\",{\"1\":{\"93\":1,\"282\":5,\"559\":1,\"571\":2}}],[\"prosewrap\",{\"1\":{\"59\":1,\"60\":1}}],[\"prototype\",{\"1\":{\"59\":1}}],[\"problems\",{\"1\":{\"59\":1}}],[\"progressive\",{\"1\":{\"268\":1}}],[\"progresstype\",{\"1\":{\"39\":1}}],[\"progress\",{\"0\":{\"126\":1},\"1\":{\"39\":1}}],[\"profile\",{\"1\":{\"34\":2,\"557\":4}}],[\"projects\",{\"1\":{\"268\":1,\"561\":1}}],[\"project\",{\"0\":{\"88\":1},\"1\":{\"29\":1,\"59\":4,\"68\":5,\"88\":1,\"186\":2}}],[\"prop=\",{\"1\":{\"306\":1,\"322\":1,\"391\":1}}],[\"prop来引用它\",{\"1\":{\"306\":1,\"322\":1}}],[\"propg\",{\"1\":{\"306\":1,\"322\":1}}],[\"propf\",{\"1\":{\"306\":1,\"322\":1}}],[\"prope\",{\"1\":{\"306\":1,\"322\":1}}],[\"property\",{\"1\":{\"313\":2,\"330\":2,\"354\":2,\"391\":1,\"437\":4,\"442\":2}}],[\"properties\",{\"1\":{\"111\":1,\"112\":1}}],[\"proper\",{\"1\":{\"251\":1}}],[\"properly\",{\"1\":{\"236\":1}}],[\"propd\",{\"1\":{\"306\":1,\"322\":1}}],[\"propc\",{\"1\":{\"306\":1,\"322\":1}}],[\"propb\",{\"1\":{\"306\":1,\"322\":1}}],[\"propa\",{\"1\":{\"306\":1,\"322\":1}}],[\"propagation\",{\"1\":{\"121\":1}}],[\"prop的改变\",{\"1\":{\"59\":1}}],[\"props可以使用两种方式来定义\",{\"1\":{\"303\":1,\"319\":1}}],[\"props是一种用于向组件传递数据的机制\",{\"1\":{\"302\":1,\"318\":1}}],[\"props\",{\"0\":{\"303\":1,\"319\":1},\"1\":{\"59\":4,\"161\":1,\"277\":1,\"282\":1,\"294\":7,\"295\":1,\"302\":1,\"304\":1,\"305\":1,\"306\":2,\"313\":1,\"314\":1,\"318\":1,\"320\":1,\"321\":1,\"322\":2,\"330\":1,\"331\":1,\"343\":2,\"344\":2,\"349\":26,\"350\":2,\"386\":2,\"392\":2,\"403\":2,\"437\":2,\"489\":2,\"490\":1,\"500\":2,\"505\":2,\"521\":1,\"590\":1}}],[\"prop装饰的变量\",{\"1\":{\"40\":1}}],[\"prop装饰的变量是可变的\",{\"1\":{\"40\":1}}],[\"prop装饰的变量可以和父组件建立单向的同步关系\",{\"1\":{\"40\":1}}],[\"prop装饰变量之间建立单向数据同步\",{\"1\":{\"38\":1}}],[\"prop\",{\"0\":{\"40\":1,\"307\":1,\"323\":1},\"1\":{\"17\":1,\"40\":3,\"158\":1,\"163\":1,\"164\":1,\"165\":1,\"168\":1,\"171\":1,\"175\":1,\"279\":2,\"280\":1,\"283\":1,\"306\":3,\"322\":3,\"343\":2,\"344\":1,\"349\":1,\"386\":2,\"391\":4,\"401\":1,\"437\":5,\"481\":1,\"489\":4,\"490\":1}}],[\"primary\",{\"1\":{\"128\":2,\"578\":1}}],[\"printwidth\",{\"1\":{\"59\":1,\"60\":1}}],[\"print\",{\"1\":{\"23\":1}}],[\"private\",{\"1\":{\"17\":1,\"18\":1,\"22\":3,\"36\":1,\"550\":1}}],[\"price\",{\"1\":{\"17\":6,\"480\":10,\"657\":1,\"668\":1,\"696\":1}}],[\"panelright\",{\"1\":{\"570\":1}}],[\"panelleft\",{\"1\":{\"570\":1}}],[\"patchunkeyedchildren方法\",{\"1\":{\"464\":1}}],[\"patchkeyedchildren方法\",{\"1\":{\"464\":1}}],[\"patterns\",{\"1\":{\"238\":1}}],[\"path路径\",{\"1\":{\"567\":1}}],[\"pathmatch\",{\"1\":{\"548\":3}}],[\"pathmatch`\",{\"1\":{\"548\":1}}],[\"pathrewrite\",{\"1\":{\"259\":1,\"262\":2,\"265\":1}}],[\"pathname\",{\"1\":{\"201\":1}}],[\"pathutils\",{\"1\":{\"198\":1}}],[\"path\",{\"1\":{\"197\":6,\"198\":3,\"201\":20,\"208\":1,\"211\":4,\"228\":1,\"248\":1,\"264\":2,\"265\":4,\"540\":2,\"543\":2,\"544\":2,\"546\":3,\"547\":12,\"548\":5,\"550\":7,\"551\":3,\"553\":2,\"554\":6,\"555\":2,\"557\":6,\"561\":7,\"566\":1,\"567\":1,\"568\":2,\"569\":6,\"570\":5,\"573\":3,\"574\":3,\"577\":6,\"578\":8,\"694\":2}}],[\"paths\",{\"1\":{\"63\":1,\"72\":1,\"272\":1}}],[\"payload\",{\"1\":{\"201\":9,\"694\":1}}],[\"password\",{\"1\":{\"577\":3,\"578\":2,\"584\":2}}],[\"passive\",{\"1\":{\"139\":1,\"146\":1,\"447\":2,\"450\":2}}],[\"pascalcase\",{\"1\":{\"59\":2,\"335\":4}}],[\"pagey\",{\"1\":{\"503\":3}}],[\"pagex\",{\"1\":{\"503\":3}}],[\"page内部发生了点击\",{\"1\":{\"277\":1}}],[\"pageclick\",{\"1\":{\"277\":2}}],[\"pageclick=\",{\"1\":{\"277\":1}}],[\"page=\",{\"1\":{\"136\":1}}],[\"pageorientation\",{\"1\":{\"113\":4,\"142\":1,\"146\":1}}],[\"pagevalue\",{\"1\":{\"111\":3,\"112\":3}}],[\"pagepath\",{\"1\":{\"95\":1,\"136\":8,\"143\":4,\"201\":4}}],[\"page\",{\"0\":{\"95\":1},\"1\":{\"91\":2,\"92\":1,\"95\":4,\"97\":1,\"102\":2,\"103\":2,\"104\":2,\"105\":2,\"106\":2,\"109\":3,\"110\":1,\"117\":2,\"118\":2,\"121\":7,\"123\":1,\"124\":9,\"136\":4,\"137\":1,\"142\":2,\"145\":1,\"146\":2,\"152\":1,\"201\":2,\"291\":1,\"500\":1}}],[\"pages目录下放的就是小程序中的各个页面\",{\"1\":{\"84\":1}}],[\"pages目录\",{\"0\":{\"84\":1}}],[\"pages\",{\"0\":{\"141\":1},\"1\":{\"34\":1,\"110\":1,\"136\":6,\"139\":1,\"140\":1,\"141\":4,\"143\":4,\"167\":2,\"270\":1,\"398\":1}}],[\"packages\",{\"1\":{\"186\":1,\"251\":1}}],[\"package\",{\"0\":{\"61\":1},\"1\":{\"26\":1,\"62\":1,\"209\":2,\"253\":1,\"254\":1,\"264\":1,\"265\":1,\"268\":1,\"269\":1,\"271\":1}}],[\"part\",{\"1\":{\"547\":8,\"551\":3}}],[\"part2\",{\"1\":{\"547\":2,\"551\":3}}],[\"params\",{\"1\":{\"544\":8,\"546\":2,\"547\":6,\"548\":3,\"550\":5,\"551\":2,\"554\":1,\"557\":2,\"561\":1,\"563\":1}}],[\"paragraph\",{\"1\":{\"291\":1}}],[\"parsing\",{\"1\":{\"246\":1,\"247\":1}}],[\"parsefloat\",{\"1\":{\"487\":1}}],[\"parseroptions\",{\"1\":{\"59\":1}}],[\"parser\",{\"1\":{\"59\":4,\"224\":1,\"232\":1}}],[\"parse\",{\"0\":{\"55\":1},\"1\":{\"55\":3,\"59\":1,\"198\":1,\"201\":1}}],[\"parseint\",{\"1\":{\"16\":1,\"413\":1}}],[\"parcel等\",{\"1\":{\"250\":1}}],[\"parcel\",{\"1\":{\"180\":1}}],[\"parent=\",{\"1\":{\"310\":1,\"326\":1}}],[\"parentvalue\",{\"1\":{\"306\":2,\"322\":2}}],[\"parentmessage\",{\"1\":{\"305\":3,\"321\":3}}],[\"parentcomponent\",{\"1\":{\"21\":2,\"22\":1,\"23\":1}}],[\"parent\",{\"1\":{\"17\":1,\"36\":1,\"40\":2,\"304\":2,\"305\":1,\"306\":1,\"310\":2,\"313\":1,\"320\":2,\"321\":1,\"322\":1,\"326\":2,\"330\":1,\"342\":1,\"577\":3,\"578\":2}}],[\"padding\",{\"1\":{\"14\":1,\"17\":2,\"18\":1,\"39\":2,\"136\":3,\"149\":2,\"288\":1,\"480\":1,\"578\":1,\"603\":1}}],[\"png就放在这里\",{\"1\":{\"269\":1}}],[\"png等格式的图片\",{\"1\":{\"224\":1}}],[\"png|jpe\",{\"1\":{\"198\":1}}],[\"png|jpeg|bmp|webp\",{\"1\":{\"9\":1}}],[\"png\",{\"1\":{\"11\":1,\"17\":6,\"136\":9,\"143\":6,\"195\":1}}],[\"例如为了在不同地方格式化时间\",{\"1\":{\"502\":1}}],[\"例如在\",{\"1\":{\"408\":3}}],[\"例如我们可以传入多个元素\",{\"1\":{\"288\":1}}],[\"例如从服务器获取数据\",{\"1\":{\"695\":1}}],[\"例如从\",{\"1\":{\"263\":1}}],[\"例如标识符\",{\"1\":{\"247\":1}}],[\"例如语法转换\",{\"1\":{\"246\":1,\"247\":1}}],[\"例如图片\",{\"1\":{\"238\":1}}],[\"例如自动添加css前缀\",{\"1\":{\"220\":1}}],[\"例如将es6+代码转换为es5语法\",{\"1\":{\"214\":1}}],[\"例如有上百个模块的组件库\",{\"1\":{\"197\":1}}],[\"例如\",{\"1\":{\"17\":1,\"43\":1,\"110\":1,\"112\":1,\"117\":1,\"213\":3,\"223\":1,\"243\":1,\"244\":1,\"250\":1,\"253\":2,\"262\":2,\"263\":1,\"264\":4,\"265\":1,\"272\":2,\"276\":1,\"292\":1,\"306\":1,\"307\":1,\"322\":1,\"323\":1,\"328\":1,\"335\":1,\"347\":3,\"475\":1,\"498\":1,\"505\":1,\"509\":1,\"510\":2,\"544\":2,\"550\":1,\"554\":1,\"557\":2,\"561\":1,\"569\":1,\"571\":1,\"582\":1,\"593\":1,\"690\":1}}],[\"例如image\",{\"1\":{\"9\":1}}],[\"例如build\",{\"1\":{\"3\":1}}],[\"当普通方法使用\",{\"1\":{\"632\":1,\"643\":1}}],[\"当计算属性使用\",{\"1\":{\"619\":1}}],[\"当调用\",{\"1\":{\"584\":1}}],[\"当路由被删除时\",{\"1\":{\"574\":1}}],[\"当路由没有名称时\",{\"1\":{\"574\":1}}],[\"当处理过渡时\",{\"1\":{\"571\":1}}],[\"当创建一个\",{\"1\":{\"571\":1}}],[\"当创建一个组件的\",{\"1\":{\"386\":1}}],[\"当切换到新路由时\",{\"1\":{\"571\":1}}],[\"当指定\",{\"1\":{\"550\":1}}],[\"当指令与元素解除绑定且父组件已卸载时\",{\"1\":{\"407\":1}}],[\"当指令第一次绑定到元素并且在挂载父组件之前调用\",{\"1\":{\"407\":1}}],[\"当用户点击浏览器后退按钮时\",{\"1\":{\"550\":1}}],[\"当用于组件\",{\"1\":{\"437\":1}}],[\"当用于绑定\",{\"1\":{\"437\":1}}],[\"当加入\",{\"1\":{\"540\":1}}],[\"当在整个应用中使用时\",{\"1\":{\"515\":1}}],[\"当构建前端应用时\",{\"1\":{\"502\":1}}],[\"当组件在\",{\"1\":{\"494\":2}}],[\"当组件使用mixin对象时\",{\"1\":{\"496\":1}}],[\"当组件使用\",{\"1\":{\"112\":1}}],[\"当有多次一样的逻辑时\",{\"1\":{\"470\":1}}],[\"当score小于60的时候\",{\"1\":{\"469\":1}}],[\"当score大于60的时候\",{\"1\":{\"469\":1}}],[\"当条件为true时\",{\"1\":{\"453\":1}}],[\"当条件为false时\",{\"1\":{\"453\":1}}],[\"当通过methods中定义方法\",{\"1\":{\"449\":1}}],[\"当不带参数使用时\",{\"1\":{\"437\":1}}],[\"当不同数组项按照键值生成规则生成的键值相同时\",{\"1\":{\"17\":1}}],[\"当data中的数据发生改变时\",{\"1\":{\"430\":1}}],[\"当同时使用\",{\"1\":{\"401\":1}}],[\"当子节点不是插槽对象时\",{\"1\":{\"386\":1}}],[\"当子组件有一些事件发生的时候\",{\"1\":{\"310\":1,\"326\":1}}],[\"当已不再需要该侦听器时\",{\"1\":{\"382\":1}}],[\"当侦听多个来源时\",{\"1\":{\"380\":1}}],[\"当依赖的title发生改变时\",{\"1\":{\"377\":1}}],[\"当副作用即将重新执行\",{\"1\":{\"376\":1}}],[\"当数据变化时\",{\"1\":{\"475\":1}}],[\"当数据变化时执行某一些\",{\"1\":{\"372\":1}}],[\"当数据另一个状态时\",{\"1\":{\"439\":1}}],[\"当数据为某个状态时\",{\"1\":{\"439\":1}}],[\"当数据发生变化时\",{\"1\":{\"40\":1,\"432\":1}}],[\"当obj被修改时\",{\"1\":{\"361\":1}}],[\"当原生的\",{\"1\":{\"343\":1,\"481\":1}}],[\"当面对一个非常复杂的问题时\",{\"1\":{\"333\":1}}],[\"当使用了多个\",{\"1\":{\"514\":1}}],[\"当使用直接在\",{\"1\":{\"436\":1}}],[\"当使用\",{\"1\":{\"335\":2,\"402\":1,\"437\":1}}],[\"当使用vue\",{\"1\":{\"311\":1,\"327\":1}}],[\"当使用相对路径引用图片资源时\",{\"1\":{\"9\":1}}],[\"当父组件向子组件传递数据时\",{\"1\":{\"302\":1,\"318\":1}}],[\"当需要接收插槽\",{\"1\":{\"294\":1}}],[\"当所有遇到的异步依赖都完成后\",{\"1\":{\"283\":1}}],[\"当这个组件再一次被显示时\",{\"1\":{\"278\":1}}],[\"当这个键值变化时\",{\"1\":{\"17\":1}}],[\"当配置越来越多时\",{\"1\":{\"265\":1}}],[\"当导入一个模块时\",{\"1\":{\"264\":1}}],[\"当导入模块时可以省略文件扩展名\",{\"1\":{\"264\":1}}],[\"当导入自己的模块时\",{\"1\":{\"250\":1}}],[\"当访问一个不存在的路由时\",{\"1\":{\"263\":1}}],[\"当应用程序绑定到0\",{\"1\":{\"260\":1}}],[\"当应用程序绑定到localhost`时\",{\"1\":{\"260\":1}}],[\"当客户端接收到更新通知时\",{\"1\":{\"258\":1}}],[\"当客户端连接到websocket服务时\",{\"1\":{\"258\":1}}],[\"当服务器监听到对应的模块发生变化时\",{\"1\":{\"258\":1}}],[\"当文件发生变化时\",{\"1\":{\"252\":1}}],[\"当你要对路由权限判断时\",{\"1\":{\"567\":1}}],[\"当你访问\",{\"1\":{\"557\":1}}],[\"当你点击\",{\"1\":{\"550\":1}}],[\"当你需要将一些文件复制到构建目录\",{\"1\":{\"238\":1}}],[\"当你有一些静态资源\",{\"1\":{\"238\":1}}],[\"当你的包管理器发出警告时\",{\"1\":{\"185\":1}}],[\"当我们页面中需要请求不同的路径内容时\",{\"1\":{\"536\":1}}],[\"当我们多次使用计算属性时\",{\"1\":{\"473\":1}}],[\"当我们组件内部需要发出事件时会用到emit\",{\"1\":{\"349\":1}}],[\"当我们组件变得更大\",{\"1\":{\"346\":1}}],[\"当我们实现某一个功能时\",{\"1\":{\"346\":1}}],[\"当我们在父组件中使用\",{\"1\":{\"289\":1}}],[\"当我们修改了源代码之后\",{\"1\":{\"255\":1}}],[\"当我们运行webpack时\",{\"1\":{\"208\":1}}],[\"当我们请求\",{\"1\":{\"197\":1}}],[\"当request\",{\"1\":{\"201\":1}}],[\"当代码被修改时\",{\"1\":{\"201\":1}}],[\"当请求的路径符合\",{\"1\":{\"198\":1}}],[\"当浏览器使用\",{\"1\":{\"263\":1}}],[\"当浏览器解析\",{\"1\":{\"195\":1}}],[\"当浏览器发出原生的esm请求\",{\"1\":{\"182\":1}}],[\"当进入过渡完成时调用\",{\"1\":{\"168\":1}}],[\"当一个路由匹配成功后\",{\"1\":{\"569\":1}}],[\"当一个路由被匹配时\",{\"1\":{\"544\":1}}],[\"当一个导航触发时\",{\"1\":{\"559\":1}}],[\"当一个元素上的事件被触发时\",{\"1\":{\"450\":1}}],[\"当一个子节点在屏幕上的位置在更新之后发生变化时\",{\"1\":{\"175\":1}}],[\"当一个\",{\"1\":{\"155\":1,\"410\":1}}],[\"当然你可以把它放在任何地方\",{\"1\":{\"543\":1}}],[\"当然也可以像之前的\",{\"1\":{\"510\":1}}],[\"当然也可以使用以下写法\",{\"1\":{\"349\":1}}],[\"当然某些配置是在开发和生成环\",{\"1\":{\"265\":1}}],[\"当然此时控制台还有如下报错\",{\"1\":{\"251\":1}}],[\"当然我们依然可以把它们抽离到单独的js\",{\"1\":{\"339\":1}}],[\"当然我们也可以通过outputpath来设置输出的文件夹\",{\"1\":{\"230\":1}}],[\"当然我们待会儿可以学习如何修改它的名字和所在文件夹\",{\"1\":{\"224\":1}}],[\"当然\",{\"1\":{\"123\":1,\"208\":1,\"254\":1,\"313\":1,\"330\":1,\"430\":1,\"535\":1,\"543\":1,\"610\":1}}],[\"当\",{\"1\":{\"121\":1,\"143\":2,\"199\":1,\"204\":1,\"262\":1,\"358\":1,\"383\":1,\"473\":1,\"477\":1,\"483\":1,\"505\":1,\"557\":3}}],[\"当输入框的值变更时\",{\"1\":{\"111\":1}}],[\"当点击按钮时\",{\"1\":{\"314\":1,\"331\":1}}],[\"当点击按钮的时候\",{\"1\":{\"91\":1}}],[\"当点击下面时\",{\"1\":{\"38\":1}}],[\"当做数据修改的时候\",{\"1\":{\"91\":1}}],[\"当修改其中一个变量的值时\",{\"1\":{\"44\":2}}],[\"当状态改变时\",{\"1\":{\"38\":1}}],[\"当参数改变时\",{\"1\":{\"35\":1}}],[\"当前的导航被中断\",{\"1\":{\"566\":1}}],[\"当前的模块信息\",{\"1\":{\"34\":1}}],[\"当前导航正要离开的路由\",{\"1\":{\"559\":1,\"566\":1}}],[\"当前小程序内的跳转链接\",{\"1\":{\"130\":1}}],[\"当前小程序\",{\"1\":{\"130\":1}}],[\"当前所在滑块的\",{\"1\":{\"123\":1}}],[\"当前选中的指示点颜色\",{\"1\":{\"123\":1}}],[\"当前值\",{\"1\":{\"12\":1,\"16\":1}}],[\"当前\",{\"1\":{\"1\":1}}],[\"|shims\",{\"1\":{\"269\":1}}],[\"|main\",{\"1\":{\"269\":1}}],[\"|app\",{\"1\":{\"269\":1}}],[\"|assets\",{\"1\":{\"269\":1}}],[\"|components\",{\"1\":{\"269\":1}}],[\"|index\",{\"1\":{\"269\":1}}],[\"|favicon\",{\"1\":{\"269\":1}}],[\"|eot|ttf|otf\",{\"1\":{\"198\":1}}],[\"||\",{\"1\":{\"68\":1,\"198\":2,\"201\":1,\"568\":1,\"570\":1}}],[\"|\",{\"1\":{\"9\":2,\"59\":5,\"60\":4,\"201\":1,\"269\":10,\"271\":3,\"282\":1,\"386\":11,\"437\":1,\"447\":2,\"469\":1,\"475\":3,\"557\":28,\"602\":4}}],[\"smooth\",{\"1\":{\"571\":1}}],[\"small\",{\"1\":{\"149\":1}}],[\"smartisan\",{\"1\":{\"69\":1}}],[\"smart\",{\"1\":{\"59\":1}}],[\"s=60\",{\"1\":{\"438\":1}}],[\"snippet\",{\"1\":{\"428\":1}}],[\"snowpack\",{\"1\":{\"180\":1}}],[\"ssg\",{\"1\":{\"531\":1}}],[\"ssr\",{\"1\":{\"510\":1}}],[\"ss\",{\"1\":{\"413\":1,\"415\":1,\"416\":1}}],[\"sync\",{\"1\":{\"377\":1}}],[\"syntax\",{\"1\":{\"48\":1,\"59\":1,\"246\":1}}],[\"symbol\",{\"1\":{\"306\":1,\"322\":1,\"574\":1}}],[\"s\",{\"1\":{\"291\":1,\"529\":1}}],[\"sfc​\",{\"1\":{\"531\":1}}],[\"sfc来对template进行解析\",{\"1\":{\"250\":1}}],[\"sfc\",{\"1\":{\"250\":2,\"401\":2,\"531\":4}}],[\"svelte\",{\"1\":{\"186\":1}}],[\"svg\",{\"1\":{\"60\":1,\"171\":1}}],[\"svg和gif\",{\"1\":{\"9\":1}}],[\"sum\",{\"1\":{\"657\":6,\"668\":6,\"696\":6}}],[\"suspense>\",{\"1\":{\"283\":1,\"284\":1}}],[\"suspense\",{\"0\":{\"283\":1},\"1\":{\"283\":1,\"422\":1}}],[\"suspensible\",{\"1\":{\"282\":1}}],[\"support\",{\"1\":{\"268\":1}}],[\"supported\",{\"1\":{\"250\":1}}],[\"supportedmaterials\",{\"1\":{\"139\":1}}],[\"super\",{\"1\":{\"246\":1,\"247\":1}}],[\"subfn\",{\"1\":{\"632\":2}}],[\"subcount\",{\"1\":{\"624\":1,\"632\":2,\"637\":1,\"695\":1}}],[\"subitem映射用\",{\"0\":{\"619\":1,\"632\":1,\"643\":1}}],[\"subitem>\",{\"1\":{\"603\":1}}],[\"subitem\",{\"0\":{\"605\":1},\"1\":{\"602\":1,\"603\":3}}],[\"subview\",{\"1\":{\"578\":1}}],[\"subviews\",{\"1\":{\"577\":3}}],[\"substring\",{\"1\":{\"548\":1}}],[\"sub\",{\"1\":{\"311\":2,\"327\":2}}],[\"subpage\",{\"1\":{\"263\":2}}],[\"subpackages\",{\"1\":{\"139\":1}}],[\"submitbutton>\",{\"1\":{\"289\":1}}],[\"submit\",{\"1\":{\"186\":2,\"289\":8}}],[\"success\",{\"1\":{\"125\":4,\"306\":1,\"322\":1}}],[\"scaling\",{\"1\":{\"531\":1}}],[\"scale=1\",{\"1\":{\"236\":1,\"480\":1}}],[\"scale\",{\"1\":{\"160\":3,\"167\":3,\"171\":2}}],[\"scaletofill\",{\"1\":{\"132\":2}}],[\"score\",{\"1\":{\"366\":2,\"452\":4,\"469\":1,\"470\":1,\"471\":2,\"472\":2,\"473\":5,\"487\":2}}],[\"scorestate\",{\"1\":{\"366\":3}}],[\"scoping\",{\"1\":{\"243\":3}}],[\"scoped><\",{\"1\":{\"299\":1,\"300\":1,\"315\":1,\"316\":1,\"339\":1,\"349\":1,\"350\":1,\"363\":1}}],[\"scoped>\",{\"1\":{\"167\":1,\"168\":1,\"171\":1,\"174\":1,\"176\":1,\"250\":1,\"392\":1,\"497\":1,\"500\":1,\"578\":2}}],[\"scss\",{\"1\":{\"189\":2,\"392\":1}}],[\"screens\",{\"1\":{\"554\":1}}],[\"scrolltooptions\",{\"1\":{\"571\":1}}],[\"scrolltop\",{\"1\":{\"124\":2}}],[\"scrollbehavior\",{\"1\":{\"571\":9}}],[\"scroll<\",{\"1\":{\"124\":2}}],[\"scroll\",{\"0\":{\"124\":1},\"1\":{\"124\":21}}],[\"script标签\",{\"1\":{\"527\":1}}],[\"script>\",{\"1\":{\"154\":1,\"161\":1,\"167\":1,\"168\":1,\"171\":1,\"172\":1,\"174\":1,\"176\":1,\"195\":1,\"201\":1,\"250\":1,\"276\":1,\"288\":1,\"290\":1,\"291\":1,\"294\":2,\"295\":2,\"299\":1,\"300\":2,\"304\":2,\"305\":2,\"306\":2,\"307\":1,\"310\":2,\"313\":2,\"314\":2,\"315\":1,\"316\":2,\"320\":2,\"321\":2,\"322\":2,\"323\":1,\"326\":2,\"328\":1,\"330\":2,\"331\":2,\"337\":2,\"338\":1,\"339\":1,\"342\":2,\"343\":2,\"344\":2,\"347\":1,\"349\":4,\"350\":1,\"353\":1,\"356\":1,\"359\":1,\"361\":1,\"363\":1,\"366\":1,\"367\":1,\"370\":1,\"371\":2,\"374\":1,\"375\":1,\"376\":1,\"377\":2,\"379\":1,\"380\":1,\"384\":2,\"388\":1,\"389\":1,\"390\":1,\"392\":2,\"398\":1,\"399\":1,\"400\":1,\"402\":2,\"403\":2,\"404\":2,\"405\":2,\"410\":2,\"411\":1,\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1,\"430\":2,\"432\":2,\"433\":2,\"438\":1,\"440\":2,\"441\":2,\"443\":2,\"444\":2,\"445\":2,\"446\":2,\"448\":2,\"449\":2,\"450\":2,\"452\":2,\"453\":2,\"457\":2,\"458\":2,\"459\":2,\"463\":2,\"471\":2,\"472\":2,\"473\":4,\"474\":2,\"476\":2,\"477\":2,\"480\":3,\"483\":2,\"489\":2,\"490\":1,\"494\":1,\"497\":1,\"500\":1,\"503\":2,\"504\":2,\"512\":1,\"523\":1,\"524\":1,\"527\":5,\"540\":3,\"544\":1,\"547\":1,\"551\":1,\"578\":3,\"581\":1,\"584\":1,\"585\":1,\"603\":1,\"604\":1,\"605\":1,\"618\":1,\"619\":1,\"630\":1,\"631\":1,\"632\":1,\"642\":1,\"643\":1,\"652\":1,\"662\":1,\"694\":1,\"698\":1}}],[\"scripts\",{\"1\":{\"61\":1,\"209\":1,\"253\":1,\"254\":1,\"265\":1,\"269\":2}}],[\"script\",{\"0\":{\"401\":1},\"1\":{\"59\":1,\"107\":1,\"199\":2,\"269\":1,\"405\":1}}],[\"skyline\",{\"0\":{\"137\":1},\"1\":{\"123\":1,\"137\":2}}],[\"skyblue\",{\"1\":{\"121\":1}}],[\"sass等\",{\"1\":{\"339\":1}}],[\"sass等预处理器的处理\",{\"1\":{\"205\":1}}],[\"safe\",{\"1\":{\"136\":1}}],[\"saygoodbye\",{\"1\":{\"97\":4}}],[\"sayhello\",{\"1\":{\"97\":4}}],[\"samsung\",{\"1\":{\"69\":1}}],[\"savedposition\",{\"1\":{\"571\":11}}],[\"saved\",{\"1\":{\"166\":1}}],[\"save\",{\"1\":{\"57\":1,\"209\":2,\"215\":1,\"248\":1,\"268\":2,\"691\":1}}],[\"slot编译优化\",{\"1\":{\"520\":1}}],[\"slotprops\",{\"1\":{\"294\":7,\"295\":5,\"296\":2}}],[\"slotname变量的值将作为插槽名来动态指定插槽的位置\",{\"1\":{\"292\":1}}],[\"slotname\",{\"1\":{\"292\":1}}],[\"slot指令\",{\"1\":{\"292\":1}}],[\"slot指令来实现\",{\"1\":{\"292\":1}}],[\"slotcontent\",{\"1\":{\"288\":2}}],[\"slot>\",{\"1\":{\"288\":1,\"289\":2,\"290\":3,\"291\":6,\"294\":1,\"295\":2}}],[\"slots\",{\"1\":{\"285\":2,\"291\":5,\"294\":2,\"349\":8,\"386\":2}}],[\"slot=\",{\"1\":{\"284\":1,\"294\":3,\"296\":1,\"570\":3}}],[\"slot\",{\"0\":{\"286\":1},\"1\":{\"63\":1,\"72\":1,\"287\":1,\"288\":3,\"290\":8,\"291\":4,\"292\":1,\"294\":3,\"295\":2,\"296\":2,\"386\":4,\"391\":2,\"570\":1}}],[\"slide\",{\"1\":{\"159\":5,\"570\":4}}],[\"sliderstyle\",{\"1\":{\"12\":1,\"16\":1}}],[\"slider\",{\"0\":{\"12\":1},\"1\":{\"12\":2,\"16\":2}}],[\"slice\",{\"0\":{\"50\":1},\"1\":{\"50\":2,\"459\":1,\"489\":1}}],[\"sort\",{\"1\":{\"459\":1}}],[\"sorry\",{\"1\":{\"236\":1}}],[\"solid\",{\"1\":{\"291\":1,\"480\":2,\"603\":3}}],[\"socket\",{\"1\":{\"201\":1,\"258\":2}}],[\"somemethod\",{\"1\":{\"478\":2}}],[\"someprop\",{\"1\":{\"391\":1}}],[\"some\",{\"1\":{\"95\":1,\"160\":1,\"291\":1,\"391\":1,\"569\":1}}],[\"something\",{\"1\":{\"93\":3,\"478\":1}}],[\"somecolor\",{\"1\":{\"22\":3}}],[\"sony\",{\"1\":{\"69\":1}}],[\"source\",{\"1\":{\"231\":1,\"239\":1,\"265\":3,\"282\":1,\"382\":1}}],[\"sourcemappingurl=data\",{\"1\":{\"221\":1}}],[\"sourcemap\",{\"1\":{\"63\":1,\"72\":1,\"532\":1}}],[\"sourcetype\",{\"1\":{\"59\":1}}],[\"sizing\",{\"1\":{\"578\":1}}],[\"size=\",{\"1\":{\"125\":1,\"128\":5,\"483\":1}}],[\"size\",{\"1\":{\"121\":4,\"124\":3,\"125\":1,\"126\":1,\"136\":1,\"291\":1,\"443\":3}}],[\"sitemaplocation\",{\"1\":{\"139\":1}}],[\"sitemap\",{\"0\":{\"89\":1},\"1\":{\"89\":1,\"139\":1}}],[\"single\",{\"1\":{\"531\":1}}],[\"singlepage\",{\"1\":{\"139\":1,\"146\":1}}],[\"singlequote\",{\"1\":{\"59\":1,\"60\":1}}],[\"singleline\",{\"1\":{\"59\":1}}],[\"sing\",{\"1\":{\"47\":1}}],[\"simplelist\",{\"1\":{\"17\":2}}],[\"special\",{\"1\":{\"460\":1}}],[\"split\",{\"1\":{\"367\":1,\"430\":2,\"470\":1,\"471\":1,\"472\":1,\"474\":1,\"548\":1,\"570\":2}}],[\"splitting\",{\"1\":{\"271\":1}}],[\"splice\",{\"1\":{\"39\":1,\"174\":2,\"459\":1,\"463\":1,\"480\":1,\"582\":1}}],[\"spa\",{\"0\":{\"538\":1},\"1\":{\"268\":1,\"531\":1,\"535\":1,\"538\":1,\"539\":1}}],[\"span等等这些元素\",{\"1\":{\"286\":1}}],[\"span>\",{\"1\":{\"174\":1,\"288\":1,\"293\":1,\"433\":1,\"480\":1,\"483\":3,\"603\":1,\"631\":1}}],[\"span\",{\"1\":{\"119\":1,\"391\":4,\"392\":2,\"551\":1}}],[\"spacing\",{\"1\":{\"59\":1,\"121\":1,\"124\":3,\"480\":1}}],[\"spacebetween\",{\"1\":{\"39\":1}}],[\"spaceevenly\",{\"1\":{\"39\":1}}],[\"space\",{\"1\":{\"14\":2,\"15\":3,\"17\":2,\"18\":1,\"39\":2,\"124\":2}}],[\"spread\",{\"1\":{\"48\":1}}],[\"swiper>\",{\"1\":{\"123\":2}}],[\"swiper\",{\"0\":{\"123\":1},\"1\":{\"123\":6}}],[\"swipeaction\",{\"1\":{\"39\":1}}],[\"switchtab\",{\"1\":{\"130\":4,\"136\":1}}],[\"switchcase\",{\"1\":{\"59\":1}}],[\"switch\",{\"1\":{\"23\":1,\"201\":1}}],[\"shift\",{\"1\":{\"459\":1}}],[\"shuffle\",{\"1\":{\"174\":1}}],[\"shufflenum方法使用lodash的shuffle函数打乱numbers数组的顺序\",{\"1\":{\"174\":1}}],[\"shufflenum\",{\"1\":{\"174\":2}}],[\"sheets\",{\"1\":{\"147\":1}}],[\"shoes\",{\"1\":{\"582\":1}}],[\"shoule\",{\"1\":{\"98\":1}}],[\"showtooltip\",{\"1\":{\"584\":2}}],[\"showtips\",{\"1\":{\"12\":1,\"16\":1}}],[\"show元素无论是否需要显示到浏览器上\",{\"1\":{\"455\":1}}],[\"show不可以和v\",{\"1\":{\"455\":1}}],[\"show是不支持template\",{\"1\":{\"455\":1}}],[\"show=\",{\"1\":{\"454\":1,\"455\":1}}],[\"show和v\",{\"0\":{\"455\":1},\"1\":{\"454\":1}}],[\"showmessage\",{\"1\":{\"371\":3}}],[\"shownames\",{\"1\":{\"176\":2}}],[\"shownumber\",{\"1\":{\"172\":3}}],[\"show\",{\"0\":{\"454\":1},\"1\":{\"65\":1,\"93\":1,\"126\":2,\"132\":1,\"154\":4,\"155\":4,\"159\":1,\"160\":1,\"161\":4,\"163\":1,\"166\":1,\"168\":1,\"409\":1,\"451\":1,\"455\":1}}],[\"sh\",{\"1\":{\"60\":1}}],[\"shallowcount\",{\"1\":{\"358\":3}}],[\"shallowclone\",{\"1\":{\"47\":2}}],[\"shallowref\",{\"1\":{\"358\":7}}],[\"shallowreadonlyobj\",{\"1\":{\"354\":3}}],[\"shallowreadonly\",{\"1\":{\"354\":5,\"361\":1}}],[\"shallowreactiveobj\",{\"1\":{\"354\":3}}],[\"shallowreactive\",{\"1\":{\"354\":5}}],[\"shallowro\",{\"1\":{\"354\":1}}],[\"shallowobj\",{\"1\":{\"354\":1}}],[\"shaking\",{\"1\":{\"180\":2,\"196\":1,\"251\":2,\"338\":2}}],[\"share\",{\"1\":{\"128\":1}}],[\"shang\",{\"1\":{\"105\":1}}],[\"shadow\",{\"1\":{\"39\":1}}],[\"sex\",{\"1\":{\"668\":1}}],[\"sendtoanalytics\",{\"1\":{\"560\":2}}],[\"sendmessage\",{\"1\":{\"314\":4,\"331\":4}}],[\"senddatatoparent\",{\"1\":{\"310\":2,\"326\":2}}],[\"sent\",{\"1\":{\"91\":1,\"106\":1,\"110\":1}}],[\"serve\",{\"0\":{\"270\":1},\"1\":{\"197\":2,\"254\":4,\"265\":2,\"269\":5,\"270\":2}}],[\"server使用express框架提供静态资源服务\",{\"1\":{\"258\":1}}],[\"server使用node\",{\"1\":{\"258\":1}}],[\"server负责直接提供静态资源的服务\",{\"1\":{\"258\":1}}],[\"server建立连接\",{\"1\":{\"258\":1}}],[\"server会将更新的模块代码发送到客户端\",{\"1\":{\"258\":1}}],[\"server会创建两个服务\",{\"1\":{\"258\":1}}],[\"server已经支持hmr\",{\"1\":{\"255\":1}}],[\"server的情况下\",{\"1\":{\"254\":1}}],[\"server或者直接通过浏览器\",{\"1\":{\"252\":1}}],[\"serverplugin\",{\"1\":{\"198\":1}}],[\"serverpluginassets\",{\"1\":{\"198\":1}}],[\"server收到请求只需要编译当前文件后返回给浏览器\",{\"1\":{\"182\":1}}],[\"server\",{\"0\":{\"254\":1},\"1\":{\"178\":1,\"179\":1,\"198\":1,\"252\":1,\"254\":3,\"258\":1,\"262\":2,\"263\":3,\"270\":1}}],[\"serviceproviderticket\",{\"1\":{\"139\":1}}],[\"serviceworker\",{\"1\":{\"92\":1}}],[\"service\",{\"0\":{\"270\":1,\"271\":1,\"272\":1},\"1\":{\"90\":1,\"91\":1,\"92\":1,\"99\":1,\"207\":1,\"266\":2,\"269\":8,\"270\":2,\"271\":2,\"272\":3}}],[\"serviceability和dataability三种组件\",{\"1\":{\"32\":1}}],[\"self\",{\"1\":{\"130\":1,\"447\":1,\"450\":1}}],[\"select>\",{\"1\":{\"483\":1}}],[\"selected\",{\"1\":{\"137\":1}}],[\"selectediconpath\",{\"1\":{\"136\":5,\"143\":4}}],[\"selectedcolor\",{\"1\":{\"136\":1,\"143\":2}}],[\"selectpage\",{\"1\":{\"136\":2}}],[\"select\",{\"1\":{\"39\":1,\"136\":7,\"137\":1,\"186\":3,\"221\":5,\"268\":2,\"483\":1}}],[\"searchtext\",{\"1\":{\"343\":6,\"481\":5,\"554\":2}}],[\"search\",{\"1\":{\"125\":1,\"143\":2,\"554\":5}}],[\"secure\",{\"1\":{\"259\":1,\"262\":1,\"265\":1}}],[\"section\",{\"1\":{\"121\":6,\"124\":7}}],[\"second\",{\"1\":{\"17\":1,\"38\":1,\"39\":1}}],[\"setgoodslist\",{\"1\":{\"651\":2,\"668\":2}}],[\"setcount\",{\"1\":{\"624\":1,\"631\":1}}],[\"setitem\",{\"1\":{\"582\":1}}],[\"setinterval\",{\"1\":{\"415\":1,\"416\":1}}],[\"setinitialrenderingcache\",{\"1\":{\"118\":5}}],[\"settings\",{\"1\":{\"584\":1}}],[\"settimeout\",{\"1\":{\"359\":1,\"376\":1,\"571\":1,\"637\":2,\"695\":2}}],[\"setter\",{\"0\":{\"474\":1},\"1\":{\"343\":1,\"468\":1,\"520\":1}}],[\"settabbaritem\",{\"1\":{\"135\":1}}],[\"setattribute\",{\"1\":{\"201\":1}}],[\"set\",{\"1\":{\"95\":1,\"197\":2,\"198\":1,\"343\":2,\"344\":2,\"359\":2,\"365\":1,\"367\":1,\"469\":1,\"474\":1,\"618\":1,\"631\":1}}],[\"setdata\",{\"1\":{\"91\":2,\"95\":2,\"106\":1,\"110\":3,\"112\":3,\"117\":3,\"118\":1,\"124\":1,\"135\":1,\"136\":1,\"137\":2}}],[\"setup语法\",{\"1\":{\"405\":1}}],[\"setup语法糖\",{\"0\":{\"401\":1}}],[\"setup本身需要是一个函数类型\",{\"1\":{\"387\":1}}],[\"setup函数选项中\",{\"1\":{\"387\":1}}],[\"setup函数的返回值\",{\"0\":{\"350\":1}}],[\"setup函数的参数\",{\"0\":{\"349\":1}}],[\"setup中使用ref获取元素或组件\",{\"0\":{\"369\":1}}],[\"setup中可以直接使用导入的onx函数注册生命周期\",{\"1\":{\"368\":1}}],[\"setup的执行时序比beforecreate和create还要早\",{\"1\":{\"368\":1}}],[\"setup的返回值可以在模板template中被使用\",{\"1\":{\"350\":1}}],[\"setup><\",{\"1\":{\"419\":1,\"420\":1,\"421\":1}}],[\"setup>是在单文件组件\",{\"1\":{\"401\":1}}],[\"setup>\",{\"1\":{\"347\":1,\"361\":1,\"390\":1,\"392\":1,\"402\":4,\"403\":2,\"404\":2,\"405\":3,\"410\":2,\"411\":2,\"416\":1,\"503\":2,\"504\":2,\"511\":2,\"512\":1,\"547\":1,\"551\":1,\"578\":3,\"581\":1,\"584\":1,\"585\":1,\"694\":1}}],[\"setup>使用的变量<template>被标记为未使用\",{\"1\":{\"59\":1}}],[\"setup\",{\"0\":{\"348\":1,\"351\":1,\"414\":1},\"1\":{\"59\":3,\"348\":1,\"349\":11,\"350\":5,\"351\":3,\"353\":1,\"355\":1,\"356\":1,\"359\":1,\"363\":1,\"365\":1,\"366\":1,\"367\":1,\"368\":2,\"370\":1,\"371\":2,\"374\":1,\"375\":1,\"376\":1,\"377\":2,\"379\":1,\"380\":1,\"384\":2,\"389\":1,\"400\":1,\"415\":1,\"500\":6,\"511\":1,\"513\":4,\"564\":1,\"573\":1}}],[\"semi\",{\"1\":{\"59\":3,\"60\":1}}],[\"see\",{\"1\":{\"59\":1,\"251\":1}}],[\"src=\",{\"1\":{\"65\":2,\"123\":1,\"136\":2,\"195\":1,\"337\":1,\"430\":1,\"432\":1,\"433\":1,\"437\":3,\"438\":3,\"440\":1,\"441\":1,\"443\":1,\"444\":1,\"445\":2,\"446\":1,\"448\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":1,\"457\":1,\"458\":1,\"459\":1,\"463\":1,\"471\":1,\"472\":1,\"473\":2,\"474\":1,\"476\":1,\"477\":1,\"480\":2,\"483\":1,\"523\":1,\"524\":1,\"527\":2,\"540\":2}}],[\"src\",{\"1\":{\"9\":1,\"10\":1,\"34\":5,\"61\":1,\"63\":5,\"72\":5,\"190\":1,\"197\":1,\"198\":2,\"208\":3,\"211\":1,\"217\":1,\"221\":1,\"242\":3,\"243\":1,\"244\":1,\"248\":1,\"264\":7,\"265\":1,\"269\":1,\"270\":2,\"396\":1,\"405\":1,\"543\":2,\"551\":1,\"555\":3}}],[\"store对象\",{\"1\":{\"612\":1}}],[\"store概念\",{\"0\":{\"609\":1}}],[\"store准备\",{\"0\":{\"607\":1,\"647\":1}}],[\"storetorefs\",{\"1\":{\"582\":2,\"585\":2}}],[\"store实例相当于一个容器\",{\"1\":{\"581\":1}}],[\"store\",{\"0\":{\"711\":1},\"1\":{\"238\":1,\"573\":1,\"580\":2,\"581\":2,\"582\":9,\"583\":1,\"584\":7,\"585\":1,\"609\":1,\"610\":1,\"611\":8,\"612\":1,\"615\":4,\"624\":4,\"637\":9,\"647\":1,\"651\":2,\"657\":4,\"668\":2,\"669\":3,\"691\":9,\"692\":3,\"693\":4,\"694\":9,\"695\":6,\"696\":4}}],[\"stop=\",{\"1\":{\"450\":1}}],[\"stoppropagation\",{\"1\":{\"447\":1,\"450\":3}}],[\"stopwatcheffect\",{\"1\":{\"375\":2}}],[\"stop\",{\"1\":{\"121\":1,\"376\":1,\"382\":2,\"447\":1,\"450\":2}}],[\"studio\",{\"1\":{\"27\":1}}],[\"star元素上\",{\"1\":{\"420\":1,\"421\":2}}],[\"starrender\",{\"1\":{\"390\":1,\"392\":1,\"400\":1}}],[\"star\",{\"1\":{\"363\":1,\"366\":1,\"374\":3,\"375\":3,\"420\":2,\"421\":3}}],[\"startswith\",{\"1\":{\"262\":1}}],[\"start\",{\"1\":{\"14\":2,\"17\":1,\"121\":1,\"179\":1}}],[\"standard风格的格式化规则\",{\"1\":{\"268\":1}}],[\"standard\",{\"1\":{\"268\":1}}],[\"stay\",{\"1\":{\"121\":2}}],[\"staffc\",{\"1\":{\"105\":2}}],[\"staffb\",{\"1\":{\"105\":2}}],[\"staffa\",{\"1\":{\"105\":2}}],[\"staffname\",{\"1\":{\"105\":4}}],[\"stack\",{\"1\":{\"39\":1}}],[\"status\",{\"1\":{\"198\":1}}],[\"static\",{\"1\":{\"39\":1,\"117\":3,\"139\":2,\"142\":3,\"146\":3,\"256\":3,\"259\":1}}],[\"state和mutations\",{\"1\":{\"683\":1}}],[\"state如何取值\",{\"1\":{\"675\":1}}],[\"state如何定义\",{\"1\":{\"621\":1}}],[\"state使用方式修改\",{\"0\":{\"673\":1,\"679\":1}}],[\"state取值方式改变\",{\"1\":{\"672\":1}}],[\"state变成函数返回对象形式\",{\"1\":{\"670\":1}}],[\"state变量名\",{\"1\":{\"619\":1,\"679\":1}}],[\"state中原始数据的变化\",{\"1\":{\"656\":1}}],[\"state的变量名\",{\"1\":{\"621\":1}}],[\"state的值如何用到具体vue组件内\",{\"1\":{\"621\":1}}],[\"state作用\",{\"1\":{\"621\":1}}],[\"state里变量名\",{\"1\":{\"673\":2}}],[\"state里要映射的变量名\",{\"1\":{\"653\":1}}],[\"state里count的值\",{\"1\":{\"619\":1}}],[\"state里的变量名\",{\"1\":{\"616\":1}}],[\"state数据源\",{\"0\":{\"613\":1}}],[\"statement\",{\"1\":{\"447\":1,\"448\":1}}],[\"stated\",{\"1\":{\"171\":1}}],[\"state是响应式的\",{\"1\":{\"620\":1,\"693\":1}}],[\"state是唯一的公共数据源\",{\"1\":{\"614\":1,\"692\":1}}],[\"state是一个函数\",{\"1\":{\"583\":1}}],[\"state是最基础的\",{\"1\":{\"38\":1}}],[\"state是状态装饰器\",{\"1\":{\"36\":1}}],[\"state装饰的变量生命周期与其所属自定义组件的生命周期相同\",{\"1\":{\"38\":1}}],[\"state装饰的变量与子组件中的\",{\"1\":{\"38\":1}}],[\"state装饰的变量拥有以下特点\",{\"1\":{\"38\":1}}],[\"state装饰的变量\",{\"1\":{\"38\":2}}],[\"state装饰器\",{\"0\":{\"38\":1}}],[\"state\",{\"0\":{\"582\":1,\"692\":1},\"1\":{\"16\":1,\"17\":2,\"18\":1,\"21\":2,\"35\":2,\"36\":3,\"38\":3,\"39\":3,\"40\":2,\"59\":1,\"353\":5,\"379\":2,\"478\":1,\"505\":1,\"580\":2,\"581\":3,\"582\":13,\"583\":13,\"584\":3,\"585\":2,\"597\":1,\"599\":1,\"615\":2,\"616\":1,\"617\":1,\"618\":1,\"621\":2,\"624\":8,\"631\":1,\"634\":1,\"644\":1,\"651\":3,\"652\":1,\"657\":7,\"668\":10,\"673\":4,\"674\":3,\"678\":1,\"679\":1,\"691\":5,\"692\":5,\"693\":4,\"694\":7,\"696\":6}}],[\"stateeffect\",{\"1\":{\"8\":2}}],[\"state表示组件中的状态变量\",{\"1\":{\"3\":1}}],[\"state都是装饰器\",{\"1\":{\"3\":1}}],[\"stage模型模块配置文件\",{\"1\":{\"34\":1}}],[\"stage模型重新定义了应用能力的边界\",{\"1\":{\"33\":1}}],[\"stage模型采用面向对象的开发方式\",{\"1\":{\"33\":1}}],[\"stage模型的设计出发点是为了复杂应用而设计\",{\"1\":{\"33\":1}}],[\"stage模型通过abilitystage\",{\"1\":{\"33\":1}}],[\"stage模型\",{\"0\":{\"33\":1,\"34\":1}}],[\"stage\",{\"0\":{\"31\":1}}],[\"strict\",{\"1\":{\"241\":1}}],[\"string>\",{\"1\":{\"17\":1}}],[\"stringify\",{\"0\":{\"55\":1},\"1\":{\"17\":1,\"55\":3,\"198\":1,\"582\":1}}],[\"string\",{\"1\":{\"6\":1,\"9\":1,\"17\":9,\"21\":2,\"23\":1,\"38\":3,\"39\":1,\"42\":1,\"43\":1,\"55\":1,\"63\":1,\"111\":1,\"112\":1,\"121\":1,\"123\":1,\"125\":3,\"126\":7,\"132\":1,\"139\":13,\"142\":11,\"143\":6,\"146\":14,\"197\":3,\"198\":1,\"201\":2,\"277\":1,\"305\":2,\"306\":4,\"321\":2,\"322\":4,\"344\":4,\"349\":3,\"350\":1,\"353\":1,\"386\":4,\"403\":1,\"469\":1,\"475\":2,\"489\":2,\"490\":2,\"550\":1}}],[\"strong>\",{\"1\":{\"236\":1,\"290\":1}}],[\"stroke\",{\"1\":{\"126\":2}}],[\"str\",{\"1\":{\"59\":1}}],[\"struct被\",{\"1\":{\"20\":1}}],[\"struct\",{\"1\":{\"14\":1,\"15\":1,\"16\":1,\"17\":3,\"18\":1,\"20\":5,\"21\":4,\"22\":2,\"23\":3,\"24\":2,\"36\":2,\"38\":1,\"39\":1,\"40\":4}}],[\"style2obj\",{\"1\":{\"444\":2}}],[\"style1obj\",{\"1\":{\"444\":2}}],[\"style>\",{\"1\":{\"161\":1,\"167\":1,\"168\":1,\"171\":1,\"174\":1,\"176\":1,\"250\":1,\"288\":1,\"291\":1,\"299\":1,\"300\":1,\"315\":1,\"316\":1,\"339\":1,\"349\":2,\"350\":1,\"363\":1,\"392\":1,\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1,\"440\":1,\"497\":1,\"500\":1,\"578\":3,\"603\":1}}],[\"style=\",{\"1\":{\"121\":2,\"123\":1,\"124\":2,\"150\":1,\"160\":1,\"288\":1,\"307\":1,\"323\":1,\"433\":1,\"443\":6,\"444\":1,\"543\":1,\"603\":2}}],[\"stylesheet\",{\"1\":{\"480\":1}}],[\"styles\",{\"1\":{\"39\":1,\"40\":1}}],[\"style\",{\"0\":{\"216\":1,\"442\":1},\"1\":{\"12\":1,\"16\":1,\"59\":3,\"139\":1,\"146\":1,\"147\":1,\"150\":4,\"170\":1,\"176\":2,\"189\":1,\"201\":1,\"213\":1,\"215\":4,\"216\":2,\"218\":1,\"221\":1,\"257\":1,\"391\":2,\"437\":1,\"442\":1,\"445\":1,\"480\":1}}],[\"step=\",{\"1\":{\"172\":1}}],[\"step\",{\"1\":{\"12\":1,\"16\":1}}],[\"tbody>\",{\"1\":{\"480\":1}}],[\"td>\",{\"1\":{\"480\":6}}],[\"td\",{\"1\":{\"480\":1}}],[\"t注册一个组件的时候\",{\"1\":{\"335\":1}}],[\"t\",{\"1\":{\"236\":1,\"267\":1}}],[\"t=$\",{\"1\":{\"201\":4}}],[\"tiny\",{\"1\":{\"246\":1,\"247\":1}}],[\"titleref\",{\"1\":{\"370\":4}}],[\"title`\",{\"1\":{\"349\":1}}],[\"title=\",{\"1\":{\"295\":1}}],[\"title<\",{\"1\":{\"291\":1}}],[\"title>\",{\"1\":{\"236\":1,\"480\":1}}],[\"title\",{\"1\":{\"121\":3,\"124\":2,\"167\":1,\"168\":2,\"170\":1,\"171\":2,\"217\":2,\"221\":2,\"236\":5,\"250\":4,\"295\":3,\"308\":1,\"324\":1,\"336\":1,\"337\":3,\"339\":2,\"344\":4,\"349\":6,\"350\":1,\"377\":7,\"379\":1,\"380\":1,\"388\":1,\"389\":1,\"390\":1,\"440\":4,\"441\":4,\"494\":3,\"497\":1,\"500\":1}}],[\"timeformattype\",{\"1\":{\"415\":3,\"416\":5}}],[\"timer\",{\"1\":{\"359\":3,\"376\":2}}],[\"timeout\",{\"1\":{\"282\":3,\"283\":3}}],[\"timestamp\",{\"1\":{\"201\":6,\"413\":4,\"415\":3,\"416\":2}}],[\"time=\",{\"1\":{\"121\":1,\"415\":1,\"416\":1}}],[\"time\",{\"1\":{\"121\":2,\"413\":3,\"415\":5,\"416\":4,\"580\":1}}],[\"tutorial\",{\"1\":{\"67\":1}}],[\"try\",{\"1\":{\"584\":1}}],[\"tricks\",{\"1\":{\"573\":1}}],[\"trim=\",{\"1\":{\"488\":1}}],[\"trim\",{\"0\":{\"488\":1},\"1\":{\"488\":1}}],[\"triggered\",{\"1\":{\"478\":3}}],[\"trigger\",{\"1\":{\"359\":3,\"428\":1}}],[\"triggerref\",{\"1\":{\"358\":4}}],[\"tr>\",{\"1\":{\"480\":1}}],[\"tree\",{\"1\":{\"180\":1,\"246\":1,\"250\":1,\"251\":3,\"338\":2,\"462\":1,\"520\":1}}],[\"travel\",{\"1\":{\"580\":1}}],[\"track\",{\"1\":{\"359\":3}}],[\"transparent\",{\"1\":{\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1}}],[\"transitiongroup\",{\"1\":{\"175\":1}}],[\"transitionend\",{\"1\":{\"162\":1}}],[\"transition>\",{\"1\":{\"155\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1,\"162\":1,\"163\":3,\"164\":2,\"165\":1,\"166\":1,\"167\":1,\"168\":3,\"170\":1,\"171\":1,\"284\":1,\"570\":4}}],[\"transition内置组件来完成动画\",{\"1\":{\"154\":1}}],[\"transition\",{\"0\":{\"155\":1,\"159\":1},\"1\":{\"154\":1,\"155\":3,\"158\":1,\"159\":3,\"160\":1,\"162\":1,\"163\":2,\"167\":1,\"174\":3,\"175\":1,\"176\":2,\"284\":1,\"570\":8}}],[\"translatey\",{\"1\":{\"174\":1}}],[\"translatex\",{\"1\":{\"159\":1,\"163\":1}}],[\"translate\",{\"1\":{\"121\":3,\"124\":3}}],[\"transformation\",{\"1\":{\"246\":1,\"247\":1}}],[\"transform\",{\"1\":{\"121\":3,\"124\":3,\"159\":1,\"160\":3,\"163\":1,\"167\":3,\"174\":2,\"175\":3,\"243\":11}}],[\"trailingcomma\",{\"1\":{\"59\":1,\"60\":1}}],[\"true`选项来开启watch模式\",{\"1\":{\"253\":1}}],[\"true\",{\"1\":{\"12\":1,\"16\":1,\"59\":8,\"60\":2,\"63\":1,\"72\":1,\"117\":4,\"118\":1,\"124\":2,\"136\":1,\"146\":1,\"154\":1,\"161\":1,\"167\":1,\"168\":1,\"171\":1,\"198\":2,\"241\":1,\"251\":1,\"253\":1,\"256\":1,\"259\":4,\"261\":2,\"262\":3,\"263\":3,\"265\":4,\"305\":1,\"306\":1,\"311\":1,\"321\":1,\"322\":1,\"327\":1,\"349\":1,\"350\":1,\"354\":4,\"357\":1,\"358\":1,\"381\":3,\"408\":3,\"430\":1,\"440\":5,\"441\":1,\"447\":1,\"450\":1,\"453\":1,\"477\":3,\"478\":2,\"479\":2,\"489\":2,\"553\":2,\"559\":2,\"567\":1,\"569\":1,\"582\":2,\"657\":1,\"668\":1,\"678\":2,\"696\":1}}],[\"tag=\",{\"1\":{\"174\":1,\"176\":1,\"543\":2}}],[\"tag\",{\"1\":{\"173\":1}}],[\"tada\",{\"1\":{\"161\":1}}],[\"target\",{\"1\":{\"256\":2,\"259\":3,\"262\":4,\"263\":1,\"265\":1,\"271\":2,\"343\":2,\"344\":2,\"450\":1,\"481\":1,\"489\":2,\"490\":2,\"503\":3}}],[\"target=\",{\"1\":{\"130\":2}}],[\"target属性\",{\"1\":{\"130\":1}}],[\"targets配置等\",{\"1\":{\"34\":1}}],[\"tapmove\",{\"1\":{\"124\":1}}],[\"tap=\",{\"1\":{\"65\":1}}],[\"table>\",{\"1\":{\"480\":1}}],[\"table\",{\"1\":{\"480\":1}}],[\"tabs\",{\"1\":{\"275\":1,\"276\":2,\"328\":2}}],[\"tabbar\",{\"0\":{\"143\":1},\"1\":{\"130\":7,\"134\":1,\"135\":11,\"136\":22,\"137\":7,\"139\":1,\"143\":5}}],[\"tab\",{\"1\":{\"86\":1,\"95\":1,\"135\":3,\"136\":5,\"137\":2,\"139\":1,\"143\":12,\"276\":7,\"328\":7,\"428\":1}}],[\"tabwidth\",{\"1\":{\"59\":1,\"60\":1}}],[\"task\",{\"1\":{\"39\":11}}],[\"two\",{\"1\":{\"17\":2,\"391\":1}}],[\"throw\",{\"1\":{\"584\":1}}],[\"three\",{\"1\":{\"17\":1}}],[\"th>\",{\"1\":{\"480\":6}}],[\"th\",{\"1\":{\"480\":2}}],[\"that\",{\"1\":{\"201\":1}}],[\"thead>\",{\"1\":{\"480\":1}}],[\"then\",{\"1\":{\"201\":2,\"504\":4,\"505\":2}}],[\"theme\",{\"1\":{\"139\":1}}],[\"themelocation\",{\"1\":{\"139\":1}}],[\"the\",{\"1\":{\"98\":5,\"186\":1,\"201\":2,\"246\":1,\"247\":1,\"250\":1,\"251\":2,\"291\":1,\"295\":1,\"313\":1,\"330\":1,\"561\":1}}],[\"there\",{\"1\":{\"17\":1}}],[\"this到底指向什么\",{\"1\":{\"529\":1}}],[\"this到底是如何查找和绑定的呢\",{\"1\":{\"529\":1}}],[\"this的別名可以为\",{\"1\":{\"59\":1}}],[\"this`\",{\"1\":{\"59\":1}}],[\"this\",{\"0\":{\"351\":1},\"1\":{\"16\":8,\"17\":7,\"18\":1,\"21\":4,\"22\":1,\"23\":4,\"36\":1,\"38\":11,\"39\":15,\"40\":22,\"57\":1,\"59\":3,\"91\":4,\"93\":1,\"95\":3,\"106\":5,\"110\":14,\"111\":1,\"112\":2,\"115\":2,\"117\":1,\"118\":5,\"123\":1,\"124\":2,\"136\":2,\"137\":5,\"154\":2,\"172\":1,\"174\":10,\"176\":2,\"201\":1,\"250\":1,\"268\":1,\"295\":1,\"310\":1,\"313\":4,\"314\":2,\"326\":1,\"330\":4,\"331\":2,\"342\":3,\"343\":2,\"344\":4,\"349\":3,\"351\":1,\"388\":3,\"392\":2,\"398\":5,\"399\":5,\"430\":3,\"432\":1,\"440\":5,\"459\":5,\"463\":1,\"468\":1,\"471\":4,\"472\":4,\"473\":7,\"474\":7,\"476\":4,\"477\":3,\"478\":1,\"479\":2,\"480\":5,\"489\":3,\"493\":2,\"494\":3,\"513\":2,\"527\":4,\"529\":2,\"530\":2,\"544\":1,\"548\":4,\"563\":3,\"573\":1,\"581\":1,\"584\":6,\"611\":1,\"616\":1,\"618\":1,\"621\":1,\"629\":1,\"630\":1,\"631\":2,\"632\":1,\"634\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"652\":2,\"661\":1,\"662\":1,\"663\":1,\"673\":2,\"674\":1,\"679\":1,\"680\":2,\"681\":2,\"682\":2,\"693\":1,\"697\":1,\"698\":1}}],[\"tools调试vuex\",{\"1\":{\"685\":1}}],[\"tools来调试vuex中的数据\",{\"1\":{\"684\":1}}],[\"to和\",{\"1\":{\"571\":1}}],[\"todepth\",{\"1\":{\"570\":2}}],[\"tovalue\",{\"1\":{\"505\":7,\"508\":4}}],[\"to=\",{\"1\":{\"419\":1,\"420\":3,\"421\":2,\"540\":2,\"543\":2,\"544\":2,\"546\":2,\"547\":5,\"550\":2,\"553\":1,\"578\":3}}],[\"toraw\",{\"1\":{\"354\":3}}],[\"toref\",{\"0\":{\"362\":1,\"364\":1},\"1\":{\"349\":3,\"364\":1}}],[\"torefs\",{\"0\":{\"362\":1,\"363\":1},\"1\":{\"349\":3,\"363\":2,\"379\":2}}],[\"toc\",{\"1\":{\"298\":1,\"314\":1}}],[\"token\",{\"1\":{\"247\":1,\"568\":3}}],[\"tofixed\",{\"1\":{\"172\":1}}],[\"toggle\",{\"1\":{\"154\":2,\"430\":2,\"440\":2}}],[\"touppercase\",{\"1\":{\"489\":1}}],[\"touch\",{\"1\":{\"139\":1}}],[\"toutiao\",{\"1\":{\"69\":1}}],[\"to\",{\"1\":{\"59\":5,\"91\":1,\"106\":1,\"110\":1,\"155\":1,\"157\":2,\"158\":1,\"159\":1,\"161\":2,\"163\":1,\"167\":1,\"171\":1,\"172\":1,\"174\":1,\"176\":3,\"186\":4,\"198\":1,\"236\":1,\"238\":2,\"250\":2,\"251\":3,\"263\":5,\"267\":1,\"268\":1,\"310\":2,\"326\":2,\"349\":1,\"379\":3,\"415\":1,\"416\":1,\"418\":1,\"419\":1,\"420\":1,\"421\":1,\"525\":2,\"540\":2,\"547\":2,\"550\":1,\"554\":2,\"559\":10,\"560\":4,\"561\":9,\"563\":8,\"566\":3,\"567\":3,\"568\":2,\"569\":4,\"570\":3,\"571\":11,\"573\":1}}],[\"totalprice\",{\"1\":{\"480\":2}}],[\"total\",{\"1\":{\"39\":1}}],[\"totaltask\",{\"1\":{\"39\":4}}],[\"tostring\",{\"1\":{\"16\":1,\"39\":2,\"40\":2}}],[\"top\",{\"1\":{\"12\":1,\"14\":1,\"15\":2,\"16\":2,\"18\":1,\"39\":1,\"121\":4,\"124\":5,\"132\":3,\"136\":2,\"143\":3,\"291\":1,\"546\":1,\"547\":1,\"551\":1,\"571\":5}}],[\"ts处理\",{\"0\":{\"200\":1}}],[\"tsconfig\",{\"1\":{\"63\":2,\"72\":2,\"269\":1}}],[\"tsx\",{\"1\":{\"59\":1,\"63\":1,\"72\":1}}],[\"ts\",{\"0\":{\"72\":1,\"191\":1},\"1\":{\"13\":1,\"34\":2,\"59\":3,\"60\":1,\"61\":1,\"63\":2,\"68\":1,\"70\":2,\"72\":2,\"188\":1,\"198\":2,\"269\":2,\"270\":1}}],[\"team\",{\"1\":{\"550\":2}}],[\"tennis\",{\"1\":{\"483\":4}}],[\"teleport>\",{\"1\":{\"419\":1,\"420\":3,\"421\":2}}],[\"teleport\",{\"0\":{\"418\":1},\"1\":{\"418\":2}}],[\"tempnames\",{\"1\":{\"367\":3}}],[\"template模板的方式\",{\"1\":{\"530\":1}}],[\"template模板中\",{\"1\":{\"529\":1}}],[\"template模板中只能有一个根元素\",{\"1\":{\"437\":1}}],[\"template中的\",{\"1\":{\"528\":1}}],[\"template中通过\",{\"1\":{\"528\":1}}],[\"template中可以直接使用\",{\"1\":{\"402\":1}}],[\"template标签\",{\"1\":{\"527\":1}}],[\"template属性\",{\"0\":{\"527\":1},\"1\":{\"527\":1}}],[\"template会自动进行更新来显示最新的数据\",{\"1\":{\"475\":1}}],[\"template元素是一种用于保存客户端内容的机制\",{\"1\":{\"527\":1}}],[\"template元素使用\",{\"0\":{\"458\":1}}],[\"template元素可以当做不可见的包裹元素\",{\"1\":{\"453\":1}}],[\"template元素\",{\"1\":{\"453\":1}}],[\"templatepath\",{\"1\":{\"201\":2}}],[\"template>\",{\"1\":{\"105\":4,\"154\":1,\"161\":1,\"167\":1,\"168\":1,\"171\":1,\"172\":1,\"174\":1,\"176\":1,\"195\":1,\"250\":1,\"275\":4,\"276\":1,\"283\":2,\"284\":2,\"288\":2,\"290\":2,\"291\":6,\"292\":1,\"294\":2,\"295\":4,\"299\":1,\"300\":6,\"304\":2,\"305\":2,\"306\":2,\"307\":1,\"308\":1,\"309\":1,\"310\":2,\"313\":2,\"314\":2,\"315\":1,\"316\":6,\"320\":2,\"321\":2,\"322\":2,\"323\":1,\"324\":1,\"325\":1,\"326\":2,\"328\":1,\"330\":2,\"331\":2,\"337\":2,\"338\":1,\"339\":1,\"342\":2,\"343\":2,\"344\":1,\"347\":1,\"349\":3,\"350\":1,\"353\":1,\"356\":1,\"359\":1,\"361\":1,\"363\":1,\"366\":1,\"367\":1,\"370\":1,\"371\":2,\"374\":1,\"375\":1,\"376\":1,\"377\":1,\"379\":1,\"380\":1,\"384\":2,\"390\":1,\"392\":1,\"400\":1,\"402\":2,\"403\":2,\"404\":2,\"405\":1,\"410\":2,\"411\":1,\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1,\"429\":1,\"430\":1,\"432\":1,\"433\":1,\"435\":1,\"437\":1,\"438\":1,\"440\":1,\"441\":1,\"443\":1,\"444\":1,\"445\":1,\"446\":1,\"448\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":3,\"454\":1,\"455\":1,\"457\":1,\"458\":2,\"459\":1,\"463\":1,\"470\":1,\"471\":1,\"472\":1,\"473\":2,\"474\":1,\"476\":1,\"477\":1,\"480\":3,\"483\":1,\"489\":2,\"490\":1,\"494\":1,\"497\":1,\"500\":1,\"503\":2,\"504\":1,\"527\":1,\"530\":2,\"543\":2,\"544\":2,\"546\":1,\"547\":2,\"551\":1,\"578\":3,\"581\":1,\"584\":1,\"603\":1,\"604\":1,\"605\":1,\"617\":1,\"619\":1,\"694\":1}}],[\"template\",{\"0\":{\"453\":1},\"1\":{\"63\":1,\"72\":1,\"199\":2,\"201\":1,\"236\":2,\"250\":4,\"337\":3,\"385\":1,\"430\":2,\"432\":1,\"433\":1,\"438\":1,\"440\":1,\"441\":1,\"443\":1,\"444\":1,\"445\":1,\"446\":1,\"448\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":1,\"457\":1,\"458\":2,\"459\":1,\"463\":1,\"471\":1,\"472\":1,\"473\":2,\"474\":1,\"476\":1,\"477\":1,\"480\":1,\"481\":1,\"483\":1,\"527\":4,\"540\":2,\"544\":2,\"557\":2,\"563\":1}}],[\"testing\",{\"1\":{\"268\":2}}],[\"test属性\",{\"1\":{\"215\":1}}],[\"test\",{\"1\":{\"9\":1,\"23\":1,\"170\":1,\"197\":1,\"198\":3,\"215\":1,\"218\":1,\"224\":1,\"225\":1,\"227\":2,\"232\":1,\"248\":1,\"249\":1,\"250\":1}}],[\"textarea>\",{\"1\":{\"483\":1}}],[\"textalign\",{\"1\":{\"18\":2}}],[\"textdecoration\",{\"1\":{\"444\":1}}],[\"textdecorationtype\",{\"1\":{\"17\":1,\"39\":1}}],[\"textcontent\",{\"1\":{\"413\":5,\"415\":5,\"416\":5,\"434\":1}}],[\"textcallback\",{\"1\":{\"110\":2}}],[\"text=\",{\"1\":{\"294\":1,\"295\":1,\"434\":1}}],[\"text>\",{\"1\":{\"121\":4,\"122\":1,\"124\":4,\"136\":1}}],[\"textinput\",{\"0\":{\"7\":1},\"1\":{\"16\":1}}],[\"text\",{\"0\":{\"6\":1,\"122\":1,\"434\":1},\"1\":{\"3\":1,\"6\":1,\"14\":5,\"15\":5,\"16\":2,\"17\":6,\"18\":1,\"21\":4,\"23\":5,\"38\":2,\"39\":6,\"40\":2,\"95\":3,\"116\":1,\"121\":14,\"123\":2,\"124\":12,\"136\":9,\"143\":4,\"160\":2,\"294\":5,\"295\":1,\"344\":2,\"410\":1,\"411\":1,\"415\":1,\"416\":2,\"419\":2,\"420\":2,\"421\":2,\"450\":1,\"452\":1,\"459\":1,\"473\":1,\"476\":1,\"480\":1,\"489\":2,\"490\":2,\"603\":1,\"618\":1,\"631\":1,\"692\":2,\"693\":2,\"694\":4}}],[\"type的类型都可以是哪些\",{\"1\":{\"306\":1,\"322\":1}}],[\"type的使用\",{\"0\":{\"232\":1}}],[\"typed\",{\"1\":{\"179\":1}}],[\"type属性\",{\"1\":{\"130\":1}}],[\"type=template`\",{\"1\":{\"201\":1}}],[\"type=\",{\"1\":{\"124\":2,\"125\":3,\"128\":4,\"130\":8,\"136\":1,\"162\":1,\"172\":1,\"197\":1,\"201\":1,\"250\":1,\"289\":4,\"344\":2,\"410\":1,\"411\":1,\"450\":1,\"452\":1,\"459\":1,\"473\":1,\"476\":1,\"483\":6,\"487\":1,\"489\":2,\"490\":2,\"527\":1,\"578\":1,\"603\":1,\"618\":1,\"631\":1,\"694\":1}}],[\"types\",{\"1\":{\"59\":1,\"63\":5,\"72\":7}}],[\"typescript是一种静态类型的javascript超集\",{\"1\":{\"268\":1}}],[\"typescript的处理\",{\"1\":{\"205\":1}}],[\"typescript开发脚本逻辑\",{\"1\":{\"203\":1}}],[\"typescript\",{\"1\":{\"59\":17,\"68\":1,\"186\":1,\"203\":1,\"244\":3,\"246\":1,\"248\":1,\"268\":1,\"270\":1,\"401\":1,\"519\":2,\"580\":1}}],[\"typeof\",{\"1\":{\"47\":1,\"53\":1,\"54\":1,\"59\":2,\"137\":2}}],[\"type\",{\"0\":{\"231\":1},\"1\":{\"8\":2,\"16\":1,\"17\":1,\"39\":2,\"59\":1,\"125\":1,\"128\":1,\"136\":10,\"162\":1,\"197\":3,\"198\":2,\"201\":2,\"214\":1,\"224\":1,\"227\":1,\"231\":2,\"232\":1,\"277\":2,\"282\":1,\"305\":1,\"306\":4,\"321\":1,\"322\":4,\"349\":1,\"350\":1,\"386\":5,\"391\":1,\"403\":2}}],[\"dx\",{\"1\":{\"531\":1}}],[\"d它们都是没有变化的\",{\"1\":{\"463\":1}}],[\"dd\",{\"1\":{\"413\":1,\"415\":1,\"416\":1}}],[\"ds\",{\"1\":{\"238\":1}}],[\"duration=\",{\"1\":{\"163\":2}}],[\"duration\",{\"1\":{\"123\":1,\"126\":1,\"163\":1,\"172\":1}}],[\"duplicate\",{\"1\":{\"59\":1}}],[\"dupe\",{\"1\":{\"59\":4}}],[\"dynamicid\",{\"1\":{\"393\":1}}],[\"dynamicdata\",{\"1\":{\"118\":2}}],[\"dynamic\",{\"1\":{\"118\":2,\"142\":1,\"146\":1}}],[\"dns\",{\"1\":{\"68\":1}}],[\"dcloud\",{\"1\":{\"64\":1,\"67\":1,\"68\":1}}],[\"dcloudio\",{\"1\":{\"63\":1,\"68\":5,\"72\":1}}],[\"d\",{\"1\":{\"59\":1,\"60\":1,\"62\":1,\"63\":1,\"72\":2,\"185\":1,\"188\":2,\"192\":1,\"209\":1,\"215\":1,\"216\":1,\"217\":2,\"218\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"234\":1,\"235\":1,\"238\":1,\"242\":1,\"243\":2,\"244\":1,\"250\":2,\"254\":1,\"269\":1,\"395\":1,\"396\":1,\"463\":1,\"478\":2}}],[\"day01\",{\"1\":{\"686\":1}}],[\"dayjs\",{\"1\":{\"413\":3,\"415\":4,\"416\":4}}],[\"danger\",{\"1\":{\"306\":1,\"322\":1}}],[\"dance\",{\"1\":{\"47\":3}}],[\"date\",{\"1\":{\"306\":1,\"322\":1,\"415\":2,\"416\":2,\"480\":5,\"502\":1}}],[\"data中返回的对象会被vue的响应式系统劫持\",{\"1\":{\"528\":1}}],[\"data属性是传入一个函数\",{\"1\":{\"528\":1}}],[\"data属性\",{\"0\":{\"528\":1}}],[\"data返回的对象是有添加到vue的响应式系统中\",{\"1\":{\"430\":1}}],[\"dataurlcondition\",{\"1\":{\"224\":1,\"232\":1}}],[\"datatoesm\",{\"1\":{\"198\":1}}],[\"dataset\",{\"1\":{\"136\":1,\"176\":2,\"408\":1}}],[\"data=\",{\"1\":{\"105\":3}}],[\"data\",{\"1\":{\"9\":2,\"91\":4,\"93\":2,\"95\":3,\"98\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":7,\"109\":1,\"110\":14,\"111\":1,\"112\":1,\"115\":1,\"117\":5,\"118\":4,\"123\":1,\"124\":1,\"136\":5,\"154\":1,\"161\":1,\"167\":1,\"168\":1,\"171\":1,\"172\":1,\"174\":1,\"176\":2,\"201\":2,\"231\":2,\"250\":2,\"276\":1,\"294\":1,\"295\":1,\"305\":1,\"306\":1,\"310\":6,\"313\":2,\"321\":1,\"322\":1,\"326\":6,\"328\":1,\"330\":2,\"337\":1,\"339\":1,\"349\":1,\"351\":1,\"383\":1,\"388\":1,\"398\":1,\"399\":1,\"430\":1,\"432\":1,\"433\":1,\"438\":1,\"440\":1,\"441\":1,\"443\":1,\"444\":1,\"445\":1,\"446\":1,\"448\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":1,\"457\":1,\"458\":1,\"459\":1,\"463\":1,\"471\":1,\"472\":1,\"473\":2,\"474\":1,\"475\":1,\"476\":1,\"477\":2,\"478\":1,\"480\":1,\"483\":1,\"494\":1,\"497\":2,\"499\":1,\"500\":1,\"504\":9,\"505\":6,\"513\":2,\"527\":2,\"578\":8,\"651\":1,\"668\":1}}],[\"dark\",{\"1\":{\"142\":2,\"146\":2}}],[\"darkmode为true为必填\",{\"1\":{\"139\":1}}],[\"darkmode\",{\"1\":{\"139\":2}}],[\"da\",{\"1\":{\"58\":1}}],[\"double\",{\"1\":{\"581\":1}}],[\"doublecount\",{\"1\":{\"581\":1}}],[\"doasyncwork\",{\"1\":{\"383\":1}}],[\"done部分在动画完成时调用done函数\",{\"1\":{\"171\":1}}],[\"done是一个在进入过渡完成时应该被调用的函数\",{\"1\":{\"171\":1}}],[\"done\",{\"1\":{\"168\":7,\"171\":4,\"176\":4}}],[\"dots>\",{\"1\":{\"123\":1}}],[\"dots\",{\"1\":{\"123\":1}}],[\"downloadfile\",{\"1\":{\"144\":2}}],[\"download\",{\"1\":{\"81\":1,\"125\":1}}],[\"dom\",{\"0\":{\"462\":1},\"1\":{\"63\":1,\"72\":1,\"155\":2,\"168\":3,\"278\":1,\"335\":2,\"408\":2,\"410\":1,\"418\":1,\"429\":1,\"436\":2,\"437\":4,\"462\":2,\"464\":2,\"493\":1,\"494\":2,\"503\":2,\"510\":3,\"565\":1,\"571\":1}}],[\"do\",{\"1\":{\"59\":2,\"93\":3,\"110\":1,\"268\":1,\"478\":1,\"525\":2,\"563\":1}}],[\"doesn\",{\"1\":{\"236\":1}}],[\"does\",{\"1\":{\"59\":4}}],[\"dog\",{\"1\":{\"51\":1}}],[\"dosomerender\",{\"1\":{\"23\":2}}],[\"dosomecalculations\",{\"1\":{\"23\":2}}],[\"doctype\",{\"1\":{\"236\":1,\"480\":1}}],[\"document\",{\"1\":{\"92\":1,\"201\":1,\"571\":1}}],[\"docschina\",{\"1\":{\"204\":1,\"214\":1,\"262\":1,\"263\":1,\"264\":1}}],[\"docstate\",{\"1\":{\"166\":3}}],[\"docs\",{\"1\":{\"59\":2,\"171\":1,\"447\":1}}],[\"doc\",{\"1\":{\"13\":1,\"17\":1,\"35\":1}}],[\"deactivated\",{\"1\":{\"494\":1}}],[\"decrement\",{\"1\":{\"389\":2,\"390\":2,\"398\":2,\"399\":2,\"400\":2,\"480\":2,\"527\":4}}],[\"decodeuricomponent\",{\"1\":{\"197\":1}}],[\"decoration\",{\"1\":{\"17\":1,\"39\":1}}],[\"deep\",{\"1\":{\"381\":3,\"477\":1,\"478\":1,\"479\":1,\"582\":1}}],[\"deepclone\",{\"1\":{\"53\":3,\"54\":3}}],[\"dedicated\",{\"1\":{\"268\":1}}],[\"dependency\",{\"1\":{\"204\":1,\"250\":1}}],[\"debounceref\",{\"1\":{\"359\":2}}],[\"debounce\",{\"1\":{\"197\":1}}],[\"debug=true\",{\"1\":{\"577\":1}}],[\"debugoptions\",{\"1\":{\"139\":1}}],[\"debugger\",{\"1\":{\"59\":1,\"494\":2,\"532\":1}}],[\"debug\",{\"0\":{\"145\":1},\"1\":{\"23\":1,\"139\":2,\"145\":1,\"197\":1}}],[\"detail\",{\"1\":{\"130\":6}}],[\"details\",{\"1\":{\"58\":1,\"251\":1}}],[\"demomixin\",{\"1\":{\"497\":6}}],[\"demo3\",{\"1\":{\"124\":2}}],[\"demo2\",{\"1\":{\"124\":2}}],[\"demo1\",{\"1\":{\"124\":2}}],[\"demo\",{\"1\":{\"121\":12,\"124\":12,\"143\":3,\"197\":1,\"276\":1,\"328\":1,\"384\":3,\"497\":1,\"544\":1,\"578\":1,\"602\":2}}],[\"devserverhistoryapifallback\",{\"1\":{\"263\":1}}],[\"devserverproxy\",{\"1\":{\"262\":1}}],[\"devserver\",{\"0\":{\"252\":1,\"259\":1},\"1\":{\"252\":3,\"256\":1,\"259\":1,\"261\":1,\"262\":4,\"263\":2,\"265\":1,\"270\":1}}],[\"devtool\",{\"1\":{\"239\":1,\"265\":2}}],[\"devtools\",{\"1\":{\"81\":1,\"251\":2,\"255\":1,\"580\":1,\"582\":1}}],[\"devinjectioncode\",{\"1\":{\"201\":2}}],[\"dev\",{\"0\":{\"254\":1},\"1\":{\"69\":2,\"81\":1,\"86\":1,\"89\":1,\"99\":1,\"113\":1,\"114\":1,\"119\":1,\"123\":2,\"124\":2,\"128\":1,\"130\":1,\"132\":2,\"133\":1,\"134\":1,\"139\":1,\"177\":1,\"178\":1,\"186\":1,\"209\":2,\"215\":1,\"248\":1,\"252\":2,\"254\":2,\"255\":1,\"258\":5,\"262\":1,\"263\":3,\"265\":1,\"270\":1,\"532\":1}}],[\"development\",{\"1\":{\"27\":1,\"239\":2,\"265\":3,\"270\":1,\"272\":1}}],[\"developers\",{\"1\":{\"81\":1,\"86\":1,\"89\":1,\"99\":1,\"113\":1,\"114\":1,\"119\":1,\"123\":2,\"124\":2,\"128\":1,\"130\":1,\"132\":2,\"133\":1,\"134\":1,\"139\":1}}],[\"developer\",{\"1\":{\"13\":1,\"17\":1,\"33\":1,\"35\":1,\"447\":1}}],[\"devecostudio\",{\"0\":{\"25\":1}}],[\"degit\",{\"1\":{\"68\":3}}],[\"dest\",{\"1\":{\"271\":1}}],[\"destructuring\",{\"1\":{\"243\":1}}],[\"destructure\",{\"1\":{\"59\":1}}],[\"description\",{\"1\":{\"530\":3}}],[\"desc\",{\"1\":{\"6\":1,\"337\":2,\"339\":2}}],[\"def\",{\"1\":{\"577\":3}}],[\"definition\",{\"1\":{\"59\":1}}],[\"definestore\",{\"1\":{\"581\":4,\"583\":2,\"584\":4,\"585\":4}}],[\"defineexpose\",{\"0\":{\"405\":1},\"1\":{\"405\":2}}],[\"defineemits\",{\"0\":{\"404\":1},\"1\":{\"404\":1}}],[\"defineasynccomponent接受两种类型的参数\",{\"1\":{\"282\":1}}],[\"defineasynccomponent\",{\"1\":{\"282\":12,\"422\":1}}],[\"defineprops是内置组件\",{\"1\":{\"403\":1}}],[\"defineprops\",{\"0\":{\"403\":1},\"1\":{\"403\":2,\"404\":1}}],[\"defineproperty\",{\"1\":{\"241\":1,\"520\":1}}],[\"defineplugin允许在编译时创建配置的全局常量\",{\"1\":{\"237\":1}}],[\"defineplugin\",{\"0\":{\"237\":1},\"1\":{\"237\":2,\"251\":1}}],[\"defined\",{\"1\":{\"237\":1}}],[\"defineconfig\",{\"1\":{\"189\":2,\"190\":2,\"396\":2}}],[\"define\",{\"1\":{\"59\":1,\"251\":1}}],[\"default为\",{\"1\":{\"305\":1,\"321\":1}}],[\"default=\",{\"1\":{\"296\":1,\"570\":1}}],[\"default>\",{\"1\":{\"283\":1,\"291\":1}}],[\"default\",{\"1\":{\"23\":1,\"59\":1,\"128\":1,\"142\":3,\"146\":3,\"154\":1,\"161\":1,\"167\":1,\"168\":2,\"171\":1,\"172\":1,\"174\":1,\"176\":1,\"189\":1,\"190\":1,\"195\":1,\"198\":1,\"201\":1,\"241\":5,\"250\":1,\"268\":2,\"276\":1,\"277\":3,\"282\":1,\"283\":2,\"288\":1,\"290\":1,\"291\":4,\"294\":4,\"295\":2,\"299\":1,\"300\":2,\"304\":2,\"305\":3,\"306\":5,\"307\":1,\"308\":1,\"310\":2,\"311\":1,\"313\":3,\"314\":2,\"315\":1,\"316\":2,\"320\":2,\"321\":3,\"322\":5,\"323\":1,\"324\":1,\"326\":2,\"327\":1,\"328\":1,\"330\":3,\"331\":2,\"338\":2,\"339\":1,\"342\":2,\"343\":2,\"344\":2,\"349\":7,\"350\":4,\"353\":1,\"356\":1,\"359\":2,\"363\":1,\"366\":1,\"367\":1,\"368\":1,\"370\":1,\"371\":2,\"374\":1,\"375\":1,\"376\":1,\"377\":2,\"379\":1,\"380\":1,\"384\":2,\"388\":1,\"389\":1,\"391\":3,\"392\":4,\"396\":1,\"398\":1,\"399\":1,\"403\":2,\"411\":1,\"413\":2,\"415\":1,\"478\":1,\"489\":4,\"490\":1,\"493\":1,\"494\":1,\"497\":1,\"500\":2,\"513\":1,\"530\":1,\"543\":1,\"544\":1,\"551\":1,\"578\":1,\"585\":3,\"603\":1,\"604\":1,\"605\":1,\"611\":1,\"616\":1,\"618\":1,\"619\":1,\"629\":1,\"630\":1,\"631\":1,\"632\":1,\"641\":1,\"642\":1,\"643\":1,\"652\":1,\"661\":1,\"662\":1,\"668\":2,\"669\":1,\"692\":1,\"694\":1,\"697\":1,\"698\":1}}],[\"delay\",{\"1\":{\"163\":1,\"176\":2,\"282\":2,\"359\":2}}],[\"del\",{\"1\":{\"39\":1}}],[\"deletebutton\",{\"1\":{\"39\":2}}],[\"dio\",{\"1\":{\"582\":1}}],[\"diff\",{\"1\":{\"464\":2}}],[\"diff算法优化\",{\"1\":{\"520\":1}}],[\"diff算法\",{\"1\":{\"464\":2}}],[\"diff算法通常包括以下步骤\",{\"1\":{\"40\":1}}],[\"diff算法通常用于虚拟dom的更新和渲染优化\",{\"1\":{\"40\":1}}],[\"diff算法可以帮助确定哪些dom节点需要被更新\",{\"1\":{\"40\":1}}],[\"diff算法是一种用于比较两个数据结构\",{\"1\":{\"40\":1}}],[\"directives\",{\"1\":{\"409\":1,\"411\":2,\"413\":3,\"415\":1,\"426\":1,\"498\":1}}],[\"directive\",{\"1\":{\"408\":2,\"409\":1,\"412\":1,\"413\":1}}],[\"directive=\",{\"1\":{\"408\":1}}],[\"direction\",{\"1\":{\"12\":1,\"16\":1,\"121\":4,\"136\":1}}],[\"dir\",{\"1\":{\"242\":2,\"243\":1,\"244\":1,\"408\":1}}],[\"dirname\",{\"1\":{\"211\":1,\"248\":1,\"264\":2,\"265\":1,\"555\":1}}],[\"divclick\",{\"1\":{\"450\":3}}],[\"div>`\",{\"1\":{\"291\":1,\"294\":1}}],[\"div>\",{\"1\":{\"154\":1,\"163\":2,\"167\":2,\"168\":2,\"171\":2,\"172\":1,\"174\":1,\"176\":1,\"236\":1,\"275\":1,\"276\":1,\"290\":2,\"291\":3,\"294\":1,\"295\":2,\"299\":3,\"300\":4,\"304\":2,\"305\":2,\"306\":2,\"307\":1,\"308\":1,\"309\":3,\"310\":1,\"313\":2,\"314\":2,\"315\":3,\"316\":4,\"320\":2,\"321\":2,\"322\":2,\"323\":1,\"324\":1,\"325\":3,\"326\":1,\"328\":1,\"330\":2,\"331\":2,\"337\":1,\"339\":1,\"342\":2,\"349\":1,\"350\":1,\"353\":1,\"356\":1,\"359\":1,\"361\":1,\"363\":1,\"371\":2,\"374\":1,\"375\":1,\"376\":1,\"377\":1,\"379\":1,\"380\":1,\"393\":2,\"398\":1,\"399\":1,\"400\":1,\"402\":1,\"403\":1,\"408\":1,\"410\":1,\"411\":1,\"419\":1,\"420\":4,\"421\":2,\"429\":2,\"432\":3,\"433\":2,\"436\":1,\"440\":7,\"441\":4,\"443\":6,\"444\":2,\"445\":4,\"446\":4,\"448\":4,\"449\":1,\"450\":2,\"453\":1,\"457\":1,\"458\":1,\"459\":1,\"463\":1,\"473\":1,\"476\":1,\"477\":1,\"480\":1,\"483\":1,\"494\":1,\"497\":1,\"500\":1,\"504\":3,\"527\":4,\"530\":2,\"540\":3,\"543\":2,\"544\":3,\"546\":3,\"547\":4,\"551\":3,\"557\":3,\"578\":3,\"583\":1,\"603\":3,\"604\":1,\"605\":1,\"617\":1,\"619\":1,\"694\":1}}],[\"div\",{\"1\":{\"119\":1,\"350\":2,\"388\":1,\"389\":1,\"390\":1,\"391\":10,\"392\":2,\"530\":1,\"543\":2}}],[\"divider\",{\"1\":{\"3\":1,\"40\":1,\"458\":1}}],[\"dispatch触发action\",{\"1\":{\"642\":1}}],[\"dispatch\",{\"1\":{\"641\":1,\"642\":1,\"644\":1,\"681\":2}}],[\"display\",{\"1\":{\"121\":1,\"123\":1,\"124\":2,\"136\":3,\"167\":1,\"168\":1,\"171\":1,\"174\":1,\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1,\"436\":2}}],[\"disabled=\",{\"1\":{\"480\":1}}],[\"disabled\",{\"1\":{\"418\":1}}],[\"disablescroll\",{\"1\":{\"146\":1}}],[\"disallow\",{\"1\":{\"59\":1}}],[\"dist文件夹下有两个文件\",{\"1\":{\"532\":1}}],[\"dist\",{\"1\":{\"59\":1,\"60\":1,\"69\":2,\"208\":1,\"242\":2,\"243\":1,\"244\":1,\"248\":1,\"250\":3,\"265\":1,\"271\":2}}],[\"discount\",{\"1\":{\"17\":6}}],[\"diagnose\",{\"1\":{\"27\":1}}],[\"a6\",{\"1\":{\"686\":1}}],[\"af\",{\"1\":{\"686\":1}}],[\"aftereach\",{\"1\":{\"560\":2,\"565\":1,\"570\":1}}],[\"afterenter\",{\"1\":{\"168\":3}}],[\"afteruser\",{\"1\":{\"548\":1}}],[\"afteruser`\",{\"1\":{\"548\":1}}],[\"afterleave\",{\"1\":{\"168\":3}}],[\"afterleave=\",{\"1\":{\"168\":1}}],[\"after\",{\"1\":{\"151\":2,\"168\":3,\"570\":1}}],[\"authenticated\",{\"1\":{\"584\":1}}],[\"author\",{\"1\":{\"577\":3,\"578\":1}}],[\"auth\",{\"1\":{\"569\":1,\"584\":3}}],[\"autoprefixer\",{\"1\":{\"220\":1,\"221\":2,\"222\":1,\"223\":4}}],[\"autoplay\",{\"1\":{\"123\":1}}],[\"auto\",{\"1\":{\"59\":2,\"60\":1,\"113\":3,\"121\":1,\"136\":1,\"137\":2,\"142\":3,\"146\":3,\"167\":1,\"236\":1,\"578\":1,\"603\":1}}],[\"auto|off\",{\"1\":{\"59\":1}}],[\"admin\",{\"1\":{\"577\":1,\"583\":1}}],[\"advanced\",{\"1\":{\"558\":1}}],[\"addfn\",{\"1\":{\"630\":2}}],[\"addcount\",{\"1\":{\"624\":1,\"630\":1,\"637\":1,\"695\":1}}],[\"addclick\",{\"1\":{\"402\":2}}],[\"additem直接用\",{\"0\":{\"617\":1,\"630\":1,\"642\":1}}],[\"additem>\",{\"1\":{\"603\":1}}],[\"additem\",{\"0\":{\"604\":1},\"1\":{\"602\":1,\"603\":3}}],[\"additional\",{\"1\":{\"268\":1}}],[\"additionaldata\",{\"1\":{\"189\":1}}],[\"addroute\",{\"1\":{\"573\":3,\"574\":5,\"578\":2}}],[\"address\",{\"1\":{\"260\":1}}],[\"addmovie\",{\"1\":{\"459\":2}}],[\"addname\",{\"1\":{\"313\":1,\"330\":1}}],[\"addn\",{\"1\":{\"311\":2,\"327\":2}}],[\"addnum方法在numbers数组的随机位置插入一个新的数字\",{\"1\":{\"174\":1}}],[\"addnum\",{\"1\":{\"174\":2}}],[\"addeventlistener\",{\"1\":{\"201\":1,\"503\":3}}],[\"add\",{\"1\":{\"136\":1,\"267\":1,\"311\":2,\"327\":2,\"388\":1,\"581\":1,\"611\":2}}],[\"axios\",{\"1\":{\"483\":1,\"578\":6,\"651\":1,\"668\":3}}],[\"axis\",{\"1\":{\"12\":1,\"16\":1}}],[\"a和b是一致的会继续进行比较\",{\"1\":{\"464\":1}}],[\"a>\",{\"1\":{\"337\":1,\"437\":1,\"438\":1,\"445\":1,\"546\":2,\"547\":3,\"551\":3}}],[\"a><\",{\"1\":{\"337\":1}}],[\"a|b\",{\"1\":{\"279\":1}}],[\"ac\",{\"1\":{\"686\":1}}],[\"action\",{\"1\":{\"584\":8}}],[\"actions的关系是\",{\"1\":{\"644\":1}}],[\"actions的是store\",{\"1\":{\"638\":1}}],[\"actions方法名字\",{\"1\":{\"644\":1}}],[\"actions里方法名\",{\"1\":{\"681\":2}}],[\"actions里的方法名\",{\"1\":{\"644\":1}}],[\"actions里的函数名\",{\"1\":{\"641\":1,\"681\":2}}],[\"actions里放入异步操作\",{\"1\":{\"638\":1}}],[\"actions函数名\",{\"1\":{\"641\":1,\"643\":1}}],[\"actions使用方式修改\",{\"0\":{\"681\":1}}],[\"actions使用方式\",{\"1\":{\"644\":1}}],[\"actions使用\",{\"0\":{\"639\":1}}],[\"actions和mutations里函数\",{\"1\":{\"638\":1}}],[\"actions和mutations区别\",{\"1\":{\"638\":1}}],[\"actions是否能操作state\",{\"1\":{\"638\":1}}],[\"actions定义\",{\"0\":{\"635\":1}}],[\"actions\",{\"0\":{\"584\":1,\"695\":1},\"1\":{\"580\":1,\"581\":2,\"584\":4,\"597\":1,\"599\":1,\"637\":2,\"651\":1,\"668\":2,\"670\":1,\"677\":1,\"678\":1,\"694\":2,\"695\":4}}],[\"activated\",{\"1\":{\"494\":1}}],[\"activecomponent\",{\"1\":{\"164\":1,\"278\":1,\"280\":1}}],[\"activecolor\",{\"1\":{\"126\":1}}],[\"active\",{\"1\":{\"123\":1,\"126\":3,\"155\":2,\"157\":2,\"158\":4,\"159\":2,\"160\":4,\"161\":4,\"163\":3,\"167\":4,\"170\":2,\"174\":3,\"176\":2,\"275\":1,\"276\":1,\"328\":1,\"440\":8,\"441\":3,\"570\":1}}],[\"accept\",{\"1\":{\"256\":2}}],[\"attrorprop\",{\"1\":{\"437\":1}}],[\"attr\",{\"1\":{\"349\":1,\"437\":2}}],[\"attrs\",{\"1\":{\"349\":11}}],[\"attributes\",{\"1\":{\"59\":1,\"294\":1,\"349\":1,\"460\":1}}],[\"attribute\",{\"0\":{\"308\":1,\"324\":1},\"1\":{\"59\":2,\"173\":2,\"175\":1,\"291\":1,\"343\":1,\"391\":1,\"407\":1,\"408\":2,\"437\":7,\"481\":1}}],[\"attempts\",{\"1\":{\"282\":1}}],[\"at\",{\"1\":{\"250\":1,\"503\":2,\"509\":1}}],[\"ajax\",{\"1\":{\"161\":1}}],[\"a0\",{\"1\":{\"132\":1}}],[\"a3\",{\"1\":{\"132\":1}}],[\"ae\",{\"1\":{\"124\":1,\"686\":1}}],[\"a4\",{\"1\":{\"123\":3,\"124\":1,\"132\":1}}],[\"a1\",{\"1\":{\"123\":1,\"686\":1}}],[\"a8\",{\"1\":{\"123\":2,\"686\":2}}],[\"amd等\",{\"1\":{\"204\":1}}],[\"amd不同\",{\"1\":{\"195\":1}}],[\"amd\",{\"1\":{\"195\":2}}],[\"am\",{\"1\":{\"93\":2}}],[\"avatar\",{\"1\":{\"582\":1}}],[\"avatars\",{\"1\":{\"438\":1}}],[\"avar\",{\"1\":{\"23\":1}}],[\"avoid\",{\"1\":{\"59\":1}}],[\"await\",{\"1\":{\"59\":2,\"197\":1,\"198\":2,\"201\":1,\"383\":1,\"511\":1,\"559\":1,\"573\":1,\"578\":4,\"584\":3,\"651\":1,\"668\":1}}],[\"alert\",{\"1\":{\"567\":1}}],[\"alt=\",{\"1\":{\"195\":1,\"437\":3,\"438\":3,\"445\":1}}],[\"allprice\",{\"1\":{\"657\":1,\"662\":1,\"668\":1,\"696\":1,\"698\":1}}],[\"allcount\",{\"1\":{\"657\":1,\"662\":2,\"668\":1,\"696\":1,\"698\":2}}],[\"allfn\",{\"1\":{\"652\":1}}],[\"all\",{\"1\":{\"159\":2,\"163\":1,\"174\":1,\"267\":1}}],[\"allowednames\",{\"1\":{\"59\":1}}],[\"allowdestructuring\",{\"1\":{\"59\":1}}],[\"alpha\",{\"1\":{\"68\":3,\"267\":1}}],[\"alive>\",{\"1\":{\"278\":1}}],[\"alive\",{\"0\":{\"278\":1},\"1\":{\"278\":1,\"494\":2}}],[\"alipay\",{\"1\":{\"69\":1}}],[\"alias\",{\"1\":{\"59\":1,\"190\":1,\"197\":1,\"250\":1,\"264\":5,\"396\":1,\"555\":3}}],[\"align\",{\"1\":{\"121\":4,\"123\":2,\"124\":3,\"136\":2,\"160\":1,\"480\":1}}],[\"alignlistitem\",{\"1\":{\"39\":1}}],[\"alignitems\",{\"1\":{\"14\":4,\"15\":4,\"17\":1}}],[\"always\",{\"1\":{\"59\":4,\"60\":1}}],[\"airbnb\",{\"1\":{\"59\":1,\"268\":1}}],[\"answer\",{\"1\":{\"563\":2}}],[\"anwser\",{\"1\":{\"476\":3}}],[\"another\",{\"1\":{\"291\":1,\"368\":1}}],[\"angular\",{\"1\":{\"203\":2,\"257\":3,\"333\":1}}],[\"anime\",{\"1\":{\"168\":1}}],[\"animated\",{\"1\":{\"161\":2,\"170\":2,\"570\":1}}],[\"animate\",{\"0\":{\"170\":1},\"1\":{\"161\":8,\"170\":8}}],[\"animationend\",{\"1\":{\"160\":1,\"162\":1,\"163\":1}}],[\"animation\",{\"0\":{\"160\":1,\"704\":1},\"1\":{\"114\":1,\"160\":2,\"162\":2,\"167\":2,\"171\":1}}],[\"android\",{\"1\":{\"77\":1,\"142\":1,\"146\":2,\"537\":1}}],[\"and\",{\"1\":{\"59\":1,\"98\":1,\"268\":1,\"577\":1}}],[\"any\",{\"1\":{\"17\":3,\"59\":2,\"93\":1,\"282\":1,\"437\":1}}],[\"aa\",{\"1\":{\"51\":1,\"124\":1}}],[\"aaa\",{\"1\":{\"38\":1}}],[\"age++\",{\"1\":{\"363\":1}}],[\"age=\",{\"1\":{\"277\":1,\"403\":1,\"446\":1}}],[\"age\",{\"1\":{\"38\":9,\"51\":1,\"55\":2,\"277\":1,\"311\":2,\"313\":1,\"327\":2,\"330\":1,\"363\":7,\"364\":3,\"374\":4,\"375\":7,\"376\":6,\"379\":1,\"380\":1,\"403\":3,\"446\":1,\"449\":2,\"457\":1,\"458\":1,\"477\":2,\"487\":1,\"582\":1,\"583\":2,\"585\":1,\"668\":1}}],[\"agree\",{\"1\":{\"26\":1,\"483\":2}}],[\"ap\",{\"0\":{\"564\":1}}],[\"api可以将\",{\"1\":{\"521\":1}}],[\"api中\",{\"1\":{\"365\":2,\"372\":2}}],[\"api对传入的类型是有限制的\",{\"1\":{\"353\":1}}],[\"api简称为vca\",{\"1\":{\"346\":1}}],[\"api想\",{\"1\":{\"346\":1}}],[\"api的一大特点就是在对应的属性中编写对应的功能模块\",{\"1\":{\"346\":1}}],[\"api的弊端\",{\"0\":{\"346\":1}}],[\"api开头\",{\"1\":{\"262\":1}}],[\"api开头的请求转发到http\",{\"1\":{\"262\":1}}],[\"api前缀替换为空\",{\"1\":{\"262\":2}}],[\"api支持\",{\"1\":{\"251\":1}}],[\"apis\",{\"1\":{\"179\":1}}],[\"api\",{\"0\":{\"99\":1,\"345\":1,\"347\":2,\"353\":1,\"355\":1,\"466\":1,\"513\":1,\"563\":1},\"1\":{\"92\":1,\"99\":2,\"136\":1,\"171\":1,\"175\":1,\"178\":2,\"243\":3,\"251\":2,\"259\":2,\"262\":5,\"263\":3,\"265\":2,\"283\":1,\"314\":1,\"331\":1,\"342\":2,\"346\":1,\"347\":15,\"348\":5,\"349\":1,\"351\":2,\"368\":3,\"401\":2,\"423\":1,\"460\":1,\"468\":1,\"478\":1,\"479\":1,\"494\":1,\"496\":1,\"500\":3,\"502\":1,\"503\":4,\"505\":2,\"512\":1,\"513\":1,\"521\":4,\"531\":1,\"540\":2,\"544\":1,\"564\":2,\"570\":1,\"580\":1,\"582\":1,\"584\":4,\"651\":1,\"668\":1}}],[\"aprop\",{\"1\":{\"36\":2}}],[\"app下套用了additem和subitem\",{\"1\":{\"606\":1}}],[\"apple\",{\"1\":{\"483\":1}}],[\"application\",{\"1\":{\"221\":1,\"314\":1,\"331\":1}}],[\"app之外的元素\",{\"1\":{\"420\":1}}],[\"app之外的元素上\",{\"1\":{\"418\":1}}],[\"app之外的指定元素上\",{\"0\":{\"420\":1}}],[\"app之外的其他位置\",{\"1\":{\"418\":1}}],[\"app的\",{\"1\":{\"409\":1}}],[\"app组件是header\",{\"1\":{\"301\":1,\"317\":1}}],[\"appear>\",{\"1\":{\"165\":1,\"167\":1}}],[\"appear\",{\"1\":{\"165\":1}}],[\"app=120\",{\"1\":{\"123\":1}}],[\"app=138\",{\"1\":{\"123\":3}}],[\"appinstance\",{\"1\":{\"93\":2}}],[\"appid\",{\"1\":{\"67\":1,\"69\":1,\"139\":1}}],[\"app编译器\",{\"1\":{\"67\":1}}],[\"appname\",{\"1\":{\"67\":1}}],[\"app自带的模板有\",{\"1\":{\"67\":1}}],[\"app做了特别强化\",{\"1\":{\"67\":1}}],[\"app入门\",{\"0\":{\"64\":1}}],[\"appscope\",{\"1\":{\"34\":1}}],[\"app\",{\"0\":{\"70\":1,\"85\":1,\"86\":1,\"87\":1,\"603\":1,\"618\":1,\"631\":1,\"652\":1,\"674\":1,\"702\":1},\"1\":{\"6\":1,\"11\":1,\"16\":1,\"34\":1,\"63\":1,\"66\":1,\"67\":2,\"68\":2,\"70\":1,\"72\":3,\"73\":1,\"85\":1,\"86\":3,\"87\":1,\"90\":2,\"91\":1,\"92\":3,\"93\":7,\"98\":6,\"99\":1,\"104\":2,\"113\":1,\"117\":1,\"136\":2,\"139\":2,\"141\":1,\"146\":6,\"149\":1,\"152\":2,\"167\":2,\"168\":1,\"170\":4,\"171\":1,\"172\":1,\"195\":1,\"197\":5,\"198\":3,\"203\":1,\"236\":1,\"250\":2,\"268\":1,\"271\":2,\"300\":3,\"304\":1,\"305\":1,\"314\":7,\"316\":3,\"320\":1,\"321\":1,\"331\":7,\"335\":1,\"337\":13,\"349\":3,\"366\":1,\"367\":1,\"370\":1,\"371\":1,\"384\":1,\"388\":1,\"389\":1,\"390\":1,\"398\":1,\"399\":1,\"400\":1,\"410\":1,\"412\":7,\"413\":5,\"419\":1,\"420\":1,\"421\":1,\"424\":3,\"425\":3,\"426\":5,\"428\":1,\"430\":5,\"432\":6,\"433\":5,\"435\":1,\"437\":1,\"438\":5,\"440\":6,\"441\":6,\"443\":6,\"444\":6,\"445\":6,\"446\":6,\"448\":6,\"449\":6,\"450\":6,\"452\":5,\"453\":6,\"454\":1,\"455\":1,\"457\":6,\"458\":6,\"459\":6,\"463\":6,\"470\":1,\"471\":5,\"472\":5,\"473\":11,\"474\":5,\"476\":6,\"477\":6,\"480\":4,\"483\":6,\"497\":1,\"499\":5,\"527\":4,\"540\":6,\"543\":4,\"544\":2,\"547\":1,\"551\":1,\"557\":2,\"577\":7,\"578\":2,\"581\":1,\"601\":1,\"602\":1,\"603\":2,\"611\":4,\"691\":6,\"694\":1}}],[\"a\",{\"1\":{\"23\":1,\"43\":2,\"59\":2,\"91\":1,\"98\":5,\"106\":1,\"110\":2,\"121\":1,\"124\":1,\"186\":3,\"268\":2,\"279\":2,\"291\":1,\"314\":4,\"331\":4,\"337\":4,\"463\":2,\"478\":3,\"541\":1,\"546\":1,\"547\":1,\"549\":1,\"578\":1}}],[\"ast是一个用于描述代码结构的树状数据结构\",{\"1\":{\"247\":1}}],[\"ast是一个用于表示代码结构的树状数据结构\",{\"1\":{\"246\":1}}],[\"ast\",{\"1\":{\"246\":1,\"247\":1}}],[\"asyncgetgoodslist\",{\"1\":{\"651\":1,\"652\":2,\"668\":1}}],[\"asyncsubfn\",{\"1\":{\"643\":2}}],[\"asyncsubcount\",{\"1\":{\"637\":1,\"643\":2,\"695\":1}}],[\"asyncaddfn\",{\"1\":{\"642\":2}}],[\"asyncaddcount\",{\"1\":{\"637\":1,\"642\":1,\"695\":1}}],[\"asynccategory\",{\"1\":{\"282\":5}}],[\"asynccomponentoptions\",{\"1\":{\"282\":2}}],[\"asynccomponentloader\",{\"1\":{\"282\":3}}],[\"asynccomp\",{\"1\":{\"282\":3}}],[\"async\",{\"1\":{\"197\":2,\"198\":2,\"201\":3,\"271\":1,\"281\":2,\"283\":1,\"383\":1,\"559\":3,\"578\":2,\"584\":2,\"651\":1,\"668\":1}}],[\"aspectfit\",{\"1\":{\"132\":1}}],[\"aspectfill\",{\"1\":{\"123\":1,\"132\":1}}],[\"asset\",{\"0\":{\"231\":1,\"232\":1},\"1\":{\"214\":1,\"224\":1,\"227\":1,\"231\":6,\"232\":1}}],[\"assets\",{\"1\":{\"195\":1}}],[\"assertion\",{\"1\":{\"59\":1}}],[\"assign\",{\"0\":{\"49\":1},\"1\":{\"49\":2,\"59\":1,\"243\":2,\"480\":1}}],[\"as\",{\"1\":{\"17\":1,\"40\":1,\"59\":3,\"60\":2,\"201\":2,\"268\":1}}],[\"archive\",{\"1\":{\"276\":4,\"328\":4}}],[\"archives\",{\"1\":{\"58\":1}}],[\"arg\",{\"1\":{\"408\":4}}],[\"args\",{\"1\":{\"314\":2,\"331\":2}}],[\"argv\",{\"1\":{\"265\":3}}],[\"argument\",{\"1\":{\"59\":2}}],[\"are\",{\"1\":{\"251\":1}}],[\"area\",{\"1\":{\"136\":1,\"448\":3}}],[\"articles\",{\"1\":{\"577\":3,\"578\":1}}],[\"articlename\",{\"1\":{\"573\":1}}],[\"article\",{\"1\":{\"58\":1,\"573\":3}}],[\"arrowparens\",{\"1\":{\"59\":1}}],[\"arrow\",{\"1\":{\"59\":1,\"186\":2,\"243\":3}}],[\"arr2copy\",{\"1\":{\"51\":4}}],[\"arr2\",{\"1\":{\"51\":3}}],[\"arr1copy\",{\"1\":{\"50\":4}}],[\"arr1\",{\"1\":{\"50\":3}}],[\"arr更新的前后都有数值为3的数组项\",{\"1\":{\"40\":1}}],[\"arr的更改触发foreach更新\",{\"1\":{\"40\":1}}],[\"arr赋值为\",{\"1\":{\"40\":1}}],[\"arr保存的值依旧是\",{\"1\":{\"40\":1}}],[\"arr后\",{\"1\":{\"40\":1}}],[\"array<routerecordraw>\",{\"1\":{\"546\":1}}],[\"array<string>\",{\"1\":{\"17\":1}}],[\"array<item>\",{\"1\":{\"17\":1}}],[\"array\",{\"1\":{\"17\":1,\"42\":1,\"47\":1,\"53\":1,\"54\":1,\"59\":1,\"103\":2,\"109\":8,\"143\":1,\"306\":1,\"322\":1,\"475\":1}}],[\"arr\",{\"1\":{\"17\":1,\"18\":2,\"40\":19}}],[\"arkui框架对于foreach的键值生成有一套特定的判断规则\",{\"1\":{\"17\":1}}],[\"arkui框架将视为该数组元素已被替换或修改\",{\"1\":{\"17\":1}}],[\"arkui框架中默认内置的基础和容器组件\",{\"1\":{\"3\":1}}],[\"arkui\",{\"0\":{\"4\":1,\"19\":1},\"1\":{\"13\":1,\"21\":6}}],[\"arkts\",{\"0\":{\"3\":1},\"1\":{\"17\":1,\"35\":1}}],[\"arkts会结合应用开发\",{\"1\":{\"1\":1}}],[\"arkts提供了渲染控制的能力\",{\"1\":{\"1\":1}}],[\"arkts提供了多维度的状态管理机制\",{\"1\":{\"1\":1}}],[\"arkts定义了声明式ui描述\",{\"1\":{\"1\":1}}],[\"arkts在ts的基础上主要扩展了如下能力\",{\"1\":{\"1\":1}}],[\"arkts围绕应用开发在typescript\",{\"1\":{\"1\":1}}],[\"arkts是harmonyos优选的主力应用开发语言\",{\"1\":{\"1\":1}}],[\"arkts语言\",{\"0\":{\"1\":1}}],[\"ab\",{\"1\":{\"686\":1}}],[\"abc\",{\"1\":{\"176\":1,\"307\":1,\"313\":1,\"323\":1,\"330\":1,\"388\":1,\"389\":1,\"390\":1,\"430\":2,\"432\":1,\"440\":4,\"441\":4}}],[\"about<\",{\"1\":{\"540\":1}}],[\"about>\",{\"1\":{\"275\":1}}],[\"about\",{\"1\":{\"130\":2,\"167\":4,\"263\":2,\"275\":1,\"540\":4,\"550\":2,\"561\":1,\"573\":6,\"574\":8}}],[\"absolute\",{\"1\":{\"121\":3,\"124\":3,\"137\":2,\"164\":1,\"174\":1}}],[\"abstract\",{\"1\":{\"11\":1,\"246\":1}}],[\"ability\",{\"1\":{\"29\":1,\"134\":1}}],[\"ability提供的图片路径\",{\"1\":{\"9\":1}}],[\"基于组件的路由配置\",{\"1\":{\"539\":1}}],[\"基于上述理由\",{\"1\":{\"514\":1}}],[\"基于esm\",{\"1\":{\"197\":1}}],[\"基于esm运行时打包\",{\"1\":{\"180\":1}}],[\"基于esm运行时编译\",{\"1\":{\"180\":1}}],[\"基于es6打包\",{\"1\":{\"180\":1}}],[\"基于流的自动化构建工具\",{\"1\":{\"180\":1}}],[\"基于\",{\"0\":{\"156\":1},\"1\":{\"175\":1,\"266\":1,\"270\":1}}],[\"基础使用\",{\"0\":{\"546\":1,\"551\":1},\"1\":{\"547\":1,\"583\":1}}],[\"基础的类型检查\",{\"1\":{\"306\":1,\"322\":1}}],[\"基础上额外进行一次\",{\"1\":{\"118\":1}}],[\"基础库更新\",{\"1\":{\"115\":1}}],[\"基础代码\",{\"1\":{\"29\":1}}],[\"基础组件\",{\"0\":{\"4\":1,\"5\":1,\"120\":1}}],[\"基本指令\",{\"0\":{\"427\":1}}],[\"基本上都会配合\",{\"1\":{\"347\":1}}],[\"基本用法\",{\"0\":{\"282\":1}}],[\"基本使用\",{\"0\":{\"174\":1,\"356\":1,\"374\":1,\"387\":1,\"397\":1,\"419\":1,\"438\":1,\"448\":1,\"452\":1,\"457\":1,\"469\":1,\"497\":1,\"691\":1},\"1\":{\"430\":1}}],[\"基本类型如number\",{\"1\":{\"42\":1}}],[\"基本数据类型和引用数据类型\",{\"1\":{\"42\":1}}],[\"基本概念\",{\"0\":{\"36\":1}}],[\"基本组成\",{\"0\":{\"3\":1}}],[\"基本语法\",{\"0\":{\"2\":1},\"1\":{\"1\":1}}],[\"等选项的\",{\"1\":{\"351\":1}}],[\"等构建工具来对其进行处理\",{\"1\":{\"339\":1}}],[\"等价于\",{\"1\":{\"338\":1,\"349\":3,\"391\":2,\"434\":1}}],[\"等组件结合\",{\"1\":{\"284\":1}}],[\"等待多长时间\",{\"1\":{\"282\":1}}],[\"等相关插件\",{\"1\":{\"257\":1}}],[\"等事件\",{\"1\":{\"201\":1}}],[\"等打包工具会帮我们找到模块的路径\",{\"1\":{\"197\":1}}],[\"等脚本真正执行时\",{\"1\":{\"195\":1}}],[\"等将失效\",{\"1\":{\"135\":1}}],[\"等等\",{\"1\":{\"115\":1,\"223\":1,\"286\":1}}],[\"等到逻辑层初始化完毕后才能响应用户事件\",{\"1\":{\"115\":1}}],[\"等信息\",{\"1\":{\"67\":1}}],[\"等存储在栈内存中\",{\"1\":{\"42\":1}}],[\"等\",{\"1\":{\"3\":1,\"65\":1,\"86\":1,\"92\":1,\"118\":1,\"125\":1,\"264\":1,\"483\":1,\"544\":1,\"550\":1}}],[\"bd\",{\"1\":{\"686\":2}}],[\"b5\",{\"1\":{\"686\":1}}],[\"bf\",{\"1\":{\"686\":3}}],[\"b6\",{\"1\":{\"686\":1}}],[\"b元素上\",{\"1\":{\"420\":1}}],[\"bb\",{\"1\":{\"132\":1}}],[\"b0\",{\"1\":{\"124\":1,\"686\":1}}],[\"b7\",{\"1\":{\"124\":1}}],[\"b9\",{\"1\":{\"124\":1}}],[\"bc\",{\"1\":{\"123\":3}}],[\"b2a4ec\",{\"1\":{\"136\":2}}],[\"b2\",{\"1\":{\"123\":1}}],[\"b8\",{\"1\":{\"123\":1,\"124\":1}}],[\"bilibili\",{\"1\":{\"686\":1}}],[\"bin\",{\"1\":{\"269\":1}}],[\"bin目录下的webpack\",{\"1\":{\"207\":1}}],[\"bind来进行值的绑定\",{\"1\":{\"483\":1}}],[\"bind提供一个语法糖\",{\"1\":{\"437\":1,\"438\":1}}],[\"bind的基本使用\",{\"1\":{\"437\":1,\"438\":1}}],[\"bind\",{\"0\":{\"437\":1},\"1\":{\"429\":1,\"437\":3,\"438\":2,\"440\":1,\"442\":1,\"446\":1,\"529\":1}}],[\"bindings\",{\"1\":{\"411\":1,\"412\":1,\"413\":7,\"415\":2,\"416\":2}}],[\"binding\",{\"1\":{\"408\":9}}],[\"bindinput=\",{\"1\":{\"110\":1}}],[\"bind=\",{\"1\":{\"308\":1,\"324\":1,\"446\":1}}],[\"bind`\",{\"1\":{\"279\":2}}],[\"bindactiveend\",{\"1\":{\"126\":1}}],[\"bindscroll=\",{\"1\":{\"124\":1}}],[\"bindtap=\",{\"1\":{\"65\":1,\"91\":1,\"136\":1}}],[\"big\",{\"1\":{\"51\":1}}],[\"by\",{\"1\":{\"59\":1,\"132\":1}}],[\"bryant\",{\"1\":{\"471\":1,\"472\":1,\"473\":1,\"474\":1}}],[\"bracketspacing\",{\"1\":{\"59\":1}}],[\"bracketsameline\",{\"1\":{\"59\":1}}],[\"bracket\",{\"1\":{\"59\":1}}],[\"browserslistrc\",{\"1\":{\"269\":1}}],[\"browserify基于流方式干净灵活\",{\"1\":{\"180\":1}}],[\"browserify\",{\"1\":{\"180\":1}}],[\"browser\",{\"1\":{\"59\":1,\"201\":1,\"250\":1,\"264\":4}}],[\"break\",{\"1\":{\"23\":3,\"201\":7}}],[\"behavior\",{\"1\":{\"571\":1}}],[\"beta\",{\"1\":{\"267\":1}}],[\"bezier\",{\"1\":{\"159\":1}}],[\"beforeresolve\",{\"1\":{\"565\":1}}],[\"beforerouteleave\",{\"1\":{\"563\":4,\"565\":1}}],[\"beforerouteupdate\",{\"1\":{\"563\":4,\"565\":1}}],[\"beforerouteenter\",{\"1\":{\"563\":5,\"565\":2}}],[\"beforeeach`\",{\"1\":{\"566\":1}}],[\"beforeeach\",{\"1\":{\"559\":6,\"565\":1,\"566\":1,\"567\":3,\"568\":1,\"569\":1}}],[\"beforeenter\",{\"1\":{\"168\":3,\"176\":2,\"561\":6,\"565\":1}}],[\"beforecreate\",{\"1\":{\"494\":3}}],[\"beforecreate和create在setup中没有相对应的onx的函数\",{\"1\":{\"368\":1}}],[\"beforeunmount\",{\"1\":{\"407\":1,\"408\":1,\"494\":3}}],[\"beforeupdate\",{\"1\":{\"407\":1,\"408\":3,\"494\":3}}],[\"beforemount\",{\"1\":{\"407\":1,\"408\":1,\"494\":3}}],[\"beforeleave\",{\"1\":{\"168\":3}}],[\"before\",{\"1\":{\"98\":1,\"121\":3,\"124\":3,\"151\":2,\"168\":4,\"176\":1,\"368\":3,\"505\":1}}],[\"below\",{\"1\":{\"59\":1}}],[\"be\",{\"1\":{\"59\":1,\"98\":2,\"124\":1,\"132\":1,\"198\":1,\"236\":1,\"291\":1,\"584\":1}}],[\"black\",{\"1\":{\"142\":2,\"143\":3,\"146\":1,\"603\":2}}],[\"blob\",{\"1\":{\"686\":1}}],[\"block>\",{\"1\":{\"136\":2}}],[\"block\",{\"1\":{\"63\":1,\"72\":1,\"124\":2,\"167\":1,\"168\":1,\"171\":1,\"174\":1,\"243\":3,\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1}}],[\"blog\",{\"1\":{\"58\":1}}],[\"blue\",{\"1\":{\"22\":1,\"415\":1,\"416\":1,\"419\":1,\"420\":1,\"421\":1,\"433\":1}}],[\"b\",{\"1\":{\"43\":1,\"98\":4,\"110\":2,\"121\":1,\"124\":1,\"279\":2,\"314\":1,\"331\":1,\"420\":2,\"463\":2,\"478\":3}}],[\"btn2click\",{\"1\":{\"449\":2}}],[\"btn1click\",{\"1\":{\"448\":5,\"449\":2}}],[\"btnclick=\",{\"1\":{\"404\":1}}],[\"btnclick\",{\"1\":{\"337\":1,\"339\":2,\"361\":2,\"404\":4,\"450\":4}}],[\"btn\",{\"1\":{\"40\":4,\"288\":3,\"388\":2}}],[\"b1b2b1\",{\"1\":{\"39\":1}}],[\"box\",{\"1\":{\"578\":2}}],[\"bouncy\",{\"1\":{\"160\":1}}],[\"bounceoutdown\",{\"1\":{\"170\":1}}],[\"bounceoutright\",{\"1\":{\"161\":1}}],[\"bounce\",{\"1\":{\"160\":6,\"167\":3}}],[\"body>\",{\"1\":{\"236\":1,\"337\":1,\"440\":1,\"441\":1,\"443\":1,\"445\":1,\"446\":1,\"448\":1,\"449\":1,\"450\":1,\"453\":1,\"457\":1,\"458\":1,\"459\":1,\"463\":1,\"473\":1,\"476\":1,\"477\":1,\"480\":1,\"483\":1,\"527\":2}}],[\"body\",{\"1\":{\"121\":1,\"124\":1,\"198\":5,\"419\":1,\"444\":1,\"578\":1}}],[\"bool\",{\"1\":{\"652\":2}}],[\"boolean\",{\"1\":{\"8\":2,\"18\":1,\"38\":1,\"39\":1,\"42\":1,\"43\":1,\"121\":1,\"123\":4,\"126\":2,\"132\":1,\"139\":5,\"142\":2,\"143\":1,\"146\":3,\"251\":1,\"282\":1,\"306\":1,\"322\":1,\"353\":1,\"386\":1,\"440\":1}}],[\"book\",{\"1\":{\"480\":9}}],[\"books\",{\"1\":{\"357\":2,\"480\":8}}],[\"bootcss\",{\"1\":{\"59\":2}}],[\"bottom\",{\"1\":{\"39\":1,\"132\":3,\"136\":4,\"143\":2}}],[\"bold\",{\"1\":{\"17\":2,\"39\":1}}],[\"borderstyle\",{\"1\":{\"143\":2}}],[\"borderradius\",{\"1\":{\"17\":1,\"18\":1,\"39\":2}}],[\"border\",{\"1\":{\"14\":5,\"15\":5,\"126\":1,\"136\":1,\"288\":2,\"291\":1,\"480\":4,\"578\":1,\"603\":3}}],[\"bu1ld\",{\"1\":{\"251\":1}}],[\"but\",{\"1\":{\"236\":1,\"250\":1}}],[\"buttonclick\",{\"1\":{\"694\":2}}],[\"button<\",{\"1\":{\"384\":1}}],[\"button>`\",{\"1\":{\"288\":1}}],[\"button><\",{\"1\":{\"167\":1,\"168\":1,\"171\":1}}],[\"button>\",{\"1\":{\"91\":1,\"128\":5,\"154\":1,\"155\":1,\"161\":1,\"166\":3,\"174\":3,\"275\":1,\"276\":1,\"288\":1,\"289\":4,\"290\":2,\"310\":1,\"314\":2,\"326\":1,\"328\":1,\"331\":2,\"339\":1,\"342\":1,\"347\":1,\"349\":1,\"350\":1,\"353\":1,\"356\":1,\"361\":1,\"363\":1,\"367\":1,\"374\":2,\"375\":2,\"376\":2,\"379\":1,\"380\":1,\"384\":2,\"398\":2,\"399\":2,\"400\":2,\"402\":1,\"404\":1,\"430\":1,\"432\":3,\"440\":1,\"448\":3,\"449\":2,\"450\":2,\"453\":1,\"459\":1,\"463\":1,\"473\":1,\"474\":1,\"476\":1,\"477\":3,\"480\":3,\"494\":1,\"497\":1,\"500\":1,\"527\":4,\"578\":1,\"581\":1,\"584\":1,\"604\":1,\"605\":1,\"617\":1,\"619\":1,\"630\":1,\"632\":1,\"642\":1,\"643\":1,\"694\":1}}],[\"buttontype\",{\"1\":{\"8\":2}}],[\"button\",{\"0\":{\"8\":1,\"128\":1},\"1\":{\"3\":1,\"8\":2,\"16\":2,\"24\":1,\"39\":1,\"40\":5,\"128\":1,\"276\":1,\"328\":1,\"388\":2,\"389\":2,\"390\":2,\"578\":1,\"694\":1}}],[\"bundler构建工具现在公开了全局特性标志\",{\"1\":{\"251\":1}}],[\"bundler\",{\"1\":{\"250\":9,\"251\":5}}],[\"bundle\",{\"1\":{\"211\":1,\"248\":1,\"251\":1,\"265\":2}}],[\"bundles\",{\"1\":{\"204\":1}}],[\"burlywood\",{\"1\":{\"124\":1}}],[\"built\",{\"1\":{\"155\":1,\"175\":1,\"236\":1,\"278\":1,\"283\":1,\"284\":1,\"460\":1}}],[\"builtins\",{\"1\":{\"59\":1}}],[\"build指令了\",{\"1\":{\"253\":1}}],[\"build来打包即可\",{\"1\":{\"212\":1}}],[\"builders\",{\"1\":{\"257\":1}}],[\"builder\",{\"1\":{\"23\":1,\"39\":1}}],[\"builder装饰的方法内的ui描述映射到界面\",{\"1\":{\"35\":1}}],[\"builder装饰的方法\",{\"1\":{\"23\":2}}],[\"build\",{\"0\":{\"23\":1,\"271\":1},\"1\":{\"14\":1,\"15\":1,\"16\":1,\"17\":3,\"18\":1,\"20\":3,\"21\":4,\"22\":2,\"23\":8,\"24\":2,\"34\":2,\"36\":2,\"38\":1,\"39\":1,\"40\":4,\"179\":1,\"208\":1,\"209\":2,\"211\":2,\"212\":1,\"250\":3,\"251\":4,\"252\":1,\"253\":1,\"254\":1,\"265\":1,\"269\":2,\"271\":2}}],[\"bmp\",{\"1\":{\"9\":1}}],[\"bad\",{\"1\":{\"559\":1}}],[\"babel是一个javascript编译器\",{\"1\":{\"268\":1}}],[\"babel是如何做到将我们的一段代码\",{\"1\":{\"246\":1}}],[\"babel7\",{\"1\":{\"249\":1}}],[\"babel本身\",{\"1\":{\"249\":1}}],[\"babel本身可以作为一个独立的工具\",{\"1\":{\"242\":1}}],[\"babel给我们提供了两种配置文件的编写\",{\"1\":{\"249\":1}}],[\"babel的执行阶段\",{\"1\":{\"247\":1}}],[\"babel的核心代码\",{\"1\":{\"242\":1}}],[\"babel会根据配置的插件和预设\",{\"1\":{\"248\":1}}],[\"babel会将修改后的ast重新生成为javascript代码\",{\"1\":{\"246\":1}}],[\"babel会应用一系列的插件和预设来进行代码转换\",{\"1\":{\"246\":1}}],[\"babel首先将输入的javascript代码解析成抽象语法树\",{\"1\":{\"246\":1}}],[\"babel也拥有编译器的工作流程\",{\"1\":{\"246\":1}}],[\"babel编译器的作用就是将我们的源代码\",{\"1\":{\"246\":1}}],[\"babelrc\",{\"1\":{\"244\":2,\"249\":3,\"268\":1}}],[\"babeljs\",{\"1\":{\"241\":1}}],[\"babel\",{\"0\":{\"240\":1,\"241\":1,\"242\":1,\"248\":1},\"1\":{\"241\":4,\"242\":6,\"243\":17,\"244\":12,\"248\":10,\"249\":6,\"268\":6,\"339\":1,\"395\":2}}],[\"babel等\",{\"1\":{\"180\":1}}],[\"back\",{\"1\":{\"552\":1,\"584\":1}}],[\"backindown\",{\"1\":{\"170\":1}}],[\"backwards\",{\"1\":{\"126\":2}}],[\"backgroundtextstyle\",{\"1\":{\"142\":2,\"146\":1}}],[\"background\",{\"1\":{\"121\":5,\"124\":5,\"136\":2,\"288\":1,\"415\":2,\"416\":3,\"419\":3,\"420\":3,\"421\":3,\"433\":1,\"480\":1}}],[\"backgroundcolorcontent\",{\"1\":{\"146\":1}}],[\"backgroundcolorbottom\",{\"1\":{\"142\":1,\"146\":1}}],[\"backgroundcolortop\",{\"1\":{\"142\":1,\"146\":1}}],[\"backgroundcolor\",{\"1\":{\"3\":1,\"14\":10,\"15\":10,\"17\":2,\"18\":2,\"24\":1,\"39\":3,\"40\":1,\"126\":1,\"136\":1,\"142\":2,\"143\":2,\"146\":1,\"443\":2}}],[\"ba\",{\"1\":{\"123\":3,\"124\":1,\"132\":1}}],[\"baidu\",{\"1\":{\"69\":1,\"123\":4,\"438\":1}}],[\"banana\",{\"1\":{\"483\":1}}],[\"banner>\",{\"1\":{\"300\":1,\"316\":1}}],[\"banner><\",{\"1\":{\"300\":1,\"316\":1}}],[\"banner\",{\"1\":{\"123\":4,\"300\":1,\"316\":1}}],[\"ban\",{\"1\":{\"59\":1}}],[\"baz\",{\"1\":{\"54\":2,\"408\":1,\"512\":2}}],[\"bar=\",{\"1\":{\"408\":1}}],[\"barref\",{\"1\":{\"380\":1}}],[\"bar\",{\"1\":{\"54\":2,\"136\":4,\"137\":2,\"274\":1,\"380\":1,\"391\":3,\"408\":3,\"500\":1,\"512\":1,\"529\":5,\"555\":1}}],[\"basketball\",{\"1\":{\"47\":3,\"483\":4}}],[\"basepage\",{\"1\":{\"500\":3}}],[\"baselayout\",{\"1\":{\"291\":5}}],[\"baselayout>\",{\"1\":{\"291\":2}}],[\"baseurl\",{\"1\":{\"63\":1,\"72\":1}}],[\"base64\",{\"1\":{\"9\":3,\"221\":1}}],[\"base\",{\"1\":{\"6\":1,\"236\":1,\"237\":3,\"251\":1,\"500\":4}}],[\"如过渡名称\",{\"1\":{\"569\":1}}],[\"如同调用\",{\"1\":{\"559\":1}}],[\"如显示一个\",{\"1\":{\"546\":1}}],[\"如angularjs\",{\"1\":{\"538\":1}}],[\"如filter\",{\"1\":{\"520\":1}}],[\"如fontsize\",{\"1\":{\"3\":1}}],[\"如何分模块\",{\"1\":{\"670\":1}}],[\"如何创建store对象\",{\"1\":{\"612\":1}}],[\"如何阅读vue源码\",{\"0\":{\"532\":1}}],[\"如何生命周期钩子函数\",{\"1\":{\"498\":1}}],[\"如何基于key重新排列的\",{\"1\":{\"460\":1}}],[\"如何尝试修改和复用的\",{\"1\":{\"460\":1}}],[\"如何改成响应式呢\",{\"1\":{\"363\":1}}],[\"如何支持sfc\",{\"0\":{\"340\":1}}],[\"如何注册一个组件呢\",{\"1\":{\"336\":1}}],[\"如何使用computed呢\",{\"1\":{\"365\":1}}],[\"如何使用slot呢\",{\"1\":{\"287\":1}}],[\"如何使用插槽slot\",{\"0\":{\"287\":1}}],[\"如何使用hmr呢\",{\"1\":{\"255\":1}}],[\"如何使用postcss呢\",{\"1\":{\"219\":1}}],[\"如何使用这个loader来加载css文件呢\",{\"1\":{\"215\":1}}],[\"如何使用\",{\"0\":{\"522\":1},\"1\":{\"170\":1,\"171\":1,\"243\":1}}],[\"如上\",{\"1\":{\"308\":1,\"324\":1}}],[\"如上代码\",{\"1\":{\"300\":1,\"316\":1}}],[\"如上述被\",{\"1\":{\"3\":1}}],[\"如上述示例中\",{\"1\":{\"3\":1}}],[\"如你所见\",{\"1\":{\"282\":1,\"503\":1,\"557\":1}}],[\"如babel\",{\"1\":{\"268\":1}}],[\"如browserify会对代码进行解析\",{\"1\":{\"195\":1}}],[\"如prettier\",{\"1\":{\"268\":1}}],[\"如eslint\",{\"1\":{\"268\":1}}],[\"如sass\",{\"1\":{\"268\":1}}],[\"如snowpack\",{\"1\":{\"182\":1}}],[\"如需升级项目中的\",{\"1\":{\"267\":1}}],[\"如需升级全局的\",{\"1\":{\"267\":1}}],[\"如需实现\",{\"1\":{\"135\":1}}],[\"如html\",{\"1\":{\"258\":1}}],[\"如react\",{\"1\":{\"257\":1}}],[\"如webpack\",{\"1\":{\"250\":1}}],[\"如javascript\",{\"1\":{\"214\":1}}],[\"如commonjs常用于服务端\",{\"1\":{\"195\":1}}],[\"如有需要\",{\"1\":{\"178\":1}}],[\"如速度快到惊人的\",{\"1\":{\"178\":1}}],[\"如在\",{\"1\":{\"148\":1}}],[\"如展示的广告图片\",{\"1\":{\"118\":1}}],[\"如导航栏\",{\"1\":{\"115\":1}}],[\"如微信用户数据\",{\"1\":{\"92\":1}}],[\"如开发工具的外观配置\",{\"1\":{\"88\":1}}],[\"如\",{\"1\":{\"68\":2,\"69\":1,\"92\":1,\"98\":1,\"110\":2,\"117\":1,\"124\":1,\"135\":1,\"139\":1,\"142\":2,\"146\":1,\"161\":1,\"215\":2,\"258\":1,\"264\":2,\"268\":1,\"483\":1,\"544\":1,\"550\":1,\"571\":1,\"572\":1}}],[\"如下\",{\"1\":{\"445\":1,\"473\":1}}],[\"如下的自定义组件\",{\"1\":{\"111\":1}}],[\"如下所示\",{\"1\":{\"68\":1}}],[\"如下图\",{\"1\":{\"67\":1}}],[\"如下图所示\",{\"1\":{\"42\":1}}],[\"如命令行创建失败\",{\"1\":{\"68\":2}}],[\"如图形\",{\"1\":{\"34\":1}}],[\"如果传对个\",{\"1\":{\"633\":1}}],[\"如果传入一个基本数据类型\",{\"1\":{\"353\":1}}],[\"如果他们再接受客户的预订\",{\"1\":{\"592\":1,\"689\":1}}],[\"如果getter里面是返回的函数\",{\"1\":{\"583\":1}}],[\"如果直接解构出数据\",{\"1\":{\"582\":1}}],[\"如果添加与现有途径名称相同的途径\",{\"1\":{\"574\":1}}],[\"如果新增加的路由与当前位置相匹配\",{\"1\":{\"573\":1}}],[\"如果新代码可以被成功替换\",{\"1\":{\"258\":1}}],[\"如果返回一个\",{\"1\":{\"571\":1}}],[\"如果全部钩子执行完了\",{\"1\":{\"566\":1}}],[\"如果用户未能验证身份\",{\"1\":{\"559\":1}}],[\"如果什么都没有\",{\"1\":{\"559\":1}}],[\"如果遇到了意料之外的情况\",{\"1\":{\"559\":1}}],[\"如果浏览器的\",{\"1\":{\"559\":1,\"566\":1}}],[\"如果可能的话\",{\"1\":{\"550\":1}}],[\"如果提供了\",{\"1\":{\"550\":1}}],[\"如果提供了一个报错组件\",{\"1\":{\"282\":1}}],[\"如果提供了一个加载组件\",{\"1\":{\"282\":1}}],[\"如果提供了一个\",{\"1\":{\"282\":1}}],[\"如果一个组合式函数设置了一个事件监听器\",{\"1\":{\"510\":1}}],[\"如果一个组件中的逻辑需要复用\",{\"1\":{\"500\":1}}],[\"如果\",{\"1\":{\"508\":1,\"544\":1}}],[\"如果参数是函数\",{\"1\":{\"505\":1}}],[\"如果参数是\",{\"1\":{\"505\":1}}],[\"如果参数是一个\",{\"1\":{\"358\":1}}],[\"如果组件中的某些选项\",{\"1\":{\"499\":1}}],[\"如果组件只有默认槽\",{\"1\":{\"386\":1}}],[\"如果data返回值对象的属性发生了冲突\",{\"1\":{\"498\":1}}],[\"如果mixin对象中的选项和组件对象中的选项发生了冲突\",{\"1\":{\"498\":1}}],[\"如果方法本身中有一个参数\",{\"1\":{\"449\":1}}],[\"如果该值无法被\",{\"1\":{\"487\":1}}],[\"如果该方法不需要额外参数\",{\"1\":{\"449\":1}}],[\"如果该代理是\",{\"1\":{\"354\":1}}],[\"如果属性名称不是固定的\",{\"1\":{\"445\":1}}],[\"如果属性是引用类型\",{\"1\":{\"46\":1}}],[\"如果属性是基本类型\",{\"1\":{\"46\":1}}],[\"如果存在同名的\",{\"1\":{\"437\":1}}],[\"如果希望两者都是一个普通对象\",{\"1\":{\"379\":1}}],[\"如果希望其他地方也可以访问\",{\"1\":{\"260\":1}}],[\"如果把age也写进来\",{\"1\":{\"374\":1}}],[\"如果只希望转换reactive对象中的其中某个属性为ref\",{\"1\":{\"364\":1}}],[\"如果componentc没有用到但是我们依然在全局进行\",{\"1\":{\"338\":1}}],[\"如果将一个复杂的问题\",{\"1\":{\"333\":1}}],[\"如果缓存的实例数量即将超过指定的那个最大数量\",{\"1\":{\"280\":1}}],[\"如果您希望将当前配置保存为预设\",{\"1\":{\"268\":1}}],[\"如果找不到对应的资源应该返回什么页面\",{\"1\":{\"263\":1}}],[\"如果请求路径以\",{\"1\":{\"262\":1}}],[\"如果当前项目中没有存在\",{\"1\":{\"208\":1}}],[\"如果你熟悉组合式\",{\"1\":{\"580\":1}}],[\"如果你需要等待新的路由显示\",{\"1\":{\"573\":1}}],[\"如果你要模拟\",{\"1\":{\"571\":1}}],[\"如果你要使用vue2可以用这个方式\",{\"1\":{\"186\":1}}],[\"如果你正在使用组合\",{\"1\":{\"564\":1}}],[\"如果你正在使用选项式\",{\"1\":{\"513\":1}}],[\"如果你正在编写一个可能被其他开发者使用的组合式函数\",{\"1\":{\"508\":1}}],[\"如果你更希望以对象属性的形式来使用组合式函数中返回的状态\",{\"1\":{\"509\":1}}],[\"如果你仍然想要通过组合式\",{\"1\":{\"500\":1}}],[\"如果你的浏览器支持滚动行为\",{\"1\":{\"571\":1}}],[\"如果你的应用用到了服务端渲染\",{\"1\":{\"510\":1}}],[\"如果你的组合式函数在输入参数是\",{\"1\":{\"508\":1}}],[\"如果你的\",{\"1\":{\"497\":1}}],[\"如果你确实需要解构\",{\"1\":{\"349\":1}}],[\"如果你全局注册了一个组件\",{\"1\":{\"338\":1}}],[\"如果你不希望非prop的attribute被添加到根元素上\",{\"1\":{\"308\":1,\"324\":1}}],[\"如果你在javascript中定义了一个名为myprop的prop\",{\"1\":{\"306\":1,\"322\":1}}],[\"如果你有一个组件\",{\"1\":{\"307\":1,\"323\":1}}],[\"如果你有一个动态的插槽名变量slotname\",{\"1\":{\"292\":1}}],[\"如果你有一个名为\",{\"1\":{\"250\":1}}],[\"如果你想使用这个功能\",{\"1\":{\"574\":1}}],[\"如果你想让每个路由的组件有不同的过渡\",{\"1\":{\"570\":1}}],[\"如果你想让用户输入自动转换为数字\",{\"1\":{\"487\":1}}],[\"如果你想的话\",{\"1\":{\"503\":1}}],[\"如果你想要默认自动去除用户输入内容中两端的空格\",{\"1\":{\"488\":1}}],[\"如果你想要基于\",{\"1\":{\"349\":1}}],[\"如果你想要查看生产环境的\",{\"1\":{\"272\":1}}],[\"如果你想要设置\",{\"1\":{\"272\":1}}],[\"如果你想在某个节点初次渲染时应用一个过渡效果\",{\"1\":{\"165\":1}}],[\"如果你可以使用\",{\"1\":{\"269\":1}}],[\"如果使其位移的\",{\"1\":{\"175\":1}}],[\"如果使用es6的解构语法\",{\"1\":{\"363\":1}}],[\"如果使用\",{\"1\":{\"68\":1,\"110\":2}}],[\"如果与\",{\"1\":{\"168\":2}}],[\"如果我们在\",{\"1\":{\"557\":1,\"573\":1}}],[\"如果我们在setup函数中想要使用props\",{\"1\":{\"349\":1}}],[\"如果我们对文件大小敏感\",{\"1\":{\"530\":1}}],[\"如果我们需要更完整的功能\",{\"1\":{\"530\":1}}],[\"如果我们需要索引\",{\"1\":{\"457\":1}}],[\"如果我们要直接在组件中使用组合式\",{\"1\":{\"503\":1}}],[\"如果我们确实想设置计算属性的值呢\",{\"1\":{\"474\":1}}],[\"如果我们不只是一个简单的div\",{\"1\":{\"462\":1}}],[\"如果我们展示的内容本身是\",{\"1\":{\"433\":1}}],[\"如果我们将ref放到一个reactive的属性当中\",{\"1\":{\"357\":1}}],[\"如果我们将一个个功能块拆分后\",{\"1\":{\"333\":1}}],[\"如果我们将一个页面中所有的处理逻辑\",{\"1\":{\"333\":1}}],[\"如果我们的元素需要在显示和隐藏之间频繁的切换\",{\"1\":{\"455\":1}}],[\"如果我们的代码是下面的方式\",{\"1\":{\"357\":1}}],[\"如果我们的插槽是默认插槽default\",{\"1\":{\"296\":1}}],[\"如果我们能将同一个逻辑关注\",{\"1\":{\"346\":1}}],[\"如果我们现在有一部分内容\",{\"1\":{\"336\":1}}],[\"如果我们仍然将props沿着组件链逐级传递下去\",{\"1\":{\"313\":1,\"330\":1}}],[\"如果我们一个应用程序将所有的逻辑都放在一个组件中\",{\"1\":{\"299\":1,\"315\":1}}],[\"如果我们一个个去安装使用插件\",{\"1\":{\"248\":1}}],[\"如果我们有默认插槽和具名插槽\",{\"1\":{\"297\":1}}],[\"如果我们想匹配任意路径\",{\"1\":{\"548\":1}}],[\"如果我们想要在\",{\"1\":{\"505\":1}}],[\"如果我们想要在旧版浏览器中运行它\",{\"1\":{\"241\":1}}],[\"如果我们想要获取一个ref引用中的value\",{\"1\":{\"358\":1}}],[\"如果我们想要使用这一\",{\"1\":{\"340\":1}}],[\"如果我们想在多个组件中复用这个相同的逻辑呢\",{\"1\":{\"503\":1}}],[\"如果我们想在父组件没有提供任何插槽内容时在\",{\"1\":{\"289\":1}}],[\"如果我们想在自己的模块中加入一些比较特别的内容\",{\"1\":{\"236\":1}}],[\"如果我们希望将一个对象的所有属性\",{\"1\":{\"446\":1}}],[\"如果我们希望这个内容被vue可以解析出来\",{\"1\":{\"433\":1}}],[\"如果我们希望把数据显示到模板\",{\"1\":{\"430\":1}}],[\"如果我们希望在副作用函数中获取到元素\",{\"1\":{\"377\":1}}],[\"如果我们希望在命令行尝试使用babel\",{\"1\":{\"242\":1}}],[\"如果我们希望再完成插入style的操作\",{\"1\":{\"216\":1}}],[\"如果我们希望给单元素或者组件实现过渡动画\",{\"1\":{\"154\":1}}],[\"如果我们查看浏览器中的请求\",{\"1\":{\"191\":1}}],[\"如果我们手动一个个来编写这些动画\",{\"1\":{\"170\":1}}],[\"如果我们只是使用了其中的一个\",{\"1\":{\"162\":1}}],[\"如果没有\",{\"1\":{\"569\":1}}],[\"如果没有那么多记录\",{\"1\":{\"552\":1}}],[\"如果没有跟踪到依赖项\",{\"1\":{\"505\":1}}],[\"如果没有指定输出目录\",{\"1\":{\"254\":1}}],[\"如果没有安装就会报错\",{\"1\":{\"207\":1}}],[\"如果没有探测到\",{\"1\":{\"155\":1}}],[\"如果没有找到\",{\"1\":{\"6\":1}}],[\"如果是data函数的返回值对象\",{\"1\":{\"498\":1}}],[\"如果是子节点的化\",{\"1\":{\"432\":1}}],[\"如果是一个string类型\",{\"1\":{\"487\":1}}],[\"如果是一个\",{\"1\":{\"379\":1}}],[\"如果是个\",{\"1\":{\"197\":1}}],[\"如果是\",{\"1\":{\"155\":1,\"197\":1}}],[\"如果是第一次使用\",{\"1\":{\"67\":1}}],[\"如果内容是一个组件\",{\"1\":{\"155\":1}}],[\"如果小程序是一个多\",{\"1\":{\"143\":1}}],[\"如果不调用\",{\"1\":{\"567\":1}}],[\"如果不调用done\",{\"1\":{\"171\":1}}],[\"如果不使用key\",{\"1\":{\"460\":1}}],[\"如果不使用状态变量\",{\"1\":{\"35\":1}}],[\"如果不会频繁的发生切换\",{\"1\":{\"455\":1}}],[\"如果不填\",{\"1\":{\"140\":1}}],[\"如果想侦听所有嵌套的变更\",{\"1\":{\"477\":1}}],[\"如果想充分的利用javascript的编程能力\",{\"1\":{\"385\":1}}],[\"如果想为在setup中定义的数据提供响应式的特性\",{\"1\":{\"353\":1}}],[\"如果想禁用初始渲染缓存\",{\"1\":{\"118\":1}}],[\"如果想要变成响应式的\",{\"1\":{\"582\":1}}],[\"如果想要在beforecreate和create中进行操作\",{\"1\":{\"368\":1}}],[\"如果想要在页面中展示出\",{\"1\":{\"117\":1}}],[\"如果想要对所有页面启用\",{\"1\":{\"117\":1}}],[\"如果在每个需要获取数据的组件中都要重复这种模式\",{\"1\":{\"504\":1}}],[\"如果在发生某些情况下\",{\"1\":{\"375\":1}}],[\"如果在初次渲染时没有遇到异步依赖\",{\"1\":{\"283\":1}}],[\"如果在这个过程中遇到任何异步依赖\",{\"1\":{\"283\":1}}],[\"如果在一个页面内多次调用\",{\"1\":{\"118\":1}}],[\"如果在另外的文件中引用该自定义组件\",{\"1\":{\"21\":1}}],[\"如果展示了缓存中的渲染结果\",{\"1\":{\"115\":1}}],[\"如果有的话\",{\"1\":{\"408\":2,\"548\":1}}],[\"如果有的资源没有在\",{\"1\":{\"256\":1}}],[\"如果有多层\",{\"1\":{\"381\":1}}],[\"如果有必要的话\",{\"1\":{\"163\":1}}],[\"如果有作为监听器的\",{\"1\":{\"155\":1}}],[\"如果有\",{\"1\":{\"115\":1}}],[\"如果页面添加了上述声明\",{\"1\":{\"113\":1}}],[\"如果页面这样使用这个组件\",{\"1\":{\"111\":1,\"112\":1}}],[\"如果输入框的值被改变了\",{\"1\":{\"110\":1}}],[\"如果需要同时传入某个参数\",{\"1\":{\"449\":1}}],[\"如果需要\",{\"1\":{\"262\":1}}],[\"如果需要解析模板\",{\"1\":{\"250\":1}}],[\"如果需要在用户输入的同时改变\",{\"1\":{\"110\":2}}],[\"如果需要全局的数据可以在\",{\"1\":{\"98\":1}}],[\"如果需要使用条件判断\",{\"1\":{\"23\":1}}],[\"如果超过2m\",{\"1\":{\"76\":1}}],[\"如果点击界面上的\",{\"1\":{\"40\":1}}],[\"如果所有问题都已经解决\",{\"1\":{\"27\":1}}],[\"如果出现类似下面的错误\",{\"1\":{\"27\":1}}],[\"如果电脑上对node\",{\"1\":{\"26\":1}}],[\"如果电脑上已经有node\",{\"1\":{\"26\":2}}],[\"如果开发者没有定义keygenerator函数\",{\"1\":{\"17\":1}}],[\"如跟随在button后面的onclick\",{\"1\":{\"3\":1}}],[\"系统会为每个数组元素生成一个唯一且持久的键值\",{\"1\":{\"17\":1}}],[\"系统组件\",{\"1\":{\"3\":2}}],[\"系统类型增强\",{\"1\":{\"1\":1}}],[\"可用的配置\",{\"0\":{\"563\":1}}],[\"可用于露出前一项的一小部分\",{\"1\":{\"123\":1}}],[\"可提供一个数组\",{\"1\":{\"550\":1}}],[\"可提供\",{\"1\":{\"550\":1}}],[\"可定制的滚动行为\",{\"1\":{\"539\":1}}],[\"可扩展性更强\",{\"1\":{\"519\":1}}],[\"可维护性\",{\"1\":{\"519\":1}}],[\"可是我发现自己内部的也可以指定\",{\"1\":{\"420\":1}}],[\"可读写\",{\"1\":{\"365\":1}}],[\"可写的\",{\"1\":{\"354\":1}}],[\"可供选择的附加代码检查功能\",{\"1\":{\"268\":1}}],[\"可自动格式化代码\",{\"1\":{\"268\":1}}],[\"可升级\",{\"1\":{\"266\":1}}],[\"可移植性\",{\"1\":{\"209\":1}}],[\"可选的\",{\"1\":{\"437\":1}}],[\"可选的属性\",{\"1\":{\"215\":1}}],[\"可选择不同打包器\",{\"1\":{\"180\":1}}],[\"可选值\",{\"1\":{\"59\":1,\"60\":1,\"624\":1,\"637\":1}}],[\"可搭配browserify等模块化工具来使用\",{\"1\":{\"180\":1}}],[\"可引入插件打包css等其他资源\",{\"1\":{\"180\":1}}],[\"可通过插件扩展\",{\"1\":{\"580\":1}}],[\"可通过其\",{\"1\":{\"178\":1}}],[\"可通过自定义组件下的\",{\"1\":{\"135\":1}}],[\"可输出用于生产环境的高度优化过的静态资源\",{\"1\":{\"178\":1}}],[\"可过渡的\",{\"1\":{\"175\":1}}],[\"可获取当前页面下的自定义\",{\"1\":{\"136\":1}}],[\"可参考底部的代码示例\",{\"1\":{\"135\":1}}],[\"可滚动视图区域\",{\"1\":{\"124\":1}}],[\"可被配置\",{\"1\":{\"89\":1}}],[\"可能是用户手动或者浏览器后退按钮\",{\"1\":{\"559\":1,\"566\":1}}],[\"可能是移动到vue\",{\"1\":{\"418\":1}}],[\"可能会自动复用看起来相似的组件\",{\"1\":{\"570\":1}}],[\"可能会抛出一个\",{\"1\":{\"559\":1}}],[\"可能会注册相同的属性名\",{\"1\":{\"514\":1}}],[\"可能会出现一种叫做\",{\"1\":{\"436\":1}}],[\"可能什么都不显示\",{\"1\":{\"286\":1}}],[\"可能不太适应\",{\"1\":{\"70\":1}}],[\"可能下载失败\",{\"1\":{\"68\":1}}],[\"可为非容器组件\",{\"1\":{\"23\":1}}],[\"可以的\",{\"1\":{\"653\":1}}],[\"可以添加一个\",{\"1\":{\"570\":1}}],[\"可以添加到\",{\"1\":{\"243\":1}}],[\"可以返回的值如下\",{\"1\":{\"559\":1}}],[\"可以给路由对应的组件内传值\",{\"1\":{\"547\":1}}],[\"可以从其他文件\",{\"1\":{\"540\":1}}],[\"可以从对象中获取到数据\",{\"1\":{\"528\":1}}],[\"可以去掉\",{\"1\":{\"540\":1}}],[\"可以有自己的功能逻辑\",{\"1\":{\"519\":1}}],[\"可以利用\",{\"1\":{\"477\":1,\"508\":1}}],[\"可以非常方便的实现\",{\"1\":{\"468\":1}}],[\"可以阻止事件继续冒泡到父元素\",{\"1\":{\"450\":1}}],[\"可以不添加\",{\"1\":{\"449\":1}}],[\"可以嵌套对象语法\",{\"1\":{\"441\":1}}],[\"可以用于描述某一个标签\",{\"1\":{\"461\":1}}],[\"可以用于遍历一组数据\",{\"1\":{\"456\":1}}],[\"可以用于绑定一个包含了多个\",{\"1\":{\"437\":1}}],[\"可以用于设置转换的限制\",{\"1\":{\"226\":1}}],[\"可以接收一下返回的props对象\",{\"1\":{\"403\":1}}],[\"可以是异步的\",{\"1\":{\"584\":1}}],[\"可以是\",{\"1\":{\"540\":1}}],[\"可以是一个字符串\",{\"1\":{\"391\":1}}],[\"可以是单个文件或多个文件\",{\"1\":{\"213\":1}}],[\"可以像函数或者通常意义上的方法一样被调用\",{\"1\":{\"584\":1}}],[\"可以像在模板中一样\",{\"1\":{\"391\":1}}],[\"可以像对组件传递\",{\"1\":{\"294\":1}}],[\"可以自己来编写\",{\"1\":{\"385\":1}}],[\"可以自动的完成编译和展示\",{\"1\":{\"252\":1}}],[\"可以把代码直接写入到setup中\",{\"1\":{\"368\":1}}],[\"可以修改属性值\",{\"1\":{\"354\":2}}],[\"可以被正常使用\",{\"1\":{\"350\":1}}],[\"可以被用来定义离开动画的持续时间\",{\"1\":{\"157\":1}}],[\"可以被用来定义进入动画的持续时间\",{\"1\":{\"157\":1}}],[\"可以安全地解构\",{\"1\":{\"349\":1}}],[\"可以更详细地指定需要接收的属性名称\",{\"1\":{\"305\":1,\"321\":1}}],[\"可以作为\",{\"1\":{\"295\":1}}],[\"可以类比这里的函数签名\",{\"1\":{\"294\":1}}],[\"可以简单地指定需要接收的属性名称\",{\"1\":{\"304\":1,\"320\":1}}],[\"可以简写为v\",{\"1\":{\"296\":1}}],[\"可以简写为\",{\"1\":{\"291\":1}}],[\"可以简化模块导入的路径\",{\"1\":{\"264\":1}}],[\"可以简化项目的部署过程\",{\"1\":{\"209\":1}}],[\"可以为插槽指定默认内容\",{\"1\":{\"289\":1}}],[\"可以为非容器组件\",{\"1\":{\"23\":1}}],[\"可以运行以下命令\",{\"1\":{\"272\":1}}],[\"可以选择仅运行时版本\",{\"1\":{\"530\":1}}],[\"可以选择运行时+编译器版本\",{\"1\":{\"530\":1}}],[\"可以选择\",{\"1\":{\"268\":1}}],[\"可以选择local\",{\"1\":{\"26\":1}}],[\"可以告诉\",{\"1\":{\"264\":2}}],[\"可以设置一个默认的页面\",{\"1\":{\"263\":1}}],[\"可以设置为true\",{\"1\":{\"261\":1}}],[\"可以设置为\",{\"1\":{\"260\":1}}],[\"可以这样修改配置\",{\"1\":{\"262\":1}}],[\"可以提高开发效率\",{\"1\":{\"254\":1}}],[\"可以具备live\",{\"1\":{\"254\":1}}],[\"可以帮助开发者在本地启动一个服务器\",{\"1\":{\"252\":1}}],[\"可以帮助开发者快速定位一些常见的问题\",{\"1\":{\"145\":1}}],[\"可以实现树摇\",{\"1\":{\"251\":1}}],[\"可以实现网页无法实现的功能\",{\"1\":{\"90\":1}}],[\"可以直接交给浏览器展示\",{\"1\":{\"536\":1}}],[\"可以直接打开cdn的链接\",{\"1\":{\"524\":1}}],[\"可以直接使用\",{\"1\":{\"403\":1}}],[\"可以直接修改\",{\"1\":{\"358\":1}}],[\"可以直接将这两个文件主动发送给客户端\",{\"1\":{\"258\":1}}],[\"可以直接作用于monorepos项目的子包\",{\"1\":{\"249\":1}}],[\"可以直接转换成机器代码\",{\"1\":{\"196\":1}}],[\"可以省略\",{\"1\":{\"238\":1,\"386\":1}}],[\"可以省略new\",{\"1\":{\"20\":1}}],[\"可以根据需要配置多个loader来处理文件\",{\"1\":{\"214\":1}}],[\"可以根据屏幕宽度进行自适应\",{\"1\":{\"148\":1}}],[\"可以确保每个项目使用的webpack版本是一致的\",{\"1\":{\"209\":1}}],[\"可以将reactive返回的对象中的属性都转成ref\",{\"1\":{\"363\":1}}],[\"可以将\",{\"1\":{\"241\":1}}],[\"可以将整个项目打包成一个可移植的文件夹\",{\"1\":{\"209\":1}}],[\"可以将这些语法转换为浏览器可以识别的语法\",{\"1\":{\"208\":1}}],[\"可以将一些公共的代码抽离成为一个单独的\",{\"1\":{\"97\":1}}],[\"可以观察到浏览器请求\",{\"1\":{\"197\":1}}],[\"可以显著减少文件体积\",{\"1\":{\"195\":1}}],[\"可以看到在处理\",{\"1\":{\"201\":1}}],[\"可以看到\",{\"1\":{\"182\":1,\"195\":1}}],[\"可以看到swiper组件有轮播图的效果\",{\"1\":{\"123\":1}}],[\"可以指定不同类型文件的匹配规则和对应的loader\",{\"1\":{\"214\":1}}],[\"可以指定在什么时间是什么状态\",{\"1\":{\"160\":1}}],[\"可以指定返回多少级\",{\"1\":{\"130\":1}}],[\"可以很好的增加用户体验\",{\"1\":{\"154\":1}}],[\"可以让我们在命令行使用babel\",{\"1\":{\"242\":1}}],[\"可以让开发者更加灵活地设置\",{\"1\":{\"135\":1}}],[\"可以让数据与视图非常简单地保持同步\",{\"1\":{\"91\":1}}],[\"可以完整地将图片显示出来\",{\"1\":{\"132\":1}}],[\"可以通过使用\",{\"1\":{\"694\":1}}],[\"可以通过将\",{\"1\":{\"547\":1,\"548\":1}}],[\"可以通过vue\",{\"1\":{\"530\":1}}],[\"可以通过teleport来完成\",{\"1\":{\"418\":1}}],[\"可以通过插件进行扩展\",{\"1\":{\"266\":1}}],[\"可以通过项目内的配置文件进行配置\",{\"1\":{\"266\":1}}],[\"可以通过网络访问\",{\"1\":{\"260\":1}}],[\"可以通过对象的属性来设置一些其他属性\",{\"1\":{\"215\":1}}],[\"可以通过\",{\"1\":{\"128\":1,\"139\":1,\"143\":1,\"250\":1,\"265\":1,\"449\":1,\"489\":1}}],[\"可以\",{\"1\":{\"115\":1,\"468\":1}}],[\"可以使视图层不需要等待逻辑层初始化完毕\",{\"1\":{\"115\":1}}],[\"可以使用格式\",{\"1\":{\"457\":1}}],[\"可以使用computed\",{\"1\":{\"430\":1}}],[\"可以使用选择器\",{\"1\":{\"418\":1}}],[\"可以使用单个插槽函数进行传递\",{\"1\":{\"386\":1}}],[\"可以使用以下写法\",{\"1\":{\"379\":1}}],[\"可以使用直接导入的\",{\"1\":{\"368\":1}}],[\"可以使用官方维护的插件\",{\"1\":{\"347\":1}}],[\"可以使用预处理器来构建更加丰富的组件\",{\"1\":{\"339\":1}}],[\"可以使用下列任一命令安装这个新的包\",{\"1\":{\"267\":1}}],[\"可以使用import\",{\"1\":{\"264\":1}}],[\"可以使用proxy选项来配置代理设置\",{\"1\":{\"262\":1}}],[\"可以使用不同的参数和选项来控制打包的行为\",{\"1\":{\"213\":1}}],[\"可以使用裁剪或者缩放调整大小\",{\"1\":{\"132\":1}}],[\"可以使用obj\",{\"1\":{\"59\":1}}],[\"可以使用\",{\"1\":{\"18\":1,\"154\":1,\"314\":1,\"331\":1,\"450\":1,\"550\":1,\"573\":1,\"694\":1}}],[\"可以获取全局的应用实例\",{\"1\":{\"98\":1}}],[\"可以访问\",{\"1\":{\"93\":1}}],[\"可以执行修订\",{\"1\":{\"62\":1}}],[\"可以参考\",{\"1\":{\"58\":1}}],[\"可以在路由中使用\",{\"1\":{\"574\":1}}],[\"可以在不重新加载页面的情况下更改\",{\"1\":{\"541\":1}}],[\"可以在继承组件的\",{\"1\":{\"500\":1}}],[\"可以在方法中获取\",{\"1\":{\"449\":1}}],[\"可以在任意组件中被使用\",{\"1\":{\"409\":1}}],[\"可以在生命周期中获取到值\",{\"1\":{\"370\":1,\"371\":1}}],[\"可以在这个组件上正常工作了\",{\"1\":{\"343\":1}}],[\"可以在组件上使用以实现双向绑定\",{\"1\":{\"343\":1,\"481\":1}}],[\"可以在其中直接使用\",{\"1\":{\"340\":1}}],[\"可以在插槽内的表达式中访问\",{\"1\":{\"294\":1}}],[\"可以在命令后面添加对应的参数\",{\"1\":{\"272\":1}}],[\"可以在各种设备和平台上提供类似原生应用的体验\",{\"1\":{\"268\":1}}],[\"可以在本地运行你的应用程序\",{\"1\":{\"252\":1}}],[\"可以在编译时进行覆盖\",{\"1\":{\"251\":1}}],[\"可以在页面对应的\",{\"1\":{\"146\":1}}],[\"可以在开发者工具中开启\",{\"1\":{\"145\":1}}],[\"可以在\",{\"1\":{\"117\":1,\"132\":1}}],[\"可以在对应项目之前加入\",{\"1\":{\"110\":2}}],[\"可以在模版中内联少量处理脚本\",{\"1\":{\"107\":1}}],[\"可以在子组件初始化\",{\"1\":{\"40\":1}}],[\"可以在build方法里创建自定义组件\",{\"1\":{\"22\":1}}],[\"可以同步给不同的状态数据\",{\"1\":{\"36\":1}}],[\"可以调用\",{\"1\":{\"23\":1}}],[\"可以加载网络图片\",{\"1\":{\"10\":1}}],[\"可直接被开发者调用\",{\"1\":{\"3\":1}}],[\"可组合其他组件\",{\"1\":{\"3\":1}}],[\"可复用的ui单元\",{\"1\":{\"3\":1}}],[\"可分为只读的单向传递和可变更的双向传递\",{\"1\":{\"1\":1}}],[\"状态是通过\",{\"1\":{\"694\":1}}],[\"状态栏颜色\",{\"1\":{\"142\":1,\"146\":1}}],[\"状态数据的改变\",{\"1\":{\"35\":1}}],[\"状态\",{\"1\":{\"35\":1,\"168\":1}}],[\"状态变量的原始来源\",{\"1\":{\"36\":1}}],[\"状态变量的改变会引起ui的渲染刷新\",{\"1\":{\"35\":1}}],[\"状态变量值的改变会引起ui的渲染更新\",{\"1\":{\"36\":1}}],[\"状态变量\",{\"1\":{\"36\":1}}],[\"状态变量message的改变驱动ui刷新\",{\"1\":{\"21\":2}}],[\"状态变量变化会触发ui刷新\",{\"1\":{\"3\":1}}],[\"状态管理\",{\"0\":{\"35\":1},\"1\":{\"1\":1}}],[\"并返回计算后的新数据\",{\"1\":{\"656\":1}}],[\"并返回需要暴露的状态\",{\"1\":{\"503\":1}}],[\"并设置如下三个组件\",{\"1\":{\"602\":1}}],[\"并导出\",{\"1\":{\"585\":1}}],[\"并支持完整的类型标注\",{\"1\":{\"584\":1}}],[\"并用它替换当前状态\",{\"1\":{\"582\":1}}],[\"并覆盖我们原来的位置\",{\"1\":{\"573\":1}}],[\"并对导航进行动画处理\",{\"1\":{\"570\":1}}],[\"并对其依赖项跟踪和更新触发进行显示控制\",{\"1\":{\"359\":1}}],[\"并加上参数\",{\"1\":{\"550\":1}}],[\"并加载应用程序\",{\"1\":{\"261\":1}}],[\"并以\",{\"1\":{\"507\":1}}],[\"并让它基于传入的状态来创建执行操作的侦听器\",{\"1\":{\"505\":1}}],[\"并编写一个处理函数来改变抛出的值\",{\"1\":{\"489\":1}}],[\"并赋值给el\",{\"1\":{\"416\":1}}],[\"并赋予其特殊的含义\",{\"1\":{\"3\":1}}],[\"并为\",{\"1\":{\"365\":1}}],[\"并没有使它响应式\",{\"1\":{\"350\":1}}],[\"并始终通过\",{\"1\":{\"349\":1}}],[\"并传递了消息\",{\"1\":{\"314\":1,\"331\":1}}],[\"并指定每个prop的类型\",{\"1\":{\"302\":1,\"318\":1}}],[\"并可以在等待时渲染一个加载状态\",{\"1\":{\"283\":1}}],[\"并超时了\",{\"1\":{\"282\":1}}],[\"并仅在需要时再从服务器加载相关组件\",{\"1\":{\"282\":1}}],[\"并生成一个兼容老浏览器的包用来自动回退\",{\"1\":{\"271\":1}}],[\"并生成输出文件\",{\"1\":{\"213\":1}}],[\"并附带开箱即用的模块热重载\",{\"1\":{\"270\":1}}],[\"并自动修复一些常见的问题\",{\"1\":{\"268\":1}}],[\"并与prettier代码格式化工具集成\",{\"1\":{\"268\":1}}],[\"并应用javascript\",{\"1\":{\"268\":1}}],[\"并应用airbnb\",{\"1\":{\"268\":1}}],[\"并带有合理的默认配置\",{\"1\":{\"266\":1}}],[\"并使用相应的选项进行配置\",{\"1\":{\"262\":1}}],[\"并使用pathrewrite选项将请求路径中的\",{\"1\":{\"262\":1}}],[\"并尽可能地将新代码应用于正在运行的应用程序\",{\"1\":{\"258\":1}}],[\"并接收来自服务器的更新通知\",{\"1\":{\"258\":1}}],[\"并触发模块热替换\",{\"1\":{\"258\":1}}],[\"并提高代码的可维护性\",{\"1\":{\"251\":1}}],[\"并提供更好的可重用性和协作性\",{\"1\":{\"249\":1}}],[\"并提供完整的类型支持\",{\"1\":{\"178\":1}}],[\"并减少资源消耗\",{\"1\":{\"251\":1}}],[\"并根据需要进行修改或替换\",{\"1\":{\"246\":1}}],[\"并根据依赖图来进行转换\",{\"1\":{\"182\":1}}],[\"并不属于这种情况\",{\"1\":{\"550\":1}}],[\"并不会将解析之后的css插入到页面中\",{\"1\":{\"216\":1}}],[\"并不需要思考这些问题\",{\"1\":{\"203\":1}}],[\"并不是唯一能修改\",{\"1\":{\"694\":2}}],[\"并不是函数式编程\",{\"1\":{\"347\":1}}],[\"并不是\",{\"1\":{\"250\":1}}],[\"并不是只下载包含这个函数的文件\",{\"1\":{\"197\":1}}],[\"并不是所有\",{\"1\":{\"146\":1}}],[\"并会得到一个警告\",{\"1\":{\"361\":1}}],[\"并会覆盖\",{\"1\":{\"152\":1}}],[\"并会基于新的键值创建一个新的组件\",{\"1\":{\"17\":1}}],[\"并调用下一个导航守卫\",{\"1\":{\"559\":1}}],[\"并调用\",{\"1\":{\"135\":1}}],[\"并关闭其他所有非\",{\"1\":{\"130\":2}}],[\"并且能够更好地处理异步操作\",{\"1\":{\"694\":1}}],[\"并且把组件实例作为回调方法的参数\",{\"1\":{\"563\":1}}],[\"并且当移动端\",{\"1\":{\"537\":1}}],[\"并且当我们处理单个逻辑关注点时\",{\"1\":{\"346\":1}}],[\"并且可以在组件中像计算属性一样使用\",{\"1\":{\"696\":1}}],[\"并且可以接收额外的参数作为载荷\",{\"1\":{\"694\":1}}],[\"并且可以通过javascript将数据渲染到页面中\",{\"1\":{\"537\":1}}],[\"并且可以使用\",{\"1\":{\"339\":1}}],[\"并且将页面返回给客户端\",{\"1\":{\"536\":1}}],[\"并且将其传递给babel\",{\"1\":{\"248\":1}}],[\"并且最后交给一个controller\",{\"1\":{\"536\":1}}],[\"并且最后进行新增\",{\"1\":{\"464\":1}}],[\"并且愿意手动编写渲染逻辑\",{\"1\":{\"530\":1}}],[\"并且vue会在运行时将其编译成渲染函数\",{\"1\":{\"530\":1}}],[\"并且通过\",{\"1\":{\"529\":1}}],[\"并且应该可以通过this获取到data返回对象中的数据\",{\"1\":{\"529\":1}}],[\"并且应该返回一个带有\",{\"1\":{\"359\":1}}],[\"并且该函数需要返回一个对象\",{\"1\":{\"528\":1}}],[\"并且该列表中添加删除数据也希望有动画执行呢\",{\"1\":{\"173\":1}}],[\"并且标记它的类型为\",{\"1\":{\"527\":1}}],[\"并且ide很有可能没有任何提示\",{\"1\":{\"527\":1}}],[\"并且自己手动引入\",{\"1\":{\"522\":1}}],[\"并且它们也是定义业务逻辑的完美选择\",{\"1\":{\"584\":1}}],[\"并且它们还可以做到是响应式的\",{\"1\":{\"521\":1}}],[\"并且它可以在路由地址和导航守卫上都被访问到\",{\"1\":{\"569\":1}}],[\"并且它是预配置的\",{\"1\":{\"178\":1}}],[\"并且多个mixins会存在命名冲突的问题\",{\"1\":{\"521\":1}}],[\"并且\",{\"1\":{\"519\":1}}],[\"并且就此结束\",{\"1\":{\"505\":1}}],[\"并且都定义了方法\",{\"1\":{\"498\":1}}],[\"并且计算属性是有缓存的\",{\"1\":{\"472\":1}}],[\"并且如果多个地方都使用到\",{\"1\":{\"468\":1}}],[\"并且如果我们的插槽只有默认插槽时\",{\"1\":{\"296\":1}}],[\"并且支持有一二三个参数\",{\"1\":{\"457\":1}}],[\"并且需要对其进行渲染\",{\"1\":{\"456\":1}}],[\"并且是一个对象\",{\"1\":{\"443\":1}}],[\"并且是浏览器兼容的\",{\"1\":{\"171\":1}}],[\"并且同一个生命周期可以使用多次\",{\"1\":{\"368\":1}}],[\"并且同时会安装npm\",{\"1\":{\"206\":1}}],[\"并且隐藏了潜在的逻辑问题\",{\"1\":{\"346\":1}}],[\"并且我们前端提到过\",{\"1\":{\"430\":1}}],[\"并且我们的代码为了适配一些浏览器\",{\"1\":{\"339\":1}}],[\"并且我们需要一系列的配置来满足要求\",{\"1\":{\"211\":1}}],[\"并且对文件大小没有太大的担忧\",{\"1\":{\"530\":1}}],[\"并且对\",{\"1\":{\"338\":1}}],[\"并且只能在该父组件中使用\",{\"1\":{\"338\":1}}],[\"并且绑定到对应的方法中\",{\"1\":{\"310\":1,\"326\":1}}],[\"并且默认选择\",{\"1\":{\"268\":2}}],[\"并且某些配置是在开发环境需要使用的\",{\"1\":{\"265\":1}}],[\"并且针对修改的模块进行更新\",{\"1\":{\"258\":1}}],[\"并且在下列场景中都是官方推荐的项目组织方式\",{\"1\":{\"531\":1}}],[\"并且在v\",{\"1\":{\"453\":1}}],[\"并且在执行的过程中会收集依赖\",{\"1\":{\"374\":1}}],[\"并且在template中依然是可以正常去使用props中的属性\",{\"1\":{\"349\":1}}],[\"并且在真实开发中\",{\"1\":{\"299\":1,\"315\":1}}],[\"并且在稳定之前相关\",{\"1\":{\"283\":1}}],[\"并且在文件发生变化时自动重新加载页面\",{\"1\":{\"252\":1}}],[\"并且在这个情况下可能某一个动画执行结束时\",{\"1\":{\"162\":1}}],[\"并且图片可以正常显示\",{\"1\":{\"225\":1}}],[\"并且会跟踪\",{\"1\":{\"505\":1}}],[\"并且会移除\",{\"1\":{\"460\":1}}],[\"并且会把app实例传入\",{\"1\":{\"426\":1}}],[\"并且会在传入新的\",{\"1\":{\"349\":2}}],[\"并且会将它们作为打包时的代码分割点\",{\"1\":{\"282\":1}}],[\"并且会将它放到我们输出的文件夹中\",{\"1\":{\"224\":1}}],[\"并且会根据目标浏览器或者运行时环境\",{\"1\":{\"223\":1}}],[\"并且制定使用autoprefixer\",{\"1\":{\"221\":1}}],[\"并且使用它\",{\"1\":{\"522\":1}}],[\"并且使用\",{\"1\":{\"215\":1}}],[\"并且不需要缓存\",{\"1\":{\"196\":1}}],[\"并且配置资源体积限制实现\",{\"1\":{\"231\":1}}],[\"并且配置\",{\"1\":{\"188\":1}}],[\"并且关闭\",{\"1\":{\"67\":1}}],[\"并且版本一致\",{\"1\":{\"26\":1}}],[\"并将其放在\",{\"1\":{\"548\":1}}],[\"并将其应用于相应的模块\",{\"1\":{\"258\":1}}],[\"并将pathmatch\",{\"1\":{\"547\":1,\"548\":1}}],[\"并将它们打印到控制台\",{\"1\":{\"342\":1}}],[\"并将接收到的消息显示在页面上\",{\"1\":{\"314\":1,\"331\":1}}],[\"并将目标插槽的名字传给该指令\",{\"1\":{\"291\":1}}],[\"并将展示出默认插槽的内容\",{\"1\":{\"283\":1}}],[\"并将该数据属性绑定到\",{\"1\":{\"276\":1,\"328\":1}}],[\"并将更新的模块代码应用到正在运行的应用程序中\",{\"1\":{\"258\":1}}],[\"并将转换后的结果传递给下一个loader\",{\"1\":{\"214\":1}}],[\"并将被拷贝对象的栈内存数据完全拷贝到该块空间中\",{\"1\":{\"44\":1}}],[\"并将创建mycomponent成员变量countdownfrom初始化为10\",{\"1\":{\"22\":1}}],[\"并记录其变化\",{\"1\":{\"40\":1}}],[\"并在其中编辑基本配置\",{\"1\":{\"543\":1}}],[\"并在回调函数中执行副作用\",{\"1\":{\"378\":1}}],[\"并在子组件中使用这些数据\",{\"1\":{\"302\":1,\"318\":1}}],[\"并在文件发生更改时\",{\"1\":{\"258\":1}}],[\"并在文件发生更改时自动重新加载页面\",{\"1\":{\"252\":1}}],[\"并在小程序启动的时候运行\",{\"1\":{\"92\":1}}],[\"并在视图层与逻辑层间提供了数据传输和事件系统\",{\"1\":{\"90\":1}}],[\"并在使用的页面import该自定义组件\",{\"1\":{\"21\":1}}],[\"并在每次迭代过程中创建相应的组件\",{\"1\":{\"1\":2}}],[\"装饰器标记的变量必须初始化\",{\"1\":{\"38\":1}}],[\"装饰器\",{\"0\":{\"40\":1},\"1\":{\"3\":1}}],[\"逐步提供并行和并发能力增强\",{\"1\":{\"1\":1}}],[\"渲染作用域\",{\"0\":{\"293\":1}}],[\"渲染插槽内容到对应位置\",{\"1\":{\"291\":1}}],[\"渲染后端\",{\"1\":{\"146\":1}}],[\"渲染后端选项\",{\"1\":{\"139\":1,\"146\":1}}],[\"渲染模式的时候\",{\"1\":{\"137\":1}}],[\"渲染模式下\",{\"1\":{\"123\":1}}],[\"渲染\",{\"1\":{\"118\":1}}],[\"渲染层的界面使用了webview\",{\"1\":{\"90\":1}}],[\"渲染任务列表\",{\"1\":{\"39\":1}}],[\"渲染对应状态下的ui内容\",{\"1\":{\"1\":1}}],[\"渲染控制\",{\"1\":{\"1\":1}}],[\"爷孙组件之间\",{\"1\":{\"1\":1}}],[\"在根store和开启命名空间里的区别\",{\"1\":{\"683\":1}}],[\"在模块对象内设置namespaced\",{\"1\":{\"678\":1}}],[\"在模板语法中直接使用表达式\",{\"0\":{\"470\":1},\"1\":{\"469\":1}}],[\"在模板中放入太多的逻辑会让模板过重和难以维护\",{\"1\":{\"468\":1}}],[\"在模板中可以直接通过插值语法显示一些data中的数据\",{\"1\":{\"468\":1}}],[\"在模板中可以通过\",{\"1\":{\"335\":1}}],[\"在模板中\",{\"1\":{\"429\":1}}],[\"在模板中启用\",{\"1\":{\"410\":1}}],[\"在模板中引入ref的值时\",{\"1\":{\"355\":1}}],[\"在模板中使用表达式\",{\"1\":{\"468\":1}}],[\"在模板中使用短横线分隔的形式\",{\"1\":{\"306\":1,\"322\":1}}],[\"在模板中使用\",{\"1\":{\"276\":1,\"328\":1}}],[\"在现有项目如何集成vuex\",{\"1\":{\"646\":1}}],[\"在computed内\",{\"1\":{\"619\":1}}],[\"在composition\",{\"1\":{\"365\":1,\"372\":1}}],[\"在任意组件可以使用\",{\"1\":{\"598\":1}}],[\"在任何给定的导航守卫中都被严格调用一次\",{\"1\":{\"559\":1}}],[\"在任何其他的组件中都可以使用的组件\",{\"1\":{\"336\":1}}],[\"在实际开发中\",{\"1\":{\"585\":1}}],[\"在实际应用中\",{\"1\":{\"502\":1}}],[\"在methods内\",{\"1\":{\"632\":1,\"643\":1}}],[\"在mian\",{\"1\":{\"581\":1}}],[\"在main\",{\"1\":{\"170\":1}}],[\"在按下\",{\"1\":{\"571\":1}}],[\"在原地停留\",{\"1\":{\"567\":1}}],[\"在原生元素上的用法\",{\"1\":{\"343\":1,\"481\":1}}],[\"在路由对象上使用固定方法\",{\"1\":{\"567\":1}}],[\"在路由配置里调用\",{\"1\":{\"565\":1}}],[\"在跳转路由前\",{\"1\":{\"567\":1}}],[\"在跳转路由时\",{\"1\":{\"547\":1}}],[\"在被激活的组件里调用\",{\"1\":{\"565\":1}}],[\"在重用的组件里调用\",{\"1\":{\"565\":1}}],[\"在失活的组件里调用\",{\"1\":{\"565\":1}}],[\"在导航被确认的时候执行回调\",{\"1\":{\"563\":1}}],[\"在导航离开渲染该组件的对应路由时调用\",{\"1\":{\"563\":1}}],[\"在导出一个\",{\"1\":{\"231\":1}}],[\"在当前路由改变\",{\"1\":{\"563\":1}}],[\"在渲染该组件的对应路由被验证前调用\",{\"1\":{\"563\":1}}],[\"在处理复杂路由时可能需要额外的插件或工具\",{\"1\":{\"539\":1}}],[\"在处理绑定时\",{\"1\":{\"437\":1}}],[\"在网络中\",{\"1\":{\"535\":1}}],[\"在架构一个网络时\",{\"1\":{\"535\":1}}],[\"在浏览器中\",{\"1\":{\"584\":1}}],[\"在浏览器中打开调试面板\",{\"1\":{\"532\":1}}],[\"在浏览器环境中\",{\"1\":{\"250\":1}}],[\"在demo中打下断点\",{\"1\":{\"532\":1}}],[\"在项目中配置yarn\",{\"1\":{\"532\":1}}],[\"在项目中创建\",{\"1\":{\"188\":1}}],[\"在页面中通过cdn的方式来引入\",{\"1\":{\"522\":1}}],[\"在页面初始化过程中\",{\"1\":{\"115\":1}}],[\"在需要同时复用逻辑和视图布局时使用无渲染组件\",{\"1\":{\"515\":1}}],[\"在需要使用这些模块的文件中\",{\"1\":{\"97\":1}}],[\"在选项式\",{\"0\":{\"513\":1}}],[\"在做异步数据请求时\",{\"1\":{\"504\":1}}],[\"在组件使用的时候\",{\"1\":{\"675\":1}}],[\"在组件中展示它们所用到的\",{\"1\":{\"580\":1}}],[\"在组件插槽一章中\",{\"1\":{\"515\":1}}],[\"在组件内访问到\",{\"1\":{\"489\":1}}],[\"在组合式函数中的确可以执行副作用\",{\"1\":{\"510\":1}}],[\"在组合式\",{\"1\":{\"500\":1}}],[\"在某种程度上\",{\"1\":{\"512\":1}}],[\"在某个时间会被vue源码内部进行回调\",{\"1\":{\"492\":1}}],[\"在某些场景下\",{\"1\":{\"489\":1}}],[\"在某些情况下\",{\"1\":{\"418\":1,\"445\":1,\"451\":1,\"511\":1}}],[\"在下面的代码里\",{\"1\":{\"489\":1}}],[\"在下面的组件中\",{\"1\":{\"489\":1}}],[\"在下面的示例中\",{\"1\":{\"304\":1,\"305\":1,\"320\":1,\"321\":1}}],[\"在可以转化的情况下会进行隐式转换的\",{\"1\":{\"487\":1}}],[\"在可能的时候都将显示默认槽中的节点\",{\"1\":{\"283\":1}}],[\"在方法中被赋值改变时\",{\"1\":{\"477\":1}}],[\"在数据不发生变化时\",{\"1\":{\"473\":1}}],[\"在界面上显示不及格\",{\"1\":{\"469\":1}}],[\"在界面上显示及格\",{\"1\":{\"469\":1}}],[\"在操作真实dom的时候\",{\"1\":{\"463\":1}}],[\"在新旧nodes对比时辨识vnodes\",{\"1\":{\"460\":1}}],[\"在遍历一个数组的时候会经常需要拿到数组的索引\",{\"1\":{\"457\":1}}],[\"在真实开发中\",{\"1\":{\"456\":1,\"483\":1}}],[\"在真实的开发中\",{\"1\":{\"299\":1,\"315\":1}}],[\"在用法上的区别\",{\"1\":{\"455\":1}}],[\"在用户的javascript被关闭时\",{\"1\":{\"236\":1}}],[\"在给元素绑定事件时\",{\"1\":{\"450\":1}}],[\"在该方法中\",{\"1\":{\"529\":1}}],[\"在该网站中生成代码片段\",{\"1\":{\"428\":1}}],[\"在该模式下\",{\"1\":{\"253\":1}}],[\"在没有key的时候我们的效率是非常低效的\",{\"1\":{\"465\":1}}],[\"在没有使用\",{\"1\":{\"411\":1}}],[\"在没有配置这些特性标志的情况下\",{\"1\":{\"251\":1}}],[\"在卸载绑定元素的父组件之前调用\",{\"1\":{\"407\":1}}],[\"在包含组件的\",{\"1\":{\"407\":1}}],[\"在更新包含组件的\",{\"1\":{\"407\":1}}],[\"在绑定元素的父组件\",{\"1\":{\"408\":2}}],[\"在绑定元素的父组件被挂载后调用\",{\"1\":{\"407\":1}}],[\"在绑定元素的\",{\"1\":{\"407\":1,\"408\":1}}],[\"在生命周期中访问\",{\"1\":{\"405\":1}}],[\"在生产环境中\",{\"1\":{\"263\":1}}],[\"在store内\",{\"1\":{\"621\":1}}],[\"在store\",{\"1\":{\"615\":1,\"624\":1,\"637\":1,\"657\":1}}],[\"在stage模型中\",{\"1\":{\"33\":1}}],[\"在src下面创建一个store文件夹\",{\"1\":{\"581\":1}}],[\"在setup函数中\",{\"0\":{\"399\":1}}],[\"在setup函数选项中\",{\"0\":{\"389\":1}}],[\"在setup语法糖中\",{\"0\":{\"390\":1,\"400\":1}}],[\"在render函数中\",{\"0\":{\"398\":1}}],[\"在render函数选项中\",{\"0\":{\"388\":1}}],[\"在readonly的使用过程中\",{\"1\":{\"361\":1}}],[\"在react等前端框架中\",{\"1\":{\"40\":1}}],[\"在前面的options\",{\"1\":{\"365\":1,\"372\":1}}],[\"在前端开发中另外一个非常重要的特性就是交互\",{\"1\":{\"447\":1}}],[\"在前端开发中\",{\"1\":{\"40\":1,\"252\":1,\"447\":1}}],[\"在对象中编写自己所需要的属性\",{\"1\":{\"353\":1}}],[\"在对插件等各方面检查后发现了问题所在\",{\"1\":{\"63\":1}}],[\"在package\",{\"1\":{\"532\":1}}],[\"在pages中创建页面的时候\",{\"1\":{\"84\":1}}],[\"在props选项中定义\",{\"1\":{\"349\":1}}],[\"在点击\",{\"1\":{\"342\":1}}],[\"在点击工具栏里的文件\",{\"1\":{\"67\":1}}],[\"在我们进行逻辑判断时\",{\"1\":{\"487\":1}}],[\"在我们给watcheffect传入的函数被回调时\",{\"1\":{\"376\":1}}],[\"在我们传递给其他组件数据时\",{\"1\":{\"361\":1}}],[\"在我们编写代码完成之后\",{\"1\":{\"339\":1}}],[\"在我们软件工程中也会将一些帮助我们搭建项目的工具称之为脚手架\",{\"1\":{\"266\":1}}],[\"在通过\",{\"1\":{\"335\":1}}],[\"在通常情况下\",{\"1\":{\"211\":1}}],[\"在控制台打印子组件传递的数据\",{\"1\":{\"310\":1,\"326\":1}}],[\"在父组件中以v\",{\"1\":{\"310\":1,\"326\":1}}],[\"在父组件中使用子组件时\",{\"1\":{\"338\":1}}],[\"在父组件中使用\",{\"1\":{\"291\":1}}],[\"在javascript中使用驼峰式命名\",{\"1\":{\"306\":1,\"322\":1}}],[\"在子组件中发生某个事件的时候\",{\"1\":{\"310\":1,\"326\":1}}],[\"在子组件中\",{\"1\":{\"304\":1,\"305\":1,\"320\":1,\"321\":1}}],[\"在子组件child中做的所有的修改都不会同步回父组件index组件\",{\"1\":{\"40\":1}}],[\"在之前的\",{\"1\":{\"559\":1}}],[\"在之前的案例中\",{\"1\":{\"299\":1,\"315\":1}}],[\"在之前的例子中\",{\"1\":{\"164\":1}}],[\"在插槽函数调用时传入\",{\"1\":{\"294\":1}}],[\"在vscode中配置代码片段\",{\"1\":{\"428\":1}}],[\"在vue3x的时候\",{\"1\":{\"528\":1}}],[\"在vue3\",{\"1\":{\"519\":1,\"521\":1}}],[\"在vue3中\",{\"1\":{\"302\":2,\"303\":1,\"318\":2,\"319\":1}}],[\"在vue2x的时候\",{\"1\":{\"528\":1}}],[\"在vue2\",{\"1\":{\"519\":1,\"521\":1}}],[\"在vue2和vue3中都支持的一种方式就是使用mixin来完成\",{\"1\":{\"496\":1}}],[\"在vue2中\",{\"1\":{\"346\":1}}],[\"在vue中如何监听事件呢\",{\"1\":{\"447\":1}}],[\"在vue中\",{\"1\":{\"342\":1,\"463\":1}}],[\"在vue开发中我们是不推荐进行dom操作的\",{\"1\":{\"342\":1}}],[\"在vue\",{\"1\":{\"292\":1,\"306\":1,\"307\":1,\"322\":1,\"323\":1,\"342\":1,\"351\":1,\"354\":1,\"532\":2}}],[\"在vite\",{\"1\":{\"192\":1}}],[\"在外部没有提供任何内容的情况下\",{\"1\":{\"289\":1}}],[\"在自身data中声明\",{\"1\":{\"593\":1,\"690\":1}}],[\"在自己的模板中渲染插槽内容\",{\"1\":{\"288\":1}}],[\"在自定义\",{\"1\":{\"135\":1}}],[\"在自定义组件中触发双向绑定更新\",{\"0\":{\"112\":1}}],[\"在自定义组件中传递双向绑定\",{\"0\":{\"111\":1}}],[\"在封装组件中\",{\"1\":{\"287\":1}}],[\"在等待渲染新内容耗时超过\",{\"1\":{\"283\":1}}],[\"在等待新内容和异步依赖完成时\",{\"1\":{\"283\":1}}],[\"在挂起状态期间\",{\"1\":{\"283\":1}}],[\"在初始渲染时\",{\"1\":{\"283\":1}}],[\"在初始渲染缓存中添加动态内容\",{\"0\":{\"118\":1}}],[\"在初始渲染缓存阶段中\",{\"1\":{\"116\":1}}],[\"在请求耗时超过指定时间时也会渲染报错组件\",{\"1\":{\"282\":1}}],[\"在加载组件显示之前有一个默认的\",{\"1\":{\"282\":1}}],[\"在显示loadingcomponent组件之前\",{\"1\":{\"282\":1}}],[\"在大型项目中\",{\"1\":{\"282\":1}}],[\"在切换时创建新的组件实例通常是有意义的\",{\"1\":{\"278\":1}}],[\"在构建项目之前不清除目标目录的内容\",{\"1\":{\"271\":1}}],[\"在服务器启动时将\",{\"1\":{\"270\":1}}],[\"在服务器启动时打开浏览器\",{\"1\":{\"270\":1}}],[\"在服务端按需编译返回\",{\"1\":{\"178\":1}}],[\"在不同前端工具之间公用目标浏览器和node版本的配置文件\",{\"1\":{\"269\":1}}],[\"在不开启hmr的情况下\",{\"1\":{\"255\":1}}],[\"在提交代码时运行代码检查\",{\"1\":{\"268\":1}}],[\"在保存文件时运行代码检查\",{\"1\":{\"268\":1}}],[\"在同一台电脑中管理多个\",{\"1\":{\"267\":1}}],[\"在命令行中\",{\"1\":{\"265\":1}}],[\"在命令行中运行webpack命令\",{\"1\":{\"213\":1}}],[\"在其他目录中查找模块\",{\"1\":{\"264\":1}}],[\"在其中配置\",{\"1\":{\"248\":1}}],[\"在其中定义打包的入口文件\",{\"1\":{\"213\":1}}],[\"在解析模块时搜索的目录\",{\"1\":{\"264\":1}}],[\"在上面的实现思路中\",{\"1\":{\"473\":1}}],[\"在上面的例子中\",{\"1\":{\"411\":1}}],[\"在上面的示例中\",{\"1\":{\"342\":2}}],[\"在上面的案例中虽然新增的或者删除的节点是有动画的\",{\"1\":{\"175\":1}}],[\"在上述示例中\",{\"1\":{\"314\":1,\"331\":1}}],[\"在上述配置中\",{\"1\":{\"263\":1}}],[\"在本地配置一个服务器\",{\"1\":{\"254\":1}}],[\"在文件发生变化时\",{\"1\":{\"252\":1}}],[\"在官方解释如下\",{\"1\":{\"251\":1}}],[\"在支持\",{\"1\":{\"250\":1}}],[\"在ast的基础上\",{\"1\":{\"246\":1,\"247\":1}}],[\"在arkui中统称为状态管理机制\",{\"1\":{\"35\":1}}],[\"在进行插入或者重置顺序的时候\",{\"1\":{\"465\":1}}],[\"在进行\",{\"1\":{\"236\":1}}],[\"在进行项目部署的时\",{\"1\":{\"235\":1}}],[\"在进度条右侧显示百分比\",{\"1\":{\"126\":1}}],[\"在webpack构建过程中\",{\"1\":{\"258\":1}}],[\"在webpack配置文件中添加以下代码\",{\"1\":{\"253\":1}}],[\"在webpack配置文件中添加``watch\",{\"1\":{\"253\":1}}],[\"在webpack5开始\",{\"1\":{\"231\":1}}],[\"在webpack5之前\",{\"1\":{\"231\":1}}],[\"在webpack的一些其他地方不一样\",{\"1\":{\"228\":1}}],[\"在webpack中使用postcss就是使用postcss\",{\"1\":{\"222\":1}}],[\"在webpack中\",{\"1\":{\"214\":1,\"220\":1}}],[\"在file\",{\"1\":{\"228\":1}}],[\"在foreach循环渲染过程中\",{\"1\":{\"17\":1}}],[\"在配置\",{\"1\":{\"236\":1}}],[\"在配置postcss\",{\"1\":{\"223\":1}}],[\"在配置文件中\",{\"1\":{\"216\":1}}],[\"在配置文件中指定打包输出的路径和文件名\",{\"1\":{\"213\":1}}],[\"在配置文件中指定打包的入口文件\",{\"1\":{\"213\":1}}],[\"在您的\",{\"1\":{\"223\":1}}],[\"在引入的样式前加上使用的loader\",{\"1\":{\"215\":1}}],[\"在运行\",{\"1\":{\"254\":1}}],[\"在运行webpack命令时\",{\"1\":{\"213\":1}}],[\"在运行时会进行解析\",{\"1\":{\"150\":1}}],[\"在目录下直接执行\",{\"1\":{\"208\":1}}],[\"在合适的时机向客户端发送\",{\"1\":{\"201\":1}}],[\"在使用组合式\",{\"1\":{\"531\":1}}],[\"在使用这个版本时\",{\"1\":{\"530\":2}}],[\"在使用\",{\"1\":{\"527\":1}}],[\"在使用时\",{\"1\":{\"473\":1}}],[\"在使用v\",{\"1\":{\"460\":1}}],[\"在使用webpack配置文件时\",{\"1\":{\"252\":1}}],[\"在使用某些模块时\",{\"1\":{\"197\":1}}],[\"在使用仅由\",{\"1\":{\"168\":1,\"171\":1}}],[\"在代码背后\",{\"1\":{\"343\":1,\"481\":1}}],[\"在代码中做一个缓存\",{\"1\":{\"197\":1}}],[\"在代码根目录下添加入口文件\",{\"1\":{\"136\":1}}],[\"在es6没有出现之前\",{\"1\":{\"195\":1}}],[\"在复杂\",{\"1\":{\"182\":1}}],[\"在有了\",{\"1\":{\"168\":1}}],[\"在离开过渡完成\",{\"1\":{\"168\":1}}],[\"在离开过渡开始时调用\",{\"1\":{\"168\":1}}],[\"在离开过渡效果被触发时立即添加\",{\"1\":{\"157\":2}}],[\"在几个组件间进行切换\",{\"1\":{\"166\":1}}],[\"在深层级的元素上触发过渡效果\",{\"1\":{\"163\":1}}],[\"在这两种情况下\",{\"1\":{\"546\":1}}],[\"在这种方式中\",{\"1\":{\"530\":1}}],[\"在这种情况下\",{\"1\":{\"162\":1,\"163\":1,\"264\":1,\"304\":1,\"313\":1,\"320\":1,\"330\":1,\"557\":2,\"559\":1,\"571\":1}}],[\"在这些上下文中\",{\"1\":{\"511\":1}}],[\"在这里处理从子组件接收到的数据\",{\"1\":{\"310\":1,\"326\":1}}],[\"在这里插入图片描述\",{\"1\":{\"196\":1,\"286\":1,\"296\":2,\"297\":2,\"494\":1}}],[\"在这个特定的场景中\",{\"1\":{\"547\":1,\"548\":1}}],[\"在这个过程中的某一个阶段\",{\"1\":{\"492\":1}}],[\"在这个函数中清除额外的副作用\",{\"1\":{\"376\":1}}],[\"在这个组件中我们可以获得非常多的特性\",{\"1\":{\"339\":1}}],[\"在这个对象中\",{\"1\":{\"305\":1,\"321\":1}}],[\"在这个示例中\",{\"1\":{\"262\":2}}],[\"在这个例子中\",{\"1\":{\"250\":1,\"306\":1,\"307\":1,\"322\":1,\"323\":1,\"338\":1}}],[\"在这个字段中\",{\"1\":{\"214\":1}}],[\"在这个页面被第二次打开时\",{\"1\":{\"115\":1}}],[\"在一个\",{\"1\":{\"269\":1,\"291\":1}}],[\"在一个离开动画被触发后的下一帧被添加\",{\"1\":{\"157\":1}}],[\"在一帧后被移除\",{\"1\":{\"157\":1}}],[\"在过渡或动画完成之后移除\",{\"1\":{\"157\":4}}],[\"在元素上\",{\"1\":{\"571\":1}}],[\"在元素被插入到\",{\"1\":{\"168\":2,\"408\":1}}],[\"在元素被插入之前添加\",{\"1\":{\"157\":1}}],[\"在元素插入完成后的下一帧被添加\",{\"1\":{\"157\":1}}],[\"在元素插入完成后的下一帧移除\",{\"1\":{\"157\":1}}],[\"在元素插入之前添加\",{\"1\":{\"157\":1}}],[\"在开发过程中\",{\"1\":{\"260\":1,\"301\":1,\"317\":1}}],[\"在开发环境中\",{\"1\":{\"262\":1}}],[\"在开发环境启动时只需要启动两个server\",{\"1\":{\"182\":1}}],[\"在开发环境拥有速度快到惊人的模块热更新\",{\"1\":{\"178\":1}}],[\"在开发中常见的readonly方法会传入三个类型的参数\",{\"1\":{\"361\":1}}],[\"在开发中很常见的就是父子组件之间通信\",{\"1\":{\"302\":1,\"318\":1}}],[\"在开发中我们只使用了componenta\",{\"1\":{\"338\":1}}],[\"在开发中我们会有各种各样的模块依赖\",{\"1\":{\"264\":1}}],[\"在开发中我们很少直接去接触babel\",{\"1\":{\"241\":1}}],[\"在开发中\",{\"1\":{\"154\":1,\"286\":1,\"312\":1,\"329\":1,\"439\":1}}],[\"在开发者工具的控制台面板\",{\"1\":{\"145\":1}}],[\"在开发者工具中预览效果\",{\"1\":{\"110\":1}}],[\"在较小的屏幕上不可避免的会有一些毛刺\",{\"1\":{\"148\":1}}],[\"在非首页\",{\"1\":{\"142\":1,\"146\":1}}],[\"在底部的\",{\"1\":{\"135\":1}}],[\"在哪个目标上发生跳转\",{\"1\":{\"130\":1}}],[\"在动态生成初始渲染缓存的方式下\",{\"1\":{\"118\":1}}],[\"在手机中预览小程序首页\",{\"1\":{\"117\":1}}],[\"在小程序页面第一次被打开后\",{\"1\":{\"115\":1}}],[\"在启动页面时\",{\"1\":{\"115\":1}}],[\"在\",{\"0\":{\"250\":1},\"1\":{\"92\":2,\"98\":1,\"110\":1,\"113\":1,\"123\":1,\"136\":1,\"151\":2,\"152\":1,\"168\":1,\"197\":1,\"209\":1,\"214\":1,\"247\":1,\"250\":2,\"262\":1,\"264\":2,\"278\":1,\"283\":1,\"314\":3,\"331\":3,\"347\":1,\"355\":1,\"393\":1,\"411\":1,\"450\":1,\"483\":1,\"486\":1,\"496\":1,\"502\":1,\"520\":1,\"521\":1,\"530\":1,\"543\":1,\"544\":1,\"547\":1,\"548\":1,\"550\":1,\"555\":1,\"557\":1,\"563\":1,\"573\":1,\"582\":1,\"694\":5,\"695\":1}}],[\"在设备中增加固定的\",{\"1\":{\"68\":1}}],[\"在设备或路由器的网络设置中增加\",{\"1\":{\"68\":1}}],[\"在设备列表中会出现一个本地设备\",{\"1\":{\"30\":1}}],[\"在微信小程序开发者工具中导入\",{\"1\":{\"69\":1}}],[\"在微信小程序运行需要开启\",{\"1\":{\"67\":1}}],[\"在微信开发者工具里运行\",{\"1\":{\"67\":1}}],[\"在单文件组件和内联字符串模板中\",{\"1\":{\"335\":1}}],[\"在单独的箭头函数参数周围包括括号\",{\"1\":{\"59\":1}}],[\"在单个ui页面中\",{\"1\":{\"20\":1}}],[\"在函数调用的参数之间强制换行\",{\"1\":{\"59\":1}}],[\"在箭头函数中的箭头前后强制执行一致的间距\",{\"1\":{\"59\":1}}],[\"在打开数组括号之后和关闭数组括号之前强制换行\",{\"1\":{\"59\":1}}],[\"在赋值的过程中都是深拷贝\",{\"1\":{\"43\":1}}],[\"在探讨深浅拷贝之前\",{\"1\":{\"42\":1}}],[\"在最新版本中\",{\"1\":{\"40\":1}}],[\"在声明时必须指定其类型和本地初始化\",{\"1\":{\"38\":1}}],[\"在声明式ui编程框架中\",{\"1\":{\"35\":1}}],[\"在状态变量相关装饰器中\",{\"1\":{\"38\":1}}],[\"在变量声明的时候赋值\",{\"1\":{\"36\":1}}],[\"在应用启动位置选择刚刚添加的模拟器\",{\"1\":{\"30\":1}}],[\"在安装的过程中\",{\"1\":{\"27\":1}}],[\"在创建自定义组件的过程中\",{\"1\":{\"22\":1}}],[\"在以上案例中\",{\"1\":{\"18\":1}}],[\"在以下代码中\",{\"1\":{\"17\":1}}],[\"在ui开发框架中\",{\"1\":{\"1\":1}}],[\"在学习arkts语言之前\",{\"1\":{\"1\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
