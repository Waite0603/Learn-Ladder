const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const l of e.keys())if(l===F){const a=o[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=u;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=o[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=o[f+y]+ +b,A=o[f+y+1]+1,w=o[p+y]+1,L=o[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}W(e.get(l),t,s,n,o,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const l=new Map;l.set(u.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(u),e=l}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const l of Object.keys(u)){const a=u[l],h=e._fieldIds[l],m=o.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:N(n.boost,g)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,o,u,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f==null||f.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,o,u,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,o,u,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(u),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=k(u),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(u,d)),u=l,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),l=u.includes("#"),[a,h]=u.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>o.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(o.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in o)for(const c of o.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":150,\"nextId\":150,\"documentIds\":{\"0\":\"v-2e689c92\",\"1\":\"v-2e689c92#数据类型\",\"2\":\"v-2e689c92#深浅拷贝\",\"3\":\"v-2e689c92#概念\",\"4\":\"v-2e689c92#js-中的深浅拷贝\",\"5\":\"v-2e689c92#浅拷贝\",\"6\":\"v-2e689c92#手写递归\",\"7\":\"v-2e689c92#展开语法\",\"8\":\"v-2e689c92#object-assign\",\"9\":\"v-2e689c92#slice\",\"10\":\"v-2e689c92#concat\",\"11\":\"v-2e689c92#深拷贝\",\"12\":\"v-2e689c92#手写递归-1\",\"13\":\"v-2e689c92#object-entries-obj-遍历对象\",\"14\":\"v-2e689c92#json-parse-json-stringify-待拷贝对象-常用\",\"15\":\"v-2e689c92#其他方法\",\"16\":\"v-2e689c92#vue-中的深拷贝实现\",\"17\":\"v-0d302623\",\"18\":\"v-0d302623#认识webpack\",\"19\":\"v-0d302623#webpack到底是什么呢\",\"20\":\"v-0d302623#vue项目加载的文件有哪些呢\",\"21\":\"v-0d302623#webpack的使用\",\"22\":\"v-0d302623#webpack的安装\",\"23\":\"v-0d302623#webpack的默认打包\",\"24\":\"v-0d302623#webpack-局部安装\",\"25\":\"v-0d302623#webpack配置\",\"26\":\"v-0d302623#webpack-配置文件\",\"27\":\"v-0d302623#指定配置文件\",\"28\":\"v-0d302623#webpack的依赖\",\"29\":\"v-0d302623#loader的使用\",\"30\":\"v-0d302623#css-loader-的使用\",\"31\":\"v-0d302623#style-loader\",\"32\":\"v-0d302623#less工具处理\",\"33\":\"v-0d302623#less-loader处理\",\"34\":\"v-0d302623#postcss-loader-认识\",\"35\":\"v-0d302623#命令行使用postcss\",\"36\":\"v-0d302623#插件autoprefixer\",\"37\":\"v-0d302623#postcss-loader\",\"38\":\"v-0d302623#postcss-preset-env\",\"39\":\"v-0d302623#file-loader\",\"40\":\"v-0d302623#url-loader\",\"41\":\"v-0d302623#url-loader的limit\",\"42\":\"v-0d302623#字体文件加载\",\"43\":\"v-0d302623#文件命名规则\",\"44\":\"v-0d302623#设置文件名称\",\"45\":\"v-0d302623#设置文件的存放路径\",\"46\":\"v-0d302623#asset-module-type\",\"47\":\"v-0d302623#asset-module-type的使用\",\"48\":\"v-0d302623#plugin\",\"49\":\"v-0d302623#cleanwebpackplugin\",\"50\":\"v-0d302623#htmlwebpackplugin\",\"51\":\"v-0d302623#自定义html模板\",\"52\":\"v-0d302623#defineplugin\",\"53\":\"v-0d302623#copywebpackplugin\",\"54\":\"v-0d302623#mode配置列表\",\"55\":\"v-1aacc34f\",\"56\":\"v-1aacc34f#认识组件化开发\",\"57\":\"v-1aacc34f#vue的组件化\",\"58\":\"v-1aacc34f#组件名称\",\"59\":\"v-1aacc34f#注册组件的方式\",\"60\":\"v-1aacc34f#注册全局组件\",\"61\":\"v-1aacc34f#注册局部组件\",\"62\":\"v-1aacc34f#vue的开发模式\",\"63\":\"v-1aacc34f#如何支持sfc\",\"64\":\"v-65bb3ddf\",\"65\":\"v-65bb3ddf#vscode-代码片段\",\"66\":\"v-65bb3ddf#模板语法\",\"67\":\"v-65bb3ddf#mustache-语法-双大括号语法\",\"68\":\"v-65bb3ddf#不常用指令\",\"69\":\"v-65bb3ddf#v-once指令\",\"70\":\"v-65bb3ddf#v-html\",\"71\":\"v-65bb3ddf#v-text\",\"72\":\"v-65bb3ddf#v-pre\",\"73\":\"v-65bb3ddf#v-cloak\",\"74\":\"v-65bb3ddf#v-bind\",\"75\":\"v-65bb3ddf#基本使用\",\"76\":\"v-65bb3ddf#绑定-class\",\"77\":\"v-65bb3ddf#对象语法\",\"78\":\"v-65bb3ddf#数组语法\",\"79\":\"v-65bb3ddf#绑定-style\",\"80\":\"v-65bb3ddf#对象语法-1\",\"81\":\"v-65bb3ddf#数组语法-1\",\"82\":\"v-65bb3ddf#动态绑定属性\",\"83\":\"v-65bb3ddf#属性直接绑定一个对象\",\"84\":\"v-65bb3ddf#v-on\",\"85\":\"v-65bb3ddf#基本使用-1\",\"86\":\"v-65bb3ddf#参数传递\",\"87\":\"v-65bb3ddf#v-on-的修饰符\",\"88\":\"v-65bb3ddf#条件渲染\",\"89\":\"v-65bb3ddf#基本使用-2\",\"90\":\"v-65bb3ddf#template-和-v-if-结合使用\",\"91\":\"v-65bb3ddf#v-show\",\"92\":\"v-65bb3ddf#v-show和v-if的区别\",\"93\":\"v-65bb3ddf#列表渲染\",\"94\":\"v-65bb3ddf#基本使用-3\",\"95\":\"v-65bb3ddf#template元素使用\",\"96\":\"v-65bb3ddf#数组更新检测\",\"97\":\"v-65bb3ddf#v-for-中的-key-是什么作用\",\"98\":\"v-65bb3ddf#认识-vnode\",\"99\":\"v-65bb3ddf#虚拟-dom\",\"100\":\"v-65bb3ddf#插入-f-的案例\",\"101\":\"v-65bb3ddf#vue源码对于key的判断\",\"102\":\"v-65bb3ddf#有无key的结论\",\"103\":\"v-735040ba\",\"104\":\"v-735040ba#computed\",\"105\":\"v-735040ba#认识计算属性\",\"106\":\"v-735040ba#基本使用\",\"107\":\"v-735040ba#在模板语法中直接使用表达式\",\"108\":\"v-735040ba#使用method对逻辑进行抽取\",\"109\":\"v-735040ba#computed-实现\",\"110\":\"v-735040ba#计算属性-vs-methods\",\"111\":\"v-735040ba#计算属性的-setter-和-getter\",\"112\":\"v-735040ba#侦听器-watch\",\"113\":\"v-735040ba#简单案例\",\"114\":\"v-735040ba#配置选项\",\"115\":\"v-735040ba#其他方式\",\"116\":\"v-735040ba#watch-的api\",\"117\":\"v-735040ba#阶段案例\",\"118\":\"v-735040ba#v-model\",\"119\":\"v-735040ba#内部实现\",\"120\":\"v-735040ba#绑定其他表单\",\"121\":\"v-735040ba#修饰符\",\"122\":\"v-735040ba#内置修饰符\",\"123\":\"v-735040ba#lazy\",\"124\":\"v-735040ba#number\",\"125\":\"v-735040ba#trim\",\"126\":\"v-735040ba#自定义的修饰符\",\"127\":\"v-735040ba#多个-v-model-绑定\",\"128\":\"v-45b1c858\",\"129\":\"v-45b1c858#认识-vue\",\"130\":\"v-45b1c858#什么是-vue\",\"131\":\"v-45b1c858#vue3带来的变化\",\"132\":\"v-45b1c858#性能方面\",\"133\":\"v-45b1c858#新的api\",\"134\":\"v-45b1c858#如何使用-vue\",\"135\":\"v-45b1c858#cdn-引入\",\"136\":\"v-45b1c858#下载和引入\",\"137\":\"v-45b1c858#声明式编程和命令式编程\",\"138\":\"v-45b1c858#mvvm模型\",\"139\":\"v-45b1c858#template属性\",\"140\":\"v-45b1c858#data属性\",\"141\":\"v-45b1c858#methods属性-重点\",\"142\":\"v-45b1c858#如何阅读vue源码\",\"143\":\"v-9a3f249c\",\"144\":\"v-744e6dd4\",\"145\":\"v-5e3d92f7\",\"146\":\"v-659323e8\",\"147\":\"v-ad9a6986\",\"148\":\"v-7862baf1\",\"149\":\"v-44825889\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2],\"1\":[1,20],\"2\":[1,16],\"3\":[1,22],\"4\":[2],\"5\":[1,7],\"6\":[1,32],\"7\":[1,26],\"8\":[3,19],\"9\":[2,17],\"10\":[2,20],\"11\":[1,5],\"12\":[1,35],\"13\":[4,37],\"14\":[6,36],\"15\":[1,5],\"16\":[2,29],\"17\":[1],\"18\":[1,35],\"19\":[2,30],\"20\":[2,17],\"21\":[1,9],\"22\":[1,21],\"23\":[1,47],\"24\":[2,48],\"25\":[1],\"26\":[2,30],\"27\":[1,21],\"28\":[1,55],\"29\":[1,41],\"30\":[3,72],\"31\":[2,30],\"32\":[1,12],\"33\":[2,15],\"34\":[4,16],\"35\":[1,18],\"36\":[1,30],\"37\":[2,34],\"38\":[3,55],\"39\":[2,34],\"40\":[2,35],\"41\":[2,14],\"42\":[1,19],\"43\":[1,37],\"44\":[1,3],\"45\":[1,7],\"46\":[3,34],\"47\":[3,22],\"48\":[1,7],\"49\":[1,23],\"50\":[1,16],\"51\":[1,106],\"52\":[1,28],\"53\":[1,47],\"54\":[1,18],\"55\":[1],\"56\":[1,45],\"57\":[1,12],\"58\":[1,54],\"59\":[1,28],\"60\":[1,59],\"61\":[1,82],\"62\":[1,77],\"63\":[1,17],\"64\":[2],\"65\":[2,23],\"66\":[1,33],\"67\":[3,80],\"68\":[1],\"69\":[2,50],\"70\":[2,47],\"71\":[2,13],\"72\":[2,17],\"73\":[2,33],\"74\":[2,93],\"75\":[1,45],\"76\":[2,11],\"77\":[1,68],\"78\":[1,46],\"79\":[2,22],\"80\":[1,57],\"81\":[1,41],\"82\":[1,56],\"83\":[1,52],\"84\":[2,61],\"85\":[1,62],\"86\":[1,68],\"87\":[3,92],\"88\":[1,8],\"89\":[1,46],\"90\":[5,60],\"91\":[2,17],\"92\":[3,36],\"93\":[1,9],\"94\":[1,86],\"95\":[1,54],\"96\":[1,84],\"97\":[6,34],\"98\":[2,19],\"99\":[2,12],\"100\":[3,71],\"101\":[1,49],\"102\":[1,8],\"103\":[3],\"104\":[1],\"105\":[1,45],\"106\":[1,36],\"107\":[1,35],\"108\":[1,55],\"109\":[2,56],\"110\":[3,95],\"111\":[4,62],\"112\":[2,30],\"113\":[1,65],\"114\":[1,103],\"115\":[1,62],\"116\":[3,35],\"117\":[1,176],\"118\":[2,41],\"119\":[1,1],\"120\":[1,138],\"121\":[1],\"122\":[1],\"123\":[2,20],\"124\":[2,33],\"125\":[2,12],\"126\":[1,78],\"127\":[4,36],\"128\":[1],\"129\":[2],\"130\":[2,13],\"131\":[1,30],\"132\":[1,47],\"133\":[1,37],\"134\":[2,12],\"135\":[2,10],\"136\":[1,14],\"137\":[1,13],\"138\":[1,16],\"139\":[1,81],\"140\":[1,20],\"141\":[3,58],\"142\":[1,26],\"143\":[1],\"144\":[1],\"145\":[1],\"146\":[1],\"147\":[1],\"148\":[1],\"149\":[1]},\"averageFieldLength\":[1.606666666666667,37.817284400133396],\"storedFields\":{\"0\":{\"h\":\"Js 的浅拷贝与深拷贝\"},\"1\":{\"h\":\"数据类型\",\"t\":[\"在探讨深浅拷贝之前，我们先梳理一下js中的数据类型，js的数据类型分为两类：基本数据类型和引用数据类型\",\"前者是存储在栈内存中，后者是将其地址存在栈内存中，而真实数据存储在堆内存中。\",\"如下图所示，基本类型如number、string、boolean、Null和 undefined 等存储在栈内存中，而引用数据类型如 Array、Object 和函数等则是分别存储数据1的地址、数据2的地址和数据3的地址。\"]},\"2\":{\"h\":\"深浅拷贝\",\"t\":[\"js中的基本数据类型：String Number Boolean Null Undefined，在赋值的过程中都是深拷贝。\",\"例如，let a = 10 ; b = a , 修改其中一个变量的值，不会影响到另一个变量的值。\"]},\"3\":{\"h\":\"概念\",\"t\":[\"浅拷贝：会在栈中开辟另一块空间，并将被拷贝对象的栈内存数据完全拷贝到该块空间中，即基本数据类型的值会被完全拷贝，而引用类型的值则是拷贝了“指向堆内存的地址”。因此，当修改其中一个变量的值时，会影响到另一个变量的值。\",\"深拷贝：不仅会在栈中开辟另一块空间，若被拷贝对象中有引用类型，则还会在堆内存中开辟另一块空间存储引用类型的真实数据。因此，当修改其中一个变量的值时，不会影响到另一个变量的值。\",\"两者示意图如下：\",\"浅拷贝是拷贝一层，属性为对象时，浅拷贝是复制，两个对象指向同一个地址\",\"深拷贝是递归拷贝深层次，属性为对象时，深拷贝是新开栈，两个对象指向不同的地址\"]},\"4\":{\"h\":\"Js 中的深浅拷贝\"},\"5\":{\"h\":\"浅拷贝\",\"t\":[\"浅拷贝，指的是创建新的数据，这个数据有着原始数据属性值的一份精确拷贝\",\"如果属性是基本类型，拷贝的就是基本类型的值。如果属性是引用类型，拷贝的就是内存地址\"]},\"6\":{\"h\":\"手写递归\",\"t\":[\"function shallowClone(obj) { if (typeof obj !== 'object') return; let newObj = obj instanceof Array ? [] : {}; for (let key in obj) { if (obj.hasOwnProperty(key)) { newObj[key] = obj[key]; } } return newObj; } const person = { name: 'cxk', hobby: ['sing', 'rap', 'basketball'] } const person1 = shallowClone(person); person1.name = 'xkc'; person1.hobby[0] = 'dance'; console.log(person); // {name: \\\"cxk\\\", hobby: [\\\"dance\\\", \\\"rap\\\", \\\"basketball\\\"]} console.log(person1); // {name: \\\"xkc\\\", hobby: [\\\"dance\\\", \\\"rap\\\", \\\"basketball\\\"]} \"]},\"7\":{\"h\":\"展开语法\",\"t\":[\"展开语法(spread syntax)允许一个表达式在期望多个参数(用于函数调用)或多个元素(用于数组字面量)或多个变量(用于解构赋值)的位置扩展。\",\"let obj = { name: \\\"cxk\\\", lessons: [\\\"语文\\\", \\\"数学\\\", \\\"英语\\\"] } let hd1 = { ...obj }; hd1.name = \\\"hdx\\\"; hd1.lessons[0] = \\\"物理\\\"; console.log(obj); // {name: \\\"cxk\\\", lessons: [\\\"物理\\\", \\\"数学\\\", \\\"英语\\\"]} console.log(hd1); // {name: \\\"hdx\\\", lessons: [\\\"物理\\\", \\\"数学\\\", \\\"英语\\\"]} \"]},\"8\":{\"h\":\"Object.assign()\",\"t\":[\"Object.assign() 方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象。它将返回目标对象。\",\"let info = { name: 'cxk', hobbies: ['唱', '跳', '篮球'] }; let obj = Object.assign({}, info); obj.hobbies[0] = 'rap'; console.log(info); console.log(obj); // {name: \\\"cxk\\\", hobbies: [\\\"rap\\\", \\\"跳\\\", \\\"篮球\\\"]} \"]},\"9\":{\"h\":\"slice()\",\"t\":[\"slice() 方法可从已有的数组中返回选定的元素。\",\"let arr1 = [1, 42, [3, 4]] let arr1Copy = arr1.slice() arr1Copy[0] = 10 arr1Copy[2][0] = 100 console.log(arr1) // [1, 42, [100, 4]] console.log(arr1Copy) // [10, 42, [100, 4]] \"]},\"10\":{\"h\":\"concat()\",\"t\":[\"concat() 方法用于连接两个或多个数组。\",\"let arr2 = ['cat', 'dog', 'pig', { 'name': 'xia', 'age': 18 }] let arr2Copy = [].concat(arr2) arr2Copy[2] = 'big pig' arr2Copy[3]['name'] = 'aa' console.log(arr2) console.log(arr2Copy) \"]},\"11\":{\"h\":\"深拷贝\",\"t\":[\"深拷贝开辟一个新的栈，两个对象属性完成相同，但是对应两个不同的地址，修改一个对象的属性，不会改变另一个对象的属性\"]},\"12\":{\"h\":\"手写递归\",\"t\":[\"function deepClone(obj) { let newObj = obj instanceof Array ? [] : {}; for (let i in obj) { if (obj.hasOwnProperty(i)) { if (obj[i] && typeof obj[i] == 'object') { // 若对象属性还是引用类型，进行递归 newObj[i] = deepClone(obj[i]); } else { // 对象属性为基础数据类型，直接赋值 newObj[i] = obj[i]; } } } return newObj; } const obj = { name: 'zs', hobby: ['排球', '网球', '乒乓球'], }; const newObj = deepClone(obj); newObj.name = 'lisi'; newObj.hobby[0] = '篮球'; console.log(obj); // { name: 'zs', hobby: [ '排球', '网球', '乒乓球' ] } console.log(newObj); // { name: 'lisi', hobby: [ '篮球', '网球', '乒乓球' ] } \"]},\"13\":{\"h\":\"Object.entries(obj) 遍历对象\",\"t\":[\"Object.entries() 方法返回一个给定对象自身可枚举属性的键值对数组\",\"比如：Object.entries({ foo: 'bar', baz: 42 }); // [ ['foo', 'bar'], ['baz', 42] ]\",\"function deepClone(obj) { let newObj = obj instanceof Array ? [] : {}; for (const [k, v] of Object.entries(obj)) { newObj[k] = typeof v == 'object' ? deepClone(v) : v; } return newObj; } const obj = { name: 'zs', hobby: ['排球', '网球', '乒乓球'], }; const newObj = deepClone(obj); newObj.name = 'lisi'; newObj.hobby[0] = '篮球'; console.log(obj); console.log(newObj); \"]},\"14\":{\"h\":\"JSON.parse(JSON.stringify(待拷贝对象) -> 常用\",\"t\":[\"JSON.stringify() 方法用于将 JavaScript 值转换为 JSON 字符串。\",\"比如: JSON.stringify({ x: 5, y: 6 }); // \\\"{\\\"x\\\":5,\\\"y\\\":6}\\\" -> string\",\"JSON.parse() 方法用于将一个 JSON 字符串转换为对象。\",\"比如: JSON.parse('{\\\"name\\\":\\\"cxk\\\",\\\"age\\\":18}'); // {name: \\\"cxk\\\", age: 18} -> object\",\"const obj = { name: 'zs', hobby: ['排球', '网球', '乒乓球'], }; const newObj = JSON.parse(JSON.stringify(obj)); newObj.name = 'lisi'; newObj.hobby[0] = '篮球'; console.log(obj); console.log(newObj); \"]},\"15\":{\"h\":\"其他方法\",\"t\":[\"_.cloneDeep()\",\"jQuery.extend()\",\"手写循环递归\"]},\"16\":{\"h\":\"Vue 中的深拷贝实现\",\"t\":[\"引入loadsh,提供 cloneDeep 实现深拷贝\",\"安装loadsh npm i --save lodash\",\"引入loadsh import _ from 'lodash'\",\"直接调用 loadsh 库的方法 const newObj = _.cloneDeep(this.obj)\",\"_clone 实现浅拷贝\",\"const obj = _.clone(info); info.name = \\\"kobe\\\"; console.log(obj.name); info.friend.name = \\\"james\\\"; console.log(obj.friend.name); \"]},\"17\":{\"h\":\"Webpack\"},\"18\":{\"h\":\"认识webpack\",\"t\":[\"事实上随着前端的快速发展，目前前端的开发已经变的越来越复杂了：\",\"比如开发过程中我们需要通过模块化的方式来开发；\",\"比如也会使用一些高级的特性来加快我们的开发效率或者安全性，比如通过ES6+、TypeScript开发脚本逻辑， 通过sass、less等方式来编写 css 样式代码；\",\"比如开发过程中，我们还希望实时的监听文件的变化来并且反映到浏览器上，提高开发的效率；\",\"比如开发完成后我们还需要将代码进行压缩、合并以及其他相关的优化；\",\"但是对于很多的前端开发者来说，并不需要思考这些问题，日常的开发中根本就没有面临这些问题：\",\"这是因为目前前端开发我们通常都会直接使用三大框架来开发：Vue、React、Angular；\",\"但是事实上，这三大框架的创建过程我们都是借助于脚手架（CLI）的；\",\"事实上Vue-CLI、create-react-app、Angular-CLI都是基于webpack来帮助我们支持模块化、less、 TypeScript、打包优化等的；\"]},\"19\":{\"h\":\"Webpack到底是什么呢？\",\"t\":[\"https://webpack.docschina.org/\",\"本质上，webpack 是一个用于现代 JavaScript 应用程序的 静态模块打包工具。当 webpack 处理应用程序时，它会在内部从一个或多个入口点构建一个 依赖图(dependency graph)，然后将你项目中所需的每一个模块组合成一个或多个 bundles，它们均为静态资源，用于展示你的内容。\",\"打包bundler：webpack可以将帮助我们进行打包，所以它是一个打包工具\",\"模块化module：webpack默认支持各种模块化开发，ES Module、CommonJS、AMD等；\",\"image-20231102102926580\"]},\"20\":{\"h\":\"Vue项目加载的文件有哪些呢？\",\"t\":[\"JavaScript的打包： \",\"将ES6转换成ES5的语法；\",\"TypeScript的处理，将其转换成JavaScript；\",\"Css的处理： \",\"CSS文件模块的加载、提取；\",\"Less、Sass等预处理器的处理；\",\"资源文件img、font： \",\"图片img文件的加载；\",\"字体font文件的加载；\",\"HTML资源的处理： \",\"打包HTML资源文件；\",\"处理vue项目的SFC文件.vue文件\"]},\"21\":{\"h\":\"Webpack的使用\",\"t\":[\"webpack的官方文档是webpack\",\"webpack的中文官方文档是webpack\",\"Webpack的运行是依赖Node环境的，所以我们电脑上必须有Node环境 \",\"所以我们需要先安装Node.js，并且同时会安装npm；\",\"Node官方网站：Node.js\"]},\"22\":{\"h\":\"Webpack的安装\",\"t\":[\"webpack的安装目前分为两个：webpack、webpack-cli\",\"执行webpack命令，会执行node_modules下的.bin目录下的webpack；\",\"webpack在执行时是依赖webpack-cli的，如果没有安装就会报错；\",\"而webpack-cli中代码执行时，才是真正利用webpack进行编译和打包的过程；\",\"所以在安装webpack时，我们需要同时安装webpack-cli（第三方的脚手架事实上是没有使用webpack-cli的，而是类似于自 己的vue-service-cli的东西）\",\"img\"]},\"23\":{\"h\":\"Webpack的默认打包\",\"t\":[\"ES6、CommonJS等模块化语法在浏览器中是不被直接识别的，但是通过使用Webpack的打包功能，可以将这些语法转换为浏览器可以识别的语法。Webpack可以将多个模块打包成一个或多个浏览器可识别的文件，使得在浏览器中可以正常运行这些模块化代码。\",\"我们可以通过webpack进行打包，之后运行打包之后的代码\",\"在目录下直接执行 webpack 命令\",\"webpack \",\"生成一个 dist 文件夹，里面存放一个main.js的文件，就是我们打包之后的文件：\",\"这个文件中的代码被压缩和丑化了；\",\"另外我们发现代码中依然存在ES6的语法，比如箭头函数、const等，这是因为默认情况下webpack并不清楚我们打包后的文 件是否需要转成ES5之前的语法，后续我们需要通过babel来进行转换和设置；\",\"我们发现是可以正常进行打包的，但是有一个问题，webpack是如何确定我们的入口的呢？\",\"事实上，当我们运行webpack时，webpack会查找当前目录下的 src/index.js作为入口；\",\"所以，如果当前项目中没有存在 src/index.js 文件，那么会报错；\",\"当然，我们也可以通过配置来指定入口和出口\",\"npx webpack --entry ./src/main.js --output-path ./build \"]},\"24\":{\"h\":\"webpack 局部安装\",\"t\":[\"版本控制：通过在项目中局部安装Webpack，可以确保每个项目使用的Webpack版本是一致的，避免不同项目之间的版本冲突。\",\"简化部署：将Webpack安装在项目的本地目录中，可以简化项目的部署过程。只需要将整个项目目录复制到其他环境中，不需要再次安装全局的Webpack。\",\"隔离环境：每个项目可以拥有自己独立的Webpack配置和插件，不会受到其他项目的影响。这样可以更灵活地根据项目需求进行定制和配置。\",\"可移植性：通过局部安装Webpack，可以将整个项目打包成一个可移植的文件夹，方便在不同环境中进行迁移和共享。\",\"第一步：创建package.json文件，用于管理项目的信息、库依赖等\",\"npm init \",\"第二步：安装局部的webpack\",\"npm install webpack webpack-cli --save-dev // -D(--save-dev) 开发依赖 \",\"第三步：使用局部的webpack\",\"npx webpack \",\"第四步：在 package.json 中创建scripts脚本，执行脚本打包即可\",\"# package \\\"scripts\\\": { \\\"build\\\": \\\"webpack\\\" } # cmd npm run build \",\"image-20231105235229201\"]},\"25\":{\"h\":\"Webpack配置\"},\"26\":{\"h\":\"Webpack 配置文件\",\"t\":[\"在通常情况下，webpack需要打包的项目是非常复杂的，并且我们需要一系列的配置来满足要求，默认配置必然 是不可以的。\",\"我们可以在根目录下创建一个webpack.config.js文件，来作为webpack的配置文件：\",\"const path = require('path'); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"./build\\\"), filename: \\\"bundle.js\\\" } } \",\"继续执行webpack命令，依然可以正常打包\",\"npm run build \"]},\"27\":{\"h\":\"指定配置文件\",\"t\":[\"但是如果我们的配置文件并不是webpack.config.js的名字，而是其他的名字呢？\",\"比如我们将webpack.config.js修改成了 wk.config.js；\",\"这个时候我们可以通过 --config 来指定对应的配置文件；\",\"webpack --config wk.config.js \",\"但是每次这样执行命令来对源码进行编译，会非常繁琐，所以我们可以在package.json中增加一个新的脚本：\",\"\\\"build\\\": \\\"webpack --config wk.config.js\\\" \",\"之后我们执行 npm run build来打包即可。\"]},\"28\":{\"h\":\"Webpack的依赖\",\"t\":[\"Webpack通过以下步骤对项目进行打包：\",\"配置：创建一个Webpack配置文件（通常命名为webpack.config.js），在其中定义打包的入口文件、输出文件的路径、加载器和插件等。\",\"入口：在配置文件中指定打包的入口文件，可以是单个文件或多个文件, 从入口开始，会生成一个 依赖关系图，这个依赖关系图会包含应用程序中所需的所有模块（比如 js 文件、css 文件、图片、字体等), 然后遍历图结构，打包一个个模块（根据文件的不同使用不同的loader来解析）；\",\"加载器：根据需要，配置加载器来处理不同类型的文件。例如，使用babel-loader来转换ES6+代码，使用 css-loader 和 style-loader 来处理CSS文件。\",\"插件：根据需要，配置插件来执行额外的任务。例如，使用html-webpack-plugin生成HTML文件，使用mini-css-extract-plugin提取CSS文件。\",\"输出：在配置文件中指定打包输出的路径和文件名。\",\"运行：在命令行中运行webpack命令，Webpack将根据配置文件进行打包，并生成输出文件。\",\"在运行Webpack命令时，可以使用不同的参数和选项来控制打包的行为。例如，使用--mode参数指定打包的模式（开发模式或生产模式），使用--watch选项启用监听模式等。\",\"img\"]},\"29\":{\"h\":\"loader的使用\",\"t\":[\"https://webpack.docschina.org/loaders/\",\"在 Webpack5 以后会采用 asset module type 来替代 loader\",\"在Webpack中，Loader是用于对不同类型的文件进行转换和处理的模块。它们作为Webpack的一部分，用于在打包过程中对文件进行预处理。\",\"Loader可以将不同类型的文件（如JavaScript、CSS、图片等）转换为模块，以便在应用程序中使用。它们可以执行各种任务，例如将ES6+代码转换为ES5语法、处理CSS文件中的样式、压缩和优化图像等。\",\"Loader通常以链式调用的方式使用，可以根据需要配置多个Loader来处理文件。每个Loader都会对文件进行一次转换，并将转换后的结果传递给下一个Loader，直到最后一个Loader将最终的结果返回给Webpack进行打包。\",\"Loader的配置是通过Webpack的配置文件（通常是webpack.config.js）中的module.rules字段来完成。在这个字段中，可以指定不同类型文件的匹配规则和对应的Loader。\"]},\"30\":{\"h\":\"css-loader 的使用\",\"t\":[\"对于加载css文件来说，我们需要一个可以读取css文件的loader；\",\"这个loader最常用的是css-loader；\",\"css-loader的安装：\",\"npm install css-loader -D npm install css-loader --save-dev \",\"如何使用这个loader来加载css文件呢？有三种方式： \",\"内联方式；\",\"CLI方式（webpack5中不再使用）；\",\"配置方式；\",\"内联方式：内联方式使用较少，因为不方便管理；\",\"在引入的样式前加上使用的loader，并且使用 ! 分割；\",\"import \\\"css-loader!../css/style.css\\\" \",\"配置方式\",\"配置方式表示的意思是在我们的webpack.config.js文件中写明配置信息： \",\"module.rules中允许我们配置多个loader（因为我们也会继续使用其他的loader，来完成其他文件的加载)\",\"这种方式可以更好的表示loader的配置，也方便后期的维护，同时也让你对各个Loader有一个全局的概览\",\"module.rules的配置如下： \",\"rules属性对应的值是一个数组：[Rule]\",\"数组中存放的是一个个的Rule，Rule是一个对象，对象中可以设置多个属性： \",\"test属性：用于对 resource（资源）进行匹配的，通常会设置成正则表达式；\",\"use属性：对应的值时一个数组：[UseEntry] \",\"UseEntry是一个对象，可以通过对象的属性来设置一些其他属性 \",\"loader：必须有一个 loader属性，对应的值是一个字符串；\",\"options：可选的属性，值是一个字符串或者对象，值会被传入到loader中；\",\"query：目前已经使用options来替代；\",\"传递字符串（如：use: [ 'style-loader' ]）是 loader 属性的简写方式（如：use: [ { loader: 'style-loader'} ]）；\",\"loader属性： Rule.use: [ { loader } ] 的简写\",\"module.exports = { // ... module: { rules: [ { test: /\\\\.css$/, use: ['style-loader', 'css-loader'] } ] } }; \"]},\"31\":{\"h\":\"style-loader\",\"t\":[\"我们已经可以通过css-loader来加载css文件了\",\"但是你会发现这个css在我们的代码中并没有生效（页面没有效果）。\",\"因为css-loader只是负责将.css文件进行解析，并不会将解析之后的css插入到页面中；\",\"如果我们希望再完成插入style的操作，那么我们还需要另外一个loader，就是style-loader；\",\"安装style-loader：\",\"npm install style-loader -D \",\"那么我们应该如何使用style-loader： \",\"在配置文件中，添加style-loader；\",\"注意：因为loader的执行顺序是从右向左（或者说从下到上，或者说从后到前的），所以我们需要将style-loader写到 css-loader 的前面；\",\"use: ['style-loader', 'css-loader'] \"]},\"32\":{\"h\":\"Less工具处理\",\"t\":[\"我们可以使用less工具来完成它的编译转换：\",\"npm install less -D \",\"执行如下命令：\",\"npm install less -D npx lessc ./src/css/title.less title.css \"]},\"33\":{\"h\":\"less-loader处理\",\"t\":[\"但是在项目中我们会编写大量的css，它们如何可以自动转换呢？\",\"这个时候我们就可以使用less-loader，来自动使用less工具转换less到css；\",\"npm install less-loader -D \",\"{ test: /\\\\.less$/, use: [ \\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\" ] } \"]},\"34\":{\"h\":\"postcss-loader(认识)\",\"t\":[\"什么是PostCSS呢？ \",\"PostCSS是一个通过JavaScript来转换样式的工具；\",\"这个工具可以帮助我们进行一些CSS的转换和适配，比如自动添加浏览器前缀、css样式的重置； p但是实现这些功能，我们需要借助于PostCSS对应的插件；\",\"如何使用PostCSS呢？主要就是两个步骤： \",\"第一步：查找PostCSS在构建工具中的扩展，比如webpack中的postcss-loader；\",\"第二步：选择可以添加你需要的PostCSS相关的插件；\"]},\"35\":{\"h\":\"命令行使用postcss\",\"t\":[\"安装一下它们：postcss、postcss-cli\",\"npm install postcss postcss-cli -D \",\"我们编写一个需要添加前缀的css： \",\"Autoprefixer CSS online\",\"我们可以在上面的网站中查询一些添加css属性的样式；\",\"在Webpack中，PostCSS通常用于对CSS文件进行预处理和后处理。您可以使用PostCSS来编写现代CSS语法，然后使用各种插件对其进行处理，例如自动添加CSS前缀、压缩CSS等。\"]},\"36\":{\"h\":\"插件autoprefixer\",\"t\":[\"因为我们需要添加前缀，所以要安装autoprefixer：\",\"npm install autoprefixer -D \",\"直接使用使用postcss工具，并且制定使用autoprefixer\",\"npx postcss --use autoprefixer -o end.css ./src/css/style.css \",\"转化的结果如下\",\".title { user-select: none; } .title { -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } /*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQWlCO0tBQWpCLHNCQUFpQjtNQUFqQixxQkFBaUI7VUFBakIsaUJBQWlCO0FBQ25CIiwiZmlsZSI6ImRlbW8uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRpdGxlIHtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59Il19 */ \"]},\"37\":{\"h\":\"postcss-loader\",\"t\":[\"真实开发中我们必然不会直接使用命令行工具来对css进行处理，而是可以借助于构建工具：\",\"在webpack中使用postcss就是使用postcss-loader来处理的；\",\"我们来安装postcss-loader：\",\"npm install postcss-loader -D \",\"因为postcss需要有对应的插件才会起效果，所以我们需要配置它的plugin；\",\"use: [ { loading: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ require('autoprefixer') ] } } } ] \",\"我们可以将 postcss 配置分离, 根目录下新建 postcss.config.js\",\"module.exports = { plugins: [ require(\\\"postcss-preset-env\\\") ] } \",\"这样在 webpack.config 中只需要 添加 postcss-loader 即可\"]},\"38\":{\"h\":\"postcss-preset-env\",\"t\":[\"postcss-preset-env 是一个 PostCSS 插件，它允许您使用最新的 CSS 特性，同时它会根据您的目标环境自动添加必要的回退。\",\"这个插件包含了 autoprefixer（自动添加浏览器前缀），cssnano（压缩 CSS），以及一些其他的 PostCSS 插件。这意味着您可以在 CSS 中使用最新的特性，例如 CSS Grid，CSS Variables，等等，而不需要担心兼容性问题。\",\"在您的 postcss.config.js 文件中，您已经将 postcss-preset-env 添加为一个插件，这意味着当您运行 PostCSS 时，它将使用 postcss-preset-env 来处理您的 CSS 文件。\",\"事实上，在配置postcss-loader时，我们配置插件并不需要使用autoprefixer。\",\"我们可以使用另外一个插件：postcss-preset-env\",\"postcss-preset-env也是一个postcss的插件；\",\"它可以帮助我们将一些现代的CSS特性，转成大多数浏览器认识的CSS，并且会根据目标浏览器或者运行时环境 添加所需的polyfill；\",\"也包括会自动帮助我们添加 autoprefixer（所以相当于已经内置了 autoprefixer）；\",\"首先，我们需要安装 postcss-preset-env：\",\"npm install postcss-preset-env -D \",\"之后，我们直接修改掉之前的 autoprefixer 即可;\"]},\"39\":{\"h\":\"file-loader\",\"t\":[\"要处理jpg、png等格式的图片，我们也需要有对应的loader：file-loader\",\"file-loader的作用就是帮助我们处理import/require()方式引入的一个文件资源，并且会将它放到我们输出的文件夹中；\",\"当然我们待会儿可以学习如何修改它的名字和所在文件夹；\",\"安装file-loader：\",\"npm install file-loader -D \",\"配置处理图片的Rule：\",\"{ test: /\\\\.(jpe?g|png|gif|svg)$/, type: \\\"asset\\\", generator: { filename: \\\"img/[name]_[hash:6][ext]\\\" }, parser: { dataUrlCondition: { maxSize: 100 * 1024 } } } \"]},\"40\":{\"h\":\"url-loader\",\"t\":[\"url-loader和file-loader的工作方式是相似的，但是可以将较小的文件，转成base64的URI。\",\"安装url-loader：\",\"url-loader npm install url-loader -D \",\"显示结果是一样的，并且图片可以正常显示；\",\"image-20231111211324041\",\"但是在dist文件夹中，我们会看不到图片文件： \",\"这是因为我的两张图片的大小分别是38kb和295kb；\",\"默认情况下url-loader会将所有的图片文件转成base64编码\",\"{ test: /\\\\.(jpe?g|png|gif|svg)$/, use: { loader: \\\"url-loader\\\", options: { // outputPath: \\\"img\\\", name: \\\"img/[name]_[hash:6].[ext]\\\", limit: 100 * 1024 } } } \"]},\"41\":{\"h\":\"url-loader的limit\",\"t\":[\"但是开发中我们往往是小的图片需要转换，但是大的图片直接使用图片即可 \",\"这是因为小的图片转换base64之后可以和页面一起被请求，减少不必要的请求过程；\",\"而大的图片也进行转换，反而会影响页面的请求速度；\",\"那么，我们如何可以限制哪些大小的图片转换和不转换呢？ \",\"url-loader有一个options属性limit，可以用于设置转换的限制；\",\"下面的代码38kb的图片会进行base64编码，而295kb的不会；\"]},\"42\":{\"h\":\"字体文件加载\",\"t\":[\"{ test: /\\\\.(eot|ttf|woff2?)$/, use: { loader: \\\"file-loader\\\", options: { // outputPath: \\\"font\\\", name: \\\"font/[name]_[hash:6].[ext]\\\" } } }, { test: /\\\\.(eot|ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"font/[name]_[hash:6][ext]\\\" } } \"]},\"43\":{\"h\":\"文件命名规则\",\"t\":[\"有时候我们处理后的文件名称按照一定的规则进行显示： \",\"比如保留原来的文件名、扩展名，同时为了防止重复，包含一个hash值等；\",\"这个时候我们可以使用PlaceHolders来完成，webpack给我们提供了大量的PlaceHolders来显示不同的内容： \",\"https://webpack.js.org/loaders/file-loader/#placeholders\",\"我们这里介绍几个最常用的placeholder： \",\"[ext]： 处理文件的扩展名；\",\"[name]：处理文件的名称；\",\"[hash]：文件的内容，使用MD4的散列函数处理，生成的一个128位的hash值（32个十六进制）；\",\"[contentHash]：在file-loader中和[hash]结果是一致的（在webpack的一些其他地方不一样，后面会讲到）；\",\"[hash:<length>]：截图hash的长度，默认32个字符太长了；\",\"[path]：文件相对于webpack配置文件的路径；\"]},\"44\":{\"h\":\"设置文件名称\",\"t\":[\"那么我们可以按照如下的格式编写：\",\"这个也是vue的写法；\",\"img\"]},\"45\":{\"h\":\"设置文件的存放路径\",\"t\":[\"刚才通过 img/ 已经设置了文件夹，这个也是vue、react脚手架中常见的设置方式 \",\"其实按照这种设置方式就可以了；\",\"当然我们也可以通过outputPath来设置输出的文件夹；\",\"img\"]},\"46\":{\"h\":\"asset module type\",\"t\":[\"我们当前使用的webpack版本是webpack5： \",\"在webpack5之前，加载这些资源我们需要使用一些loader，比如raw-loader 、url-loader、file-loader；\",\"在webpack5开始，我们可以直接使用资源模块类型（asset module type），来替代上面的这些loader；\",\"资源模块类型(asset module type)，通过添加 4 种新的模块类型，来替换所有这些 loader： \",\"asset/resource 发送一个单独的文件并导出 URL。之前通过使用 file-loader 实现；\",\"asset/inline 导出一个资源的 data URI。之前通过使用 url-loader 实现；\",\"asset/source 导出资源的源代码。之前通过使用 raw-loader 实现；\",\"asset 在导出一个 data URI 和发送一个单独的文件之间自动选择。之前通过使用 url-loader，并且配置资源体积限制实现；\"]},\"47\":{\"h\":\"asset module type的使用\",\"t\":[\"比如加载图片，我们可以使用下面的方式：\",\"{ test: /\\\\.(jpe?g|png|gif|svg)$/, type: \\\"asset\\\", // 自定义文件的输出路径和文件名 generator: { filename: \\\"img/[name]_[hash:6][ext]\\\" }, parser: { dataUrlCondition: { maxSize: 100 * 1024 } } } \"]},\"48\":{\"h\":\"Plugin\",\"t\":[\"Loader是用于特定的模块类型进行转换；\",\"Plugin可以用于执行更加广泛的任务，比如打包优化、资源管理、环境变量注入等；\",\"image-20231112151429444\"]},\"49\":{\"h\":\"CleanWebpackPlugin\",\"t\":[\"每次修改了一些配置，重新打包时，都需要手动删除dist文件夹：\",\"我们可以借助于一个插件来帮助我们完成，这个插件就是CleanWebpackPlugin；\",\"首先，我们先安装这个插件：\",\" npm install clean-webpack-plugin -D \",\"之后在插件中配置：\",\"const { CleanWebpackPlugin } = require(\\\"clean-webpack-plugin\\\"); module.exports = { plugins: [ new CleanWebpackPlugin(); ] }; \"]},\"50\":{\"h\":\"HtmlWebpackPlugin\",\"t\":[\"我们的HTML文件是编写在根目录下的，而最终打包的dist文件夹中是没有index.html文件的。\",\"在进行项目部署的时，必然也是需要有对应的入口文件index.html；\",\"所以我们也需要对index.html进行打包处理；\",\"对HTML进行打包处理我们可以使用另外一个插件：HtmlWebpackPlugin；\",\"npm install html-webpack-plugin -D \"]},\"51\":{\"h\":\"自定义HTML模板\",\"t\":[\"如果我们想在自己的模块中加入一些比较特别的内容：\",\"比如添加一个noscript标签，在用户的JavaScript被关闭时，给予响应的提示；\",\"比如在开发vue或者react项目时，我们需要一个可以挂载后续组件的根标签\",\"这个我们需要一个属于自己的index.html模块：\",\"public/index.html\",\"<!DOCTYPE html> <html lang=\\\"\\\"> <head> <meta charset=\\\"utf-8\\\"> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1.0\\\"> <link rel=\\\"icon\\\" href=\\\"<%= BASE_URL %>favicon.ico\\\"> <title><%= htmlWebpackPlugin.options.title %></title> </head> <body> <noscript> <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled. Please enable it to continue.</strong> </noscript> <div id=\\\"app\\\"></div> <!-- built files will be auto injected --> </body> </html> \",\"上面的代码中，会有一些类似这样的语法<% 变量 %>，这个是EJS模块填充数据的方式。 \",\"在配置 HtmlWebpackPlugin 时，我们可以添加如下配置： \",\"template：指定我们要使用的模块所在的路径；\",\"title：在进行 htmlWebpackPlugin.options.title 读取时，就会读到该信息；\",\"const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { plugins: [ new HtmlWebpackPlugin({ template: \\\"./public/index.html\\\", title: \\\"哈哈哈哈\\\" }) ] }; \"]},\"52\":{\"h\":\"DefinePlugin\",\"t\":[\"https://github.com/jantimon/html-webpack-plugin\",\"因为在模板中使用了 BASE_URL, 但是我们并没有设置过这个常量值，所以会出现没有定义的错误 - BASE_URL is not defined\",\"这个时候我们可以使用DefinePlugin插件\",\"DefinePlugin允许在编译时创建配置的全局常量，是一个webpack内置的插件（不需要单独安装）：\",\"const { DefinePlugin } = require(\\\"webpack\\\"); module.exports = { plugins: [ new DefinePlugin({ BASE_URL: \\\"'./'\\\" }) ] }; \"]},\"53\":{\"h\":\"CopyWebpackPlugin\",\"t\":[\"CopyWebpackPlugin 是一个用于 webpack 的插件，它的主要功能是将单个文件或整个目录复制到构建目录。\",\"这个插件在以下情况下非常有用：\",\"当你有一些静态资源（例如图片、字体或公共库）需要包含在你的构建中，但是这些资源并不需要通过 webpack 处理时。\",\"当你需要将一些文件复制到构建目录，以便在部署应用程序时使用\",\"安装CopyWebpackPlugin插件：\",\"npm install copy-webpack-plugin -D \",\"接下来配置CopyWebpackPlugin即可： \",\"复制的规则在patterns中设置；\",\"from：设置从哪一个源中开始复制；\",\"to：复制到的位置，可以省略，会默认复制到打包的目录下；\",\"globOptions：设置一些额外的选项，其中可以编写需要忽略的文件： \",\".DS_Store：mac目录下回自动生成的一个文件；\",\"index.html：也不需要复制，因为我们已经通过HtmlWebpackPlugin完成了index.html的生成；\",\"const CopyWebpackPlugin = require('copy-webpack-plugin'); new CopyWebpackPlugin({ patterns: [ { from: \\\"public\\\", to: \\\"./\\\", globOptions: { ignore: [ \\\"**/index.html\\\" ] } } ] }) \"]},\"54\":{\"h\":\"Mode配置列表\",\"t\":[\"module.exports = { // 设置模式 // development 开发阶段, 会设置development // production 准备打包上线的时候, 设置production mode: \\\"development\\\", // 设置source-map, 建立js映射文件, 方便调试代码和错误 devtool: \\\"source-map\\\" } \"]},\"55\":{\"h\":\"认识组件化开发\"},\"56\":{\"h\":\"认识组件化开发\",\"t\":[\"人面对复杂问题的处理方式： \",\"任何一个人处理信息的逻辑能力都是有限的\",\"所以，当面对一个非常复杂的问题时，我们不太可能一次性搞定一大堆的内容。\",\"但是，我们人有一种天生的能力，就是将问题进行拆解。\",\"如果将一个复杂的问题，拆分成很多个可以处理的小问题，再将其放在整体当中，你会发现大的问题也会迎刃而解。\",\"组件化也是类似的思想： \",\"如果我们将一个页面中所有的处理逻辑 全部放在一起，处理起来就会变得非常复杂，而且不利于后续的管理以及扩展；\",\"但如果，我们讲一个页面拆分成一个个 小的功能块，每个功能块完成属于自己 这部分独立的功能，那么之后整个页面 的管理和维护就变得非常容易了；\",\"如果我们将一个个功能块拆分后，就可 以像搭建积木一下来搭建我们的项目；\",\"现在可以说整个的大前端开发都是组件化的天下，无论从三大框架（Vue、React、Angular），还是跨平台方案 的Flutter，甚至是移动端都在转向组件化开发，包括小程序的开发也是采用组件化开发的思想\",\"所以，学习组件化最重要的是它的思想，每个框架或者平台可能实现方法不同，但是思想都是一样的。\",\"我们需要通过组件化的思想来思考整个应用程序： \",\"我们将一个完整的页面分成很多个组件；\",\"每个组件都用于实现页面的一个功能块；\",\"而每一个组件又可以进行细分；\",\"而组件本身又可以在多个地方进行复用；\"]},\"57\":{\"h\":\"Vue的组件化\",\"t\":[\"vue 项目起始文件 createApp 函数传入了一个对象App，这个对象其实本质上就是一个组件，也是我们应用程序的根 组件；\",\"组件化提供了一种抽象，让我们可以开发出一个个独立可复用的小组件来构造我们的应用；\",\"任何的应用都会被抽象成一颗组件树；\",\"image-20231031204213497\"]},\"58\":{\"h\":\"组件名称\",\"t\":[\"在通过 app.componen t注册一个组件的时候，第一个参数是组件的名称，定义组件名的方式有两种：\",\"方式一：使用 kebab-case（短横线分割符） \",\"当使用 kebab-case (短横线分隔命名) 定义一个组件时，你也必须在引用这个自定义元素时使用 kebab-case， 例如 <my-component-name>;\",\"方式二：使用 PascalCase（驼峰标识符） \",\"当使用 PascalCase (首字母大写命名) 定义一个组件时，你在引用这个自定义元素时两种命名法都可以使用。也 就是说 <my-component-name>和 MyComponentName 都是可接受的；\",\"在单文件组件和内联字符串模板中，我们都推荐这样做。但是，PascalCase 的标签名在 DOM 模板中是不可用的，详情参见 DOM 内模板解析注意事项。\",\"为了方便，Vue 支持将模板中使用 kebab-case 的标签解析为使用 PascalCase 注册的组件。这意味着一个以 MyComponent 为名注册的组件，在模板中可以通过 <MyComponent> 或 <my-component> 引用。这让我们能够使用同样的 JavaScript 组件注册代码来配合不同来源的模板。\"]},\"59\":{\"h\":\"注册组件的方式\",\"t\":[\"https://cn.vuejs.org/guide/components/registration.html#component-registration\",\"如果我们现在有一部分内容（模板、逻辑等），我们希望将这部分内容抽取到一个独立的组件中去维护，这个时候 如何注册一个组件呢？\",\"我们先从简单的开始谈起，比如下面的模板希望抽离到一个单独的组件：\",\"<h2>{{title}}</h2> <h2>{{message}}</h2> \",\"注册组件分成两种： \",\"全局组件：在任何其他的组件中都可以使用的组件；\",\"局部组件：只有在注册的组件中才能使用的组件；\"]},\"60\":{\"h\":\"注册全局组件\",\"t\":[\"全局组件需要使用我们全局创建的app来注册组件；\",\"通过component方法传入组件名称、组件对象即可注册一个全局组件了；\",\"之后，我们可以在App组件的template中直接使用这个全局组件：\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <component-a></component-a> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', } // 使用 app.component() 注册一个全局组件, app.component() 是 Vue.createApp() 的一个方法 const app = Vue.createApp(App); // app.component() 的第一个参数是组件的名称, 第二个参数是组件的配置对象 app.component('component-a', { template: '<h2>{{ title }}</h2>', data() { return { title: '我是标题', desc: '我是内容, 哈哈哈哈哈' } }, methods: { btnClick() { console.log('按钮的点击'); } } }); app.mount('#app'); </script> </body> \",\"也可以\",\"<template id=\\\"component-a\\\"> <h2>{{ title }}</h2> <p>{{ desc }}</p> </template> app.component('component-a', { template: '#component-a', ... } \"]},\"61\":{\"h\":\"注册局部组件\",\"t\":[\"全局注册虽然很方便，但有以下几个问题：\",\"全局注册，但并没有被使用的组件无法在生产打包时被自动移除 (也叫“tree-shaking”)。如果你全局注册了一个组件，即使它并没有被实际使用，它仍然会出现在打包后的 JS 文件中。\",\"全局注册在大型项目中使项目的依赖关系变得不那么明确。在父组件中使用子组件时，不太容易定位子组件的实现。和使用过多的全局变量一样，这可能会影响应用长期的可维护性。\",\"相比之下，局部注册的组件需要在使用它的父组件中显式导入，并且只能在该父组件中使用。它的优点是使组件之间的依赖关系更加明确，并且对 tree-shaking 更加友好。\",\"局部注册需要使用 components 选项：\",\"<script> import ComponentA from './ComponentA.vue' export default { components: { ComponentA } } </script> <template> <ComponentA /> </template> \",\"对于每个 components 对象里的属性，它们的 key 名就是注册的组件名，而值就是相应组件的实现。上面的例子中使用的是 ES2015 的缩写语法，等价于：\",\"export default { components: { ComponentA: ComponentA } // ... } \",\"请注意：局部注册的组件在后代组件中并不可用。在这个例子中，ComponentA 注册后仅在当前组件可用，而在任何的子组件或更深层的子组件中都不可用。\",\"全局组件往往是在应用程序一开始就会全局组件完成，那么就意味着如果某些组件我们并没有用到，也会一起被注 册： \",\"比如我们注册了三个全局组件：ComponentA、ComponentB、ComponentC；\",\"在开发中我们只使用了ComponentA、ComponentB，如果ComponentC没有用到但是我们依然在全局进行 了注册，那么就意味着类似于webpack这种打包工具在打包我们的项目时，我们依然会对其进行打包；\",\"这样最终打包出的JavaScript包就会有关于ComponentC的内容，用户在下载对应的JavaScript时也会增加包 的大小；\",\"所以在开发中我们通常使用组件的时候采用的都是局部注册： \",\"局部注册是在我们需要使用到的组件中，通过components属性选项来进行注册；\",\"比如之前的App组件中，我们有data、computed、methods等选项了，事实上还可以有一个components选项；\",\"该components选项对应的是一个对象，对象中的键值对是 组件的名称: 组件对象；\"]},\"62\":{\"h\":\"Vue的开发模式\",\"t\":[\"目前我们使用vue的过程都是在html文件中，通过template编写自己的模板、脚本逻辑、样式等。\",\"但是随着项目越来越复杂，我们会采用组件化的方式来进行开发： \",\"这就意味着每个组件都会有自己的模板、脚本逻辑、样式等；\",\"当然我们依然可以把它们抽离到单独的js、css文件中，但是它们还是会分离开来；\",\"也包括我们的script是在一个全局的作用域下，很容易出现命名冲突的问题；\",\"并且我们的代码为了适配一些浏览器，必须使用ES5的语法；\",\"在我们编写代码完成之后，依然需要通过工具对代码进行构建、代码；\",\"所以在真实开发中，我们可以通过一个后缀名为 .vue 的single-file components (单文件组件) 来解决，并且可以使用 webpack 或者 vite 或者 rollup 等构建工具来对其进行处理。\",\"比如: 我们可以单独抽离组件 componentA\",\"<template> <div> <h2>{{ title }}</h2> <p>{{ desc }}</p> <button @click=\\\"btnClick\\\">按钮点击</button> </div> </template> <script> export default { data() { return { title: \\\"我是标题\\\", desc: \\\"我是内容, 哈哈哈哈哈\\\", }; }, methods: { btnClick() { console.log(\\\"按钮的点击\\\"); }, }, }; </script> <style scoped></style> \",\"在这个组件中我们可以获得非常多的特性：\",\"代码的高亮；\",\"ES6、CommonJS的模块化能力；\",\"组件作用域的CSS；\",\"可以使用预处理器来构建更加丰富的组件，比如TypeScript、Babel、Less、Sass等；\"]},\"63\":{\"h\":\"如何支持SFC\",\"t\":[\"如果我们想要使用这一 componentA.vue 文件，比较常见的是两种方式： \",\"方式一：使用Vue CLI来创建项目，项目会默认帮助我们配置好所有的配置选项，可以在其中直接使用.vue文件；\",\"方式二：自己使用webpack或rollup或 vite 这类打包工具，对其进行打包处理；\"]},\"64\":{\"h\":\"Vue3 基本指令\"},\"65\":{\"h\":\"VSCode 代码片段\",\"t\":[\"我们在前面练习Vue的过程中，有些代码片段是需要经常写的，我们再VSCode中我们可以生成一个代码片段，方便我们快速生成。\",\"VSCode中的代码片段有固定的格式，所以我们一般会借助于一个在线工具来完成。\",\"具体的步骤如下： \",\"第一步，复制自己需要生成代码片段的代码；\",\"第二步，https://snippet-generator.app/在该网站中生成代码片段；\",\"第三步，在VSCode中配置代码片段；\",\"直接 Tab trigger 即可自动填充\",\"image-20231016233051010\"]},\"66\":{\"h\":\"模板语法\",\"t\":[\"React的开发模式[了解] \",\"React使用的jsx,所以对应的代码都是编写的类似于js的一种语法\",\"之后通过Babe将js编译成 React. create Element函数调用\",\"function () { return <div></div> } \",\"vue也支持 jsx 的开发模式: \",\"但是大多数情况下,使用基于HTML的模板语法\",\"在模板中,允许开发者以声明式的方式将 DOM 和底层组件实例的数据绑定在-起;口在底层的实现中,vue将模板编译成虚拟DOM渲染函数\",\"<template> <div @click v-bind v-once> {{}} </div> </template> \"]},\"67\":{\"h\":\"Mustache 语法 双大括号语法\",\"t\":[\"如果我们希望把数据显示到模板（template）中，使用最多的语法是 “Mustache”语法 (双大括号) 的文本插值。 \",\"并且我们前端提到过，data返回的对象是有添加到Vue的响应式系统中；\",\"当data中的数据发生改变时，对应的内容也会发生更新。\",\"当然，Mustache中不仅仅可以是data中的属性，也可以是一个JavaScript的表达式。\",\"mustache的使用 1. 基本使用 2. 表达式 3. 函数 4. 三元运算符\",\"<template id=\\\"my-app\\\"> <!-- 1.mustache的基本使用 --> <h2>{{message}} - {{message}}</h2> <!-- 2.是一个表达式 --> <h2>{{counter * 10}}</h2> <h2>{{ message.split(\\\" \\\").reverse().join(\\\" \\\") }}</h2> <!-- 3.也可以调用函数 --> <!-- 可以使用computed(计算属性) --> <h2>{{getReverseMessage()}}</h2> <!-- 4.三元运算符 --> <h2>{{ isShow ? \\\"哈哈哈\\\": \\\"\\\" }}</h2> <button @click=\\\"toggle\\\">切换</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\", counter: 100, isShow: true } }, methods: { getReverseMessage() { return this.message.split(\\\" \\\").reverse().join(\\\" \\\"); }, toggle() { this.isShow = !this.isShow; } } } Vue.createApp(App).mount('#app'); </script> \",\"以下为错误写法\",\"<!-- 错误用法 --> var name = \\\"abc\\\" ; <h2>{{var name = \\\"abc\\\"}}</h2> <h2>{{ if(isShow) { return \\\"哈哈哈\\\" } }}</h2> \"]},\"68\":{\"h\":\"不常用指令\"},\"69\":{\"h\":\"v-once指令\",\"t\":[\"v-once用于指定元素或者组件只渲染一次\",\"当数据发生变化时,元素或者组件以及其所有的子元素将视为静态内容并且跳过;\",\"该指令可以用于性能优化;\",\"<h2 v-once>{{counter}}</h2> <button @click=\\\"increment\\\">+1</button> \",\"如果是子节点的化，也只能渲染一次\",\"<div v-once> <h2>{{counter}}</h2> <h2>{{message}}</h2> </div> <button @click=\\\"increment\\\">+1</button> \",\"完整代码\",\"<div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <h2>{{counter}}</h2> <div v-once> <h2>{{counter}}</h2> <h2>{{message}}</h2> </div> <button @click=\\\"increment\\\">+1</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { counter: 100, message: \\\"abc\\\" } }, methods: { increment() { this.counter++; } } } Vue.createApp(App).mount('#app'); </script> \"]},\"70\":{\"h\":\"v-html\",\"t\":[\"默认情况下，如果我们展示的内容本身是 html 的，那么vue并不会对其进行特殊的解析。 \",\"如果我们希望这个内容被Vue可以解析出来，那么可以使用 v-html 来展示\",\"<template id=\\\"my-app\\\"> <div>{{msg}}</div> <div v-html=\\\"msg\\\"></div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { msg: '<span style=\\\"color:red; background: blue;\\\">哈哈哈</span>' } } } Vue.createApp(App).mount('#app'); </script> \",\"image-20231018083558572\"]},\"71\":{\"h\":\"v-text\",\"t\":[\"用于更新元素的 textContent\",\" <h2 v-text=\\\"message\\\"></h2> <!-- 等价于 --> <h2>{{message}}</h2> \"]},\"72\":{\"h\":\"v-pre\",\"t\":[\"v-pre用于跳过元素和它的子元素的编译过程，显示原始的Mustache标签： \",\"跳过不需要编译的节点，加快编译的速度\",\" <template id=\\\"my-app\\\"> <h2 v-pre>{{message}}</h2> </template> <!-- {{message}} --> \"]},\"73\":{\"h\":\"v-cloak\",\"t\":[\"用于隐藏尚未完成编译的 DOM 模板。 \",\"无需传入\",\"详细信息\",\"该指令只在没有构建步骤的环境下需要使用。\",\"当使用直接在 DOM 中书写的模板时，可能会出现一种叫做“未编译模板闪现”的情况：用户可能先看到的是还没编译完成的双大括号标签，直到挂载的组件将它们替换为实际渲染的内容。\",\"v-cloak 会保留在所绑定的元素上，直到相关组件实例被挂载后才移除。配合像 [v-cloak] { display: none } 这样的 CSS 规则，它可以在组件编译完毕前隐藏原始模板。\",\"[v-cloak] { display: none; } \",\"<div v-cloak> {{ message }} </div> \",\"直到编译完成前，<div> 将不可见。\"]},\"74\":{\"h\":\"v-bind\",\"t\":[\"动态的绑定一个或多个 attribute，也可以是组件的 prop。\",\"缩写：: 或者 . (当使用 .prop 修饰符)\",\"期望：any (带参数) | Object (不带参数)\",\"参数：attrOrProp (可选的)\",\"修饰符\",\".camel - 将短横线命名的 attribute 转变为驼峰式命名。\",\".prop - 强制绑定为 DOM property。3.2+\",\".attr - 强制绑定为 DOM attribute。3.2+\",\"用途\",\"当用于绑定 class 或 style attribute，v-bind 支持额外的值类型如数组或对象。详见下方的指南链接。\",\"在处理绑定时，Vue 默认会利用 in 操作符来检查该元素上是否定义了和绑定的 key 同名的 DOM property。如果存在同名的 property，则 Vue 会将它作为 DOM property 赋值，而不是作为 attribute 设置。这个行为在大多数情况都符合期望的绑定值类型，但是你也可以显式用 .prop 和 .attr 修饰符来强制绑定方式。有时这是必要的，特别是在和自定义元素打交道时。\",\"当用于组件 props 绑定时，所绑定的 props 必须在子组件中已被正确声明。\",\"当不带参数使用时，可以用于绑定一个包含了多个 attribute 名称-绑定值对的对象。\",\"用法\",\"动态地绑定一个或多个 attribute，或一个组件 prop 到表达式。\",\"小知识: vue3 是允许template中有多个根元素\",\"<!-- vue2 template模板中只能有一个根元素 --> <!-- vue3 是允许template中有多个根元素 --> <template id=\\\"my-app\\\"> <!-- 1.v-bind的基本使用 --> <img v-bind:src=\\\"imgUrl\\\" alt=\\\"\\\"> <a v-bind:href=\\\"link\\\">百度一下</a> <!-- 2.v-bind提供一个语法糖 : --> <img :src=\\\"imgUrl\\\" alt=\\\"\\\"> <img src=\\\"imgUrl\\\" alt=\\\"\\\"> </template> \"]},\"75\":{\"h\":\"基本使用\",\"t\":[\"<template id=\\\"my-app\\\"> <!-- 1.v-bind的基本使用 --> <img v-bind:src=\\\"imgUrl\\\" alt=\\\"\\\"> <a v-bind:href=\\\"link\\\">百度一下</a> <!-- 2.v-bind提供一个语法糖 : --> <img :src=\\\"imgUrl\\\" alt=\\\"\\\"> <!-- 以下报错 --> <img src=\\\"imgUrl\\\" alt=\\\"\\\"> </template> <script> const App = { template: '#my-app', data() { return { imgUrl: \\\"https://avatars.githubusercontent.com/u/10335230?s=60&v=4\\\", link: \\\"https://www.baidu.com\\\" } } } Vue.createApp(App).mount('#app'); </script> \"]},\"76\":{\"h\":\"绑定 class\",\"t\":[\"在开发中,有时候我们的元素 class也是动态的,比如 \",\"当数据为某个状态时,字体显示红色。\",\"当数据另一个状态时,字体显示黑色\",\"绑定class有两种方式： \",\"对象语法\",\"数组语法\"]},\"77\":{\"h\":\"对象语法\",\"t\":[\"对象语法：我们可以传给 :class (v-bind:class 的简写) 一个对象，以动态地切换 class\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <div :class=\\\"className\\\">哈哈哈哈</div> <!-- 对象语法: {'active': boolean} --> <div :class=\\\"{'active': isActive}\\\">呵呵呵呵</div> <button @click=\\\"toggle\\\">切换</button> <!-- 也可以有多个键值对 --> <div :class=\\\"{active: isActive, title: true}\\\">呵呵呵呵</div> <!-- 默认的class和动态的class结合 --> <div class=\\\"abc cba\\\" :class=\\\"{active: isActive, title: true}\\\"> 呵呵呵呵 </div> <!-- 将对象放到一个单独的属性中 --> <div class=\\\"abc cba\\\" :class=\\\"classObj\\\">呵呵呵呵</div> <!-- 将返回的对象放到一个methods(computed)方法中 --> <div class=\\\"abc cba\\\" :class=\\\"getClassObj()\\\">呵呵呵呵</div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: \\\"#my-app\\\", data() { return { className: \\\"why\\\", isActive: true, title: \\\"abc\\\", classObj: { active: true, title: true }, }; }, methods: { toggle() { this.isActive = !this.isActive; this.classObj.active = !this.classObj.active; }, getClassObj() { return this.classObj; } }, }; Vue.createApp(App).mount(\\\"#app\\\"); </script> <style> .active { color: red; } </style> </body> \"]},\"78\":{\"h\":\"数组语法\",\"t\":[\"绑定class – 数组语法 \",\"数组语法：我们可以把一个数组传给 :class，以应用一个 class 列表\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <div :class=\\\"['abc', title]\\\">哈哈哈哈</div> <!-- class=\\\"abc cba active\\\" --> <div :class=\\\"['abc', title, isActive ? 'active': '']\\\">哈哈哈哈</div> <!-- 可以嵌套对象语法 --> <div :class=\\\"['abc', title, {active: isActive}]\\\">哈哈哈哈</div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\", title: \\\"cba\\\", isActive: true } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"79\":{\"h\":\"绑定 style\",\"t\":[\"我们可以利用 v-bind:style 来绑定一些CSS内联样式 \",\"这次因为某些样式我们需要根据数据动态来决定\",\"比如某段文字的颜色，大小等等\",\"CSS property 名可以用驼峰式 (camelCase) 或短横线分隔 (kebab-case，记得用引号括起来) 来命名\",\"绑定class有两种方式 \",\"对象语法\",\"数组语法\",\"CSS property 名短横线分隔 (kebab-case，记得用引号括起来)\"]},\"80\":{\"h\":\"对象语法\",\"t\":[\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- :style=\\\"{cssPropertyName: cssPropertyValue}\\\" --> <div :style=\\\"{color: finalColor, 'font-size': '30px'}\\\">哈哈哈哈</div> <div :style=\\\"{color: finalColor, fontSize: '30px'}\\\">哈哈哈哈</div> <div :style=\\\"{color: finalColor, fontSize: finalFontSize + 'px'}\\\">哈哈哈哈</div> <!-- 绑定一个data中的属性值, 并且是一个对象 --> <div :style=\\\"finalStyleObj\\\">呵呵呵呵</div> <!-- 调用一个方法 --> <div :style=\\\"getFinalStyleObj()\\\">呵呵呵呵</div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\", finalColor: 'red', finalFontSize: 50, finalStyleObj: { 'font-size': '50px', fontWeight: 700, backgroundColor: 'red' } } }, methods: { getFinalStyleObj() { return { 'font-size': '50px', fontWeight: 700, backgroundColor: 'red' } } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"81\":{\"h\":\"数组语法\",\"t\":[\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <div :style=\\\"[style1Obj, style2Obj]\\\">哈哈哈</div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\", style1Obj: { color: 'red', fontSize: '30px' }, style2Obj: { textDecoration: \\\"underline\\\" } } } } Vue.createApp(App).mount('#app'); </script> </body \"]},\"82\":{\"h\":\"动态绑定属性\",\"t\":[\"在某些情况下，我们属性的名称可能也不是固定的 \",\"前端我们无论绑定src、href、class、style，属性名称都是固定的\",\"如果属性名称不是固定的，我们可以使用 :[属性名]=“值” 的格式来定义\",\"这种绑定的方式，我们称之为 动态绑定属性；如下:\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- <div cba=\\\"kobe\\\">哈哈哈</div> --> <div :[name]=\\\"value\\\">哈哈哈</div> <img :src=\\\"\\\" alt=\\\"\\\"> <a :href=\\\"\\\"></a> <div :class></div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { name: \\\"cba\\\", value: \\\"kobe\\\" } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"83\":{\"h\":\"属性直接绑定一个对象\",\"t\":[\"如果我们希望将一个对象的所有属性，绑定到元素上的所有属性，应该怎么做呢？ \",\"非常简单，我们可以直接使用 v-bind 绑定一个 对象\",\"案例：info对象会被拆解成div的各个属性\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- <div name=\\\"why\\\" age=\\\"18\\\" height=\\\"1.88\\\">哈哈哈哈</div> --> <div v-bind=\\\"info\\\">哈哈哈哈</div> <div :=\\\"info\\\">哈哈哈哈</div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { info: { name: \\\"why\\\", age: 18, height: 1.88 } } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"84\":{\"h\":\"v-on\",\"t\":[\"v-on绑定事件\",\"前面我们绑定了元素的内容和属性，在前端开发中另外一个非常重要的特性就是交互。\",\"在前端开发中，我们需要经常和用户进行各种各样的交互 \",\"这个时候，我们就必须监听用户发生的事件，比如点击、拖拽、键盘事件等等\",\"在Vue中如何监听事件呢？使用v-on指令。\",\"v-on的用法\",\"缩写：@\",\"预期：Function | Inline Statement | Object\",\"参数：event p 修饰符： \",\".stop - 调用 event.stopPropagation()。\",\".prevent - 调用 event.preventDefault()。\",\".capture - 添加事件侦听器时使用 capture 模式。\",\".self - 只当事件是从侦听器绑定的元素本身触发时才触发回调。\",\".{keyAlias} - 仅当事件是从特定键触发时才触发回调。\",\".once - 只触发一次回调。\",\".left - 只当点击鼠标左键时触发。\",\".right - 只当点击鼠标右键时触发。\",\".middle - 只当点击鼠标中键时触发。\",\".passive - { passive: true } 模式添加侦听器\",\"用法：绑定事件监听\",\"event 事件可以参考 https://developer.mozilla.org/en-US/docs/Web/Events\"]},\"85\":{\"h\":\"基本使用\",\"t\":[\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- 完整写法: v-on:监听的事件=\\\"methods中方法\\\" --> <button v-on:click=\\\"btn1Click\\\">按钮1</button> <div class=\\\"area\\\" v-on:mousemove=\\\"mouseMove\\\">div</div> <!-- 语法糖 --> <button @click=\\\"btn1Click\\\">按钮1</button> <!-- 绑定一个表达式: inline statement --> <button @click=\\\"counter++\\\">{{counter}}</button> <!-- 绑定一个对象 --> <div class=\\\"area\\\" v-on=\\\"{click: btn1Click, mousemove: mouseMove}\\\"></div> <div class=\\\"area\\\" @=\\\"{click: btn1Click, mousemove: mouseMove}\\\"></div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\", counter: 100 } }, methods: { btn1Click() { console.log(\\\"按钮1发生了点击\\\"); }, mouseMove() { console.log(\\\"鼠标移动\\\"); } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"86\":{\"h\":\"参数传递\",\"t\":[\"当通过methods中定义方法，以供 @click调用时，需要注意参数问题：\",\"情况一：如果该方法不需要额外参数，那么方法后的()可以不添加。 \",\"但是注意：如果方法本身中有一个参数，那么会默认将原生事件event参数传递进去\",\"情况二：如果需要同时传入某个参数，同时需要 event 时，可以通过 $event 传入事件。\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- 默认传入event对象, 可以在方法中获取 --> <button @click=\\\"btn1Click\\\">按钮1</button> <!-- $event可以获取到事件发生时的事件对象 --> <button @click=\\\"btn2Click($event, 'coderwhy', 18)\\\">按钮2</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\" } }, methods: { btn1Click(event) { console.log(event); }, btn2Click(event, name, age) { console.log(name, age, event); } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"image-20231019004604619\"]},\"87\":{\"h\":\"v-on 的修饰符\",\"t\":[\"v-on支持修饰符，修饰符相当于对事件进行了一些特殊的处理： \",\".stop - 调用 event.stopPropagation()。\",\".prevent - 调用 event.preventDefault()。\",\".capture - 添加事件侦听器时使用 capture 模式。\",\".self - 只当事件是从侦听器绑定的元素本身触发时才触发回调。\",\".{keyAlias} - 仅当事件是从特定键触发时才触发回调。\",\".once - 只触发一次回调。\",\".left - 只当点击鼠标左键时触发。\",\".right - 只当点击鼠标右键时触发。\",\".middle - 只当点击鼠标中键时触发。\",\".passive - { passive: true } 模式添加侦听器\",\"stopPropagation 是一个事件修饰符，用于阻止事件冒泡。在 Vue.js 中，当一个元素上的事件被触发时，它会先执行该元素上的事件处理函数，然后再冒泡到该元素的父元素，继续执行父元素的事件处理函数。使用 stopPropagation 可以阻止事件继续冒泡到父元素。在给元素绑定事件时，可以使用 @click.stop 来阻止 click 事件冒泡到父元素。\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <div @click=\\\"divClick\\\"> <button @click=\\\"btnClick\\\">按钮</button> <button @click.stop=\\\"btnClick\\\">按钮</button> </div> <input type=\\\"text\\\" @keyup.enter=\\\"enterKeyup\\\"> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\" } }, methods: { divClick() { console.log(\\\"divClick\\\"); }, btnClick() { console.log('btnClick'); }, enterKeyup(event) { console.log(\\\"keyup\\\", event.target.value); } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"image-20231019005251770\"]},\"88\":{\"h\":\"条件渲染\",\"t\":[\"在某些情况下，我们需要根据当前的条件决定某些元素或组件是否渲染，这个时候我们就需要进行条件判断了。 \",\"Vue提供了下面的指令来进行条件判断： \",\"v-if\",\"v-else\",\"v-else-if\",\"v-show\"]},\"89\":{\"h\":\"基本使用\",\"t\":[\"v-if、v-else、v-else-if用于根据条件来渲染某一块的内容： \",\"这些内容只有在条件为true时，才会被渲染出来；\",\"这三个指令与JavaScript的条件语句if、else、else if类似；\",\" <template id=\\\"my-app\\\"> <input type=\\\"text\\\" v-model=\\\"score\\\"> <h2 v-if=\\\"score > 90\\\">优秀</h2> <h2 v-else-if=\\\"score > 60\\\">良好</h2> <h2 v-else>不及格</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { score: 95 } } } Vue.createApp(App).mount('#app'); </script> \"]},\"90\":{\"h\":\"template 和 v-if 结合使用\",\"t\":[\"v-if的渲染原理： \",\"v-if是惰性的；\",\"当条件为false时，其判断的内容完全不会被渲染或者会被销毁掉；\",\"当条件为true时，才会真正渲染条件块中的内容;\",\"template元素 \",\"因为v-if是一个指令，所以必须将其添加到一个元素上： \",\"但是如果我们希望切换的是多个元素呢？\",\"此时我们渲染div，但是我们并不希望div这种元素被渲染；\",\"这个时候，我们可以选择使用template；\",\"template元素可以当做不可见的包裹元素，并且在v-if上使用，但是最终template不会被渲染出来： \",\"有点类似于小程序中的block\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <template v-if=\\\"isShowHa\\\"> <h2>哈哈哈哈</h2> <h2>哈哈哈哈</h2> <h2>哈哈哈哈</h2> </template> <template v-else> <h2>呵呵呵呵</h2> <h2>呵呵呵呵</h2> <h2>呵呵呵呵</h2> </template> <button @click=\\\"isShowHa = !isShowHa\\\">切换</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { isShowHa: true } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"91\":{\"h\":\"v-show\",\"t\":[\"v-show和v-if的用法看起来是一致的，也是根据一个条件决定是否显示元素或者组件\",\" <template id=\\\"my-app\\\"> <h2 v-show=\\\"isShow\\\">哈哈哈哈</h2> </template> \"]},\"92\":{\"h\":\"v-show和v-if的区别\",\"t\":[\"首先，在用法上的区别： \",\"v-show是不支持template；\",\"v-show不可以和v-else一起使用；\",\"其次，本质的区别： \",\"v-show元素无论是否需要显示到浏览器上，它的DOM实际都是有渲染的，只是通过CSS的display属性来进行 切换；\",\"v-if当条件为false时，其对应的元素压根不会被渲染到DOM中；\",\"开发中如何进行选择呢？ \",\"如果我们的元素需要在显示和隐藏之间频繁的切换，那么使用v-show；\",\"如果不会频繁的发生切换，那么使用v-if；\",\"<template id=\\\"my-app\\\"> <h2 v-if=\\\"isShow\\\">哈哈哈哈</h2> <h2 v-show=\\\"isShow\\\">呵呵呵呵</h2> </template> \",\"image-20231019222841008\"]},\"93\":{\"h\":\"列表渲染\",\"t\":[\"在真实开发中，我们往往会从服务器拿到一组数据，并且需要对其进行渲染。 \",\"这个时候我们可以使用v-for来完成；\",\"v-for类似于JavaScript的for循环，可以用于遍历一组数据；\"]},\"94\":{\"h\":\"基本使用\",\"t\":[\"n v-for的基本格式是 \\\"item in 数组\\\"：\",\"数组通常是来自data或者prop，也可以是其他方式；\",\"item是我们给每项元素起的一个别名，这个别名可以自定来定义；\",\"我们知道，在遍历一个数组的时候会经常需要拿到数组的索引：\",\"如果我们需要索引，可以使用格式： \\\"(item, index) in 数组\\\"；\",\"注意上面的顺序：数组元素项item是在前面的，索引项index是在后面的；\",\"v-for支持的类型\",\"v-for也支持遍历对象，并且支持有一二三个参数： \",\"一个参数： \\\"value in object\\\";\",\"二个参数： \\\"(value, key) in object\\\";\",\"三个参数： \\\"(value, key, index) in object\\\";\",\"v-for同时也支持数字的遍历： \",\"每一个item都是一个数字；\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <h2>电影列表</h2> <ul> <!-- 遍历数组 --> <li v-for=\\\"(movie, index) in movies\\\">{{index+1}}.{{movie}}</li> </ul> <h2>个人信息</h2> <ul> <!-- 遍历对象 --> <li v-for=\\\"(value, key, index) in info\\\">{{value}}-{{key}}-{{index}}</li> </ul> <h2>遍历数字</h2> <ul> <li v-for=\\\"(num, index) in 10\\\">{{num}}-{{index}}</li> </ul> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { movies: [ \\\"星际穿越\\\", \\\"盗梦空间\\\", \\\"大话西游\\\", \\\"教父\\\", \\\"少年派\\\" ], info: { name: \\\"why\\\", age: 18, height: 1.88 } } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"95\":{\"h\":\"template元素使用\",\"t\":[\"类似于v-if，你可以使用 template 元素来循环渲染一段包含多个元素的内容： \",\"我们使用template来对多个元素进行包裹，而不是使用div来完成；\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <ul> <template v-for=\\\"(value, key) in info\\\"> <li>{{key}}</li> <li>{{value}}</li> <li class=\\\"divider\\\"></li> </template> </ul> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { info: { name: \\\"why\\\", age: 18, height: 1.88 } } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"96\":{\"h\":\"数组更新检测\",\"t\":[\"Vue 将被侦听的数组的变更方法进行了包裹，所以它们也将会触发视图更新。这些被包裹过的方法包括： \",\"push()\",\"pop()\",\"shift()\",\"unshift()\",\"splice()\",\"sort()\",\"reverse()\",\"替换数组的方法 \",\"上面的方法会直接修改原来的数组，但是某些方法不会替换原来的数组，而是会生成新的数组，比如 filter()、 concat() 和 slice()。\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <h2>电影列表</h2> <ul> <li v-for=\\\"(movie, index) in movies\\\">{{index+1}}.{{movie}}</li> </ul> <input type=\\\"text\\\" v-model=\\\"newMovie\\\"> <button @click=\\\"addMovie\\\">添加电影</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { newMovie: \\\"\\\", movies: [ \\\"星际穿越\\\", \\\"盗梦空间\\\", \\\"大话西游\\\", \\\"教父\\\", \\\"少年派\\\" ] } }, methods: { addMovie() { this.movies.push(this.newMovie); this.newMovie = \\\"\\\"; // filter 是过滤的意思, 下文中的代码的意思是: 过滤掉长度小于等于2的电影 // this.movies = this.movies.filter(item => item.length > 2); } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"97\":{\"h\":\"v-for 中的 key 是什么作用？\",\"t\":[\"https://cn.vuejs.org/api/built-in-special-attributes.html#key\",\"在使用v-for进行列表渲染时，我们通常会给元素或者组件绑定一个key属性。\",\"这个key属性有什么作用呢？我们先来看一下官方的解释：\",\"key属性主要用在Vue的虚拟DOM算法，在新旧nodes对比时辨识VNodes；\",\"如果不使用key，Vue会使用一种最大限度减少动态元素并且尽可能的尝试就地修改/复用相同类型元素的算法；\",\"而使用key时，它会基于key的变化重新排列元素顺序，并且会移除/销毁key不存在的元素；\",\"官方的解释对于初学者来说并不好理解，比如下面的问题：\",\"什么是新旧nodes，什么是VNode？\",\"没有key的时候，如何尝试修改和复用的？\",\"有key的时候，如何基于key重新排列的？\"]},\"98\":{\"h\":\"认识 VNode\",\"t\":[\"我们先来解释一下VNode的概念： \",\"因为目前我们还没有比较完整的学习组件的概念，所以目前我们先理解HTML元素创建出来的VNode；\",\"VNode的全称是Virtual Node，也就是虚拟节点；\",\"事实上，无论是组件还是元素，它们最终在Vue中表示出来的都是一个个VNode；\",\"VNode的本质是一个JavaScript的对象；可以用于描述某一个标签/ 元素 的样子\",\"好处: 多平台的渲染, 跨平台(主要好处)\",\"image-20231020162812819\"]},\"99\":{\"h\":\"虚拟 DOM\",\"t\":[\"如果我们不只是一个简单的div，而是有一大堆的元素，那么它们应该会形成一个 VNode Tree\",\"虚拟 DOM 与 真实 DOM 不一定一一对应\",\"image-20231020163154944\"]},\"100\":{\"h\":\"插入 F 的案例\",\"t\":[\"我们先来看一个案例：这个案例是当我点击按钮时会在中间插入一个f；\",\"我们可以确定的是，这次更新对于ul和button是不需要进行更新，需要更新的是我们 li 的列表：\",\"在Vue中，对于相同父元素的子元素节点并不会重新渲染整个列 表；\",\"因为对于列表中 a、b、c、d它们都是没有变化的；\",\"在操作真实DOM的时候，我们只需要在中间插入一个 f 的 li 即可；\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <ul> <li v-for=\\\"item in letters\\\" :key=\\\"item\\\">{{item}}</li> </ul> <button @click=\\\"insertF\\\">插入F元素</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { letters: ['a', 'b', 'c', 'd'] } }, methods: { insertF() { this.letters.splice(2, 0, 'f') } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"那么Vue中对于列表的更新究竟是如何操作的呢？ \",\"Vue事实上会对于有key和没有key会调用两个不同的方法；\"]},\"101\":{\"h\":\"Vue源码对于key的判断\",\"t\":[\"有key，那么就使用 patchKeyedChildren方法；\",\"没有key，那么久使用 patchUnkeyedChildren方法；\",\"image-20231020164733530\",\"diff算法: diff 算法是指生成更新补丁的方式,主要应用于虚拟 DOM 树变化后,更新真实 DOM。所以 diff 算法一定存在这样一个过程:触发更新 → 生成补丁 → 应用补丁。\",\"没有key的操作过程\",\"image-20231022182341619\",\"我们会发现上面的diff算法效率并不高： \",\"c和d来说它们事实上并不需要有任何的改动；\",\"但是因为我们的c被f所使用了，所有后续所有的内容都要一次进行改动，并且最后进行新增；\",\"image-20231022182012027\",\"有key的操作过程-diff算法 \",\"第一步的操作是从头开始进行遍历、比较： \",\"a和b是一致的会继续进行比较；\",\"c和f因为key不一致，所以就会break跳出循环\",\"第二步的操作是从尾部开始进行遍历、比较\",\"第三步是如果旧节点遍历完毕，但是依然有新的节点，那么就新增节点：\",\"第四步是如果新的节点遍历完毕，但是依然有旧的节点，那么就移除旧节点：\",\"第五步是最特色的情况，中间还有很多未知的或者乱序的节点：\",\"image-20231022182232738\",\"image-20231022182140133\",\"image-20231022182241976\",\"image-20231022182251535\",\"image-20231022182300781\"]},\"102\":{\"h\":\"有无key的结论\",\"t\":[\"有无key的结论 \",\"所以我们可以发现，Vue在进行diff算法的时候，会尽量利用我们的key来进行优化操作： \",\"在没有key的时候我们的效率是非常低效的；\",\"在进行插入或者重置顺序的时候，保持相同的key可以让diff算法更加的高效；\"]},\"103\":{\"h\":\"Vue 的Options API\"},\"104\":{\"h\":\"Computed\"},\"105\":{\"h\":\"认识计算属性\",\"t\":[\"我们知道，在模板中可以直接通过插值语法显示一些data中的数据。\",\"但是在某些情况，我们可能需要对数据进行一些转化后再显示，或者需要将多个数据结合起来进行显示；\",\"比如我们需要对多个data数据进行运算、三元运算符来决定结果、数据进行某种转化后显示；\",\"在模板中使用表达式，可以非常方便的实现，但是设计它们的初衷是用于简单的运算；\",\"在模板中放入太多的逻辑会让模板过重和难以维护；\",\"并且如果多个地方都使用到，那么会有大量重复的代码；\",\"我们有没有什么方法可以将逻辑抽离出去呢？\",\"可以，其中一种方式就是将逻辑抽取到一个method中，放到methods的options中；\",\"但是，这种做法有一个直观的弊端，就是所有的data使用过程都会变成了一个方法的调用；\",\"另外一种方式就是使用计算属性computed；\",\"什么是计算属性呢？\",\"https://cn.vuejs.org/api/reactivity-core.html#computed\",\"官方并没有给出直接的概念解释；\",\"而是说：对于任何包含响应式数据的复杂逻辑，你都应该使用计算属性；\",\"计算属性将被混入到组件实例中。所有 getter 和 setter 的 this 上下文自动地绑定为组件实例；\"]},\"106\":{\"h\":\"基本使用\",\"t\":[\"计算属性的用法：\",\"选项： computed\",\"类型：{ [key: string]: Function | { get: Function, set: Function } }\",\"我们来看三个案例：\",\"我们有两个变量：firstName 和 lastName，希望它们拼接之后在界面上显示；\",\"我们有一个分数：score \",\"当score大于60的时候，在界面上显示及格；\",\"当score小于60的时候，在界面上显示不及格；\",\"我们有一个变量message，记录一段文字：比如Hello World \",\"某些情况下我们是直接显示这段文字；\",\"某些情况下我们需要对这段文字进行反转；\",\"我们可以有三种实现思路： \",\"思路一：在模板语法中直接使用表达式；\",\"思路二：使用method对逻辑进行抽取；\",\"思路三：使用计算属性computed；\"]},\"107\":{\"h\":\"在模板语法中直接使用表达式\",\"t\":[\"缺点一：模板中存在大量的复杂逻辑，不便于维护（模板中表达式的初衷是用于简单的计算）；\",\"缺点二：当有多次一样的逻辑时，存在重复的代码；\",\"缺点三：多次使用的时候，很多运算也需要多次执行，没有缓存；\",\"<template id=\\\"my-app\\\"> <!-- 1.实现思路一: --> <h2>{{ firstName + lastName }}</h2> <h2>{{ score >= 60 ? \\\"及格\\\": \\\"不及格\\\" }}</h2> <h2>{{ message.split(\\\"\\\").reverse().join(\\\" \\\") }}</h2> </template> \"]},\"108\":{\"h\":\"使用method对逻辑进行抽取\",\"t\":[\"缺点一：我们事实上先显示的是一个结果，但是都变成了一种方法的调用；\",\"缺点二：多次使用方法的时候，没有缓存，也需要多次计算；\",\"<template id=\\\"my-app\\\"> <h2>{{getFullName()}}</h2> <h2>{{getResult()}}</h2> <h2>{{getReverseMessage()}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { firstName: \\\"Kobe\\\", lastName: \\\"Bryant\\\", score: 80, message: \\\"Hello World\\\" } }, methods: { getFullName() { return this.firstName + \\\" \\\" + this.lastName; }, getResult() { return this.score >= 60 ? \\\"及格\\\": \\\"不及格\\\"; }, getReverseMessage() { return this.message.split(\\\" \\\").reverse().join(\\\" \\\"); } } } Vue.createApp(App).mount('#app'); </script> \"]},\"109\":{\"h\":\"computed 实现\",\"t\":[\"注意：计算属性看起来像是一个函数，但是我们在使用的时候不需要加()，这个后面讲setter和getter时会讲到；\",\"我们会发现无论是直观上，还是效果上计算属性都是更好的选择；\",\"并且计算属性是有缓存的；\",\"<template id=\\\"my-app\\\"> <h2>{{fullName}}</h2> <h2>{{result}}</h2> <h2>{{reverseMessage}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { firstName: \\\"Kobe\\\", lastName: \\\"Bryant\\\", score: 80, message: \\\"Hello World\\\" } }, computed: { // 定义了一个计算属性叫fullname fullName() { return this.firstName + \\\" \\\" + this.lastName; }, result() { return this.score >= 60 ? \\\"及格\\\": \\\"不及格\\\"; }, reverseMessage() { return this.message.split(\\\" \\\").reverse().join(\\\" \\\"); } } } Vue.createApp(App).mount('#app'); </script> \"]},\"110\":{\"h\":\"计算属性 vs methods\",\"t\":[\"在上面的实现思路中，我们会发现计算属性和methods的实现看起来是差别是不大的，而且我们多次提到计算属性有缓存。\",\"接下来我们来看一下同一个计算多次使用，计算属性和methods的差异：\",\"<template id=\\\"my-app\\\"> <button @click=\\\"changeFirstName\\\">修改firstName</button> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{getFullName()}}</h2> <h2>{{getFullName()}}</h2> <h2>{{getFullName()}}</h2> <h2>{{getFullName()}}</h2> <h2>{{getFullName()}}</h2> <h2>{{getFullName()}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { firstName: \\\"Kobe\\\", lastName: \\\"Bryant\\\" } }, computed: { // 计算属性是有缓存的, 当我们多次使用计算属性时, 计算属性中的运算只会执行一次. // 计算属性会随着依赖的数据(firstName)的改变, 而进行重新计算. fullName() { console.log(\\\"computed的fullName中的计算\\\"); return this.firstName + \\\" \\\" + this.lastName; } }, methods: { getFullName() { console.log(\\\"methods的getFullName中的计算\\\"); return this.firstName + \\\" \\\" + this.lastName; }, changeFirstName() { this.firstName = \\\"Coder\\\" } } } Vue.createApp(App).mount('#app'); </script> \",\"打印结果如下：\",\"我们会发现methods在多次使用时，会调用多次；\",\"而计算属性虽然使用了多次，但是计算的过程只调用了一次；\",\"这是因为计算属性会基于它们的依赖关系进行缓存；\",\"在数据不发生变化时，计算属性是不需要重新计算的；\",\"但是如果依赖的数据发生变化，在使用时，计算属性依然会重新进行计算；如下:\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <input type=\\\"text\\\" v-model=\\\"score\\\"> <!-- 1.使用methods --> <h2>{{getResult()}}</h2> <h2>{{getResult()}}</h2> <h2>{{getResult()}}</h2> <!-- 2.使用computed --> <h2>{{result}}</h2> <h2>{{result}}</h2> <h2>{{result}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { score: 90 } }, computed: { result() { console.log(\\\"调用了计算属性result的getter\\\"); return this.score >= 60 ? \\\"及格\\\": \\\"不及格\\\"; } }, methods: { getResult() { console.log(\\\"调用了getResult方法\\\"); return this.score >= 60 ? \\\"及格\\\": \\\"不及格\\\"; } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"当 score 变化, console 输出如下:\",\"调用了getResult方法 调用了getResult方法 调用了getResult方法 调用了计算属性result的getter \"]},\"111\":{\"h\":\"计算属性的 setter 和 getter\",\"t\":[\"计算属性在大多数情况下，只需要一个getter方法即可，所以我们会将计算属性直接写成一个函数。\",\"但是，如果我们确实想设置计算属性的值呢？\",\"这个时候我们也可以给计算属性设置一个setter的方法；\",\"<template id=\\\"my-app\\\"> <button @click=\\\"changeFullName\\\">修改fullName</button> <h2>{{fullName}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { firstName: \\\"Kobe\\\", lastName: \\\"Bryant\\\" } }, computed: { // fullName 的 getter方法 fullName() { return this.firstName + \\\" \\\" + this.lastName; }, // fullName的getter和setter方法 fullName: { get: function() { return this.firstName + \\\" \\\" + this.lastName; }, set: function(newValue) { console.log(newValue); const names = newValue.split(\\\" \\\"); this.firstName = names[0]; this.lastName = names[1]; } } }, methods: { changeFullName() { this.fullName = \\\"Coder Why\\\"; } } } Vue.createApp(App).mount('#app'); </script> \",\"以下为内部判断\",\"图片\"]},\"112\":{\"h\":\"侦听器 watch\",\"t\":[\"用于声明在数据更改时调用的侦听回调。watch 选项期望接受一个对象，其中键是需要侦听的响应式组件实例属性 (例如，通过 data 或 computed 声明的属性)——值是相应的回调函数。该回调函数接受被侦听源的新值和旧值。\",\"什么是侦听器？ \",\"开发中我们在data返回的对象中定义了数据，这个数据通过插值语法等方式绑定到template中;\",\"当数据变化时，template会自动进行更新来显示最新的数据;\",\"但是在某些情况下，我们希望在代码逻辑中监听某个数据的变化，这个时候就需要用侦听器watch来完成了;\",\"用法如下： \",\"选项：watch\",\"类型: {[key: string]: string | Function | Object | Array}\"]},\"113\":{\"h\":\"简单案例\",\"t\":[\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> 您的问题: <input type=\\\"text\\\" v-model=\\\"question\\\"> <button @click=\\\"queryAnswer\\\">查找答案</button> <p>您的问题是: {{ question }}</p> <p>答案是: {{ anwser }}</p> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { // 侦听question的变化时, 去进行一些逻辑的处理(JavaScript, 网络请求) question: \\\"Hello World\\\", anwser: \\\"\\\" } }, watch: { // question侦听的data中的属性的名称 // newValue变化后的新值 // oldValue变化前的旧值 question: function(newValue, oldValue) { console.log(\\\"新值: \\\", newValue, \\\"旧值\\\", oldValue); this.queryAnswer(); } }, methods: { queryAnswer() { // console.log(`你的问题${this.question}的答案是哈哈哈哈哈`); this.anwser = `你的问题${this.question}的答案是哈哈哈哈哈`; } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"114\":{\"h\":\"配置选项\",\"t\":[\"watch 默认是浅层的：被侦听的属性，仅在被赋新值时，才会触发回调函数——而嵌套属性的变化不会触发。如果想侦听所有嵌套的变更，你需要深层侦听器：\",\"以下为不使用深度监听, 当 info.name 在方法中被赋值改变时, 页面会改变, 但是watch不会侦听到, 理由如上\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <h2>{{info.name}}</h2> <button @click=\\\"changeInfo\\\">改变info</button> <!-- 页面会改变, 但是watch不会侦听到 --> <button @click=\\\"changeInfoName\\\">改变info.name</button> <button @click=\\\"changeInfoNbaName\\\">改变info.nba.name</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { info: { name: \\\"why\\\", age: 18, nba: {name: 'kobe'} } } }, watch: { // 默认情况下我们的侦听器只会针对监听的数据本身的改变(内部发生的改变是不能侦听) info(newInfo, oldInfo) { console.log(\\\"newValue:\\\", newInfo, \\\"oldValue:\\\", oldInfo); } }, methods: { changeInfo() { this.info = {name: \\\"kobe\\\"}; }, changeInfoName() { this.info.name = \\\"kobe\\\"; }, changeInfoNbaName() { this.info.nba.name = \\\"james\\\"; } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"将 watch 中更改如下, 不管多深都会侦听到\",\"watch: { // 深度侦听/立即执行(一定会执行一次) info: { handler: function(newInfo, oldInfo) { console.log(\\\"newValue:\\\", newInfo, \\\"oldValue:\\\", oldInfo); }, deep: true, // 深度侦听 // immediate: true // 立即执行 } } \",\"immediate: true 立即执行, 这个时候无论后面数据是否有变化，侦听的函数都会有限执行一次；即当刷新页面时会立刻执行一次, 回调函数的初次执行就发生在 created 钩子之前。Vue 此时已经处理了 data、computed 和 methods 选项，所以这些属性在第一次调用时就是可用的。\",\"newValue: Proxy(Object) {name: 'why', age: 18, nba: {…}} oldValue: undefined \",\"注意: 引用对象 or watch 不能侦听到旧值, 可以利用 计算属性 缓存旧值, 或者自己深拷贝一份作为保存\"]},\"115\":{\"h\":\"其他方式\",\"t\":[\"https://cn.vuejs.org/api/options-state.html#watch\",\"export default { data() { return { a: 1, b: 2, c: { d: 4 }, e: 5, f: 6 } }, watch: { // 侦听根级属性 a(val, oldVal) { console.log(`new: ${val}, old: ${oldVal}`) }, // 字符串方法名称 b: 'someMethod', // 该回调将会在被侦听的对象的属性改变时调动，无论其被嵌套多深 c: { handler(val, oldVal) { console.log('c changed') }, deep: true }, // 侦听单个嵌套属性： 'c.d': function (val, oldVal) { // do something }, // 该回调将会在侦听开始之后立即调用 e: { handler(val, oldVal) { console.log('e changed') }, immediate: true }, // 你可以传入回调数组，它们将会被逐一调用 f: [ 'handle1', function handle2(val, oldVal) { console.log('handle2 triggered') }, { handler: function handle3(val, oldVal) { console.log('handle3 triggered') } /* ... */ } ] }, methods: { someMethod() { console.log('b changed') }, handle1() { console.log('handle 1 triggered') } }, created() { this.a = 3 // => new: 3, old: 1 } } \"]},\"116\":{\"h\":\"$watch 的API：\",\"t\":[\"https://cn.vuejs.org/api/component-instance.html#watch\",\"我们可以在created的生命周期（后续会讲到）中，使用 this.$watchs 来侦听；\",\"第一个参数是要侦听的源；\",\"第二个参数是侦听的回调函数callback；\",\"第三个参数是额外的其他选项，比如deep、immediate；\",\"created() { const unwatch = this.$watch(\\\"info\\\", function(newInfo, oldInfo) { console.log(newInfo, oldInfo); }, { deep: true, immediate: true }) // unwatch() } \"]},\"117\":{\"h\":\"阶段案例\",\"t\":[\"现在我们来做一个相对综合一点的练习：书籍购物车\",\"css\",\"table { border: 1px solid #e9e9e9; border-collapse: collapse; border-spacing: 0; } th, td { padding: 8px 16px; border: 1px solid #e9e9e9; text-align: left; } th { background-color: #f7f7f7; color: #5c6b77; font-weight: 600; } .counter { margin: 0 5px; } \",\"index\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\" /> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <title>Document</title> <link rel=\\\"stylesheet\\\" href=\\\"./style.css\\\" /> </head> <body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <template v-if=\\\"books.length > 0\\\"> <table> <thead> <th>序号</th> <th>书籍名称</th> <th>出版日期</th> <th>价格</th> <th>购买数量</th> <th>操作</th> </thead> <tbody> <tr v-for=\\\"(book, index) in books\\\"> <td>{{index + 1}}</td> <td>{{book.name}}</td> <td>{{book.date}}</td> <td>{{formatPrice(book.price)}}</td> <td> <button :disabled=\\\"book.count <= 1\\\" @click=\\\"decrement(index)\\\"> - </button> <span class=\\\"counter\\\">{{book.count}}</span> <button @click=\\\"increment(index)\\\">+</button> </td> <td> <button @click=\\\"removeBook(index)\\\">移除</button> </td> </tr> </tbody> </table> <h2>总价格: {{formatPrice(totalPrice)}}</h2> </template> <template v-else> <h2>购物车为空~</h2> </template> </template> <script src=\\\"../js/vue.js\\\"></script> <script src=\\\"./index.js\\\"></script> <script> Vue.createApp({ template: \\\"#my-app\\\", data() { return { books: [ { id: 1, name: \\\"《算法导论》\\\", date: \\\"2006-9\\\", price: 85.0, count: 1, }, { id: 2, name: \\\"《UNIX编程艺术》\\\", date: \\\"2006-2\\\", price: 59.0, count: 1, }, { id: 3, name: \\\"《编程珠玑》\\\", date: \\\"2008-10\\\", price: 39.0, count: 1, }, { id: 4, name: \\\"《代码大全》\\\", date: \\\"2006-3\\\", price: 128.0, count: 1, }, ], }; }, computed: { totalPrice() { let finalPrice = 0; for (let book of this.books) { finalPrice += book.count * book.price; } return finalPrice; }, // Vue3不支持过滤器了, 推荐两种做法: 使用计算属性/使用全局的方法 filterBooks() { return this.books.map((item) => { const newItem = Object.assign({}, item); newItem.price = \\\"¥\\\" + item.price; return newItem; }); }, }, methods: { increment(index) { // 通过索引值获取到对象 this.books[index].count++; }, decrement(index) { this.books[index].count--; }, removeBook(index) { this.books.splice(index, 1); }, formatPrice(price) { return \\\"¥\\\" + price; }, }, }).mount(\\\"#app\\\"); </script> </body> </html> \"]},\"118\":{\"h\":\"v-model\",\"t\":[\"v-model 可以在组件上使用以实现双向绑定。\",\"首先让我们回忆一下 v-model 在原生元素上的用法：\",\"template\",\"<input v-model=\\\"searchText\\\" /> \",\"在代码背后，模板编译器会对 v-model 进行更冗长的等价展开。因此上面的代码其实等价于下面这段：\",\"<input :value=\\\"searchText\\\" @input=\\\"searchText = $event.target.value\\\" /> \",\"而当使用在一个组件上时，v-model 会被展开为如下的形式：\",\"<CustomInput :model-value=\\\"searchText\\\" @update:model-value=\\\"newValue => searchText = newValue\\\" /> \",\"要让这个例子实际工作起来，<CustomInput> 组件内部需要做两件事：\",\"将内部原生 <input> 元素的 value attribute 绑定到 modelValue prop\",\"当原生的 input 事件触发时，触发一个携带了新值的 update:modelValue 自定义事件\"]},\"119\":{\"h\":\"内部实现\",\"t\":[\"图片\"]},\"120\":{\"h\":\"绑定其他表单\",\"t\":[\"具体可以看: https://cn.vuejs.org/guide/essentials/forms.html#modifiers\",\"在 HTML 中，<label> 标签的 for 属性被用来关联 <label> 标签和表单控件（如 <input>、<textarea>、<select> 等）。for 属性的值应该是你想要关联的表单控件的 id。 当 <label> 被点击时，与其关联的表单控件会获得焦点。\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- 1.绑定textarea --> <label for=\\\"intro\\\"> 自我介绍 <textarea name=\\\"intro\\\" id=\\\"intro\\\" cols=\\\"30\\\" rows=\\\"10\\\" v-model=\\\"intro\\\"></textarea> </label> <h2>intro: {{intro}}</h2> <!-- 2.checkbox --> <!-- 2.1.单选框 --> <label for=\\\"agree\\\"> <input id=\\\"agree\\\" type=\\\"checkbox\\\" v-model=\\\"isAgree\\\"> 同意协议 </label> <h2>isAgree: {{isAgree}}</h2> <!-- 2.2.多选框 --> <span>你的爱好: </span> <label for=\\\"basketball\\\"> <input id=\\\"basketball\\\" type=\\\"checkbox\\\" v-model=\\\"hobbies\\\" value=\\\"basketball\\\"> 篮球 </label> <label for=\\\"football\\\"> <input id=\\\"football\\\" type=\\\"checkbox\\\" v-model=\\\"hobbies\\\" value=\\\"football\\\"> 足球 </label> <label for=\\\"tennis\\\"> <input id=\\\"tennis\\\" type=\\\"checkbox\\\" v-model=\\\"hobbies\\\" value=\\\"tennis\\\"> 网球 </label> <h2>hobbies: {{hobbies}}</h2> <!-- 3.radio --> <span>你的爱好: </span> <label for=\\\"male\\\"> <input id=\\\"male\\\" type=\\\"radio\\\" v-model=\\\"gender\\\" value=\\\"male\\\">男 </label> <label for=\\\"female\\\"> <input id=\\\"female\\\" type=\\\"radio\\\" v-model=\\\"gender\\\" value=\\\"female\\\">女 </label> <h2>gender: {{gender}}</h2> <!-- 4.select --> <span>喜欢的水果: </span> <select v-model=\\\"fruit\\\" multiple size=\\\"2\\\"> <option value=\\\"apple\\\">苹果</option> <option value=\\\"orange\\\">橘子</option> <option value=\\\"banana\\\">香蕉</option> </select> <h2>fruit: {{fruit}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { intro: \\\"Hello World\\\", isAgree: false, hobbies: [\\\"basketball\\\"], gender: \\\"\\\", fruit: \\\"orange\\\" } }, methods: { commitForm() { axios } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"image-20231031200224648\",\"目前我们在前面的案例中大部分的值都是在template中固定好的：\",\"比如gender的两个输入框值male、female；\",\"比如hobbies的三个输入框值basketball、football、tennis；\",\"在真实开发中，我们的数据可能是来自服务器的，那么我们就可以先将值请求下来，绑定到data返回的对象中，再通过v-bind来进行值的绑定，这个过程就是值绑定。\"]},\"121\":{\"h\":\"修饰符\"},\"122\":{\"h\":\"内置修饰符\"},\"123\":{\"h\":\".lazy\",\"t\":[\"默认情况下，v-model 会在每次 input 事件后更新数据 (IME 拼字阶段的状态例外)。你可以添加 lazy 修饰符来改为在每次 change 事件后更新数据：\",\"<!-- 在 \\\"change\\\" 事件后同步更新而不是 \\\"input\\\" --> <input v-model.lazy=\\\"msg\\\" /> \"]},\"124\":{\"h\":\".number\",\"t\":[\"如果你想让用户输入自动转换为数字，你可以在 v-model 后添加 .number 修饰符来管理输入：\",\"另外，在我们进行逻辑判断时，如果是一个string类型，在可以转化的情况下会进行隐式转换的：\",\"下面的score在进行判断的过程中会进行隐式转化的；\",\"const score = \\\"100\\\";if (score > 90) { console.log(\\\"优秀\\\");} \",\"<input v-model.number=\\\"age\\\" /> \",\"如果该值无法被 parseFloat() 处理，那么将返回原始值。\",\"number 修饰符会在输入框有 type=\\\"number\\\" 时自动启用。\"]},\"125\":{\"h\":\".trim\",\"t\":[\"如果你想要默认自动去除用户输入内容中两端的空格，你可以在 v-model 后添加 .trim 修饰符：\",\"<input v-model.trim=\\\"msg\\\" /> \"]},\"126\":{\"h\":\"自定义的修饰符\",\"t\":[\"在某些场景下，你可能想要一个自定义组件的 v-model 支持自定义的修饰符。\",\"我们来创建一个自定义的修饰符 capitalize，它会自动将 v-model 绑定输入的字符串值第一个字母转为大写：\",\"<MyComponent v-model.capitalize=\\\"myText\\\" /> \",\"组件的 v-model 上所添加的修饰符，可以通过 modelModifiers prop 在组件内访问到。在下面的组件中，我们声明了 modelModifiers 这个 prop，它的默认值是一个空对象：\",\"<script> export default { props: { modelValue: String, modelModifiers: { default: () => ({}) } }, emits: ['update:modelValue'], created() { console.log(this.modelModifiers) // { capitalize: true } } } </script> <template> <input type=\\\"text\\\" :value=\\\"modelValue\\\" @input=\\\"$emit('update:modelValue', $event.target.value)\\\" /> </template> \",\"注意这里组件的 modelModifiers prop 包含了 capitalize 且其值为 true，因为它在模板中的 v-model 绑定 v-model.capitalize=\\\"myText\\\" 上被使用了。\",\"有了这个 prop，我们就可以检查 modelModifiers 对象的键，并编写一个处理函数来改变抛出的值。在下面的代码里，我们就是在每次 <input /> 元素触发 input 事件时将值的首字母大写：\",\"<script> export default { props: { modelValue: String, modelModifiers: { default: () => ({}) } }, emits: ['update:modelValue'], methods: { emitValue(e) { let value = e.target.value if (this.modelModifiers.capitalize) { value = value.charAt(0).toUpperCase() + value.slice(1) } this.$emit('update:modelValue', value) } } } </script> <template> <input type=\\\"text\\\" :value=\\\"modelValue\\\" @input=\\\"emitValue\\\" /> </template> \"]},\"127\":{\"h\":\"多个 v-model 绑定\",\"t\":[\"我们可以在单个组件实例上创建多个 v-model 双向绑定。\",\"组件上的每一个 v-model 都会同步不同的 prop，而无需额外的选项：\",\"<UserName v-model:first-name=\\\"first\\\" v-model:last-name=\\\"last\\\" /> \",\"<script> export default { props: { firstName: String, lastName: String }, emits: ['update:firstName', 'update:lastName'] } </script> <template> <input type=\\\"text\\\" :value=\\\"firstName\\\" @input=\\\"$emit('update:firstName', $event.target.value)\\\" /> <input type=\\\"text\\\" :value=\\\"lastName\\\" @input=\\\"$emit('update:lastName', $event.target.value)\\\" /> </template> \"]},\"128\":{\"h\":\"邂逅Vue3开发\"},\"129\":{\"h\":\"认识 Vue\"},\"130\":{\"h\":\"什么是 Vue\",\"t\":[\"Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。 \",\"全程是Vue.js或者Vuejs；\",\"什么是渐进式框架呢？表示我们可以在项目中一点点来引入和使用Vue，而不一定需要全部使用Vue来开发整个 项目；\"]},\"131\":{\"h\":\"Vue3带来的变化\",\"t\":[\"源码通过monorepo的形式来管理源代码： \",\"Mono：单个\",\"Repo：repository仓库\",\"主要是将许多项目的代码存储在同一个 repository 中；\",\"这样做的目的是多个包本身相互独立，可以有自己的功能逻辑、单元测试等，同时又在同一个仓库下方便管理；\",\"而且模块划分的更加清晰，可维护性、可扩展性更强；\",\"源码使用TypeScript来进行重写： \",\"在Vue2.x的时候，Vue使用 Flow 来进行类型检测；\",\"在Vue3.x的时候，Vue的源码全部使用 TypeScript 来进行重构，并且 Vue 本身对 TypeScript 支持也更好了；\"]},\"132\":{\"h\":\"性能方面\",\"t\":[\"使用Proxy进行数据劫持 \",\"在 Vue2.x 的时候，Vue2 是使用 Object.defineProperty 来劫持数据的 getter 和 setter 方法的；\",\"这种方式一致存在一个缺陷就是当给对象添加或者删除属性时，是无法劫持和监听的；\",\"所以在 Vue2.x 的时候，不得不提供一些特殊的API，比如 $set 或 $delete ，事实上都是一些 hack 方法，也增加了 开发者学习新的API的成本；\",\"而在 Vue3.x 开始，Vue 使用 Proxy 来实现数据的劫持\",\"删除了一些不必要的API： \",\"移除了实例上的 $on , $off 和 $once；\",\"移除了一些特性：如filter、内联模板等；\",\"包括编译方面的优化： \",\"生成Block Tree、Slot编译优化、diff算法优化；\"]},\"133\":{\"h\":\"新的API\",\"t\":[\"由Options API 到 Composition API： \",\"在 Vue2.x 的时候，我们会通过 Options API 来描述组件对象；\",\"Options API 包括data、props、methods、computed、生命周期等等这些选项；\",\"存在比较大的问题是多个逻辑可能是在不同的地方： \",\"比如created中会使用某一个method来修改data的数据，代码的内聚性非常差；\",\"Composition API可以将 相关联的代码 放到同一处 进行处理，而不需要在多个Options之间寻找；\",\"Hooks函数增加代码的复用性： \",\"在Vue2.x的时候，我们通常通过mixins在多个组件之间共享逻辑；但是有一个很大的缺陷就是 mixins也是由一大堆的Options组成的，并且多个mixins会存在命名冲突的问题；\",\"在Vue3.x中，我们可以通过Hook函数，来将一部分独立的逻辑抽取出去，并且它们还可以做到是响应式的；\"]},\"134\":{\"h\":\"如何使用 Vue\",\"t\":[\"方式一：在页面中通过CDN的方式来引入；\",\"方式二：下载Vue的JavaScript文件，并且自己手动引入；\",\"方式三：通过npm包管理工具安装使用它；\",\"方式四：直接通过Vue CLI创建项目，并且使用它；\"]},\"135\":{\"h\":\"CDN 引入\",\"t\":[\"<script src=\\\"https://unpkg.com/vue@next\\\"></script> \"]},\"136\":{\"h\":\"下载和引入\",\"t\":[\"下载Vue的源码，可以直接打开CDN的链接： \",\"打开链接，复制其中所有的代码；\",\"创建一个新的文件，比如vue.js，将代码复制到其中；\",\"<script src=\\\"../js/vue.js\\\"></script> \"]},\"137\":{\"h\":\"声明式编程和命令式编程\",\"t\":[\"原生开发和Vue开发的模式和特点,我们会发现是完全不同的,这里其实涉及到两种不同的编程范式命令式编程和声明式编程\",\"命令式编程关注的是“ how to do”,声明式编程关注的是\\\" what to do\\\",由框架(机器)完成\\\"how\\\"的过程\"]},\"138\":{\"h\":\"MVVM模型\",\"t\":[\"MVC和MVVM都是一种软件的体系结构 \",\"MVC是 Model-View-Controller的简称,是在前期被使用非常框架的架构模式,比如iS、前端\",\"MVVM是 Model-View- ViewMode的简称,是目前非常流行的架构模式\",\"通常情况下,我们也经常称vue是一个MVVM的框架 \",\"vue官方其实有说明,vue虽然并没有完全遵守MVVM的模型,但是整个设计是受到它的启发的\"]},\"139\":{\"h\":\"template属性\",\"t\":[\"在使用 createApp的时候,我们传入了一个对象,接下来我们详细解析一下之前传入的属性分别代表什么含义。 \",\"template属性:表示的是Vue需要帮助我们渲染的模板信息\",\"目前我们看到它里面有很多的HTML标签,这些标签会替换掉我们挂载到的元素(比如id为app的dⅳv)的innerHTML\",\"模板中有一些奇怪的语法,比如{},比如@ )click,这些都是模板特有的语法\",\"但是这个模板的写法有点过于别扭了,并且IDE很有可能没有任何提示,阻碍我们编程的效率\",\"vue提供了两种方式:\",\"方式一:使用 script标签,并且标记它的类型为 X-template;\",\"<body> <div id=\\\"app\\\">hhhh</div> <script type=\\\"x-template\\\" id=\\\"why\\\"> <div> <h2>{{message}}</h2> <h2>{{counter}}</h2> <button @click='increment'>+1</button> <button @click='decrement'>-1</button> </div> </script> <script src=\\\"../js//Vue.js\\\"></script> <script> Vue.createApp({ template: '#why', data: function(){ return{ message:\\\"Hello World\\\", counter: 100 } }, methods: { increment(){ this.counter++ }, decrement(){ this.counter-- } } }).mount(\\\"#app\\\") </script> </body> \",\"方式二:使用任意标签(通常使用 template标签,因为不会被浏览器渲染),设置id;v template元素是一种用于保存客户端内容的机制,该内容再加载页面时不会被呈现,但随后可以在运行时使用 JavaScript 实例化\",\" <body> <div id=\\\"app\\\"></div> <template id=\\\"why\\\"> <div> <h2>{{message}}</h2> <h2>{{counter}}</h2> <button @click='increment'>+1</button> <button @click='decrement'>-1</button> </div> </template> <script src=\\\"../js//Vue.js\\\"></script> <script> Vue.createApp({ template: '#why', data: function(){ return{ message:\\\"Hello World\\\", counter: 100 } }, methods: { increment(){ this.counter++ }, decrement(){ this.counter-- } } }).mount(\\\"#app\\\") </script> </body> \"]},\"140\":{\"h\":\"data属性\",\"t\":[\"data属性是传入一个函数,并且该函数需要返回一个对象\",\"在Vue2x的时候,也可以传入一个对象(虽然官方推荐是一个函数);\",\"在Vue3x的时候,必须传入一个函数,否则就会直接在浏览器中报错\",\"data中返回的对象会被vue的响应式系统劫持,之后对该对象的修改或者访问都会在劫持中被处理\",\"所以我们在 template中通过{ counter} 访问 counter,可以从对象中获取到数据\",\"所以我们修改 counter的值时, template中的{ counter)也会发生改变;\"]},\"141\":{\"h\":\"methods属性（重点）\",\"t\":[\"methods属性是一个对象,通常我们会在这个对象中定义很多的方法\",\"这些方法可以被绑定到 template模板中;\",\"在该方法中,我们可以使用this关键字来直接访问到data中返回的对象的属性;\",\"问题：官方文档有这个描述，即不能使用箭头函数\",\"为什么不能使用箭头函数(VUE3.0)？\",\"我们在methods中要使用data返回对象中的数据：\",\"那么这个this是必须有值的，并且应该可以通过this获取到data返回对象中的数据。\",\"那么我们这个this能不能是window呢？\",\"不可以是window，因为window中我们无法获取到data返回对象中的数据；\",\"但是如果我们使用箭头函数，那么这个this就会是window了；\",\"为什么是window呢？\",\"这里涉及到箭头函数使用this的查找规则，它会在自己的上层作用于中来查找this；\",\"最终刚好找到的是script作用于中的this，所以就是window；\",\"this到底是如何查找和绑定的呢？\",\"前端面试之彻底搞懂this指向\",\"不使用箭头函数的情况下，this到底指向什么\",\"事实上Vue的源码当中就是对methods中的所有函数进行了遍历，并且通过 bind 绑定了 this\",\"具体看 https://mp.weixin.qq.com/s/hYm0JgBI25grNG_2sCRlTA\",\"// window 隐式绑定 foo(); const obj = { bar: foo }; obj.bar(); /* Window{} {bar: f()} */ const foo2 = () => { console.log(this); } const obj2 = { bar: foo2 }; obj2.bar(); /* Window{} Window{} */ \"]},\"142\":{\"h\":\"如何阅读Vue源码\",\"t\":[\"需要的环境 npm，yarn\",\"操作步骤 \",\"安装yarn npm install yarn -g\",\"在项目中配置yarn yarn install\",\"在package.json中的dev后加上--sourcemap\",\"打包项目 yarn dev （在vue/dist文件夹下有两个文件，vue.global.js和vue.global.js.map）\",\"在vue/examplex新建自己的文件夹以及测试demo\",\"在demo中打下断点—debugger\",\"在浏览器中打开调试面板，选择其中的source面板，查看执行对应的源码\"]},\"143\":{\"h\":\"Js\"},\"144\":{\"h\":\"Web\"},\"145\":{\"h\":\"Cli\"},\"146\":{\"h\":\"Learn\"},\"147\":{\"h\":\"Vue\"},\"148\":{\"h\":\"Components\"},\"149\":{\"h\":\"Essential\"}},\"dirtCount\":0,\"index\":[[\"查看执行对应的源码\",{\"1\":{\"142\":1}}],[\"查找postcss在构建工具中的扩展\",{\"1\":{\"34\":1}}],[\"操作步骤\",{\"1\":{\"142\":1}}],[\"操作符来检查该元素上是否定义了和绑定的\",{\"1\":{\"74\":1}}],[\"隐式绑定\",{\"1\":{\"141\":1}}],[\"qq\",{\"1\":{\"141\":1}}],[\"question侦听的data中的属性的名称\",{\"1\":{\"113\":1}}],[\"question\",{\"1\":{\"113\":6}}],[\"queryanswer\",{\"1\":{\"113\":3}}],[\"query\",{\"1\":{\"30\":1}}],[\"最终刚好找到的是script作用于中的this\",{\"1\":{\"141\":1}}],[\"问题\",{\"1\":{\"141\":1}}],[\"重点\",{\"0\":{\"141\":1}}],[\"重新打包时\",{\"1\":{\"49\":1}}],[\"访问\",{\"1\":{\"140\":1}}],[\"否则就会直接在浏览器中报错\",{\"1\":{\"140\":1}}],[\"虽然官方推荐是一个函数\",{\"1\":{\"140\":1}}],[\"实例化\",{\"1\":{\"139\":1}}],[\"实现思路一\",{\"1\":{\"107\":1}}],[\"实现\",{\"0\":{\"109\":1},\"1\":{\"46\":3}}],[\"实现浅拷贝\",{\"1\":{\"16\":1}}],[\"实现深拷贝\",{\"1\":{\"16\":1}}],[\"阻碍我们编程的效率\",{\"1\":{\"139\":1}}],[\"完成\",{\"1\":{\"137\":1}}],[\"完整写法\",{\"1\":{\"85\":1}}],[\"完整代码\",{\"1\":{\"69\":1}}],[\"机器\",{\"1\":{\"137\":1}}],[\"由框架\",{\"1\":{\"137\":1}}],[\"由options\",{\"1\":{\"133\":1}}],[\"原生开发和vue开发的模式和特点\",{\"1\":{\"137\":1}}],[\"声明式编程关注的是\",{\"1\":{\"137\":1}}],[\"声明式编程和命令式编程\",{\"0\":{\"137\":1}}],[\"声明的属性\",{\"1\":{\"112\":1}}],[\"放到同一处\",{\"1\":{\"133\":1}}],[\"放到methods的options中\",{\"1\":{\"105\":1}}],[\"相关联的代码\",{\"1\":{\"133\":1}}],[\"相比之下\",{\"1\":{\"61\":1}}],[\"存在比较大的问题是多个逻辑可能是在不同的地方\",{\"1\":{\"133\":1}}],[\"存在重复的代码\",{\"1\":{\"107\":1}}],[\"生命周期等等这些选项\",{\"1\":{\"133\":1}}],[\"生成block\",{\"1\":{\"132\":1}}],[\"生成补丁\",{\"1\":{\"101\":1}}],[\"生成的一个128位的hash值\",{\"1\":{\"43\":1}}],[\"生成一个\",{\"1\":{\"23\":1}}],[\"到\",{\"1\":{\"133\":1}}],[\"到表达式\",{\"1\":{\"74\":1}}],[\"新的api\",{\"0\":{\"133\":1}}],[\"新值\",{\"1\":{\"113\":1}}],[\"移除了一些特性\",{\"1\":{\"132\":1}}],[\"移除了实例上的\",{\"1\":{\"132\":1}}],[\"删除了一些不必要的api\",{\"1\":{\"132\":1}}],[\"开始\",{\"1\":{\"132\":1}}],[\"开发者学习新的api的成本\",{\"1\":{\"132\":1}}],[\"开发中我们在data返回的对象中定义了数据\",{\"1\":{\"112\":1}}],[\"开发中如何进行选择呢\",{\"1\":{\"92\":1}}],[\"开发阶段\",{\"1\":{\"54\":1}}],[\"开发模式或生产模式\",{\"1\":{\"28\":1}}],[\"开发依赖\",{\"1\":{\"24\":1}}],[\"性能方面\",{\"0\":{\"132\":1}}],[\"本身对\",{\"1\":{\"131\":1}}],[\"本质的区别\",{\"1\":{\"92\":1}}],[\"本质上\",{\"1\":{\"19\":1}}],[\"源码使用typescript来进行重写\",{\"1\":{\"131\":1}}],[\"源码通过monorepo的形式来管理源代码\",{\"1\":{\"131\":1}}],[\"读音\",{\"1\":{\"130\":1}}],[\"读取时\",{\"1\":{\"51\":1}}],[\"邂逅vue3开发\",{\"0\":{\"128\":1}}],[\"双向绑定\",{\"1\":{\"127\":1}}],[\"双大括号\",{\"1\":{\"67\":1}}],[\"双大括号语法\",{\"0\":{\"67\":1}}],[\"且其值为\",{\"1\":{\"126\":1}}],[\"优秀\",{\"1\":{\"124\":1}}],[\"拼字阶段的状态例外\",{\"1\":{\"123\":1}}],[\"再通过v\",{\"1\":{\"120\":1}}],[\"再将其放在整体当中\",{\"1\":{\"56\":1}}],[\"足球\",{\"1\":{\"120\":1}}],[\"单元测试等\",{\"1\":{\"131\":1}}],[\"单个\",{\"1\":{\"131\":1}}],[\"单选框\",{\"1\":{\"120\":1}}],[\"单文件组件\",{\"1\":{\"62\":1}}],[\"被点击时\",{\"1\":{\"120\":1}}],[\"被侦听的属性\",{\"1\":{\"114\":1}}],[\"标签和表单控件\",{\"1\":{\"120\":1}}],[\"标签的\",{\"1\":{\"120\":1}}],[\"具体看\",{\"1\":{\"141\":1}}],[\"具体可以看\",{\"1\":{\"120\":1}}],[\"具体的步骤如下\",{\"1\":{\"65\":1}}],[\"触发一个携带了新值的\",{\"1\":{\"118\":1}}],[\"触发更新\",{\"1\":{\"101\":1}}],[\"要让这个例子实际工作起来\",{\"1\":{\"118\":1}}],[\"要处理jpg\",{\"1\":{\"39\":1}}],[\"¥\",{\"1\":{\"117\":2}}],[\"推荐两种做法\",{\"1\":{\"117\":1}}],[\"编程珠玑\",{\"1\":{\"117\":1}}],[\"书籍购物车\",{\"1\":{\"117\":1}}],[\"现在我们来做一个相对综合一点的练习\",{\"1\":{\"117\":1}}],[\"现在可以说整个的大前端开发都是组件化的天下\",{\"1\":{\"56\":1}}],[\"阶段案例\",{\"0\":{\"117\":1}}],[\"`\",{\"1\":{\"115\":1}}],[\"`new\",{\"1\":{\"115\":1}}],[\"`你的问题$\",{\"1\":{\"113\":2}}],[\"缓存旧值\",{\"1\":{\"114\":1}}],[\"此时已经处理了\",{\"1\":{\"114\":1}}],[\"此时我们渲染div\",{\"1\":{\"90\":1}}],[\"钩子之前\",{\"1\":{\"114\":1}}],[\"回调函数的初次执行就发生在\",{\"1\":{\"114\":1}}],[\"一定会执行一次\",{\"1\":{\"114\":1}}],[\"一个参数\",{\"1\":{\"94\":1}}],[\"一个对象\",{\"1\":{\"77\":1}}],[\"立即执行\",{\"1\":{\"114\":3}}],[\"理由如上\",{\"1\":{\"114\":1}}],[\"页面会改变\",{\"1\":{\"114\":2}}],[\"页面没有效果\",{\"1\":{\"31\":1}}],[\"仅在被赋新值时\",{\"1\":{\"114\":1}}],[\"仅当事件是从特定键触发时才触发回调\",{\"1\":{\"84\":1,\"87\":1}}],[\"旧值\",{\"1\":{\"113\":1}}],[\"网络请求\",{\"1\":{\"113\":1}}],[\"网球\",{\"1\":{\"12\":3,\"13\":1,\"14\":1,\"120\":1}}],[\"去进行一些逻辑的处理\",{\"1\":{\"113\":1}}],[\"侦听单个嵌套属性\",{\"1\":{\"115\":1}}],[\"侦听根级属性\",{\"1\":{\"115\":1}}],[\"侦听的函数都会有限执行一次\",{\"1\":{\"114\":1}}],[\"侦听question的变化时\",{\"1\":{\"113\":1}}],[\"侦听器\",{\"0\":{\"112\":1}}],[\"简单案例\",{\"0\":{\"113\":1}}],[\"简化部署\",{\"1\":{\"24\":1}}],[\"变化\",{\"1\":{\"110\":1}}],[\"变量\",{\"1\":{\"51\":1}}],[\"打开链接\",{\"1\":{\"136\":1}}],[\"打印结果如下\",{\"1\":{\"110\":1}}],[\"打包项目\",{\"1\":{\"142\":1}}],[\"打包一个个模块\",{\"1\":{\"28\":1}}],[\"打包html资源文件\",{\"1\":{\"20\":1}}],[\"打包bundler\",{\"1\":{\"19\":1}}],[\"打包优化等的\",{\"1\":{\"18\":1}}],[\"接下来我们详细解析一下之前传入的属性分别代表什么含义\",{\"1\":{\"139\":1}}],[\"接下来我们来看一下同一个计算多次使用\",{\"1\":{\"110\":1}}],[\"接下来配置copywebpackplugin即可\",{\"1\":{\"53\":1}}],[\"还是效果上计算属性都是更好的选择\",{\"1\":{\"109\":1}}],[\"还是跨平台方案\",{\"1\":{\"56\":1}}],[\"及格\",{\"1\":{\"107\":1,\"108\":1,\"109\":1,\"110\":2}}],[\"没有缓存\",{\"1\":{\"107\":1,\"108\":1}}],[\"没有key的操作过程\",{\"1\":{\"101\":1}}],[\"没有key的时候\",{\"1\":{\"97\":1}}],[\"没有key\",{\"1\":{\"101\":1}}],[\"很多运算也需要多次执行\",{\"1\":{\"107\":1}}],[\"很容易出现命名冲突的问题\",{\"1\":{\"62\":1}}],[\"多个\",{\"0\":{\"127\":1}}],[\"多选框\",{\"1\":{\"120\":1}}],[\"多次使用方法的时候\",{\"1\":{\"108\":1}}],[\"多次使用的时候\",{\"1\":{\"107\":1}}],[\"多平台的渲染\",{\"1\":{\"98\":1}}],[\"缺点三\",{\"1\":{\"107\":1}}],[\"缺点二\",{\"1\":{\"107\":1,\"108\":1}}],[\"缺点一\",{\"1\":{\"107\":1,\"108\":1}}],[\"思路三\",{\"1\":{\"106\":1}}],[\"思路二\",{\"1\":{\"106\":1}}],[\"思路一\",{\"1\":{\"106\":1}}],[\"某些情况下我们需要对这段文字进行反转\",{\"1\":{\"106\":1}}],[\"某些情况下我们是直接显示这段文字\",{\"1\":{\"106\":1}}],[\"记录一段文字\",{\"1\":{\"106\":1}}],[\"记得用引号括起来\",{\"1\":{\"79\":2}}],[\"希望它们拼接之后在界面上显示\",{\"1\":{\"106\":1}}],[\"类似于\",{\"1\":{\"130\":1}}],[\"类似于v\",{\"1\":{\"95\":1}}],[\"类型\",{\"1\":{\"106\":1,\"112\":1}}],[\"上被使用了\",{\"1\":{\"126\":1}}],[\"上所添加的修饰符\",{\"1\":{\"126\":1}}],[\"上下文自动地绑定为组件实例\",{\"1\":{\"105\":1}}],[\"上面的方法会直接修改原来的数组\",{\"1\":{\"96\":1}}],[\"上面的例子中使用的是\",{\"1\":{\"61\":1}}],[\"上面的代码中\",{\"1\":{\"51\":1}}],[\"官方文档有这个描述\",{\"1\":{\"141\":1}}],[\"官方并没有给出直接的概念解释\",{\"1\":{\"105\":1}}],[\"官方的解释对于初学者来说并不好理解\",{\"1\":{\"97\":1}}],[\"另外\",{\"1\":{\"124\":1}}],[\"另外一种方式就是使用计算属性computed\",{\"1\":{\"105\":1}}],[\"另外我们发现代码中依然存在es6的语法\",{\"1\":{\"23\":1}}],[\"保持相同的key可以让diff算法更加的高效\",{\"1\":{\"102\":1}}],[\"→\",{\"1\":{\"101\":2}}],[\"算法导论\",{\"1\":{\"117\":1}}],[\"算法一定存在这样一个过程\",{\"1\":{\"101\":1}}],[\"算法是指生成更新补丁的方式\",{\"1\":{\"101\":1}}],[\"更新真实\",{\"1\":{\"101\":1}}],[\"更加友好\",{\"1\":{\"61\":1}}],[\"树变化后\",{\"1\":{\"101\":1}}],[\"表示的是vue需要帮助我们渲染的模板信息\",{\"1\":{\"139\":1}}],[\"表示我们可以在项目中一点点来引入和使用vue\",{\"1\":{\"130\":1}}],[\"表\",{\"1\":{\"100\":1}}],[\"表达式\",{\"1\":{\"67\":1}}],[\"插入\",{\"0\":{\"100\":1}}],[\"插件autoprefixer\",{\"0\":{\"36\":1}}],[\"插件\",{\"1\":{\"28\":1,\"38\":2}}],[\"真实\",{\"1\":{\"99\":1}}],[\"真实开发中我们必然不会直接使用命令行工具来对css进行处理\",{\"1\":{\"37\":1}}],[\"与其关联的表单控件会获得焦点\",{\"1\":{\"120\":1}}],[\"与\",{\"1\":{\"99\":1}}],[\"虚拟\",{\"0\":{\"99\":1},\"1\":{\"99\":1}}],[\"主要是将许多项目的代码存储在同一个\",{\"1\":{\"131\":1}}],[\"主要应用于虚拟\",{\"1\":{\"101\":1}}],[\"主要好处\",{\"1\":{\"98\":1}}],[\"主要就是两个步骤\",{\"1\":{\"34\":1}}],[\"跨平台\",{\"1\":{\"98\":1}}],[\"好处\",{\"1\":{\"98\":1}}],[\"什么是渐进式框架呢\",{\"1\":{\"130\":1}}],[\"什么是\",{\"0\":{\"130\":1}}],[\"什么是侦听器\",{\"1\":{\"112\":1}}],[\"什么是计算属性呢\",{\"1\":{\"105\":1}}],[\"什么是vnode\",{\"1\":{\"97\":1}}],[\"什么是新旧nodes\",{\"1\":{\"97\":1}}],[\"什么是postcss呢\",{\"1\":{\"34\":1}}],[\"销毁key不存在的元素\",{\"1\":{\"97\":1}}],[\"复用相同类型元素的算法\",{\"1\":{\"97\":1}}],[\"复制其中所有的代码\",{\"1\":{\"136\":1}}],[\"复制自己需要生成代码片段的代码\",{\"1\":{\"65\":1}}],[\"复制到的位置\",{\"1\":{\"53\":1}}],[\"复制的规则在patterns中设置\",{\"1\":{\"53\":1}}],[\"过滤掉长度小于等于2的电影\",{\"1\":{\"96\":1}}],[\"下载vue的源码\",{\"1\":{\"136\":1}}],[\"下载vue的javascript文件\",{\"1\":{\"134\":1}}],[\"下载和引入\",{\"0\":{\"136\":1}}],[\"下面的score在进行判断的过程中会进行隐式转化的\",{\"1\":{\"124\":1}}],[\"下面的代码38kb的图片会进行base64编码\",{\"1\":{\"41\":1}}],[\"下文中的代码的意思是\",{\"1\":{\"96\":1}}],[\"替换数组的方法\",{\"1\":{\"96\":1}}],[\"元素触发\",{\"1\":{\"126\":1}}],[\"元素的\",{\"1\":{\"118\":1}}],[\"元素\",{\"1\":{\"98\":1}}],[\"元素来循环渲染一段包含多个元素的内容\",{\"1\":{\"95\":1}}],[\"元素或者组件以及其所有的子元素将视为静态内容并且跳过\",{\"1\":{\"69\":1}}],[\"少年派\",{\"1\":{\"94\":1,\"96\":1}}],[\"教父\",{\"1\":{\"94\":1,\"96\":1}}],[\"大话西游\",{\"1\":{\"94\":1,\"96\":1}}],[\"大小等等\",{\"1\":{\"79\":1}}],[\"盗梦空间\",{\"1\":{\"94\":1,\"96\":1}}],[\"星际穿越\",{\"1\":{\"94\":1,\"96\":1}}],[\"遍历数组\",{\"1\":{\"94\":1}}],[\"遍历对象\",{\"0\":{\"13\":1},\"1\":{\"94\":1}}],[\"三个参数\",{\"1\":{\"94\":1}}],[\"三元运算符来决定结果\",{\"1\":{\"105\":1}}],[\"三元运算符\",{\"1\":{\"67\":2}}],[\"二个参数\",{\"1\":{\"94\":1}}],[\"索引项index是在后面的\",{\"1\":{\"94\":1}}],[\"切换\",{\"1\":{\"92\":1}}],[\"结合使用\",{\"0\":{\"90\":1}}],[\"结果是一致的\",{\"1\":{\"43\":1}}],[\"9\",{\"1\":{\"117\":1}}],[\"95\",{\"1\":{\"89\":1}}],[\"90\",{\"1\":{\"89\":1,\"110\":1,\"124\":1}}],[\"才会触发回调函数\",{\"1\":{\"114\":1}}],[\"才会真正渲染条件块中的内容\",{\"1\":{\"90\":1}}],[\"才会被渲染出来\",{\"1\":{\"89\":1}}],[\"才是真正利用webpack进行编译和打包的过程\",{\"1\":{\"22\":1}}],[\"条件渲染\",{\"0\":{\"88\":1}}],[\"继续执行父元素的事件处理函数\",{\"1\":{\"87\":1}}],[\"继续执行webpack命令\",{\"1\":{\"26\":1}}],[\"传入事件\",{\"1\":{\"86\":1}}],[\"传递字符串\",{\"1\":{\"30\":1}}],[\"情况二\",{\"1\":{\"86\":1}}],[\"情况一\",{\"1\":{\"86\":1}}],[\"需要的环境\",{\"1\":{\"142\":1}}],[\"需要更新的是我们\",{\"1\":{\"100\":1}}],[\"需要注意参数问题\",{\"1\":{\"86\":1}}],[\"需要包含在你的构建中\",{\"1\":{\"53\":1}}],[\"鼠标移动\",{\"1\":{\"85\":1}}],[\"按钮1发生了点击\",{\"1\":{\"85\":1}}],[\"按钮的点击\",{\"1\":{\"60\":1,\"62\":1}}],[\"监听的事件=\",{\"1\":{\"85\":1}}],[\"事件时将值的首字母大写\",{\"1\":{\"126\":1}}],[\"事件后同步更新而不是\",{\"1\":{\"123\":1}}],[\"事件后更新数据\",{\"1\":{\"123\":2}}],[\"事件触发时\",{\"1\":{\"118\":1}}],[\"事件冒泡到父元素\",{\"1\":{\"87\":1}}],[\"事件可以参考\",{\"1\":{\"84\":1}}],[\"事实上都是一些\",{\"1\":{\"132\":1}}],[\"事实上还可以有一个components选项\",{\"1\":{\"61\":1}}],[\"事实上\",{\"1\":{\"23\":1,\"38\":1,\"98\":1}}],[\"事实上vue的源码当中就是对methods中的所有函数进行了遍历\",{\"1\":{\"141\":1}}],[\"事实上vue\",{\"1\":{\"18\":1}}],[\"事实上随着前端的快速发展\",{\"1\":{\"18\":1}}],[\"调用了getresult方法\",{\"1\":{\"110\":4}}],[\"调用了计算属性result的getter\",{\"1\":{\"110\":2}}],[\"调用\",{\"1\":{\"84\":2,\"87\":2}}],[\"调用一个方法\",{\"1\":{\"80\":1}}],[\"预期\",{\"1\":{\"84\":1}}],[\"键盘事件等等\",{\"1\":{\"84\":1}}],[\"拖拽\",{\"1\":{\"84\":1}}],[\"案例\",{\"1\":{\"83\":1}}],[\"非常简单\",{\"1\":{\"83\":1}}],[\"应用补丁\",{\"1\":{\"101\":1}}],[\"应用程序的\",{\"1\":{\"19\":1}}],[\"应该怎么做呢\",{\"1\":{\"83\":1}}],[\"前端面试之彻底搞懂this指向\",{\"1\":{\"141\":1}}],[\"前端\",{\"1\":{\"138\":1}}],[\"前端我们无论绑定src\",{\"1\":{\"82\":1}}],[\"前面我们绑定了元素的内容和属性\",{\"1\":{\"84\":1}}],[\"前者是存储在栈内存中\",{\"1\":{\"1\":1}}],[\"700\",{\"1\":{\"80\":2}}],[\"+=\",{\"1\":{\"117\":1}}],[\"+\",{\"1\":{\"80\":1,\"107\":1,\"108\":2,\"109\":2,\"110\":4,\"111\":4,\"117\":3,\"126\":1}}],[\"列表渲染\",{\"0\":{\"93\":1}}],[\"列表\",{\"1\":{\"78\":1}}],[\"呵呵呵呵\",{\"1\":{\"77\":1}}],[\"小知识\",{\"1\":{\"74\":1}}],[\"小的功能块\",{\"1\":{\"56\":1}}],[\"动态绑定属性\",{\"0\":{\"82\":1},\"1\":{\"82\":1}}],[\"动态地绑定一个或多个\",{\"1\":{\"74\":1}}],[\"动态的绑定一个或多个\",{\"1\":{\"74\":1}}],[\"绑定了\",{\"1\":{\"141\":1}}],[\"绑定输入的字符串值第一个字母转为大写\",{\"1\":{\"126\":1}}],[\"绑定textarea\",{\"1\":{\"120\":1}}],[\"绑定其他表单\",{\"0\":{\"120\":1}}],[\"绑定到data返回的对象中\",{\"1\":{\"120\":1}}],[\"绑定到\",{\"1\":{\"118\":1}}],[\"绑定到元素上的所有属性\",{\"1\":{\"83\":1}}],[\"绑定事件监听\",{\"1\":{\"84\":1}}],[\"绑定一个对象\",{\"1\":{\"85\":1}}],[\"绑定一个表达式\",{\"1\":{\"85\":1}}],[\"绑定一个\",{\"1\":{\"83\":1}}],[\"绑定一个data中的属性值\",{\"1\":{\"80\":1}}],[\"绑定class\",{\"1\":{\"78\":1}}],[\"绑定class有两种方式\",{\"1\":{\"76\":1,\"79\":1}}],[\"绑定\",{\"0\":{\"76\":1,\"79\":1,\"127\":1},\"1\":{\"126\":1}}],[\"绑定值对的对象\",{\"1\":{\"74\":1}}],[\"绑定时\",{\"1\":{\"74\":1}}],[\"名短横线分隔\",{\"1\":{\"79\":1}}],[\"名可以用驼峰式\",{\"1\":{\"79\":1}}],[\"名称\",{\"1\":{\"74\":1}}],[\"名就是注册的组件名\",{\"1\":{\"61\":1}}],[\"所有\",{\"1\":{\"105\":1}}],[\"所有后续所有的内容都要一次进行改动\",{\"1\":{\"101\":1}}],[\"所绑定的\",{\"1\":{\"74\":1}}],[\"所以就是window\",{\"1\":{\"141\":1}}],[\"所以就会break跳出循环\",{\"1\":{\"101\":1}}],[\"所以这些属性在第一次调用时就是可用的\",{\"1\":{\"114\":1}}],[\"所以目前我们先理解html元素创建出来的vnode\",{\"1\":{\"98\":1}}],[\"所以它们也将会触发视图更新\",{\"1\":{\"96\":1}}],[\"所以它是一个打包工具\",{\"1\":{\"19\":1}}],[\"所以必须将其添加到一个元素上\",{\"1\":{\"90\":1}}],[\"所以对应的代码都是编写的类似于js的一种语法\",{\"1\":{\"66\":1}}],[\"所以在\",{\"1\":{\"132\":1}}],[\"所以在真实开发中\",{\"1\":{\"62\":1}}],[\"所以在开发中我们通常使用组件的时候采用的都是局部注册\",{\"1\":{\"61\":1}}],[\"所以在安装webpack时\",{\"1\":{\"22\":1}}],[\"所以会出现没有定义的错误\",{\"1\":{\"52\":1}}],[\"所以相当于已经内置了\",{\"1\":{\"38\":1}}],[\"所以要安装autoprefixer\",{\"1\":{\"36\":1}}],[\"所以\",{\"1\":{\"23\":1,\"56\":2,\"101\":1}}],[\"所以我们修改\",{\"1\":{\"140\":1}}],[\"所以我们在\",{\"1\":{\"140\":1}}],[\"所以我们会将计算属性直接写成一个函数\",{\"1\":{\"111\":1}}],[\"所以我们可以发现\",{\"1\":{\"102\":1}}],[\"所以我们可以在package\",{\"1\":{\"27\":1}}],[\"所以我们一般会借助于一个在线工具来完成\",{\"1\":{\"65\":1}}],[\"所以我们也需要对index\",{\"1\":{\"50\":1}}],[\"所以我们需要配置它的plugin\",{\"1\":{\"37\":1}}],[\"所以我们需要将style\",{\"1\":{\"31\":1}}],[\"所以我们需要先安装node\",{\"1\":{\"21\":1}}],[\"所以我们电脑上必须有node环境\",{\"1\":{\"21\":1}}],[\"特别是在和自定义元素打交道时\",{\"1\":{\"74\":1}}],[\"特性\",{\"1\":{\"38\":1}}],[\"赋值\",{\"1\":{\"74\":1}}],[\"则\",{\"1\":{\"74\":1}}],[\"则还会在堆内存中开辟另一块空间存储引用类型的真实数据\",{\"1\":{\"3\":1}}],[\"同意协议\",{\"1\":{\"120\":1}}],[\"同名的\",{\"1\":{\"74\":1}}],[\"同时又在同一个仓库下方便管理\",{\"1\":{\"131\":1}}],[\"同时需要\",{\"1\":{\"86\":1}}],[\"同时为了防止重复\",{\"1\":{\"43\":1}}],[\"同时它会根据您的目标环境自动添加必要的回退\",{\"1\":{\"38\":1}}],[\"同时也让你对各个loader有一个全局的概览\",{\"1\":{\"30\":1}}],[\"支持也更好了\",{\"1\":{\"131\":1}}],[\"支持自定义的修饰符\",{\"1\":{\"126\":1}}],[\"支持额外的值类型如数组或对象\",{\"1\":{\"74\":1}}],[\"支持将模板中使用\",{\"1\":{\"58\":1}}],[\"强制绑定为\",{\"1\":{\"74\":2}}],[\"参数传递\",{\"0\":{\"86\":1}}],[\"参数\",{\"1\":{\"74\":1,\"84\":1}}],[\"|\",{\"1\":{\"74\":1,\"84\":2,\"106\":1,\"112\":3}}],[\"带参数\",{\"1\":{\"74\":1}}],[\"期望\",{\"1\":{\"74\":1}}],[\"修饰符会在输入框有\",{\"1\":{\"124\":1}}],[\"修饰符来管理输入\",{\"1\":{\"124\":1}}],[\"修饰符来改为在每次\",{\"1\":{\"123\":1}}],[\"修饰符来强制绑定方式\",{\"1\":{\"74\":1}}],[\"修饰符相当于对事件进行了一些特殊的处理\",{\"1\":{\"87\":1}}],[\"修饰符\",{\"0\":{\"121\":1},\"1\":{\"74\":2,\"84\":1,\"125\":1}}],[\"修改一个对象的属性\",{\"1\":{\"11\":1}}],[\"修改其中一个变量的值\",{\"1\":{\"2\":1}}],[\"缩写\",{\"1\":{\"74\":1,\"84\":1}}],[\"规则\",{\"1\":{\"73\":1}}],[\"配合像\",{\"1\":{\"73\":1}}],[\"配置选项\",{\"0\":{\"114\":1}}],[\"配置处理图片的rule\",{\"1\":{\"39\":1}}],[\"配置分离\",{\"1\":{\"37\":1}}],[\"配置方式表示的意思是在我们的webpack\",{\"1\":{\"30\":1}}],[\"配置方式\",{\"1\":{\"30\":2}}],[\"配置插件来执行额外的任务\",{\"1\":{\"28\":1}}],[\"配置加载器来处理不同类型的文件\",{\"1\":{\"28\":1}}],[\"配置\",{\"1\":{\"28\":1}}],[\"配置文件\",{\"0\":{\"26\":1}}],[\"未编译模板闪现\",{\"1\":{\"73\":1}}],[\"详见下方的指南链接\",{\"1\":{\"74\":1}}],[\"详细信息\",{\"1\":{\"73\":1}}],[\"详情参见\",{\"1\":{\"58\":1}}],[\"无论其被嵌套多深\",{\"1\":{\"115\":1}}],[\"无论是组件还是元素\",{\"1\":{\"98\":1}}],[\"无论从三大框架\",{\"1\":{\"56\":1}}],[\"无需传入\",{\"1\":{\"73\":1}}],[\"加快编译的速度\",{\"1\":{\"72\":1}}],[\"加载这些资源我们需要使用一些loader\",{\"1\":{\"46\":1}}],[\"加载器\",{\"1\":{\"28\":1}}],[\"加载器和插件等\",{\"1\":{\"28\":1}}],[\"显示原始的mustache标签\",{\"1\":{\"72\":1}}],[\"显示结果是一样的\",{\"1\":{\"40\":1}}],[\"该内容再加载页面时不会被呈现\",{\"1\":{\"139\":1}}],[\"该回调将会在侦听开始之后立即调用\",{\"1\":{\"115\":1}}],[\"该回调将会在被侦听的对象的属性改变时调动\",{\"1\":{\"115\":1}}],[\"该回调函数接受被侦听源的新值和旧值\",{\"1\":{\"112\":1}}],[\"该指令只在没有构建步骤的环境下需要使用\",{\"1\":{\"73\":1}}],[\"该指令可以用于性能优化\",{\"1\":{\"69\":1}}],[\"该components选项对应的是一个对象\",{\"1\":{\"61\":1}}],[\"错误用法\",{\"1\":{\"67\":1}}],[\"哈哈哈\",{\"1\":{\"67\":2}}],[\"哈哈哈哈哈\",{\"1\":{\"60\":1,\"62\":1}}],[\"哈哈哈哈\",{\"1\":{\"51\":1}}],[\"计算属性在大多数情况下\",{\"1\":{\"111\":1}}],[\"计算属性的\",{\"0\":{\"111\":1}}],[\"计算属性的用法\",{\"1\":{\"106\":1}}],[\"计算属性依然会重新进行计算\",{\"1\":{\"110\":1}}],[\"计算属性是不需要重新计算的\",{\"1\":{\"110\":1}}],[\"计算属性是有缓存的\",{\"1\":{\"110\":1}}],[\"计算属性会随着依赖的数据\",{\"1\":{\"110\":1}}],[\"计算属性中的运算只会执行一次\",{\"1\":{\"110\":1}}],[\"计算属性和methods的差异\",{\"1\":{\"110\":1}}],[\"计算属性看起来像是一个函数\",{\"1\":{\"109\":1}}],[\"计算属性将被混入到组件实例中\",{\"1\":{\"105\":1}}],[\"计算属性\",{\"0\":{\"110\":1},\"1\":{\"67\":1,\"114\":1}}],[\"函数\",{\"1\":{\"67\":1}}],[\"函数传入了一个对象app\",{\"1\":{\"57\":1}}],[\"语法糖\",{\"1\":{\"85\":1}}],[\"语法\",{\"0\":{\"67\":1},\"1\":{\"67\":1}}],[\"语文\",{\"1\":{\"7\":1}}],[\"口在底层的实现中\",{\"1\":{\"66\":1}}],[\"起\",{\"1\":{\"66\":1}}],[\"允许开发者以声明式的方式将\",{\"1\":{\"66\":1}}],[\"允许一个表达式在期望多个参数\",{\"1\":{\"7\":1}}],[\"了解\",{\"1\":{\"66\":1}}],[\"了注册\",{\"1\":{\"61\":1}}],[\"项目\",{\"1\":{\"130\":1}}],[\"项目会默认帮助我们配置好所有的配置选项\",{\"1\":{\"63\":1}}],[\"项目起始文件\",{\"1\":{\"57\":1}}],[\"比较\",{\"1\":{\"101\":2}}],[\"比较常见的是两种方式\",{\"1\":{\"63\":1}}],[\"比如id为app的dⅳv\",{\"1\":{\"139\":1}}],[\"比如is\",{\"1\":{\"138\":1}}],[\"比如vue\",{\"1\":{\"136\":1}}],[\"比如created中会使用某一个method来修改data的数据\",{\"1\":{\"133\":1}}],[\"比如hobbies的三个输入框值basketball\",{\"1\":{\"120\":1}}],[\"比如hello\",{\"1\":{\"106\":1}}],[\"比如gender的两个输入框值male\",{\"1\":{\"120\":1}}],[\"比如deep\",{\"1\":{\"116\":1}}],[\"比如下面的问题\",{\"1\":{\"97\":1}}],[\"比如下面的模板希望抽离到一个单独的组件\",{\"1\":{\"59\":1}}],[\"比如点击\",{\"1\":{\"84\":1}}],[\"比如某段文字的颜色\",{\"1\":{\"79\":1}}],[\"比如typescript\",{\"1\":{\"62\":1}}],[\"比如之前的app组件中\",{\"1\":{\"61\":1}}],[\"比如我们需要对多个data数据进行运算\",{\"1\":{\"105\":1}}],[\"比如我们注册了三个全局组件\",{\"1\":{\"61\":1}}],[\"比如我们将webpack\",{\"1\":{\"27\":1}}],[\"比如在开发vue或者react项目时\",{\"1\":{\"51\":1}}],[\"比如添加一个noscript标签\",{\"1\":{\"51\":1}}],[\"比如打包优化\",{\"1\":{\"48\":1}}],[\"比如加载图片\",{\"1\":{\"47\":1}}],[\"比如raw\",{\"1\":{\"46\":1}}],[\"比如保留原来的文件名\",{\"1\":{\"43\":1}}],[\"比如webpack中的postcss\",{\"1\":{\"34\":1}}],[\"比如自动添加浏览器前缀\",{\"1\":{\"34\":1}}],[\"比如箭头函数\",{\"1\":{\"23\":1}}],[\"比如开发完成后我们还需要将代码进行压缩\",{\"1\":{\"18\":1}}],[\"比如开发过程中\",{\"1\":{\"18\":1}}],[\"比如开发过程中我们需要通过模块化的方式来开发\",{\"1\":{\"18\":1}}],[\"比如通过es6+\",{\"1\":{\"18\":1}}],[\"比如也会使用一些高级的特性来加快我们的开发效率或者安全性\",{\"1\":{\"18\":1}}],[\"比如\",{\"1\":{\"13\":1,\"14\":2,\"28\":1,\"62\":1,\"76\":1,\"96\":1,\"132\":1,\"139\":2}}],[\"代码的内聚性非常差\",{\"1\":{\"133\":1}}],[\"代码的高亮\",{\"1\":{\"62\":1}}],[\"代码大全\",{\"1\":{\"117\":1}}],[\"代码片段\",{\"0\":{\"65\":1}}],[\"代码\",{\"1\":{\"62\":1}}],[\"样式等\",{\"1\":{\"62\":2}}],[\"样式代码\",{\"1\":{\"18\":1}}],[\"脚本逻辑\",{\"1\":{\"62\":2}}],[\"用法如下\",{\"1\":{\"112\":1}}],[\"用法\",{\"1\":{\"74\":1,\"84\":1}}],[\"用途\",{\"1\":{\"74\":1}}],[\"用户可能先看到的是还没编译完成的双大括号标签\",{\"1\":{\"73\":1}}],[\"用户在下载对应的javascript时也会增加包\",{\"1\":{\"61\":1}}],[\"用于声明在数据更改时调用的侦听回调\",{\"1\":{\"112\":1}}],[\"用于阻止事件冒泡\",{\"1\":{\"87\":1}}],[\"用于隐藏尚未完成编译的\",{\"1\":{\"73\":1}}],[\"用于更新元素的\",{\"1\":{\"71\":1}}],[\"用于对\",{\"1\":{\"30\":1}}],[\"用于在打包过程中对文件进行预处理\",{\"1\":{\"29\":1}}],[\"用于管理项目的信息\",{\"1\":{\"24\":1}}],[\"用于展示你的内容\",{\"1\":{\"19\":1}}],[\"用于解构赋值\",{\"1\":{\"7\":1}}],[\"用于数组字面量\",{\"1\":{\"7\":1}}],[\"用于函数调用\",{\"1\":{\"7\":1}}],[\"册\",{\"1\":{\"61\":1}}],[\"请注意\",{\"1\":{\"61\":1}}],[\"选择其中的source面板\",{\"1\":{\"142\":1}}],[\"选择可以添加你需要的postcss相关的插件\",{\"1\":{\"34\":1}}],[\"选项期望接受一个对象\",{\"1\":{\"112\":1}}],[\"选项\",{\"1\":{\"61\":1,\"106\":1,\"112\":1,\"114\":1}}],[\"我是内容\",{\"1\":{\"60\":1,\"62\":1}}],[\"我是标题\",{\"1\":{\"60\":1,\"62\":1}}],[\"我们在methods中要使用data返回对象中的数据\",{\"1\":{\"141\":1}}],[\"我们在前面练习vue的过程中\",{\"1\":{\"65\":1}}],[\"我们传入了一个对象\",{\"1\":{\"139\":1}}],[\"我们通常通过mixins在多个组件之间共享逻辑\",{\"1\":{\"133\":1}}],[\"我们通常会给元素或者组件绑定一个key属性\",{\"1\":{\"97\":1}}],[\"我们就是在每次\",{\"1\":{\"126\":1}}],[\"我们就可以检查\",{\"1\":{\"126\":1}}],[\"我们就必须监听用户发生的事件\",{\"1\":{\"84\":1}}],[\"我们声明了\",{\"1\":{\"126\":1}}],[\"我们的数据可能是来自服务器的\",{\"1\":{\"120\":1}}],[\"我们的html文件是编写在根目录下的\",{\"1\":{\"50\":1}}],[\"我们希望在代码逻辑中监听某个数据的变化\",{\"1\":{\"112\":1}}],[\"我们希望将这部分内容抽取到一个独立的组件中去维护\",{\"1\":{\"59\":1}}],[\"我们事实上先显示的是一个结果\",{\"1\":{\"108\":1}}],[\"我们来创建一个自定义的修饰符\",{\"1\":{\"126\":1}}],[\"我们来看三个案例\",{\"1\":{\"106\":1}}],[\"我们来安装postcss\",{\"1\":{\"37\":1}}],[\"我们有一个变量message\",{\"1\":{\"106\":1}}],[\"我们有一个分数\",{\"1\":{\"106\":1}}],[\"我们有两个变量\",{\"1\":{\"106\":1}}],[\"我们有没有什么方法可以将逻辑抽离出去呢\",{\"1\":{\"105\":1}}],[\"我们有data\",{\"1\":{\"61\":1}}],[\"我们可能需要对数据进行一些转化后再显示\",{\"1\":{\"105\":1}}],[\"我们可以有三种实现思路\",{\"1\":{\"106\":1}}],[\"我们可以确定的是\",{\"1\":{\"100\":1}}],[\"我们可以选择使用template\",{\"1\":{\"90\":1}}],[\"我们可以直接使用\",{\"1\":{\"83\":1}}],[\"我们可以直接使用资源模块类型\",{\"1\":{\"46\":1}}],[\"我们可以利用\",{\"1\":{\"79\":1}}],[\"我们可以把一个数组传给\",{\"1\":{\"78\":1}}],[\"我们可以传给\",{\"1\":{\"77\":1}}],[\"我们可以单独抽离组件\",{\"1\":{\"62\":1}}],[\"我们可以通过hook函数\",{\"1\":{\"133\":1}}],[\"我们可以通过一个后缀名为\",{\"1\":{\"62\":1}}],[\"我们可以通过webpack进行打包\",{\"1\":{\"23\":1}}],[\"我们可以添加如下配置\",{\"1\":{\"51\":1}}],[\"我们可以借助于一个插件来帮助我们完成\",{\"1\":{\"49\":1}}],[\"我们可以使用this关键字来直接访问到data中返回的对象的属性\",{\"1\":{\"141\":1}}],[\"我们可以使用\",{\"1\":{\"82\":1}}],[\"我们可以使用下面的方式\",{\"1\":{\"47\":1}}],[\"我们可以使用另外一个插件\",{\"1\":{\"38\":1}}],[\"我们可以使用less工具来完成它的编译转换\",{\"1\":{\"32\":1}}],[\"我们可以将\",{\"1\":{\"37\":1}}],[\"我们可以在单个组件实例上创建多个\",{\"1\":{\"127\":1}}],[\"我们可以在created的生命周期\",{\"1\":{\"116\":1}}],[\"我们可以在app组件的template中直接使用这个全局组件\",{\"1\":{\"60\":1}}],[\"我们可以在上面的网站中查询一些添加css属性的样式\",{\"1\":{\"35\":1}}],[\"我们可以在根目录下创建一个webpack\",{\"1\":{\"26\":1}}],[\"我们只需要在中间插入一个\",{\"1\":{\"100\":1}}],[\"我们使用template来对多个元素进行包裹\",{\"1\":{\"95\":1}}],[\"我们知道\",{\"1\":{\"94\":1,\"105\":1}}],[\"我们往往会从服务器拿到一组数据\",{\"1\":{\"93\":1}}],[\"我们称之为\",{\"1\":{\"82\":1}}],[\"我们属性的名称可能也不是固定的\",{\"1\":{\"82\":1}}],[\"我们再vscode中我们可以生成一个代码片段\",{\"1\":{\"65\":1}}],[\"我们会通过\",{\"1\":{\"133\":1}}],[\"我们会发现是完全不同的\",{\"1\":{\"137\":1}}],[\"我们会发现methods在多次使用时\",{\"1\":{\"110\":1}}],[\"我们会发现计算属性和methods的实现看起来是差别是不大的\",{\"1\":{\"110\":1}}],[\"我们会发现无论是直观上\",{\"1\":{\"109\":1}}],[\"我们会发现上面的diff算法效率并不高\",{\"1\":{\"101\":1}}],[\"我们会采用组件化的方式来进行开发\",{\"1\":{\"62\":1}}],[\"我们会看不到图片文件\",{\"1\":{\"40\":1}}],[\"我们依然会对其进行打包\",{\"1\":{\"61\":1}}],[\"我们都推荐这样做\",{\"1\":{\"58\":1}}],[\"我们将一个完整的页面分成很多个组件\",{\"1\":{\"56\":1}}],[\"我们讲一个页面拆分成一个个\",{\"1\":{\"56\":1}}],[\"我们人有一种天生的能力\",{\"1\":{\"56\":1}}],[\"我们不太可能一次性搞定一大堆的内容\",{\"1\":{\"56\":1}}],[\"我们先来看一个案例\",{\"1\":{\"100\":1}}],[\"我们先来看一下官方的解释\",{\"1\":{\"97\":1}}],[\"我们先来解释一下vnode的概念\",{\"1\":{\"98\":1}}],[\"我们先从简单的开始谈起\",{\"1\":{\"59\":1}}],[\"我们先安装这个插件\",{\"1\":{\"49\":1}}],[\"我们先梳理一下js中的数据类型\",{\"1\":{\"1\":1}}],[\"我们当前使用的webpack版本是webpack5\",{\"1\":{\"46\":1}}],[\"我们这里介绍几个最常用的placeholder\",{\"1\":{\"43\":1}}],[\"我们如何可以限制哪些大小的图片转换和不转换呢\",{\"1\":{\"41\":1}}],[\"我们也经常称vue是一个mvvm的框架\",{\"1\":{\"138\":1}}],[\"我们也需要有对应的loader\",{\"1\":{\"39\":1}}],[\"我们也可以通过配置来指定入口和出口\",{\"1\":{\"23\":1}}],[\"我们直接修改掉之前的\",{\"1\":{\"38\":1}}],[\"我们配置插件并不需要使用autoprefixer\",{\"1\":{\"38\":1}}],[\"我们编写一个需要添加前缀的css\",{\"1\":{\"35\":1}}],[\"我们已经可以通过css\",{\"1\":{\"31\":1}}],[\"我们需要根据当前的条件决定某些元素或组件是否渲染\",{\"1\":{\"88\":1}}],[\"我们需要经常和用户进行各种各样的交互\",{\"1\":{\"84\":1}}],[\"我们需要通过组件化的思想来思考整个应用程序\",{\"1\":{\"56\":1}}],[\"我们需要一个可以挂载后续组件的根标签\",{\"1\":{\"51\":1}}],[\"我们需要一个可以读取css文件的loader\",{\"1\":{\"30\":1}}],[\"我们需要安装\",{\"1\":{\"38\":1}}],[\"我们需要借助于postcss对应的插件\",{\"1\":{\"34\":1}}],[\"我们需要同时安装webpack\",{\"1\":{\"22\":1}}],[\"我们发现是可以正常进行打包的\",{\"1\":{\"23\":1}}],[\"我们还希望实时的监听文件的变化来并且反映到浏览器上\",{\"1\":{\"18\":1}}],[\"只需要一个getter方法即可\",{\"1\":{\"111\":1}}],[\"只需要将整个项目目录复制到其他环境中\",{\"1\":{\"24\":1}}],[\"只是通过css的display属性来进行\",{\"1\":{\"92\":1}}],[\"只当点击鼠标中键时触发\",{\"1\":{\"84\":1,\"87\":1}}],[\"只当点击鼠标右键时触发\",{\"1\":{\"84\":1,\"87\":1}}],[\"只当点击鼠标左键时触发\",{\"1\":{\"84\":1,\"87\":1}}],[\"只当事件是从侦听器绑定的元素本身触发时才触发回调\",{\"1\":{\"84\":1,\"87\":1}}],[\"只触发一次回调\",{\"1\":{\"84\":1,\"87\":1}}],[\"只有在注册的组件中才能使用的组件\",{\"1\":{\"59\":1}}],[\"局部注册是在我们需要使用到的组件中\",{\"1\":{\"61\":1}}],[\"局部注册的组件在后代组件中并不可用\",{\"1\":{\"61\":1}}],[\"局部注册的组件需要在使用它的父组件中显式导入\",{\"1\":{\"61\":1}}],[\"局部注册需要使用\",{\"1\":{\"61\":1}}],[\"局部组件\",{\"1\":{\"59\":1}}],[\"局部安装\",{\"0\":{\"24\":1}}],[\"全程是vue\",{\"1\":{\"130\":1}}],[\"全局注册在大型项目中使项目的依赖关系变得不那么明确\",{\"1\":{\"61\":1}}],[\"全局注册\",{\"1\":{\"61\":1}}],[\"全局注册虽然很方便\",{\"1\":{\"61\":1}}],[\"全局组件往往是在应用程序一开始就会全局组件完成\",{\"1\":{\"61\":1}}],[\"全局组件需要使用我们全局创建的app来注册组件\",{\"1\":{\"60\":1}}],[\"全局组件\",{\"1\":{\"59\":1}}],[\"全部放在一起\",{\"1\":{\"56\":1}}],[\"逻辑等\",{\"1\":{\"59\":1}}],[\"引入\",{\"0\":{\"135\":1}}],[\"引入loadsh\",{\"1\":{\"16\":2}}],[\"引用对象\",{\"1\":{\"114\":1}}],[\"引用\",{\"1\":{\"58\":1}}],[\"为什么是window呢\",{\"1\":{\"141\":1}}],[\"为什么不能使用箭头函数\",{\"1\":{\"141\":1}}],[\"为名注册的组件\",{\"1\":{\"58\":1}}],[\"为了方便\",{\"1\":{\"58\":1}}],[\"注册后仅在当前组件可用\",{\"1\":{\"61\":1}}],[\"注册局部组件\",{\"0\":{\"61\":1}}],[\"注册一个全局组件\",{\"1\":{\"60\":1}}],[\"注册全局组件\",{\"0\":{\"60\":1}}],[\"注册组件分成两种\",{\"1\":{\"59\":1}}],[\"注册组件的方式\",{\"0\":{\"59\":1}}],[\"注册的组件\",{\"1\":{\"58\":1}}],[\"注意这里组件的\",{\"1\":{\"126\":1}}],[\"注意上面的顺序\",{\"1\":{\"94\":1}}],[\"注意\",{\"1\":{\"31\":1,\"109\":1,\"114\":1}}],[\"内联模板等\",{\"1\":{\"132\":1}}],[\"内联方式使用较少\",{\"1\":{\"30\":1}}],[\"内联方式\",{\"1\":{\"30\":2}}],[\"内置修饰符\",{\"0\":{\"122\":1}}],[\"内部实现\",{\"0\":{\"119\":1}}],[\"内部发生的改变是不能侦听\",{\"1\":{\"114\":1}}],[\"内模板解析注意事项\",{\"1\":{\"58\":1}}],[\"模式添加侦听器\",{\"1\":{\"84\":1,\"87\":1}}],[\"模式\",{\"1\":{\"84\":1,\"87\":1}}],[\"模板编译器会对\",{\"1\":{\"118\":1}}],[\"模板中有一些奇怪的语法\",{\"1\":{\"139\":1}}],[\"模板中表达式的初衷是用于简单的计算\",{\"1\":{\"107\":1}}],[\"模板中存在大量的复杂逻辑\",{\"1\":{\"107\":1}}],[\"模板中是不可用的\",{\"1\":{\"58\":1}}],[\"模板语法\",{\"0\":{\"66\":1}}],[\"模板\",{\"1\":{\"59\":1,\"73\":1}}],[\"模块化module\",{\"1\":{\"19\":1}}],[\"都会同步不同的\",{\"1\":{\"127\":1}}],[\"都是可接受的\",{\"1\":{\"58\":1}}],[\"都需要手动删除dist文件夹\",{\"1\":{\"49\":1}}],[\"首字母大写命名\",{\"1\":{\"58\":1}}],[\"首先让我们回忆一下\",{\"1\":{\"118\":1}}],[\"首先\",{\"1\":{\"38\":1,\"49\":1,\"92\":1}}],[\"驼峰标识符\",{\"1\":{\"58\":1}}],[\"你可能想要一个自定义组件的\",{\"1\":{\"126\":1}}],[\"你可以在\",{\"1\":{\"124\":1,\"125\":1}}],[\"你可以添加\",{\"1\":{\"123\":1}}],[\"你可以传入回调数组\",{\"1\":{\"115\":1}}],[\"你可以使用\",{\"1\":{\"95\":1}}],[\"你需要深层侦听器\",{\"1\":{\"114\":1}}],[\"你都应该使用计算属性\",{\"1\":{\"105\":1}}],[\"你在引用这个自定义元素时两种命名法都可以使用\",{\"1\":{\"58\":1}}],[\"你也必须在引用这个自定义元素时使用\",{\"1\":{\"58\":1}}],[\"你会发现大的问题也会迎刃而解\",{\"1\":{\"56\":1}}],[\"定义了一个计算属性叫fullname\",{\"1\":{\"109\":1}}],[\"定义一个组件时\",{\"1\":{\"58\":2}}],[\"定义组件名的方式有两种\",{\"1\":{\"58\":1}}],[\"短横线分隔命名\",{\"1\":{\"58\":1}}],[\"短横线分割符\",{\"1\":{\"58\":1}}],[\"任何的应用都会被抽象成一颗组件树\",{\"1\":{\"57\":1}}],[\"任何一个人处理信息的逻辑能力都是有限的\",{\"1\":{\"56\":1}}],[\"让我们可以开发出一个个独立可复用的小组件来构造我们的应用\",{\"1\":{\"57\":1}}],[\"组件上的每一个\",{\"1\":{\"127\":1}}],[\"组件的\",{\"1\":{\"126\":1}}],[\"组件的名称\",{\"1\":{\"61\":1}}],[\"组件内部需要做两件事\",{\"1\":{\"118\":1}}],[\"组件作用域的css\",{\"1\":{\"62\":1}}],[\"组件对象\",{\"1\":{\"61\":1}}],[\"组件对象即可注册一个全局组件了\",{\"1\":{\"60\":1}}],[\"组件注册代码来配合不同来源的模板\",{\"1\":{\"58\":1}}],[\"组件名称\",{\"0\":{\"58\":1}}],[\"组件化提供了一种抽象\",{\"1\":{\"57\":1}}],[\"组件化也是类似的思想\",{\"1\":{\"56\":1}}],[\"组件\",{\"1\":{\"57\":1}}],[\"学习组件化最重要的是它的思想\",{\"1\":{\"56\":1}}],[\"包括data\",{\"1\":{\"133\":1}}],[\"包括编译方面的优化\",{\"1\":{\"132\":1}}],[\"包括小程序的开发也是采用组件化开发的思想\",{\"1\":{\"56\":1}}],[\"包含了\",{\"1\":{\"126\":1}}],[\"包含一个hash值等\",{\"1\":{\"43\":1}}],[\"甚至是移动端都在转向组件化开发\",{\"1\":{\"56\":1}}],[\"但随后可以在运行时使用\",{\"1\":{\"139\":1}}],[\"但并没有被使用的组件无法在生产打包时被自动移除\",{\"1\":{\"61\":1}}],[\"但有以下几个问题\",{\"1\":{\"61\":1}}],[\"但如果\",{\"1\":{\"56\":1}}],[\"但是这个模板的写法有点过于别扭了\",{\"1\":{\"139\":1}}],[\"但是这些资源并不需要通过\",{\"1\":{\"53\":1}}],[\"但是整个设计是受到它的启发的\",{\"1\":{\"138\":1}}],[\"但是有一个很大的缺陷就是\",{\"1\":{\"133\":1}}],[\"但是有一个问题\",{\"1\":{\"23\":1}}],[\"但是watch不会侦听到\",{\"1\":{\"114\":2}}],[\"但是如果依赖的数据发生变化\",{\"1\":{\"110\":1}}],[\"但是如果我们使用箭头函数\",{\"1\":{\"141\":1}}],[\"但是如果我们希望切换的是多个元素呢\",{\"1\":{\"90\":1}}],[\"但是如果我们的配置文件并不是webpack\",{\"1\":{\"27\":1}}],[\"但是计算的过程只调用了一次\",{\"1\":{\"110\":1}}],[\"但是我们在使用的时候不需要加\",{\"1\":{\"109\":1}}],[\"但是我们并不希望div这种元素被渲染\",{\"1\":{\"90\":1}}],[\"但是我们并没有设置过这个常量值\",{\"1\":{\"52\":1}}],[\"但是都变成了一种方法的调用\",{\"1\":{\"108\":1}}],[\"但是设计它们的初衷是用于简单的运算\",{\"1\":{\"105\":1}}],[\"但是依然有旧的节点\",{\"1\":{\"101\":1}}],[\"但是依然有新的节点\",{\"1\":{\"101\":1}}],[\"但是因为我们的c被f所使用了\",{\"1\":{\"101\":1}}],[\"但是某些方法不会替换原来的数组\",{\"1\":{\"96\":1}}],[\"但是最终template不会被渲染出来\",{\"1\":{\"90\":1}}],[\"但是注意\",{\"1\":{\"86\":1}}],[\"但是你也可以显式用\",{\"1\":{\"74\":1}}],[\"但是你会发现这个css在我们的代码中并没有生效\",{\"1\":{\"31\":1}}],[\"但是大多数情况下\",{\"1\":{\"66\":1}}],[\"但是大的图片直接使用图片即可\",{\"1\":{\"41\":1}}],[\"但是它们还是会分离开来\",{\"1\":{\"62\":1}}],[\"但是随着项目越来越复杂\",{\"1\":{\"62\":1}}],[\"但是思想都是一样的\",{\"1\":{\"56\":1}}],[\"但是\",{\"1\":{\"56\":1,\"58\":1,\"105\":1,\"111\":1}}],[\"但是开发中我们往往是小的图片需要转换\",{\"1\":{\"41\":1}}],[\"但是在某些情况下\",{\"1\":{\"112\":1}}],[\"但是在某些情况\",{\"1\":{\"105\":1}}],[\"但是在dist文件夹中\",{\"1\":{\"40\":1}}],[\"但是在项目中我们会编写大量的css\",{\"1\":{\"33\":1}}],[\"但是可以将较小的文件\",{\"1\":{\"40\":1}}],[\"但是每次这样执行命令来对源码进行编译\",{\"1\":{\"27\":1}}],[\"但是通过使用webpack的打包功能\",{\"1\":{\"23\":1}}],[\"但是事实上\",{\"1\":{\"18\":1}}],[\"但是对于很多的前端开发者来说\",{\"1\":{\"18\":1}}],[\"但是对应两个不同的地址\",{\"1\":{\"11\":1}}],[\"拆分成很多个可以处理的小问题\",{\"1\":{\"56\":1}}],[\"人面对复杂问题的处理方式\",{\"1\":{\"56\":1}}],[\"建立js映射文件\",{\"1\":{\"54\":1}}],[\"准备打包上线的时候\",{\"1\":{\"54\":1}}],[\"设置id\",{\"1\":{\"139\":1}}],[\"设置\",{\"1\":{\"74\":1}}],[\"设置source\",{\"1\":{\"54\":1}}],[\"设置production\",{\"1\":{\"54\":1}}],[\"设置模式\",{\"1\":{\"54\":1}}],[\"设置一些额外的选项\",{\"1\":{\"53\":1}}],[\"设置从哪一个源中开始复制\",{\"1\":{\"53\":1}}],[\"设置文件的存放路径\",{\"0\":{\"45\":1}}],[\"设置文件名称\",{\"0\":{\"44\":1}}],[\"就可\",{\"1\":{\"56\":1}}],[\"就会读到该信息\",{\"1\":{\"51\":1}}],[\"就是所有的data使用过程都会变成了一个方法的调用\",{\"1\":{\"105\":1}}],[\"就是说\",{\"1\":{\"58\":1}}],[\"就是将问题进行拆解\",{\"1\":{\"56\":1}}],[\"就是style\",{\"1\":{\"31\":1}}],[\"就是我们打包之后的文件\",{\"1\":{\"23\":1}}],[\"85\",{\"1\":{\"117\":1}}],[\"8px\",{\"1\":{\"117\":1}}],[\"80\",{\"1\":{\"108\":1,\"109\":1}}],[\"88\",{\"1\":{\"83\":2,\"94\":1,\"95\":1}}],[\"8\",{\"1\":{\"51\":1,\"117\":1}}],[\"<username\",{\"1\":{\"127\":1}}],[\"<ul>\",{\"1\":{\"94\":3,\"95\":1,\"96\":1,\"100\":1}}],[\"<option\",{\"1\":{\"120\":3}}],[\"<custominput>\",{\"1\":{\"118\":1}}],[\"<custominput\",{\"1\":{\"118\":1}}],[\"<componenta\",{\"1\":{\"61\":1}}],[\"<component\",{\"1\":{\"60\":1}}],[\"<=\",{\"1\":{\"117\":1}}],[\"<input>\",{\"1\":{\"118\":1,\"120\":1}}],[\"<input\",{\"1\":{\"87\":1,\"89\":1,\"96\":1,\"110\":1,\"113\":1,\"118\":2,\"120\":6,\"123\":1,\"124\":1,\"125\":1,\"126\":3,\"127\":2}}],[\"<img\",{\"1\":{\"74\":3,\"75\":3,\"82\":1}}],[\"<a\",{\"1\":{\"74\":1,\"75\":1,\"82\":1}}],[\"<button\",{\"1\":{\"62\":1,\"67\":1,\"69\":3,\"77\":1,\"85\":3,\"86\":2,\"87\":2,\"90\":1,\"96\":1,\"100\":1,\"110\":1,\"111\":1,\"113\":1,\"114\":3,\"117\":3,\"139\":4}}],[\"<body>\",{\"1\":{\"51\":1,\"60\":1,\"77\":1,\"78\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"85\":1,\"86\":1,\"87\":1,\"90\":1,\"94\":1,\"95\":1,\"96\":1,\"100\":1,\"110\":1,\"113\":1,\"114\":1,\"117\":1,\"120\":1,\"139\":2}}],[\"<p>答案是\",{\"1\":{\"113\":1}}],[\"<p>您的问题是\",{\"1\":{\"113\":1}}],[\"<p>\",{\"1\":{\"60\":1,\"62\":1}}],[\"<select\",{\"1\":{\"120\":1}}],[\"<select>\",{\"1\":{\"120\":1}}],[\"<span>喜欢的水果\",{\"1\":{\"120\":1}}],[\"<span>你的爱好\",{\"1\":{\"120\":2}}],[\"<span\",{\"1\":{\"70\":1,\"117\":1}}],[\"<style>\",{\"1\":{\"77\":1}}],[\"<style\",{\"1\":{\"62\":1}}],[\"<strong>we\",{\"1\":{\"51\":1}}],[\"<script>\",{\"1\":{\"60\":1,\"61\":1,\"62\":1,\"67\":1,\"69\":1,\"70\":1,\"75\":1,\"77\":1,\"78\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"85\":1,\"86\":1,\"87\":1,\"89\":1,\"90\":1,\"94\":1,\"95\":1,\"96\":1,\"100\":1,\"108\":1,\"109\":1,\"110\":2,\"111\":1,\"113\":1,\"114\":1,\"117\":1,\"120\":1,\"126\":2,\"127\":1,\"139\":2}}],[\"<script\",{\"1\":{\"60\":1,\"67\":1,\"69\":1,\"70\":1,\"77\":1,\"78\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"85\":1,\"86\":1,\"87\":1,\"89\":1,\"90\":1,\"94\":1,\"95\":1,\"96\":1,\"100\":1,\"108\":1,\"109\":1,\"110\":2,\"111\":1,\"113\":1,\"114\":1,\"117\":2,\"120\":1,\"135\":1,\"136\":1,\"139\":3}}],[\"<textarea\",{\"1\":{\"120\":1}}],[\"<textarea>\",{\"1\":{\"120\":1}}],[\"<template>\",{\"1\":{\"61\":1,\"62\":1,\"66\":1,\"126\":2,\"127\":1}}],[\"<template\",{\"1\":{\"60\":2,\"67\":1,\"69\":1,\"70\":1,\"72\":1,\"74\":1,\"75\":1,\"77\":1,\"78\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"85\":1,\"86\":1,\"87\":1,\"89\":1,\"90\":3,\"91\":1,\"92\":1,\"94\":1,\"95\":2,\"96\":1,\"100\":1,\"107\":1,\"108\":1,\"109\":1,\"110\":2,\"111\":1,\"113\":1,\"114\":1,\"117\":3,\"120\":1,\"139\":1}}],[\"<td>\",{\"1\":{\"117\":6}}],[\"<tr\",{\"1\":{\"117\":1}}],[\"<tbody>\",{\"1\":{\"117\":1}}],[\"<th>操作<\",{\"1\":{\"117\":1}}],[\"<th>购买数量<\",{\"1\":{\"117\":1}}],[\"<th>价格<\",{\"1\":{\"117\":1}}],[\"<th>出版日期<\",{\"1\":{\"117\":1}}],[\"<th>书籍名称<\",{\"1\":{\"117\":1}}],[\"<th>序号<\",{\"1\":{\"117\":1}}],[\"<thead>\",{\"1\":{\"117\":1}}],[\"<table>\",{\"1\":{\"117\":1}}],[\"<title>document<\",{\"1\":{\"117\":1}}],[\"<title><\",{\"1\":{\"51\":1}}],[\"<mycomponent\",{\"1\":{\"126\":1}}],[\"<mycomponent>\",{\"1\":{\"58\":1}}],[\"<my\",{\"1\":{\"58\":3}}],[\"<meta\",{\"1\":{\"51\":3,\"117\":3}}],[\"<div><\",{\"1\":{\"66\":1}}],[\"<div>\",{\"1\":{\"62\":1,\"70\":1,\"73\":1,\"139\":2}}],[\"<div\",{\"1\":{\"51\":1,\"60\":1,\"66\":1,\"69\":3,\"70\":1,\"73\":1,\"77\":7,\"78\":4,\"80\":6,\"81\":2,\"82\":4,\"83\":4,\"85\":4,\"86\":1,\"87\":2,\"90\":1,\"94\":1,\"95\":1,\"96\":1,\"100\":1,\"110\":1,\"113\":1,\"114\":1,\"117\":1,\"120\":1,\"139\":2}}],[\"<noscript>\",{\"1\":{\"51\":1}}],[\"<label\",{\"1\":{\"120\":7}}],[\"<label>\",{\"1\":{\"120\":3}}],[\"<li>\",{\"1\":{\"95\":2}}],[\"<li\",{\"1\":{\"94\":3,\"95\":1,\"96\":1,\"100\":1}}],[\"<link\",{\"1\":{\"51\":1,\"117\":1}}],[\"<length>\",{\"1\":{\"43\":1}}],[\"<h2\",{\"1\":{\"69\":1,\"71\":1,\"72\":1,\"89\":3,\"91\":1,\"92\":2}}],[\"<h2>fruit\",{\"1\":{\"120\":1}}],[\"<h2>gender\",{\"1\":{\"120\":1}}],[\"<h2>hobbies\",{\"1\":{\"120\":1}}],[\"<h2>isagree\",{\"1\":{\"120\":1}}],[\"<h2>intro\",{\"1\":{\"120\":1}}],[\"<h2>购物车为空~<\",{\"1\":{\"117\":1}}],[\"<h2>总价格\",{\"1\":{\"117\":1}}],[\"<h2>遍历数字<\",{\"1\":{\"94\":1}}],[\"<h2>个人信息<\",{\"1\":{\"94\":1}}],[\"<h2>电影列表<\",{\"1\":{\"94\":1,\"96\":1}}],[\"<h2>呵呵呵呵<\",{\"1\":{\"90\":3}}],[\"<h2>哈哈哈哈<\",{\"1\":{\"90\":3}}],[\"<h2>\",{\"1\":{\"59\":2,\"60\":2,\"62\":1,\"67\":7,\"69\":5,\"71\":1,\"107\":3,\"108\":3,\"109\":3,\"110\":20,\"111\":1,\"114\":1,\"139\":4}}],[\"<head>\",{\"1\":{\"51\":1,\"117\":1}}],[\"<html\",{\"1\":{\"51\":1,\"117\":1}}],[\"<\",{\"1\":{\"51\":9,\"59\":2,\"60\":7,\"61\":2,\"62\":5,\"66\":2,\"67\":15,\"69\":10,\"70\":3,\"71\":2,\"72\":3,\"73\":1,\"74\":5,\"75\":5,\"77\":10,\"78\":5,\"80\":6,\"81\":3,\"82\":4,\"83\":4,\"85\":8,\"86\":5,\"87\":4,\"89\":2,\"90\":5,\"91\":1,\"92\":1,\"94\":11,\"95\":7,\"96\":5,\"100\":5,\"107\":5,\"108\":5,\"109\":5,\"110\":27,\"111\":3,\"113\":5,\"114\":5,\"117\":21,\"120\":25,\"123\":1,\"126\":4,\"127\":2,\"139\":12}}],[\"给予响应的提示\",{\"1\":{\"51\":1}}],[\"必须传入一个函数\",{\"1\":{\"140\":1}}],[\"必须在子组件中已被正确声明\",{\"1\":{\"74\":1}}],[\"必须使用es5的语法\",{\"1\":{\"62\":1}}],[\"必须有一个\",{\"1\":{\"30\":1}}],[\"必然也是需要有对应的入口文件index\",{\"1\":{\"50\":1}}],[\"每一个item都是一个数字\",{\"1\":{\"94\":1}}],[\"每次修改了一些配置\",{\"1\":{\"49\":1}}],[\"每个组件都用于实现页面的一个功能块\",{\"1\":{\"56\":1}}],[\"每个框架或者平台可能实现方法不同\",{\"1\":{\"56\":1}}],[\"每个功能块完成属于自己\",{\"1\":{\"56\":1}}],[\"每个loader都会对文件进行一次转换\",{\"1\":{\"29\":1}}],[\"每个项目可以拥有自己独立的webpack配置和插件\",{\"1\":{\"24\":1}}],[\"环境变量注入等\",{\"1\":{\"48\":1}}],[\"自我介绍\",{\"1\":{\"120\":1}}],[\"自己使用webpack或rollup或\",{\"1\":{\"63\":1}}],[\"自定义的修饰符\",{\"0\":{\"126\":1}}],[\"自定义事件\",{\"1\":{\"118\":1}}],[\"自定义html模板\",{\"0\":{\"51\":1}}],[\"自定义文件的输出路径和文件名\",{\"1\":{\"47\":1}}],[\"自动添加浏览器前缀\",{\"1\":{\"38\":1}}],[\"导出资源的源代码\",{\"1\":{\"46\":1}}],[\"导出一个资源的\",{\"1\":{\"46\":1}}],[\"之前通过使用\",{\"1\":{\"46\":4}}],[\"之后对该对象的修改或者访问都会在劫持中被处理\",{\"1\":{\"140\":1}}],[\"之后通过babe将js编译成\",{\"1\":{\"66\":1}}],[\"之后在插件中配置\",{\"1\":{\"49\":1}}],[\"之后\",{\"1\":{\"38\":1,\"60\":1}}],[\"之后我们执行\",{\"1\":{\"27\":1}}],[\"之后运行打包之后的代码\",{\"1\":{\"23\":1}}],[\"发送一个单独的文件并导出\",{\"1\":{\"46\":1}}],[\"种新的模块类型\",{\"1\":{\"46\":1}}],[\"其他方式\",{\"0\":{\"115\":1}}],[\"其他方法\",{\"0\":{\"15\":1}}],[\"其中键是需要侦听的响应式组件实例属性\",{\"1\":{\"112\":1}}],[\"其中一种方式就是将逻辑抽取到一个method中\",{\"1\":{\"105\":1}}],[\"其中可以编写需要忽略的文件\",{\"1\":{\"53\":1}}],[\"其对应的元素压根不会被渲染到dom中\",{\"1\":{\"92\":1}}],[\"其次\",{\"1\":{\"92\":1}}],[\"其判断的内容完全不会被渲染或者会被销毁掉\",{\"1\":{\"90\":1}}],[\"其实按照这种设置方式就可以了\",{\"1\":{\"45\":1}}],[\"已经设置了文件夹\",{\"1\":{\"45\":1}}],[\"刚才通过\",{\"1\":{\"45\":1}}],[\"截图hash的长度\",{\"1\":{\"43\":1}}],[\"扩展名\",{\"1\":{\"43\":1}}],[\"有了这个\",{\"1\":{\"126\":1}}],[\"有无key的结论\",{\"0\":{\"102\":1},\"1\":{\"102\":1}}],[\"有key的操作过程\",{\"1\":{\"101\":1}}],[\"有key的时候\",{\"1\":{\"97\":1}}],[\"有key\",{\"1\":{\"101\":1}}],[\"有点类似于小程序中的block\",{\"1\":{\"90\":1}}],[\"有时候我们的元素\",{\"1\":{\"76\":1}}],[\"有时候我们处理后的文件名称按照一定的规则进行显示\",{\"1\":{\"43\":1}}],[\"有时这是必要的\",{\"1\":{\"74\":1}}],[\"有些代码片段是需要经常写的\",{\"1\":{\"65\":1}}],[\"有三种方式\",{\"1\":{\"30\":1}}],[\"反而会影响页面的请求速度\",{\"1\":{\"41\":1}}],[\"减少不必要的请求过程\",{\"1\":{\"41\":1}}],[\"默认是浅层的\",{\"1\":{\"114\":1}}],[\"默认传入event对象\",{\"1\":{\"86\":1}}],[\"默认的class和动态的class结合\",{\"1\":{\"77\":1}}],[\"默认会利用\",{\"1\":{\"74\":1}}],[\"默认情况下我们的侦听器只会针对监听的数据本身的改变\",{\"1\":{\"114\":1}}],[\"默认情况下\",{\"1\":{\"70\":1,\"123\":1}}],[\"默认情况下url\",{\"1\":{\"40\":1}}],[\"默认32个字符太长了\",{\"1\":{\"43\":1}}],[\"默认配置必然\",{\"1\":{\"26\":1}}],[\"$off\",{\"1\":{\"132\":1}}],[\"$once\",{\"1\":{\"132\":1}}],[\"$on\",{\"1\":{\"132\":1}}],[\"$delete\",{\"1\":{\"132\":1}}],[\"$set\",{\"1\":{\"132\":1}}],[\"$emit\",{\"1\":{\"126\":2,\"127\":2}}],[\"$event可以获取到事件发生时的事件对象\",{\"1\":{\"86\":1}}],[\"$event\",{\"1\":{\"86\":2,\"118\":1,\"126\":1,\"127\":2}}],[\"$watchs\",{\"1\":{\"116\":1}}],[\"$watch\",{\"0\":{\"116\":1},\"1\":{\"116\":1}}],[\"$\",{\"1\":{\"39\":1,\"40\":1,\"42\":2,\"47\":1,\"115\":2}}],[\"global\",{\"1\":{\"142\":2}}],[\"globoptions\",{\"1\":{\"53\":2}}],[\"g\",{\"1\":{\"142\":1}}],[\"gender\",{\"1\":{\"120\":4}}],[\"generator\",{\"1\":{\"39\":1,\"42\":1,\"47\":1,\"65\":1}}],[\"getresult\",{\"1\":{\"108\":2,\"110\":4}}],[\"getreversemessage\",{\"1\":{\"67\":2,\"108\":2}}],[\"getfullname\",{\"1\":{\"108\":2,\"110\":7}}],[\"getfinalstyleobj\",{\"1\":{\"80\":2}}],[\"get\",{\"1\":{\"106\":1,\"111\":1}}],[\"getter方法\",{\"1\":{\"111\":1}}],[\"getter\",{\"0\":{\"111\":1},\"1\":{\"105\":1,\"132\":1}}],[\"getclassobj\",{\"1\":{\"77\":2}}],[\"guide\",{\"1\":{\"59\":1,\"120\":1}}],[\"githubusercontent\",{\"1\":{\"75\":1}}],[\"github\",{\"1\":{\"52\":1}}],[\"g|png|gif|svg\",{\"1\":{\"39\":1,\"40\":1,\"47\":1}}],[\"grid\",{\"1\":{\"38\":1}}],[\"graph\",{\"1\":{\"19\":1}}],[\"也会发生改变\",{\"1\":{\"140\":1}}],[\"也会一起被注\",{\"1\":{\"61\":1}}],[\"也增加了\",{\"1\":{\"132\":1}}],[\"也需要多次计算\",{\"1\":{\"108\":1}}],[\"也就是虚拟节点\",{\"1\":{\"98\":1}}],[\"也是根据一个条件决定是否显示元素或者组件\",{\"1\":{\"91\":1}}],[\"也是我们应用程序的根\",{\"1\":{\"57\":1}}],[\"也只能渲染一次\",{\"1\":{\"69\":1}}],[\"也包括我们的script是在一个全局的作用域下\",{\"1\":{\"62\":1}}],[\"也包括会自动帮助我们添加\",{\"1\":{\"38\":1}}],[\"也叫\",{\"1\":{\"61\":1}}],[\"也可以传入一个对象\",{\"1\":{\"140\":1}}],[\"也可以有多个键值对\",{\"1\":{\"77\":1}}],[\"也可以是其他方式\",{\"1\":{\"94\":1}}],[\"也可以是组件的\",{\"1\":{\"74\":1}}],[\"也可以是一个javascript的表达式\",{\"1\":{\"67\":1}}],[\"也可以调用函数\",{\"1\":{\"67\":1}}],[\"也可以\",{\"1\":{\"60\":1}}],[\"也\",{\"1\":{\"58\":1}}],[\"也不需要复制\",{\"1\":{\"53\":1}}],[\"也方便后期的维护\",{\"1\":{\"30\":1}}],[\"时自动启用\",{\"1\":{\"124\":1}}],[\"时\",{\"1\":{\"38\":1,\"51\":1,\"86\":1}}],[\"您的问题\",{\"1\":{\"113\":1}}],[\"您已经将\",{\"1\":{\"38\":1}}],[\"您可以使用postcss来编写现代css语法\",{\"1\":{\"35\":1}}],[\"等\",{\"1\":{\"120\":1}}],[\"等构建工具来对其进行处理\",{\"1\":{\"62\":1}}],[\"等价于\",{\"1\":{\"61\":1,\"71\":1}}],[\"等等\",{\"1\":{\"38\":1}}],[\"等存储在栈内存中\",{\"1\":{\"1\":1}}],[\"即不能使用箭头函数\",{\"1\":{\"141\":1}}],[\"即当刷新页面时会立刻执行一次\",{\"1\":{\"114\":1}}],[\"即使它并没有被实际使用\",{\"1\":{\"61\":1}}],[\"即可自动填充\",{\"1\":{\"65\":1}}],[\"即可\",{\"1\":{\"37\":1,\"38\":1,\"100\":1}}],[\"即基本数据类型的值会被完全拷贝\",{\"1\":{\"3\":1}}],[\"添加事件侦听器时使用\",{\"1\":{\"84\":1,\"87\":1}}],[\"添加所需的polyfill\",{\"1\":{\"38\":1}}],[\"添加为一个插件\",{\"1\":{\"38\":1}}],[\"添加\",{\"1\":{\"37\":1}}],[\"添加style\",{\"1\":{\"31\":1}}],[\"根目录下新建\",{\"1\":{\"37\":1}}],[\"根据需要\",{\"1\":{\"28\":2}}],[\"根据文件的不同使用不同的loader来解析\",{\"1\":{\"28\":1}}],[\"转变为驼峰式命名\",{\"1\":{\"74\":1}}],[\"转成base64的uri\",{\"1\":{\"40\":1}}],[\"转成大多数浏览器认识的css\",{\"1\":{\"38\":1}}],[\"转化的结果如下\",{\"1\":{\"36\":1}}],[\"转换为模块\",{\"1\":{\"29\":1}}],[\"压缩\",{\"1\":{\"38\":1}}],[\"压缩css等\",{\"1\":{\"35\":1}}],[\"压缩和优化图像等\",{\"1\":{\"29\":1}}],[\"认识计算属性\",{\"0\":{\"105\":1}}],[\"认识组件化开发\",{\"0\":{\"55\":1,\"56\":1}}],[\"认识\",{\"0\":{\"34\":1,\"98\":1,\"129\":1}}],[\"认识webpack\",{\"0\":{\"18\":1}}],[\"或短横线分隔\",{\"1\":{\"79\":1}}],[\"或一个组件\",{\"1\":{\"74\":1}}],[\"或者自己深拷贝一份作为保存\",{\"1\":{\"114\":1}}],[\"或者需要将多个数据结合起来进行显示\",{\"1\":{\"105\":1}}],[\"或者\",{\"1\":{\"62\":2,\"74\":1}}],[\"或者说从后到前的\",{\"1\":{\"31\":1}}],[\"或者说从下到上\",{\"1\":{\"31\":1}}],[\"或\",{\"1\":{\"58\":1,\"74\":1,\"112\":1,\"132\":1}}],[\"或多个变量\",{\"1\":{\"7\":1}}],[\"或多个元素\",{\"1\":{\"7\":1}}],[\"那么这个this就会是window了\",{\"1\":{\"141\":1}}],[\"那么这个this是必须有值的\",{\"1\":{\"141\":1}}],[\"那么将返回原始值\",{\"1\":{\"124\":1}}],[\"那么久使用\",{\"1\":{\"101\":1}}],[\"那么就移除旧节点\",{\"1\":{\"101\":1}}],[\"那么就新增节点\",{\"1\":{\"101\":1}}],[\"那么就使用\",{\"1\":{\"101\":1}}],[\"那么就意味着类似于webpack这种打包工具在打包我们的项目时\",{\"1\":{\"61\":1}}],[\"那么就意味着如果某些组件我们并没有用到\",{\"1\":{\"61\":1}}],[\"那么vue中对于列表的更新究竟是如何操作的呢\",{\"1\":{\"100\":1}}],[\"那么vue并不会对其进行特殊的解析\",{\"1\":{\"70\":1}}],[\"那么它们应该会形成一个\",{\"1\":{\"99\":1}}],[\"那么使用v\",{\"1\":{\"92\":2}}],[\"那么会有大量重复的代码\",{\"1\":{\"105\":1}}],[\"那么会默认将原生事件event参数传递进去\",{\"1\":{\"86\":1}}],[\"那么会报错\",{\"1\":{\"23\":1}}],[\"那么方法后的\",{\"1\":{\"86\":1}}],[\"那么可以使用\",{\"1\":{\"70\":1}}],[\"那么之后整个页面\",{\"1\":{\"56\":1}}],[\"那么\",{\"1\":{\"41\":1}}],[\"那么我们这个this能不能是window呢\",{\"1\":{\"141\":1}}],[\"那么我们就可以先将值请求下来\",{\"1\":{\"120\":1}}],[\"那么我们可以按照如下的格式编写\",{\"1\":{\"44\":1}}],[\"那么我们应该如何使用style\",{\"1\":{\"31\":1}}],[\"那么我们还需要另外一个loader\",{\"1\":{\"31\":1}}],[\"属性的值应该是你想要关联的表单控件的\",{\"1\":{\"120\":1}}],[\"属性的简写方式\",{\"1\":{\"30\":1}}],[\"属性被用来关联\",{\"1\":{\"120\":1}}],[\"属性直接绑定一个对象\",{\"0\":{\"83\":1}}],[\"属性名\",{\"1\":{\"82\":1}}],[\"属性名称都是固定的\",{\"1\":{\"82\":1}}],[\"属性为对象时\",{\"1\":{\"3\":2}}],[\"目前我们看到它里面有很多的html标签\",{\"1\":{\"139\":1}}],[\"目前我们在前面的案例中大部分的值都是在template中固定好的\",{\"1\":{\"120\":1}}],[\"目前我们使用vue的过程都是在html文件中\",{\"1\":{\"62\":1}}],[\"目前已经使用options来替代\",{\"1\":{\"30\":1}}],[\"目前前端的开发已经变的越来越复杂了\",{\"1\":{\"18\":1}}],[\"值是相应的回调函数\",{\"1\":{\"112\":1}}],[\"值是一个字符串或者对象\",{\"1\":{\"30\":1}}],[\"值\",{\"1\":{\"82\":1}}],[\"值会被传入到loader中\",{\"1\":{\"30\":1}}],[\"值转换为\",{\"1\":{\"14\":1}}],[\"update\",{\"1\":{\"118\":2,\"126\":4,\"127\":4}}],[\"unpkg\",{\"1\":{\"135\":1}}],[\"unix编程艺术\",{\"1\":{\"117\":1}}],[\"unwatch\",{\"1\":{\"116\":2}}],[\"unshift\",{\"1\":{\"96\":1}}],[\"underline\",{\"1\":{\"81\":1}}],[\"undefined\",{\"1\":{\"1\":1,\"2\":1,\"114\":1}}],[\"ul>\",{\"1\":{\"94\":3,\"95\":1,\"96\":1,\"100\":1}}],[\"us\",{\"1\":{\"84\":1}}],[\"user\",{\"1\":{\"36\":5}}],[\"use\",{\"1\":{\"30\":4,\"31\":1,\"33\":1,\"36\":1,\"37\":1,\"40\":1,\"42\":1}}],[\"useentry是一个对象\",{\"1\":{\"30\":1}}],[\"useentry\",{\"1\":{\"30\":1}}],[\"use属性\",{\"1\":{\"30\":1}}],[\"u\",{\"1\":{\"75\":1}}],[\"ua\",{\"1\":{\"51\":1,\"117\":1}}],[\"utf\",{\"1\":{\"51\":1,\"117\":1}}],[\"uri\",{\"1\":{\"46\":2}}],[\"url\",{\"0\":{\"40\":1,\"41\":1},\"1\":{\"40\":4,\"41\":1,\"46\":4,\"51\":1,\"52\":3}}],[\"进行处理\",{\"1\":{\"133\":1}}],[\"进行更冗长的等价展开\",{\"1\":{\"118\":1}}],[\"进行匹配的\",{\"1\":{\"30\":1}}],[\"进行递归\",{\"1\":{\"12\":1}}],[\"资源管理\",{\"1\":{\"48\":1}}],[\"资源模块类型\",{\"1\":{\"46\":1}}],[\"资源\",{\"1\":{\"30\":1}}],[\"资源文件img\",{\"1\":{\"20\":1}}],[\"分割\",{\"1\":{\"30\":1}}],[\"因为window中我们无法获取到data返回对象中的数据\",{\"1\":{\"141\":1}}],[\"因为不会被浏览器渲染\",{\"1\":{\"139\":1}}],[\"因为不方便管理\",{\"1\":{\"30\":1}}],[\"因为它在模板中的\",{\"1\":{\"126\":1}}],[\"因为对于列表中\",{\"1\":{\"100\":1}}],[\"因为目前我们还没有比较完整的学习组件的概念\",{\"1\":{\"98\":1}}],[\"因为v\",{\"1\":{\"90\":1}}],[\"因为在模板中使用了\",{\"1\":{\"52\":1}}],[\"因为postcss需要有对应的插件才会起效果\",{\"1\":{\"37\":1}}],[\"因为我们已经通过htmlwebpackplugin完成了index\",{\"1\":{\"53\":1}}],[\"因为我们需要添加前缀\",{\"1\":{\"36\":1}}],[\"因为我们也会继续使用其他的loader\",{\"1\":{\"30\":1}}],[\"因为loader的执行顺序是从右向左\",{\"1\":{\"31\":1}}],[\"因为css\",{\"1\":{\"31\":1}}],[\"因此上面的代码其实等价于下面这段\",{\"1\":{\"118\":1}}],[\"因此\",{\"1\":{\"3\":2}}],[\"对应的内容也会发生更新\",{\"1\":{\"67\":1}}],[\"对应的值是一个字符串\",{\"1\":{\"30\":1}}],[\"对应的值时一个数组\",{\"1\":{\"30\":1}}],[\"对其进行打包处理\",{\"1\":{\"63\":1}}],[\"对于任何包含响应式数据的复杂逻辑\",{\"1\":{\"105\":1}}],[\"对于相同父元素的子元素节点并不会重新渲染整个列\",{\"1\":{\"100\":1}}],[\"对于每个\",{\"1\":{\"61\":1}}],[\"对于加载css文件来说\",{\"1\":{\"30\":1}}],[\"对html进行打包处理我们可以使用另外一个插件\",{\"1\":{\"50\":1}}],[\"对象的键\",{\"1\":{\"126\":1}}],[\"对象\",{\"1\":{\"83\":1}}],[\"对象语法\",{\"0\":{\"77\":1,\"80\":1},\"1\":{\"76\":1,\"77\":2,\"79\":1}}],[\"对象中的键值对是\",{\"1\":{\"61\":1}}],[\"对象中可以设置多个属性\",{\"1\":{\"30\":1}}],[\"对象里的属性\",{\"1\":{\"61\":1}}],[\"对象属性为基础数据类型\",{\"1\":{\"12\":1}}],[\"直到编译完成前\",{\"1\":{\"73\":1}}],[\"直到相关组件实例被挂载后才移除\",{\"1\":{\"73\":1}}],[\"直到挂载的组件将它们替换为实际渲染的内容\",{\"1\":{\"73\":1}}],[\"直到最后一个loader将最终的结果返回给webpack进行打包\",{\"1\":{\"29\":1}}],[\"直接通过vue\",{\"1\":{\"134\":1}}],[\"直接\",{\"1\":{\"65\":1}}],[\"直接使用使用postcss工具\",{\"1\":{\"36\":1}}],[\"直接调用\",{\"1\":{\"16\":1}}],[\"直接赋值\",{\"1\":{\"12\":1}}],[\"以供\",{\"1\":{\"86\":1}}],[\"以应用一个\",{\"1\":{\"78\":1}}],[\"以动态地切换\",{\"1\":{\"77\":1}}],[\"以下为不使用深度监听\",{\"1\":{\"114\":1}}],[\"以下为内部判断\",{\"1\":{\"111\":1}}],[\"以下为错误写法\",{\"1\":{\"67\":1}}],[\"以下报错\",{\"1\":{\"75\":1}}],[\"以像搭建积木一下来搭建我们的项目\",{\"1\":{\"56\":1}}],[\"以便在部署应用程序时使用\",{\"1\":{\"53\":1}}],[\"以便在应用程序中使用\",{\"1\":{\"29\":1}}],[\"以及一些其他的\",{\"1\":{\"38\":1}}],[\"以后会采用\",{\"1\":{\"29\":1}}],[\"运行\",{\"1\":{\"28\":1}}],[\"输出如下\",{\"1\":{\"110\":1}}],[\"输出\",{\"1\":{\"28\":1}}],[\"输出文件的路径\",{\"1\":{\"28\":1}}],[\"和底层组件实例的数据绑定在\",{\"1\":{\"66\":1}}],[\"和使用过多的全局变量一样\",{\"1\":{\"61\":1}}],[\"和发送一个单独的文件之间自动选择\",{\"1\":{\"46\":1}}],[\"和\",{\"0\":{\"90\":1,\"111\":1},\"1\":{\"28\":1,\"74\":1,\"96\":1,\"105\":1,\"106\":1,\"114\":1,\"132\":2}}],[\"和函数等则是分别存储数据1的地址\",{\"1\":{\"1\":1}}],[\"然后再冒泡到该元素的父元素\",{\"1\":{\"87\":1}}],[\"然后使用各种插件对其进行处理\",{\"1\":{\"35\":1}}],[\"然后遍历图结构\",{\"1\":{\"28\":1}}],[\"然后将你项目中所需的每一个模块组合成一个或多个\",{\"1\":{\"19\":1}}],[\"图片等\",{\"1\":{\"29\":1}}],[\"图片\",{\"1\":{\"28\":1,\"111\":1,\"119\":1}}],[\"图片img文件的加载\",{\"1\":{\"20\":1}}],[\"从入口开始\",{\"1\":{\"28\":1}}],[\"入口\",{\"1\":{\"28\":1}}],[\"通常我们会在这个对象中定义很多的方法\",{\"1\":{\"141\":1}}],[\"通常使用\",{\"1\":{\"139\":1}}],[\"通常情况下\",{\"1\":{\"138\":1}}],[\"通常会设置成正则表达式\",{\"1\":{\"30\":1}}],[\"通常是webpack\",{\"1\":{\"29\":1}}],[\"通常命名为webpack\",{\"1\":{\"28\":1}}],[\"通过npm包管理工具安装使用它\",{\"1\":{\"134\":1}}],[\"通过索引值获取到对象\",{\"1\":{\"117\":1}}],[\"通过\",{\"1\":{\"112\":1}}],[\"通过template编写自己的模板\",{\"1\":{\"62\":1}}],[\"通过components属性选项来进行注册\",{\"1\":{\"61\":1}}],[\"通过component方法传入组件名称\",{\"1\":{\"60\":1}}],[\"通过添加\",{\"1\":{\"46\":1}}],[\"通过局部安装webpack\",{\"1\":{\"24\":1}}],[\"通过在项目中局部安装webpack\",{\"1\":{\"24\":1}}],[\"通过sass\",{\"1\":{\"18\":1}}],[\"创建一个新的文件\",{\"1\":{\"136\":1}}],[\"创建一个webpack配置文件\",{\"1\":{\"28\":1}}],[\"创建package\",{\"1\":{\"24\":1}}],[\"来将一部分独立的逻辑抽取出去\",{\"1\":{\"133\":1}}],[\"来描述组件对象\",{\"1\":{\"133\":1}}],[\"来实现数据的劫持\",{\"1\":{\"132\":1}}],[\"来劫持数据的\",{\"1\":{\"132\":1}}],[\"来进行重构\",{\"1\":{\"131\":1}}],[\"来进行类型检测\",{\"1\":{\"131\":1}}],[\"来侦听\",{\"1\":{\"116\":1}}],[\"来阻止\",{\"1\":{\"87\":1}}],[\"来命名\",{\"1\":{\"79\":1}}],[\"来绑定一些css内联样式\",{\"1\":{\"79\":1}}],[\"来展示\",{\"1\":{\"70\":1}}],[\"来解决\",{\"1\":{\"62\":1}}],[\"来替换所有这些\",{\"1\":{\"46\":1}}],[\"来替代上面的这些loader\",{\"1\":{\"46\":1}}],[\"来替代\",{\"1\":{\"29\":1}}],[\"来处理您的\",{\"1\":{\"38\":1}}],[\"来处理css文件\",{\"1\":{\"28\":1}}],[\"来自动使用less工具转换less到css\",{\"1\":{\"33\":1}}],[\"来完成其他文件的加载\",{\"1\":{\"30\":1}}],[\"来指定对应的配置文件\",{\"1\":{\"27\":1}}],[\"来作为webpack的配置文件\",{\"1\":{\"26\":1}}],[\"what\",{\"1\":{\"137\":1}}],[\"why\",{\"1\":{\"77\":1,\"83\":2,\"94\":1,\"95\":1,\"111\":1,\"114\":2,\"139\":4}}],[\"weixin\",{\"1\":{\"141\":1}}],[\"weight\",{\"1\":{\"117\":1}}],[\"web\",{\"0\":{\"144\":1},\"1\":{\"84\":1}}],[\"webkit\",{\"1\":{\"36\":1}}],[\"webpack给我们提供了大量的placeholders来显示不同的内容\",{\"1\":{\"43\":1}}],[\"webpack5中不再使用\",{\"1\":{\"30\":1}}],[\"webpack5\",{\"1\":{\"29\":1}}],[\"webpack将根据配置文件进行打包\",{\"1\":{\"28\":1}}],[\"webpack通过以下步骤对项目进行打包\",{\"1\":{\"28\":1}}],[\"webpack需要打包的项目是非常复杂的\",{\"1\":{\"26\":1}}],[\"webpack配置\",{\"0\":{\"25\":1}}],[\"webpack会查找当前目录下的\",{\"1\":{\"23\":1}}],[\"webpack是如何确定我们的入口的呢\",{\"1\":{\"23\":1}}],[\"webpack可以将多个模块打包成一个或多个浏览器可识别的文件\",{\"1\":{\"23\":1}}],[\"webpack可以将帮助我们进行打包\",{\"1\":{\"19\":1}}],[\"webpack在执行时是依赖webpack\",{\"1\":{\"22\":1}}],[\"webpack的依赖\",{\"0\":{\"28\":1}}],[\"webpack的默认打包\",{\"0\":{\"23\":1}}],[\"webpack的安装目前分为两个\",{\"1\":{\"22\":1}}],[\"webpack的安装\",{\"0\":{\"22\":1}}],[\"webpack的运行是依赖node环境的\",{\"1\":{\"21\":1}}],[\"webpack的中文官方文档是webpack\",{\"1\":{\"21\":1}}],[\"webpack的官方文档是webpack\",{\"1\":{\"21\":1}}],[\"webpack的使用\",{\"0\":{\"21\":1}}],[\"webpack默认支持各种模块化开发\",{\"1\":{\"19\":1}}],[\"webpack到底是什么呢\",{\"0\":{\"19\":1}}],[\"webpack\",{\"0\":{\"17\":1,\"24\":1,\"26\":1},\"1\":{\"19\":3,\"22\":2,\"23\":3,\"24\":4,\"27\":2,\"28\":1,\"29\":1,\"37\":1,\"43\":1,\"49\":2,\"50\":1,\"51\":1,\"52\":2,\"53\":4,\"62\":1}}],[\"watch\",{\"0\":{\"112\":1},\"1\":{\"112\":2,\"113\":1,\"114\":5,\"115\":2,\"116\":1}}],[\"watch选项启用监听模式等\",{\"1\":{\"28\":1}}],[\"www\",{\"1\":{\"75\":1}}],[\"world\",{\"1\":{\"67\":1,\"78\":1,\"80\":1,\"81\":1,\"85\":1,\"86\":1,\"87\":1,\"106\":1,\"108\":1,\"109\":1,\"113\":1,\"120\":1,\"139\":2}}],[\"work\",{\"1\":{\"51\":1}}],[\"window\",{\"1\":{\"141\":4}}],[\"will\",{\"1\":{\"51\":1}}],[\"without\",{\"1\":{\"51\":1}}],[\"width\",{\"1\":{\"51\":1,\"117\":1}}],[\"width=device\",{\"1\":{\"51\":1,\"117\":1}}],[\"wk\",{\"1\":{\"27\":3}}],[\"依然需要通过工具对代码进行构建\",{\"1\":{\"62\":1}}],[\"依然可以正常打包\",{\"1\":{\"26\":1}}],[\"依赖关系图\",{\"1\":{\"28\":1}}],[\"依赖图\",{\"1\":{\"19\":1}}],[\"是目前非常流行的架构模式\",{\"1\":{\"138\":1}}],[\"是在前期被使用非常框架的架构模式\",{\"1\":{\"138\":1}}],[\"是无法劫持和监听的\",{\"1\":{\"132\":1}}],[\"是使用\",{\"1\":{\"132\":1}}],[\"是一套用于构建用户界面的渐进式框架\",{\"1\":{\"130\":1}}],[\"是一个事件修饰符\",{\"1\":{\"87\":1}}],[\"是一个表达式\",{\"1\":{\"67\":1}}],[\"是一个用于\",{\"1\":{\"53\":1}}],[\"是一个用于现代\",{\"1\":{\"19\":1}}],[\"是一个webpack内置的插件\",{\"1\":{\"52\":1}}],[\"是一个\",{\"1\":{\"38\":1}}],[\"是什么作用\",{\"0\":{\"97\":1}}],[\"是过滤的意思\",{\"1\":{\"96\":1}}],[\"是允许template中有多个根元素\",{\"1\":{\"74\":2}}],[\"是\",{\"1\":{\"30\":1,\"60\":1}}],[\"是不可以的\",{\"1\":{\"26\":1}}],[\"执行如下命令\",{\"1\":{\"32\":1}}],[\"执行脚本打包即可\",{\"1\":{\"24\":1}}],[\"执行webpack命令\",{\"1\":{\"22\":1}}],[\"中更改如下\",{\"1\":{\"114\":1}}],[\"中间还有很多未知的或者乱序的节点\",{\"1\":{\"101\":1}}],[\"中书写的模板时\",{\"1\":{\"73\":1}}],[\"中\",{\"1\":{\"67\":1,\"87\":1,\"116\":1,\"120\":1,\"131\":1}}],[\"中使用最新的特性\",{\"1\":{\"38\":1}}],[\"中只需要\",{\"1\":{\"37\":1}}],[\"中的\",{\"0\":{\"97\":1}}],[\"中的module\",{\"1\":{\"29\":1}}],[\"中的深拷贝实现\",{\"0\":{\"16\":1}}],[\"中的深浅拷贝\",{\"0\":{\"4\":1}}],[\"中创建scripts脚本\",{\"1\":{\"24\":1}}],[\"使用任意标签\",{\"1\":{\"139\":1}}],[\"使用proxy进行数据劫持\",{\"1\":{\"132\":1}}],[\"使用全局的方法\",{\"1\":{\"117\":1}}],[\"使用计算属性\",{\"1\":{\"117\":1}}],[\"使用计算属性computed\",{\"1\":{\"106\":1}}],[\"使用computed\",{\"1\":{\"110\":1}}],[\"使用v\",{\"1\":{\"84\":1}}],[\"使用vue\",{\"1\":{\"63\":1}}],[\"使用最多的语法是\",{\"1\":{\"67\":1}}],[\"使用基于html的模板语法\",{\"1\":{\"66\":1}}],[\"使用methods\",{\"1\":{\"110\":1}}],[\"使用method对逻辑进行抽取\",{\"0\":{\"108\":1},\"1\":{\"106\":1}}],[\"使用md4的散列函数处理\",{\"1\":{\"43\":1}}],[\"使用mini\",{\"1\":{\"28\":1}}],[\"使用html\",{\"1\":{\"28\":1}}],[\"使用\",{\"1\":{\"28\":3,\"58\":2,\"60\":1,\"87\":1,\"116\":1,\"132\":1,\"139\":1}}],[\"使用babel\",{\"1\":{\"28\":1}}],[\"使用局部的webpack\",{\"1\":{\"24\":1}}],[\"使得在浏览器中可以正常运行这些模块化代码\",{\"1\":{\"23\":1}}],[\"安装yarn\",{\"1\":{\"142\":1}}],[\"安装copywebpackplugin插件\",{\"1\":{\"53\":1}}],[\"安装url\",{\"1\":{\"40\":1}}],[\"安装file\",{\"1\":{\"39\":1}}],[\"安装一下它们\",{\"1\":{\"35\":1}}],[\"安装style\",{\"1\":{\"31\":1}}],[\"安装局部的webpack\",{\"1\":{\"24\":1}}],[\"安装loadsh\",{\"1\":{\"16\":1}}],[\"库依赖等\",{\"1\":{\"24\":1}}],[\"库的方法\",{\"1\":{\"16\":1}}],[\"第五步是最特色的情况\",{\"1\":{\"101\":1}}],[\"第二个参数是侦听的回调函数callback\",{\"1\":{\"116\":1}}],[\"第二个参数是组件的配置对象\",{\"1\":{\"60\":1}}],[\"第二步的操作是从尾部开始进行遍历\",{\"1\":{\"101\":1}}],[\"第二步\",{\"1\":{\"24\":1,\"34\":1,\"65\":1}}],[\"第一个参数是要侦听的源\",{\"1\":{\"116\":1}}],[\"第一个参数是组件的名称\",{\"1\":{\"58\":1}}],[\"第一步的操作是从头开始进行遍历\",{\"1\":{\"101\":1}}],[\"第一步\",{\"1\":{\"24\":1,\"34\":1,\"65\":1}}],[\"第四步是如果新的节点遍历完毕\",{\"1\":{\"101\":1}}],[\"第四步\",{\"1\":{\"24\":1}}],[\"第三个参数是额外的其他选项\",{\"1\":{\"116\":1}}],[\"第三步是如果旧节点遍历完毕\",{\"1\":{\"101\":1}}],[\"第三步\",{\"1\":{\"24\":1,\"65\":1}}],[\"第三方的脚手架事实上是没有使用webpack\",{\"1\":{\"22\":1}}],[\"方式四\",{\"1\":{\"134\":1}}],[\"方式三\",{\"1\":{\"134\":1}}],[\"方式二\",{\"1\":{\"58\":1,\"63\":1,\"134\":1,\"139\":1}}],[\"方式一\",{\"1\":{\"58\":1,\"63\":1,\"134\":1,\"139\":1}}],[\"方式引入的一个文件资源\",{\"1\":{\"39\":1}}],[\"方便我们快速生成\",{\"1\":{\"65\":1}}],[\"方便调试代码和错误\",{\"1\":{\"54\":1}}],[\"方便在不同环境中进行迁移和共享\",{\"1\":{\"24\":1}}],[\"方法\",{\"1\":{\"132\":1}}],[\"方法的\",{\"1\":{\"132\":1}}],[\"方法中\",{\"1\":{\"77\":1}}],[\"方法返回一个给定对象自身可枚举属性的键值对数组\",{\"1\":{\"13\":1}}],[\"方法用于将一个\",{\"1\":{\"14\":1}}],[\"方法用于将\",{\"1\":{\"14\":1}}],[\"方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象\",{\"1\":{\"8\":1}}],[\"方法用于连接两个或多个数组\",{\"1\":{\"10\":1}}],[\"方法可从已有的数组中返回选定的元素\",{\"1\":{\"9\":1}}],[\"可扩展性更强\",{\"1\":{\"131\":1}}],[\"可维护性\",{\"1\":{\"131\":1}}],[\"可选的\",{\"1\":{\"74\":1}}],[\"可选的属性\",{\"1\":{\"30\":1}}],[\"可能会出现一种叫做\",{\"1\":{\"73\":1}}],[\"可移植性\",{\"1\":{\"24\":1}}],[\"可以从对象中获取到数据\",{\"1\":{\"140\":1}}],[\"可以直接打开cdn的链接\",{\"1\":{\"136\":1}}],[\"可以有自己的功能逻辑\",{\"1\":{\"131\":1}}],[\"可以利用\",{\"1\":{\"114\":1}}],[\"可以\",{\"1\":{\"105\":1}}],[\"可以非常方便的实现\",{\"1\":{\"105\":1}}],[\"可以阻止事件继续冒泡到父元素\",{\"1\":{\"87\":1}}],[\"可以在组件上使用以实现双向绑定\",{\"1\":{\"118\":1}}],[\"可以在方法中获取\",{\"1\":{\"86\":1}}],[\"可以在其中直接使用\",{\"1\":{\"63\":1}}],[\"可以通过\",{\"1\":{\"86\":1,\"126\":1}}],[\"可以通过对象的属性来设置一些其他属性\",{\"1\":{\"30\":1}}],[\"可以不添加\",{\"1\":{\"86\":1}}],[\"可以嵌套对象语法\",{\"1\":{\"78\":1}}],[\"可以用于描述某一个标签\",{\"1\":{\"98\":1}}],[\"可以用于遍历一组数据\",{\"1\":{\"93\":1}}],[\"可以用于绑定一个包含了多个\",{\"1\":{\"74\":1}}],[\"可以用于设置转换的限制\",{\"1\":{\"41\":1}}],[\"可以使用格式\",{\"1\":{\"94\":1}}],[\"可以使用\",{\"1\":{\"87\":1}}],[\"可以使用computed\",{\"1\":{\"67\":1}}],[\"可以使用预处理器来构建更加丰富的组件\",{\"1\":{\"62\":1}}],[\"可以使用不同的参数和选项来控制打包的行为\",{\"1\":{\"28\":1}}],[\"可以省略\",{\"1\":{\"53\":1}}],[\"可以指定不同类型文件的匹配规则和对应的loader\",{\"1\":{\"29\":1}}],[\"可以根据需要配置多个loader来处理文件\",{\"1\":{\"29\":1}}],[\"可以是单个文件或多个文件\",{\"1\":{\"28\":1}}],[\"可以将整个项目打包成一个可移植的文件夹\",{\"1\":{\"24\":1}}],[\"可以将这些语法转换为浏览器可以识别的语法\",{\"1\":{\"23\":1}}],[\"可以简化项目的部署过程\",{\"1\":{\"24\":1}}],[\"可以确保每个项目使用的webpack版本是一致的\",{\"1\":{\"24\":1}}],[\"隔离环境\",{\"1\":{\"24\":1}}],[\"避免不同项目之间的版本冲突\",{\"1\":{\"24\":1}}],[\"版本控制\",{\"1\":{\"24\":1}}],[\"mp\",{\"1\":{\"141\":1}}],[\"mvvm是\",{\"1\":{\"138\":1}}],[\"mvvm模型\",{\"0\":{\"138\":1}}],[\"mvc是\",{\"1\":{\"138\":1}}],[\"mvc和mvvm都是一种软件的体系结构\",{\"1\":{\"138\":1}}],[\"mixins也是由一大堆的options组成的\",{\"1\":{\"133\":1}}],[\"middle\",{\"1\":{\"84\":1,\"87\":1}}],[\"multiple\",{\"1\":{\"120\":1}}],[\"mustache的基本使用\",{\"1\":{\"67\":1}}],[\"mustache的使用\",{\"1\":{\"67\":1}}],[\"mustache中不仅仅可以是data中的属性\",{\"1\":{\"67\":1}}],[\"mustache\",{\"0\":{\"67\":1},\"1\":{\"67\":1}}],[\"methods属性是一个对象\",{\"1\":{\"141\":1}}],[\"methods属性\",{\"0\":{\"141\":1}}],[\"methods的getfullname中的计算\",{\"1\":{\"110\":1}}],[\"methods中方法\",{\"1\":{\"85\":1}}],[\"methods等选项了\",{\"1\":{\"61\":1}}],[\"methods\",{\"0\":{\"110\":1},\"1\":{\"60\":1,\"62\":1,\"67\":1,\"69\":1,\"77\":1,\"80\":1,\"85\":1,\"86\":1,\"87\":1,\"96\":1,\"100\":1,\"108\":1,\"110\":2,\"111\":1,\"113\":1,\"114\":2,\"115\":1,\"117\":1,\"120\":1,\"126\":1,\"133\":1,\"139\":2}}],[\"message\",{\"1\":{\"59\":1,\"67\":5,\"69\":3,\"71\":2,\"72\":2,\"73\":1,\"78\":1,\"80\":1,\"81\":1,\"85\":1,\"86\":1,\"87\":1,\"107\":1,\"108\":2,\"109\":2,\"139\":4}}],[\"mytext\",{\"1\":{\"126\":2}}],[\"my\",{\"1\":{\"60\":2,\"67\":2,\"69\":2,\"70\":2,\"72\":1,\"74\":1,\"75\":2,\"77\":2,\"78\":2,\"80\":2,\"81\":2,\"82\":2,\"83\":2,\"85\":2,\"86\":2,\"87\":2,\"89\":2,\"90\":2,\"91\":1,\"92\":1,\"94\":2,\"95\":2,\"96\":2,\"100\":2,\"107\":1,\"108\":2,\"109\":2,\"110\":4,\"111\":2,\"113\":2,\"114\":2,\"117\":2,\"120\":2}}],[\"mycomponent\",{\"1\":{\"58\":1}}],[\"mycomponentname\",{\"1\":{\"58\":1}}],[\"male\",{\"1\":{\"120\":3}}],[\"margin\",{\"1\":{\"117\":1}}],[\"map\",{\"1\":{\"54\":2,\"117\":1,\"142\":1}}],[\"mac目录下回自动生成的一个文件\",{\"1\":{\"53\":1}}],[\"maxsize\",{\"1\":{\"39\":1,\"47\":1}}],[\"main\",{\"1\":{\"23\":1,\"26\":1}}],[\"msg\",{\"1\":{\"70\":3,\"123\":1,\"125\":1}}],[\"ms\",{\"1\":{\"36\":1}}],[\"mono\",{\"1\":{\"131\":1}}],[\"movies\",{\"1\":{\"94\":2,\"96\":5}}],[\"movie\",{\"1\":{\"94\":2,\"96\":2}}],[\"mousemove\",{\"1\":{\"85\":6}}],[\"mousemove=\",{\"1\":{\"85\":1}}],[\"mount\",{\"1\":{\"60\":1,\"67\":1,\"69\":1,\"70\":1,\"75\":1,\"77\":1,\"78\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"85\":1,\"86\":1,\"87\":1,\"89\":1,\"90\":1,\"94\":1,\"95\":1,\"96\":1,\"100\":1,\"108\":1,\"109\":1,\"110\":2,\"111\":1,\"113\":1,\"114\":1,\"117\":1,\"120\":1,\"139\":2}}],[\"mozilla\",{\"1\":{\"84\":1}}],[\"moz\",{\"1\":{\"36\":1}}],[\"modifiers\",{\"1\":{\"120\":1}}],[\"modelmodifiers\",{\"1\":{\"126\":8}}],[\"modelvalue\",{\"1\":{\"118\":2,\"126\":8}}],[\"model\",{\"0\":{\"118\":1,\"127\":1},\"1\":{\"118\":6,\"123\":2,\"124\":2,\"125\":2,\"126\":6,\"127\":4,\"138\":2}}],[\"model=\",{\"1\":{\"89\":1,\"96\":1,\"110\":1,\"113\":1,\"118\":1,\"120\":8}}],[\"mode\",{\"1\":{\"54\":1}}],[\"mode配置列表\",{\"0\":{\"54\":1}}],[\"mode参数指定打包的模式\",{\"1\":{\"28\":1}}],[\"modules下的\",{\"1\":{\"22\":1}}],[\"module\",{\"0\":{\"46\":1,\"47\":1},\"1\":{\"19\":1,\"26\":1,\"29\":1,\"30\":4,\"37\":1,\"46\":2,\"49\":1,\"51\":1,\"52\":1,\"54\":1}}],[\"文件相对于webpack配置文件的路径\",{\"1\":{\"43\":1}}],[\"文件的内容\",{\"1\":{\"43\":1}}],[\"文件命名规则\",{\"0\":{\"43\":1}}],[\"文件中\",{\"1\":{\"38\":1,\"61\":1}}],[\"文件\",{\"1\":{\"23\":1,\"28\":2,\"38\":1,\"63\":1}}],[\"文件夹\",{\"1\":{\"23\":1}}],[\"后添加\",{\"1\":{\"124\":1,\"125\":1}}],[\"后续会讲到\",{\"1\":{\"116\":1}}],[\"后续我们需要通过babel来进行转换和设置\",{\"1\":{\"23\":1}}],[\"后面会讲到\",{\"1\":{\"43\":1}}],[\"后者是将其地址存在栈内存中\",{\"1\":{\"1\":1}}],[\"件是否需要转成es5之前的语法\",{\"1\":{\"23\":1}}],[\"里面存放一个main\",{\"1\":{\"23\":1}}],[\"命令式编程关注的是\",{\"1\":{\"137\":1}}],[\"命令行使用postcss\",{\"0\":{\"35\":1}}],[\"命令\",{\"1\":{\"23\":1}}],[\"己的vue\",{\"1\":{\"22\":1}}],[\"处理\",{\"1\":{\"124\":1}}],[\"处理起来就会变得非常复杂\",{\"1\":{\"56\":1}}],[\"处理时\",{\"1\":{\"53\":1}}],[\"处理文件的名称\",{\"1\":{\"43\":1}}],[\"处理文件的扩展名\",{\"1\":{\"43\":1}}],[\"处理css文件中的样式\",{\"1\":{\"29\":1}}],[\"处理vue项目的sfc文件\",{\"1\":{\"20\":1}}],[\"处理应用程序时\",{\"1\":{\"19\":1}}],[\"字体显示黑色\",{\"1\":{\"76\":1}}],[\"字体显示红色\",{\"1\":{\"76\":1}}],[\"字体或公共库\",{\"1\":{\"53\":1}}],[\"字体文件加载\",{\"0\":{\"42\":1}}],[\"字体等\",{\"1\":{\"28\":1}}],[\"字体font文件的加载\",{\"1\":{\"20\":1}}],[\"字符串方法名称\",{\"1\":{\"115\":1}}],[\"字符串转换为对象\",{\"1\":{\"14\":1}}],[\"字符串\",{\"1\":{\"14\":1}}],[\"将代码复制到其中\",{\"1\":{\"136\":1}}],[\"将内部原生\",{\"1\":{\"118\":1}}],[\"将\",{\"1\":{\"114\":1}}],[\"将被侦听的数组的变更方法进行了包裹\",{\"1\":{\"96\":1}}],[\"将返回的对象放到一个methods\",{\"1\":{\"77\":1}}],[\"将对象放到一个单独的属性中\",{\"1\":{\"77\":1}}],[\"将短横线命名的\",{\"1\":{\"74\":1}}],[\"将不可见\",{\"1\":{\"73\":1}}],[\"将webpack安装在项目的本地目录中\",{\"1\":{\"24\":1}}],[\"将其转换成javascript\",{\"1\":{\"20\":1}}],[\"将es6转换成es5的语法\",{\"1\":{\"20\":1}}],[\"它会在自己的上层作用于中来查找this\",{\"1\":{\"141\":1}}],[\"它会在内部从一个或多个入口点构建一个\",{\"1\":{\"19\":1}}],[\"它会自动将\",{\"1\":{\"126\":1}}],[\"它会基于key的变化重新排列元素顺序\",{\"1\":{\"97\":1}}],[\"它会先执行该元素上的事件处理函数\",{\"1\":{\"87\":1}}],[\"它可以在组件编译完毕前隐藏原始模板\",{\"1\":{\"73\":1}}],[\"它可以帮助我们将一些现代的css特性\",{\"1\":{\"38\":1}}],[\"它的默认值是一个空对象\",{\"1\":{\"126\":1}}],[\"它的dom实际都是有渲染的\",{\"1\":{\"92\":1}}],[\"它的优点是使组件之间的依赖关系更加明确\",{\"1\":{\"61\":1}}],[\"它的主要功能是将单个文件或整个目录复制到构建目录\",{\"1\":{\"53\":1}}],[\"它仍然会出现在打包后的\",{\"1\":{\"61\":1}}],[\"它将使用\",{\"1\":{\"38\":1}}],[\"它将返回目标对象\",{\"1\":{\"8\":1}}],[\"它允许您使用最新的\",{\"1\":{\"38\":1}}],[\"它们将会被逐一调用\",{\"1\":{\"115\":1}}],[\"它们最终在vue中表示出来的都是一个个vnode\",{\"1\":{\"98\":1}}],[\"它们的\",{\"1\":{\"61\":1}}],[\"它们如何可以自动转换呢\",{\"1\":{\"33\":1}}],[\"它们可以执行各种任务\",{\"1\":{\"29\":1}}],[\"它们作为webpack的一部分\",{\"1\":{\"29\":1}}],[\"它们均为静态资源\",{\"1\":{\"19\":1}}],[\"当原生的\",{\"1\":{\"118\":1}}],[\"当我们多次使用计算属性时\",{\"1\":{\"110\":1}}],[\"当我们运行webpack时\",{\"1\":{\"23\":1}}],[\"当有多次一样的逻辑时\",{\"1\":{\"107\":1}}],[\"当score小于60的时候\",{\"1\":{\"106\":1}}],[\"当score大于60的时候\",{\"1\":{\"106\":1}}],[\"当条件为true时\",{\"1\":{\"90\":1}}],[\"当条件为false时\",{\"1\":{\"90\":1}}],[\"当一个元素上的事件被触发时\",{\"1\":{\"87\":1}}],[\"当通过methods中定义方法\",{\"1\":{\"86\":1}}],[\"当数据变化时\",{\"1\":{\"112\":1}}],[\"当数据另一个状态时\",{\"1\":{\"76\":1}}],[\"当数据为某个状态时\",{\"1\":{\"76\":1}}],[\"当数据发生变化时\",{\"1\":{\"69\":1}}],[\"当不带参数使用时\",{\"1\":{\"74\":1}}],[\"当用于组件\",{\"1\":{\"74\":1}}],[\"当用于绑定\",{\"1\":{\"74\":1}}],[\"当data中的数据发生改变时\",{\"1\":{\"67\":1}}],[\"当使用直接在\",{\"1\":{\"73\":1}}],[\"当使用\",{\"1\":{\"58\":2,\"74\":1}}],[\"当面对一个非常复杂的问题时\",{\"1\":{\"56\":1}}],[\"当你需要将一些文件复制到构建目录\",{\"1\":{\"53\":1}}],[\"当你有一些静态资源\",{\"1\":{\"53\":1}}],[\"当然我们依然可以把它们抽离到单独的js\",{\"1\":{\"62\":1}}],[\"当然我们也可以通过outputpath来设置输出的文件夹\",{\"1\":{\"45\":1}}],[\"当然我们待会儿可以学习如何修改它的名字和所在文件夹\",{\"1\":{\"39\":1}}],[\"当然\",{\"1\":{\"23\":1,\"67\":1}}],[\"当\",{\"1\":{\"19\":1,\"110\":1,\"114\":1,\"120\":1}}],[\"当修改其中一个变量的值时\",{\"1\":{\"3\":2}}],[\"静态模块打包工具\",{\"1\":{\"19\":1}}],[\"这里涉及到箭头函数使用this的查找规则\",{\"1\":{\"141\":1}}],[\"这里其实涉及到两种不同的编程范式命令式编程和声明式编程\",{\"1\":{\"137\":1}}],[\"这次更新对于ul和button是不需要进行更新\",{\"1\":{\"100\":1}}],[\"这次因为某些样式我们需要根据数据动态来决定\",{\"1\":{\"79\":1}}],[\"这些方法可以被绑定到\",{\"1\":{\"141\":1}}],[\"这些都是模板特有的语法\",{\"1\":{\"139\":1}}],[\"这些标签会替换掉我们挂载到的元素\",{\"1\":{\"139\":1}}],[\"这些被包裹过的方法包括\",{\"1\":{\"96\":1}}],[\"这些内容只有在条件为true时\",{\"1\":{\"89\":1}}],[\"这三个指令与javascript的条件语句if\",{\"1\":{\"89\":1}}],[\"这三大框架的创建过程我们都是借助于脚手架\",{\"1\":{\"18\":1}}],[\"这种方式一致存在一个缺陷就是当给对象添加或者删除属性时\",{\"1\":{\"132\":1}}],[\"这种方式可以更好的表示loader的配置\",{\"1\":{\"30\":1}}],[\"这种做法有一个直观的弊端\",{\"1\":{\"105\":1}}],[\"这种绑定的方式\",{\"1\":{\"82\":1}}],[\"这类打包工具\",{\"1\":{\"63\":1}}],[\"这就意味着每个组件都会有自己的模板\",{\"1\":{\"62\":1}}],[\"这可能会影响应用长期的可维护性\",{\"1\":{\"61\":1}}],[\"这让我们能够使用同样的\",{\"1\":{\"58\":1}}],[\"这部分独立的功能\",{\"1\":{\"56\":1}}],[\"这意味着一个以\",{\"1\":{\"58\":1}}],[\"这意味着当您运行\",{\"1\":{\"38\":1}}],[\"这意味着您可以在\",{\"1\":{\"38\":1}}],[\"这样做的目的是多个包本身相互独立\",{\"1\":{\"131\":1}}],[\"这样的\",{\"1\":{\"73\":1}}],[\"这样最终打包出的javascript包就会有关于componentc的内容\",{\"1\":{\"61\":1}}],[\"这样在\",{\"1\":{\"37\":1}}],[\"这样可以更灵活地根据项目需求进行定制和配置\",{\"1\":{\"24\":1}}],[\"这是因为计算属性会基于它们的依赖关系进行缓存\",{\"1\":{\"110\":1}}],[\"这是因为小的图片转换base64之后可以和页面一起被请求\",{\"1\":{\"41\":1}}],[\"这是因为我的两张图片的大小分别是38kb和295kb\",{\"1\":{\"40\":1}}],[\"这是因为默认情况下webpack并不清楚我们打包后的文\",{\"1\":{\"23\":1}}],[\"这是因为目前前端开发我们通常都会直接使用三大框架来开发\",{\"1\":{\"18\":1}}],[\"这个\",{\"1\":{\"126\":1}}],[\"这个过程就是值绑定\",{\"1\":{\"120\":1}}],[\"这个数据通过插值语法等方式绑定到template中\",{\"1\":{\"112\":1}}],[\"这个数据有着原始数据属性值的一份精确拷贝\",{\"1\":{\"5\":1}}],[\"这个后面讲setter和getter时会讲到\",{\"1\":{\"109\":1}}],[\"这个案例是当我点击按钮时会在中间插入一个f\",{\"1\":{\"100\":1}}],[\"这个key属性有什么作用呢\",{\"1\":{\"97\":1}}],[\"这个别名可以自定来定义\",{\"1\":{\"94\":1}}],[\"这个行为在大多数情况都符合期望的绑定值类型\",{\"1\":{\"74\":1}}],[\"这个时候无论后面数据是否有变化\",{\"1\":{\"114\":1}}],[\"这个时候就需要用侦听器watch来完成了\",{\"1\":{\"112\":1}}],[\"这个时候\",{\"1\":{\"59\":1,\"84\":1,\"90\":1}}],[\"这个时候我们也可以给计算属性设置一个setter的方法\",{\"1\":{\"111\":1}}],[\"这个时候我们就需要进行条件判断了\",{\"1\":{\"88\":1}}],[\"这个时候我们就可以使用less\",{\"1\":{\"33\":1}}],[\"这个时候我们可以使用v\",{\"1\":{\"93\":1}}],[\"这个时候我们可以使用defineplugin插件\",{\"1\":{\"52\":1}}],[\"这个时候我们可以使用placeholders来完成\",{\"1\":{\"43\":1}}],[\"这个时候我们可以通过\",{\"1\":{\"27\":1}}],[\"这个对象其实本质上就是一个组件\",{\"1\":{\"57\":1}}],[\"这个是ejs模块填充数据的方式\",{\"1\":{\"51\":1}}],[\"这个我们需要一个属于自己的index\",{\"1\":{\"51\":1}}],[\"这个插件在以下情况下非常有用\",{\"1\":{\"53\":1}}],[\"这个插件就是cleanwebpackplugin\",{\"1\":{\"49\":1}}],[\"这个插件包含了\",{\"1\":{\"38\":1}}],[\"这个也是vue\",{\"1\":{\"45\":1}}],[\"这个也是vue的写法\",{\"1\":{\"44\":1}}],[\"这个工具可以帮助我们进行一些css的转换和适配\",{\"1\":{\"34\":1}}],[\"这个loader最常用的是css\",{\"1\":{\"30\":1}}],[\"这个依赖关系图会包含应用程序中所需的所有模块\",{\"1\":{\"28\":1}}],[\"这个文件中的代码被压缩和丑化了\",{\"1\":{\"23\":1}}],[\"日常的开发中根本就没有面临这些问题\",{\"1\":{\"18\":1}}],[\"并编写一个处理函数来改变抛出的值\",{\"1\":{\"126\":1}}],[\"并不会将解析之后的css插入到页面中\",{\"1\":{\"31\":1}}],[\"并不需要思考这些问题\",{\"1\":{\"18\":1}}],[\"并将转换后的结果传递给下一个loader\",{\"1\":{\"29\":1}}],[\"并将被拷贝对象的栈内存数据完全拷贝到该块空间中\",{\"1\":{\"3\":1}}],[\"并生成输出文件\",{\"1\":{\"28\":1}}],[\"并且通过\",{\"1\":{\"141\":1}}],[\"并且应该可以通过this获取到data返回对象中的数据\",{\"1\":{\"141\":1}}],[\"并且该函数需要返回一个对象\",{\"1\":{\"140\":1}}],[\"并且标记它的类型为\",{\"1\":{\"139\":1}}],[\"并且ide很有可能没有任何提示\",{\"1\":{\"139\":1}}],[\"并且自己手动引入\",{\"1\":{\"134\":1}}],[\"并且它们还可以做到是响应式的\",{\"1\":{\"133\":1}}],[\"并且多个mixins会存在命名冲突的问题\",{\"1\":{\"133\":1}}],[\"并且\",{\"1\":{\"131\":1}}],[\"并且计算属性是有缓存的\",{\"1\":{\"109\":1}}],[\"并且如果多个地方都使用到\",{\"1\":{\"105\":1}}],[\"并且最后进行新增\",{\"1\":{\"101\":1}}],[\"并且支持有一二三个参数\",{\"1\":{\"94\":1}}],[\"并且需要对其进行渲染\",{\"1\":{\"93\":1}}],[\"并且在v\",{\"1\":{\"90\":1}}],[\"并且是一个对象\",{\"1\":{\"80\":1}}],[\"并且可以使用\",{\"1\":{\"62\":1}}],[\"并且我们前端提到过\",{\"1\":{\"67\":1}}],[\"并且我们的代码为了适配一些浏览器\",{\"1\":{\"62\":1}}],[\"并且我们需要一系列的配置来满足要求\",{\"1\":{\"26\":1}}],[\"并且对\",{\"1\":{\"61\":1}}],[\"并且只能在该父组件中使用\",{\"1\":{\"61\":1}}],[\"并且配置资源体积限制实现\",{\"1\":{\"46\":1}}],[\"并且图片可以正常显示\",{\"1\":{\"40\":1}}],[\"并且会移除\",{\"1\":{\"97\":1}}],[\"并且会将它放到我们输出的文件夹中\",{\"1\":{\"39\":1}}],[\"并且会根据目标浏览器或者运行时环境\",{\"1\":{\"38\":1}}],[\"并且制定使用autoprefixer\",{\"1\":{\"36\":1}}],[\"并且使用它\",{\"1\":{\"134\":1}}],[\"并且使用\",{\"1\":{\"30\":1}}],[\"并且同时会安装npm\",{\"1\":{\"21\":1}}],[\"合并以及其他相关的优化\",{\"1\":{\"18\":1}}],[\"提取\",{\"1\":{\"20\":1}}],[\"提高开发的效率\",{\"1\":{\"18\":1}}],[\"提供\",{\"1\":{\"16\":1}}],[\"tbody>\",{\"1\":{\"117\":1}}],[\"td>\",{\"1\":{\"117\":6}}],[\"td\",{\"1\":{\"117\":1}}],[\"thead>\",{\"1\":{\"117\":1}}],[\"th>\",{\"1\":{\"117\":6}}],[\"th\",{\"1\":{\"117\":2}}],[\"this到底指向什么\",{\"1\":{\"141\":1}}],[\"this到底是如何查找和绑定的呢\",{\"1\":{\"141\":1}}],[\"this\",{\"1\":{\"16\":1,\"67\":3,\"69\":1,\"77\":5,\"96\":5,\"100\":1,\"105\":1,\"108\":4,\"109\":4,\"110\":7,\"111\":7,\"113\":4,\"114\":3,\"115\":1,\"116\":2,\"117\":5,\"126\":3,\"139\":4,\"141\":2}}],[\"target\",{\"1\":{\"87\":1,\"118\":1,\"126\":2,\"127\":2}}],[\"table>\",{\"1\":{\"117\":1}}],[\"table\",{\"1\":{\"117\":1}}],[\"tab\",{\"1\":{\"65\":1}}],[\"trim=\",{\"1\":{\"125\":1}}],[\"trim\",{\"0\":{\"125\":1},\"1\":{\"125\":1}}],[\"triggered\",{\"1\":{\"115\":3}}],[\"trigger\",{\"1\":{\"65\":1}}],[\"tr>\",{\"1\":{\"117\":1}}],[\"true\",{\"1\":{\"67\":1,\"77\":5,\"78\":1,\"84\":1,\"87\":1,\"90\":1,\"114\":3,\"115\":2,\"116\":2,\"126\":2}}],[\"tree\",{\"1\":{\"61\":2,\"99\":1,\"132\":1}}],[\"t注册一个组件的时候\",{\"1\":{\"58\":1}}],[\"tennis\",{\"1\":{\"120\":4}}],[\"textarea>\",{\"1\":{\"120\":1}}],[\"textdecoration\",{\"1\":{\"81\":1}}],[\"text=\",{\"1\":{\"71\":1}}],[\"textcontent\",{\"1\":{\"71\":1}}],[\"text\",{\"0\":{\"71\":1},\"1\":{\"87\":1,\"89\":1,\"96\":1,\"110\":1,\"113\":1,\"117\":1,\"126\":2,\"127\":2}}],[\"template模板中\",{\"1\":{\"141\":1}}],[\"template模板中只能有一个根元素\",{\"1\":{\"74\":1}}],[\"template中的\",{\"1\":{\"140\":1}}],[\"template中通过\",{\"1\":{\"140\":1}}],[\"template标签\",{\"1\":{\"139\":1}}],[\"template属性\",{\"0\":{\"139\":1},\"1\":{\"139\":1}}],[\"template会自动进行更新来显示最新的数据\",{\"1\":{\"112\":1}}],[\"template元素是一种用于保存客户端内容的机制\",{\"1\":{\"139\":1}}],[\"template元素使用\",{\"0\":{\"95\":1}}],[\"template元素可以当做不可见的包裹元素\",{\"1\":{\"90\":1}}],[\"template元素\",{\"1\":{\"90\":1}}],[\"template>\",{\"1\":{\"60\":2,\"61\":1,\"62\":1,\"66\":1,\"67\":1,\"69\":1,\"70\":1,\"72\":1,\"74\":1,\"75\":1,\"77\":1,\"78\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"85\":1,\"86\":1,\"87\":1,\"89\":1,\"90\":3,\"91\":1,\"92\":1,\"94\":1,\"95\":2,\"96\":1,\"100\":1,\"107\":1,\"108\":1,\"109\":1,\"110\":2,\"111\":1,\"113\":1,\"114\":1,\"117\":3,\"120\":1,\"126\":2,\"127\":1,\"139\":1}}],[\"template\",{\"0\":{\"90\":1},\"1\":{\"51\":2,\"60\":3,\"67\":2,\"69\":1,\"70\":1,\"75\":1,\"77\":1,\"78\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"85\":1,\"86\":1,\"87\":1,\"89\":1,\"90\":1,\"94\":1,\"95\":2,\"96\":1,\"100\":1,\"108\":1,\"109\":1,\"110\":2,\"111\":1,\"113\":1,\"114\":1,\"117\":1,\"118\":1,\"120\":1,\"139\":4}}],[\"test\",{\"1\":{\"30\":1,\"33\":1,\"39\":1,\"40\":1,\"42\":2,\"47\":1}}],[\"test属性\",{\"1\":{\"30\":1}}],[\"touppercase\",{\"1\":{\"126\":1}}],[\"totalprice\",{\"1\":{\"117\":2}}],[\"toggle\",{\"1\":{\"67\":2,\"77\":2}}],[\"to\",{\"1\":{\"51\":1,\"53\":2,\"137\":2}}],[\"t\",{\"1\":{\"51\":1}}],[\"title>\",{\"1\":{\"51\":1,\"117\":1}}],[\"title\",{\"1\":{\"32\":2,\"36\":2,\"51\":5,\"59\":1,\"60\":3,\"62\":2,\"77\":4,\"78\":4}}],[\"type=\",{\"1\":{\"87\":1,\"89\":1,\"96\":1,\"110\":1,\"113\":1,\"120\":6,\"124\":1,\"126\":2,\"127\":2,\"139\":1}}],[\"type的使用\",{\"0\":{\"47\":1}}],[\"type\",{\"0\":{\"46\":1},\"1\":{\"29\":1,\"39\":1,\"42\":1,\"46\":2,\"47\":1}}],[\"typescript的处理\",{\"1\":{\"20\":1}}],[\"typescript\",{\"1\":{\"18\":1,\"131\":2}}],[\"typescript开发脚本逻辑\",{\"1\":{\"18\":1}}],[\"typeof\",{\"1\":{\"6\":1,\"12\":1,\"13\":1}}],[\"手写循环递归\",{\"1\":{\"15\":1}}],[\"手写递归\",{\"0\":{\"6\":1,\"12\":1}}],[\"600\",{\"1\":{\"117\":1}}],[\"60\",{\"1\":{\"89\":1,\"107\":1,\"108\":1,\"109\":1,\"110\":2}}],[\"6\",{\"1\":{\"14\":2,\"39\":1,\"40\":1,\"42\":2,\"47\":1,\"115\":1}}],[\"yarn\",{\"1\":{\"142\":4}}],[\"y\",{\"1\":{\"14\":2}}],[\"59\",{\"1\":{\"117\":1}}],[\"5px\",{\"1\":{\"117\":1}}],[\"5c6b77\",{\"1\":{\"117\":1}}],[\"50px\",{\"1\":{\"80\":2}}],[\"50\",{\"1\":{\"80\":1}}],[\"5\",{\"1\":{\"14\":2,\"115\":1}}],[\"join\",{\"1\":{\"67\":2,\"107\":1,\"108\":1,\"109\":1}}],[\"jpe\",{\"1\":{\"39\":1,\"40\":1,\"47\":1}}],[\"jantimon\",{\"1\":{\"52\":1}}],[\"james\",{\"1\":{\"16\":1,\"114\":1}}],[\"javascript的打包\",{\"1\":{\"20\":1}}],[\"javascript\",{\"1\":{\"14\":1,\"19\":1,\"51\":1,\"58\":1,\"113\":1,\"139\":1}}],[\"jquery\",{\"1\":{\"15\":1}}],[\"js和vue\",{\"1\":{\"142\":1}}],[\"js或者vuejs\",{\"1\":{\"130\":1}}],[\"jsx\",{\"1\":{\"66\":1}}],[\"js修改成了\",{\"1\":{\"27\":1}}],[\"js文件中写明配置信息\",{\"1\":{\"30\":1}}],[\"js文件\",{\"1\":{\"26\":1}}],[\"js作为入口\",{\"1\":{\"23\":1}}],[\"js的名字\",{\"1\":{\"27\":1}}],[\"js的文件\",{\"1\":{\"23\":1}}],[\"js的数据类型分为两类\",{\"1\":{\"1\":1}}],[\"json中的dev后加上\",{\"1\":{\"142\":1}}],[\"json中增加一个新的脚本\",{\"1\":{\"27\":1}}],[\"json文件\",{\"1\":{\"24\":1}}],[\"json\",{\"0\":{\"14\":2},\"1\":{\"14\":8,\"24\":1,\"36\":1}}],[\"js中的基本数据类型\",{\"1\":{\"2\":1}}],[\"js\",{\"0\":{\"0\":1,\"4\":1,\"143\":1},\"1\":{\"21\":2,\"23\":2,\"26\":2,\"27\":3,\"28\":2,\"29\":1,\"37\":1,\"38\":1,\"43\":1,\"60\":2,\"61\":1,\"67\":2,\"69\":2,\"70\":2,\"77\":2,\"78\":2,\"80\":2,\"81\":2,\"82\":2,\"83\":2,\"85\":2,\"86\":2,\"87\":3,\"89\":2,\"90\":2,\"94\":2,\"95\":2,\"96\":2,\"100\":2,\"108\":2,\"109\":2,\"110\":4,\"111\":2,\"113\":2,\"114\":2,\"117\":3,\"120\":2,\"136\":3,\"139\":4,\"142\":1}}],[\"常用\",{\"0\":{\"14\":1}}],[\">hhhh<\",{\"1\":{\"139\":1}}],[\">香蕉<\",{\"1\":{\"120\":1}}],[\">橘子<\",{\"1\":{\"120\":1}}],[\">苹果<\",{\"1\":{\"120\":1}}],[\">女\",{\"1\":{\"120\":1}}],[\">男\",{\"1\":{\"120\":1}}],[\">移除<\",{\"1\":{\"117\":1}}],[\">+<\",{\"1\":{\"117\":1}}],[\">+1<\",{\"1\":{\"69\":3,\"139\":2}}],[\">改变info\",{\"1\":{\"114\":2}}],[\">改变info<\",{\"1\":{\"114\":1}}],[\">查找答案<\",{\"1\":{\"113\":1}}],[\">修改fullname<\",{\"1\":{\"111\":1}}],[\">修改firstname<\",{\"1\":{\"110\":1}}],[\">=\",{\"1\":{\"107\":1,\"108\":1,\"109\":1,\"110\":2}}],[\">插入f元素<\",{\"1\":{\"100\":1}}],[\">添加电影<\",{\"1\":{\"96\":1}}],[\">良好<\",{\"1\":{\"89\":1}}],[\">优秀<\",{\"1\":{\"89\":1}}],[\">div<\",{\"1\":{\"85\":1}}],[\">按钮<\",{\"1\":{\"87\":2}}],[\">按钮2<\",{\"1\":{\"86\":1}}],[\">按钮1<\",{\"1\":{\"85\":2,\"86\":1}}],[\">按钮点击<\",{\"1\":{\"62\":1}}],[\">呵呵呵呵<\",{\"1\":{\"77\":4,\"80\":2,\"92\":1}}],[\">哈哈哈哈<\",{\"1\":{\"77\":1,\"78\":3,\"80\":3,\"83\":3,\"91\":1,\"92\":1}}],[\">哈哈哈<\",{\"1\":{\"70\":1,\"81\":1,\"82\":2}}],[\">百度一下<\",{\"1\":{\"74\":1,\"75\":1}}],[\">切换<\",{\"1\":{\"67\":1,\"77\":1,\"90\":1}}],[\"><\",{\"1\":{\"51\":2,\"60\":2,\"67\":1,\"69\":2,\"70\":2,\"71\":1,\"77\":2,\"78\":2,\"80\":2,\"81\":2,\"82\":3,\"83\":2,\"85\":4,\"86\":2,\"87\":2,\"89\":1,\"90\":2,\"94\":2,\"95\":3,\"96\":2,\"100\":2,\"108\":1,\"109\":1,\"110\":3,\"111\":1,\"113\":2,\"114\":2,\"117\":3,\"120\":3,\"135\":1,\"136\":1,\"139\":3}}],[\">favicon\",{\"1\":{\"51\":1}}],[\">\",{\"0\":{\"14\":1},\"1\":{\"14\":2,\"51\":8,\"60\":2,\"61\":1,\"67\":7,\"69\":1,\"70\":1,\"71\":1,\"72\":2,\"74\":8,\"75\":7,\"77\":7,\"78\":3,\"80\":4,\"81\":1,\"82\":3,\"83\":2,\"85\":6,\"86\":3,\"87\":3,\"89\":4,\"90\":2,\"91\":1,\"92\":1,\"94\":6,\"95\":2,\"96\":4,\"100\":2,\"107\":2,\"108\":1,\"109\":1,\"110\":5,\"111\":1,\"113\":2,\"114\":2,\"117\":11,\"118\":3,\"120\":19,\"123\":2,\"124\":2,\"125\":1,\"126\":4,\"127\":3,\"139\":4}}],[\"待拷贝对象\",{\"0\":{\"14\":1}}],[\"option>\",{\"1\":{\"120\":3}}],[\"options\",{\"1\":{\"30\":1,\"37\":1,\"40\":1,\"42\":1,\"51\":3,\"115\":1,\"133\":2}}],[\"orange\",{\"1\":{\"120\":2}}],[\"or\",{\"1\":{\"114\":1}}],[\"org\",{\"1\":{\"19\":1,\"29\":1,\"43\":1,\"59\":1,\"84\":1,\"97\":1,\"105\":1,\"115\":1,\"116\":1,\"120\":1}}],[\"old\",{\"1\":{\"115\":2}}],[\"oldval\",{\"1\":{\"115\":7}}],[\"oldvalue\",{\"1\":{\"113\":2,\"114\":3}}],[\"oldvalue变化前的旧值\",{\"1\":{\"113\":1}}],[\"oldinfo\",{\"1\":{\"114\":4,\"116\":2}}],[\"on支持修饰符\",{\"1\":{\"87\":1}}],[\"on=\",{\"1\":{\"85\":1}}],[\"on的用法\",{\"1\":{\"84\":1}}],[\"on指令\",{\"1\":{\"84\":1}}],[\"on绑定事件\",{\"1\":{\"84\":1}}],[\"on\",{\"0\":{\"84\":1,\"87\":1},\"1\":{\"85\":3}}],[\"once\",{\"1\":{\"84\":1,\"87\":1}}],[\"once用于指定元素或者组件只渲染一次\",{\"1\":{\"69\":1}}],[\"once指令\",{\"0\":{\"69\":1}}],[\"once>\",{\"1\":{\"66\":1,\"69\":3}}],[\"online\",{\"1\":{\"35\":1}}],[\"o\",{\"1\":{\"36\":1}}],[\"outputpath\",{\"1\":{\"40\":1,\"42\":1}}],[\"output\",{\"1\":{\"23\":1,\"26\":1}}],[\"of\",{\"1\":{\"13\":1,\"117\":1}}],[\"obj2\",{\"1\":{\"141\":2}}],[\"obj\",{\"0\":{\"13\":1},\"1\":{\"6\":6,\"7\":3,\"8\":3,\"12\":11,\"13\":6,\"14\":3,\"16\":4,\"141\":2}}],[\"object\",{\"0\":{\"8\":1,\"13\":1},\"1\":{\"1\":1,\"6\":1,\"8\":2,\"12\":1,\"13\":4,\"14\":1,\"74\":1,\"84\":1,\"94\":3,\"112\":1,\"114\":1,\"117\":1,\"132\":1}}],[\"vjuː\",{\"1\":{\"130\":1}}],[\"vs\",{\"0\":{\"110\":1}}],[\"vscode中的代码片段有固定的格式\",{\"1\":{\"65\":1}}],[\"vscode\",{\"0\":{\"65\":1}}],[\"vnode的本质是一个javascript的对象\",{\"1\":{\"98\":1}}],[\"vnode的全称是virtual\",{\"1\":{\"98\":1}}],[\"vnode\",{\"0\":{\"98\":1},\"1\":{\"99\":1}}],[\"val\",{\"1\":{\"115\":7}}],[\"value=\",{\"1\":{\"118\":3,\"120\":8,\"126\":2,\"127\":2}}],[\"value\",{\"1\":{\"82\":2,\"87\":1,\"94\":5,\"95\":2,\"118\":2,\"126\":7,\"127\":2}}],[\"var\",{\"1\":{\"67\":2}}],[\"variables\",{\"1\":{\"38\":1}}],[\"v=4\",{\"1\":{\"75\":1}}],[\"viewmode的简称\",{\"1\":{\"138\":1}}],[\"view\",{\"1\":{\"130\":1,\"138\":2}}],[\"viewport\",{\"1\":{\"51\":1,\"117\":1}}],[\"vite\",{\"1\":{\"62\":1,\"63\":1}}],[\"vue提供了两种方式\",{\"1\":{\"139\":1}}],[\"vue提供了下面的指令来进行条件判断\",{\"1\":{\"88\":1}}],[\"vue虽然并没有完全遵守mvvm的模型\",{\"1\":{\"138\":1}}],[\"vue官方其实有说明\",{\"1\":{\"138\":1}}],[\"vue使用\",{\"1\":{\"131\":1}}],[\"vue在进行diff算法的时候\",{\"1\":{\"102\":1}}],[\"vue源码对于key的判断\",{\"0\":{\"101\":1}}],[\"vue事实上会对于有key和没有key会调用两个不同的方法\",{\"1\":{\"100\":1}}],[\"vue会使用一种最大限度减少动态元素并且尽可能的尝试就地修改\",{\"1\":{\"97\":1}}],[\"vue2\",{\"1\":{\"74\":1,\"132\":3,\"133\":1}}],[\"vue将模板编译成虚拟dom渲染函数\",{\"1\":{\"66\":1}}],[\"vue也支持\",{\"1\":{\"66\":1}}],[\"vue3带来的变化\",{\"0\":{\"131\":1}}],[\"vue3不支持过滤器了\",{\"1\":{\"117\":1}}],[\"vue3\",{\"0\":{\"64\":1},\"1\":{\"74\":2,\"132\":1,\"141\":1}}],[\"vue的源码全部使用\",{\"1\":{\"131\":1}}],[\"vue的开发模式\",{\"0\":{\"62\":1}}],[\"vue的组件化\",{\"0\":{\"57\":1}}],[\"vuejs\",{\"1\":{\"59\":1,\"97\":1,\"105\":1,\"115\":1,\"116\":1,\"120\":1}}],[\"vue文件\",{\"1\":{\"20\":1,\"63\":1}}],[\"vue项目加载的文件有哪些呢\",{\"0\":{\"20\":1}}],[\"vue\",{\"0\":{\"16\":1,\"103\":1,\"129\":1,\"130\":1,\"134\":1,\"147\":1},\"1\":{\"18\":1,\"56\":1,\"57\":1,\"58\":1,\"60\":3,\"61\":1,\"62\":1,\"63\":1,\"67\":2,\"69\":2,\"70\":2,\"74\":2,\"75\":1,\"77\":2,\"78\":2,\"80\":2,\"81\":2,\"82\":2,\"83\":2,\"85\":2,\"86\":2,\"87\":3,\"89\":2,\"90\":2,\"94\":2,\"95\":2,\"96\":3,\"100\":2,\"108\":2,\"109\":2,\"110\":4,\"111\":2,\"113\":2,\"114\":3,\"117\":2,\"120\":2,\"130\":1,\"131\":1,\"132\":1,\"135\":1,\"136\":1,\"139\":4,\"142\":1}}],[\"v\",{\"0\":{\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"84\":1,\"87\":1,\"90\":1,\"91\":1,\"92\":1,\"97\":1,\"118\":1,\"127\":1},\"1\":{\"13\":4,\"66\":2,\"69\":4,\"70\":2,\"71\":1,\"72\":2,\"73\":4,\"74\":5,\"75\":4,\"77\":1,\"79\":1,\"83\":2,\"84\":2,\"85\":4,\"87\":1,\"88\":4,\"89\":7,\"90\":4,\"91\":2,\"92\":6,\"93\":1,\"94\":7,\"95\":1,\"96\":2,\"100\":1,\"110\":1,\"113\":1,\"117\":3,\"118\":5,\"120\":8,\"123\":2,\"124\":2,\"125\":2,\"126\":6,\"127\":4,\"139\":1}}],[\"kebab\",{\"1\":{\"58\":4,\"79\":2}}],[\"key=\",{\"1\":{\"100\":1}}],[\"key属性主要用在vue的虚拟dom算法\",{\"1\":{\"97\":1}}],[\"keyup\",{\"1\":{\"87\":2}}],[\"keyalias\",{\"1\":{\"84\":1,\"87\":1}}],[\"key\",{\"0\":{\"97\":1},\"1\":{\"6\":4,\"61\":1,\"74\":1,\"94\":4,\"95\":2,\"97\":1,\"106\":1,\"112\":1}}],[\"kobe\",{\"1\":{\"16\":1,\"82\":2,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"114\":3}}],[\"k\",{\"1\":{\"13\":2}}],[\"emitvalue\",{\"1\":{\"126\":2}}],[\"emits\",{\"1\":{\"126\":2,\"127\":1}}],[\"e9e9e9\",{\"1\":{\"117\":2}}],[\"e\",{\"1\":{\"115\":3,\"126\":2}}],[\"events\",{\"1\":{\"84\":1}}],[\"event\",{\"1\":{\"84\":4,\"86\":5,\"87\":4}}],[\"element函数调用\",{\"1\":{\"66\":1}}],[\"else一起使用\",{\"1\":{\"92\":1}}],[\"else>\",{\"1\":{\"90\":1,\"117\":1}}],[\"else>不及格<\",{\"1\":{\"89\":1}}],[\"else\",{\"1\":{\"12\":1,\"88\":2,\"89\":5}}],[\"equiv=\",{\"1\":{\"51\":1,\"117\":1}}],[\"eot|ttf|woff2\",{\"1\":{\"42\":2}}],[\"eyj2zxjzaw9uijozlcjzb3vyy2vzijpbinrlc3quy3nzil0sim5hbwvzijpbxswibwfwcgluz3mioijbqufbo0vbq0useujbqwlco0tbqwpclhncqufpqjtnqufqqixxqkfbaui7vufbakisaujbqwlco0fbq25ciiwizmlszsi6imrlbw8uy3nziiwic291cmnlc0nvbnrlbnqiolsilnrpdgxlihtcbiagdxnlci1zzwxly3q6ig5vbmu7xg59il19\",{\"1\":{\"36\":1}}],[\"enterkeyup\",{\"1\":{\"87\":2}}],[\"enter=\",{\"1\":{\"87\":1}}],[\"entry\",{\"1\":{\"23\":1,\"26\":1}}],[\"entries\",{\"0\":{\"13\":1},\"1\":{\"13\":3}}],[\"en\",{\"1\":{\"84\":1,\"117\":1}}],[\"enable\",{\"1\":{\"51\":1}}],[\"enabled\",{\"1\":{\"51\":1}}],[\"env也是一个postcss的插件\",{\"1\":{\"38\":1}}],[\"env\",{\"0\":{\"38\":1},\"1\":{\"37\":1,\"38\":6}}],[\"end\",{\"1\":{\"36\":1}}],[\"examplex新建自己的文件夹以及测试demo\",{\"1\":{\"142\":1}}],[\"export\",{\"1\":{\"61\":2,\"62\":1,\"115\":1,\"126\":2,\"127\":1}}],[\"exports\",{\"1\":{\"26\":1,\"30\":1,\"37\":1,\"49\":1,\"51\":1,\"52\":1,\"54\":1}}],[\"ext\",{\"1\":{\"39\":1,\"40\":1,\"42\":2,\"43\":1,\"47\":1}}],[\"extract\",{\"1\":{\"28\":1}}],[\"extend\",{\"1\":{\"15\":1}}],[\"essential\",{\"0\":{\"149\":1}}],[\"essentials\",{\"1\":{\"120\":1}}],[\"es2015\",{\"1\":{\"61\":1}}],[\"es6\",{\"1\":{\"23\":1,\"62\":1}}],[\"es\",{\"1\":{\"19\":1}}],[\"乒乓球\",{\"1\":{\"12\":3,\"13\":1,\"14\":1}}],[\"排球\",{\"1\":{\"12\":2,\"13\":1,\"14\":1}}],[\"zs\",{\"1\":{\"12\":2,\"13\":1,\"14\":1}}],[\"若对象属性还是引用类型\",{\"1\":{\"12\":1}}],[\"若被拷贝对象中有引用类型\",{\"1\":{\"3\":1}}],[\"x中\",{\"1\":{\"133\":1}}],[\"x的时候\",{\"1\":{\"131\":2,\"133\":1}}],[\"x\",{\"1\":{\"14\":2,\"51\":1,\"117\":1,\"132\":3,\"133\":1,\"139\":2}}],[\"xia\",{\"1\":{\"10\":1}}],[\"xkc\",{\"1\":{\"6\":2}}],[\"pop\",{\"1\":{\"96\":1}}],[\"postcssoptions\",{\"1\":{\"37\":1}}],[\"postcss通常用于对css文件进行预处理和后处理\",{\"1\":{\"35\":1}}],[\"postcss是一个通过javascript来转换样式的工具\",{\"1\":{\"34\":1}}],[\"postcss\",{\"0\":{\"34\":1,\"37\":1,\"38\":1},\"1\":{\"35\":4,\"36\":1,\"37\":6,\"38\":11}}],[\"push\",{\"1\":{\"96\":2}}],[\"public\",{\"1\":{\"51\":2,\"53\":1}}],[\"p\",{\"1\":{\"84\":1}}],[\"px\",{\"1\":{\"80\":1}}],[\"p>\",{\"1\":{\"60\":1,\"62\":1,\"113\":2}}],[\"price\",{\"1\":{\"117\":10}}],[\"preventdefault\",{\"1\":{\"84\":1,\"87\":1}}],[\"prevent\",{\"1\":{\"84\":1,\"87\":1}}],[\"pre>\",{\"1\":{\"72\":1}}],[\"pre用于跳过元素和它的子元素的编译过程\",{\"1\":{\"72\":1}}],[\"pre\",{\"0\":{\"72\":1}}],[\"preset\",{\"0\":{\"38\":1},\"1\":{\"37\":1,\"38\":7}}],[\"proxy\",{\"1\":{\"114\":1,\"132\":1}}],[\"props\",{\"1\":{\"74\":2,\"126\":2,\"127\":1,\"133\":1}}],[\"property\",{\"1\":{\"74\":4,\"79\":2}}],[\"properly\",{\"1\":{\"51\":1}}],[\"prop\",{\"1\":{\"74\":5,\"118\":1,\"126\":4,\"127\":1}}],[\"production\",{\"1\":{\"54\":1}}],[\"please\",{\"1\":{\"51\":1}}],[\"placeholders\",{\"1\":{\"43\":1}}],[\"plugin可以用于执行更加广泛的任务\",{\"1\":{\"48\":1}}],[\"plugin\",{\"0\":{\"48\":1},\"1\":{\"49\":2,\"50\":1,\"51\":1,\"52\":1,\"53\":2}}],[\"plugins\",{\"1\":{\"37\":2,\"49\":1,\"51\":1,\"52\":1}}],[\"plugin提取css文件\",{\"1\":{\"28\":1}}],[\"plugin生成html文件\",{\"1\":{\"28\":1}}],[\"png等格式的图片\",{\"1\":{\"39\":1}}],[\"p但是实现这些功能\",{\"1\":{\"34\":1}}],[\"padding\",{\"1\":{\"117\":1}}],[\"passive\",{\"1\":{\"84\":2,\"87\":2}}],[\"pascalcase\",{\"1\":{\"58\":4}}],[\"patchunkeyedchildren方法\",{\"1\":{\"101\":1}}],[\"patchkeyedchildren方法\",{\"1\":{\"101\":1}}],[\"patterns\",{\"1\":{\"53\":1}}],[\"path\",{\"1\":{\"23\":1,\"26\":4,\"43\":1}}],[\"package\",{\"1\":{\"24\":2}}],[\"parsefloat\",{\"1\":{\"124\":1}}],[\"parser\",{\"1\":{\"39\":1,\"47\":1}}],[\"parse\",{\"0\":{\"14\":1},\"1\":{\"14\":3}}],[\"pig\",{\"1\":{\"10\":2}}],[\"person1\",{\"1\":{\"6\":4}}],[\"person\",{\"1\":{\"6\":3}}],[\"d它们都是没有变化的\",{\"1\":{\"100\":1}}],[\"ds\",{\"1\":{\"53\":1}}],[\"date\",{\"1\":{\"117\":5}}],[\"data中返回的对象会被vue的响应式系统劫持\",{\"1\":{\"140\":1}}],[\"data属性是传入一个函数\",{\"1\":{\"140\":1}}],[\"data属性\",{\"0\":{\"140\":1}}],[\"data返回的对象是有添加到vue的响应式系统中\",{\"1\":{\"67\":1}}],[\"data\",{\"1\":{\"46\":2,\"60\":1,\"62\":1,\"67\":1,\"69\":1,\"70\":1,\"75\":1,\"77\":1,\"78\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"85\":1,\"86\":1,\"87\":1,\"89\":1,\"90\":1,\"94\":1,\"95\":1,\"96\":1,\"100\":1,\"108\":1,\"109\":1,\"110\":2,\"111\":1,\"112\":1,\"113\":1,\"114\":2,\"115\":1,\"117\":1,\"120\":1,\"139\":2}}],[\"dataurlcondition\",{\"1\":{\"39\":1,\"47\":1}}],[\"dance\",{\"1\":{\"6\":3}}],[\"diff\",{\"1\":{\"101\":2}}],[\"diff算法优化\",{\"1\":{\"132\":1}}],[\"diff算法\",{\"1\":{\"101\":2}}],[\"divider\",{\"1\":{\"95\":1}}],[\"divclick\",{\"1\":{\"87\":3}}],[\"div>\",{\"1\":{\"51\":1,\"60\":1,\"62\":1,\"66\":2,\"69\":3,\"70\":2,\"73\":1,\"77\":7,\"78\":4,\"80\":6,\"81\":2,\"82\":4,\"83\":4,\"85\":4,\"86\":1,\"87\":2,\"90\":1,\"94\":1,\"95\":1,\"96\":1,\"100\":1,\"110\":1,\"113\":1,\"114\":1,\"117\":1,\"120\":1,\"139\":4}}],[\"disabled=\",{\"1\":{\"117\":1}}],[\"display\",{\"1\":{\"73\":2}}],[\"dist文件夹下有两个文件\",{\"1\":{\"142\":1}}],[\"dist\",{\"1\":{\"23\":1}}],[\"dirname\",{\"1\":{\"26\":1}}],[\"d\",{\"1\":{\"24\":1,\"30\":1,\"31\":1,\"32\":2,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"49\":1,\"50\":1,\"53\":1,\"100\":1,\"115\":2}}],[\"debugger\",{\"1\":{\"142\":1}}],[\"decrement\",{\"1\":{\"117\":2,\"139\":4}}],[\"deep\",{\"1\":{\"114\":1,\"115\":1,\"116\":1}}],[\"deepclone\",{\"1\":{\"12\":3,\"13\":3}}],[\"default\",{\"1\":{\"61\":2,\"62\":1,\"115\":1,\"126\":4,\"127\":1}}],[\"defineproperty\",{\"1\":{\"132\":1}}],[\"defineplugin允许在编译时创建配置的全局常量\",{\"1\":{\"52\":1}}],[\"defineplugin\",{\"0\":{\"52\":1},\"1\":{\"52\":2}}],[\"defined\",{\"1\":{\"52\":1}}],[\"desc\",{\"1\":{\"60\":2,\"62\":2}}],[\"developer\",{\"1\":{\"84\":1}}],[\"development\",{\"1\":{\"54\":2}}],[\"devtool\",{\"1\":{\"54\":1}}],[\"dev\",{\"1\":{\"24\":2,\"30\":1,\"142\":1}}],[\"dependency\",{\"1\":{\"19\":1}}],[\"do\",{\"1\":{\"115\":1,\"137\":2}}],[\"dom\",{\"0\":{\"99\":1},\"1\":{\"58\":2,\"66\":1,\"73\":2,\"74\":4,\"99\":2,\"101\":2}}],[\"doesn\",{\"1\":{\"51\":1}}],[\"docs\",{\"1\":{\"84\":1}}],[\"docschina\",{\"1\":{\"19\":1,\"29\":1}}],[\"doctype\",{\"1\":{\"51\":1,\"117\":1}}],[\"dog\",{\"1\":{\"10\":1}}],[\"2scrlta\",{\"1\":{\"141\":1}}],[\"2008\",{\"1\":{\"117\":1}}],[\"2006\",{\"1\":{\"117\":3}}],[\"20231031200224648\",{\"1\":{\"120\":1}}],[\"20231031204213497\",{\"1\":{\"57\":1}}],[\"20231022182300781\",{\"1\":{\"101\":1}}],[\"20231022182341619\",{\"1\":{\"101\":1}}],[\"20231022182251535\",{\"1\":{\"101\":1}}],[\"20231022182241976\",{\"1\":{\"101\":1}}],[\"20231022182232738\",{\"1\":{\"101\":1}}],[\"20231022182140133\",{\"1\":{\"101\":1}}],[\"20231022182012027\",{\"1\":{\"101\":1}}],[\"20231020164733530\",{\"1\":{\"101\":1}}],[\"20231020163154944\",{\"1\":{\"99\":1}}],[\"20231020162812819\",{\"1\":{\"98\":1}}],[\"20231019222841008\",{\"1\":{\"92\":1}}],[\"20231019005251770\",{\"1\":{\"87\":1}}],[\"20231019004604619\",{\"1\":{\"86\":1}}],[\"20231018083558572\",{\"1\":{\"70\":1}}],[\"20231016233051010\",{\"1\":{\"65\":1}}],[\"20231112151429444\",{\"1\":{\"48\":1}}],[\"20231111211324041\",{\"1\":{\"40\":1}}],[\"20231105235229201\",{\"1\":{\"24\":1}}],[\"20231102102926580\",{\"1\":{\"19\":1}}],[\"2+\",{\"1\":{\"74\":2}}],[\"2\",{\"1\":{\"9\":1,\"10\":1,\"67\":2,\"74\":1,\"75\":1,\"96\":1,\"100\":1,\"110\":1,\"115\":1,\"117\":2,\"120\":5}}],[\"4\",{\"1\":{\"9\":3,\"46\":1,\"67\":2,\"115\":1,\"117\":1,\"120\":1}}],[\"42\",{\"1\":{\"9\":3,\"13\":2}}],[\"30\",{\"1\":{\"120\":1}}],[\"30px\",{\"1\":{\"80\":2,\"81\":1}}],[\"39\",{\"1\":{\"117\":1}}],[\"32个十六进制\",{\"1\":{\"43\":1}}],[\"3\",{\"1\":{\"9\":1,\"10\":1,\"67\":2,\"74\":2,\"115\":2,\"117\":2,\"120\":1}}],[\"1<\",{\"1\":{\"139\":2}}],[\"128\",{\"1\":{\"117\":1}}],[\"16px\",{\"1\":{\"117\":1}}],[\"1px\",{\"1\":{\"117\":2}}],[\"18\",{\"1\":{\"10\":1,\"14\":2,\"83\":2,\"86\":1,\"94\":1,\"95\":1,\"114\":2}}],[\"1\",{\"1\":{\"9\":2,\"67\":2,\"74\":1,\"75\":1,\"83\":2,\"94\":1,\"95\":1,\"107\":1,\"110\":1,\"111\":1,\"115\":3,\"117\":8,\"120\":2,\"126\":1}}],[\"10335230\",{\"1\":{\"75\":1}}],[\"1024\",{\"1\":{\"39\":1,\"40\":1,\"47\":1}}],[\"100\",{\"1\":{\"9\":3,\"39\":1,\"40\":1,\"47\":1,\"67\":1,\"69\":1,\"85\":1,\"124\":1,\"139\":2}}],[\"10\",{\"1\":{\"2\":1,\"9\":2,\"67\":1,\"94\":1,\"117\":1,\"120\":1}}],[\"篮球\",{\"1\":{\"8\":2,\"12\":2,\"13\":1,\"14\":1,\"120\":1}}],[\"跳过不需要编译的节点\",{\"1\":{\"72\":1}}],[\"跳\",{\"1\":{\"8\":2}}],[\"唱\",{\"1\":{\"8\":1}}],[\"物理\",{\"1\":{\"7\":3}}],[\"英语\",{\"1\":{\"7\":3}}],[\"数组更新检测\",{\"0\":{\"96\":1}}],[\"数组元素项item是在前面的\",{\"1\":{\"94\":1}}],[\"数组通常是来自data或者prop\",{\"1\":{\"94\":1}}],[\"数组\",{\"1\":{\"94\":2}}],[\"数组语法\",{\"0\":{\"78\":1,\"81\":1},\"1\":{\"76\":1,\"78\":2,\"79\":1}}],[\"数组中存放的是一个个的rule\",{\"1\":{\"30\":1}}],[\"数学\",{\"1\":{\"7\":3}}],[\"数据进行某种转化后显示\",{\"1\":{\"105\":1}}],[\"数据2的地址和数据3的地址\",{\"1\":{\"1\":1}}],[\"数据类型\",{\"0\":{\"1\":1}}],[\"的innerhtml\",{\"1\":{\"139\":1}}],[\"的过程\",{\"1\":{\"137\":1}}],[\"的时候\",{\"1\":{\"132\":2,\"133\":1}}],[\"的api\",{\"0\":{\"116\":1}}],[\"的答案是哈哈哈哈哈`\",{\"1\":{\"113\":2}}],[\"的改变\",{\"1\":{\"110\":1}}],[\"的options\",{\"0\":{\"103\":1}}],[\"的列表\",{\"1\":{\"100\":1}}],[\"的案例\",{\"0\":{\"100\":1}}],[\"的样子\",{\"1\":{\"98\":1}}],[\"的修饰符\",{\"0\":{\"87\":1}}],[\"的格式来定义\",{\"1\":{\"82\":1}}],[\"的情况\",{\"1\":{\"73\":1}}],[\"的文本插值\",{\"1\":{\"67\":1}}],[\"的开发模式\",{\"1\":{\"66\":1}}],[\"的single\",{\"1\":{\"62\":1}}],[\"的大小\",{\"1\":{\"61\":1}}],[\"的缩写语法\",{\"1\":{\"61\":1}}],[\"的第一个参数是组件的名称\",{\"1\":{\"60\":1}}],[\"的一个方法\",{\"1\":{\"60\":1}}],[\"的标签解析为使用\",{\"1\":{\"58\":1}}],[\"的标签名在\",{\"1\":{\"58\":1}}],[\"的flutter\",{\"1\":{\"56\":1}}],[\"的管理和维护就变得非常容易了\",{\"1\":{\"56\":1}}],[\"的插件\",{\"1\":{\"53\":1}}],[\"的前面\",{\"1\":{\"31\":1}}],[\"的简写\",{\"1\":{\"30\":1,\"77\":1}}],[\"的使用\",{\"0\":{\"30\":1}}],[\"的\",{\"1\":{\"18\":1,\"70\":1,\"100\":1,\"105\":1,\"111\":1}}],[\"的位置扩展\",{\"1\":{\"7\":1}}],[\"的浅拷贝与深拷贝\",{\"0\":{\"0\":1}}],[\"展开语法\",{\"0\":{\"7\":1},\"1\":{\"7\":1}}],[\"last\",{\"1\":{\"127\":2}}],[\"lastname\",{\"1\":{\"106\":1,\"107\":1,\"108\":2,\"109\":2,\"110\":3,\"111\":4,\"127\":4}}],[\"lazy=\",{\"1\":{\"123\":1}}],[\"lazy\",{\"0\":{\"123\":1},\"1\":{\"123\":1}}],[\"label>\",{\"1\":{\"120\":7}}],[\"lang=\",{\"1\":{\"51\":1,\"117\":1}}],[\"li\",{\"1\":{\"100\":2}}],[\"li>\",{\"1\":{\"94\":3,\"95\":3,\"96\":1,\"100\":1}}],[\"link\",{\"1\":{\"74\":1,\"75\":2}}],[\"limit\",{\"1\":{\"40\":1}}],[\"lisi\",{\"1\":{\"12\":2,\"13\":1,\"14\":1}}],[\"loading\",{\"1\":{\"37\":1}}],[\"loader是用于特定的模块类型进行转换\",{\"1\":{\"48\":1}}],[\"loader是用于对不同类型的文件进行转换和处理的模块\",{\"1\":{\"29\":1}}],[\"loader中和\",{\"1\":{\"43\":1}}],[\"loader有一个options属性limit\",{\"1\":{\"41\":1}}],[\"loader会将所有的图片文件转成base64编码\",{\"1\":{\"40\":1}}],[\"loader和file\",{\"1\":{\"40\":1}}],[\"loader时\",{\"1\":{\"38\":1}}],[\"loader处理\",{\"0\":{\"33\":1}}],[\"loader写到\",{\"1\":{\"31\":1}}],[\"loader只是负责将\",{\"1\":{\"31\":1}}],[\"loader来处理的\",{\"1\":{\"37\":1}}],[\"loader来加载css文件了\",{\"1\":{\"31\":1}}],[\"loader来转换es6+代码\",{\"1\":{\"28\":1}}],[\"loader属性\",{\"1\":{\"30\":2}}],[\"loader的limit\",{\"0\":{\"41\":1}}],[\"loader的工作方式是相似的\",{\"1\":{\"40\":1}}],[\"loader的作用就是帮助我们处理import\",{\"1\":{\"39\":1}}],[\"loader的安装\",{\"1\":{\"30\":1}}],[\"loader的配置是通过webpack的配置文件\",{\"1\":{\"29\":1}}],[\"loader的使用\",{\"0\":{\"29\":1}}],[\"loader通常以链式调用的方式使用\",{\"1\":{\"29\":1}}],[\"loader可以将不同类型的文件\",{\"1\":{\"29\":1}}],[\"loaders\",{\"1\":{\"29\":1,\"43\":1}}],[\"loader\",{\"0\":{\"30\":1,\"31\":1,\"34\":1,\"37\":1,\"39\":1,\"40\":1},\"1\":{\"28\":2,\"29\":1,\"30\":12,\"31\":8,\"33\":5,\"34\":1,\"37\":4,\"39\":3,\"40\":5,\"42\":2,\"43\":1,\"46\":8}}],[\"loadsh\",{\"1\":{\"16\":1}}],[\"lodash\",{\"1\":{\"16\":2}}],[\"log\",{\"1\":{\"6\":2,\"7\":2,\"8\":2,\"9\":2,\"10\":2,\"12\":2,\"13\":2,\"14\":2,\"16\":2,\"60\":1,\"62\":1,\"85\":2,\"86\":2,\"87\":3,\"110\":4,\"111\":1,\"113\":2,\"114\":2,\"115\":7,\"116\":1,\"124\":1,\"126\":1,\"141\":1}}],[\"learn\",{\"0\":{\"146\":1}}],[\"length\",{\"1\":{\"96\":1,\"117\":1}}],[\"left\",{\"1\":{\"84\":1,\"87\":1,\"117\":1}}],[\"less$\",{\"1\":{\"33\":1}}],[\"lessc\",{\"1\":{\"32\":1}}],[\"less工具处理\",{\"0\":{\"32\":1}}],[\"less\",{\"0\":{\"33\":1},\"1\":{\"18\":1,\"20\":1,\"32\":3,\"33\":2,\"62\":1}}],[\"less等方式来编写\",{\"1\":{\"18\":1}}],[\"lessons\",{\"1\":{\"7\":4}}],[\"letters\",{\"1\":{\"100\":3}}],[\"let\",{\"1\":{\"2\":1,\"6\":2,\"7\":2,\"8\":2,\"9\":2,\"10\":2,\"12\":2,\"13\":1,\"117\":2,\"126\":1}}],[\"0\",{\"1\":{\"6\":1,\"7\":1,\"8\":1,\"9\":2,\"12\":1,\"13\":1,\"14\":1,\"51\":1,\"100\":1,\"111\":1,\"117\":9,\"126\":1,\"141\":1}}],[\"rows=\",{\"1\":{\"120\":1}}],[\"rollup\",{\"1\":{\"62\":1}}],[\"right\",{\"1\":{\"84\":1,\"87\":1}}],[\"radio\",{\"1\":{\"120\":3}}],[\"raw\",{\"1\":{\"46\":1}}],[\"rap\",{\"1\":{\"6\":3,\"8\":2}}],[\"rule是一个对象\",{\"1\":{\"30\":1}}],[\"rule\",{\"1\":{\"30\":2}}],[\"rules\",{\"1\":{\"30\":1}}],[\"rules属性对应的值是一个数组\",{\"1\":{\"30\":1}}],[\"rules的配置如下\",{\"1\":{\"30\":1}}],[\"rules中允许我们配置多个loader\",{\"1\":{\"30\":1}}],[\"rules字段来完成\",{\"1\":{\"29\":1}}],[\"run\",{\"1\":{\"24\":1,\"26\":1,\"27\":1}}],[\"repository\",{\"1\":{\"131\":1}}],[\"repository仓库\",{\"1\":{\"131\":1}}],[\"repo\",{\"1\":{\"131\":1}}],[\"removebook\",{\"1\":{\"117\":2}}],[\"result\",{\"1\":{\"109\":2,\"110\":4}}],[\"resource\",{\"1\":{\"30\":1,\"42\":1,\"46\":1}}],[\"resolve\",{\"1\":{\"26\":1}}],[\"red\",{\"1\":{\"70\":1,\"77\":1,\"80\":3,\"81\":1}}],[\"reversemessage\",{\"1\":{\"109\":2}}],[\"reverse\",{\"1\":{\"67\":2,\"96\":1,\"107\":1,\"108\":1,\"109\":1}}],[\"registration\",{\"1\":{\"59\":2}}],[\"re\",{\"1\":{\"51\":1}}],[\"rel=\",{\"1\":{\"51\":1,\"117\":1}}],[\"require\",{\"1\":{\"26\":1,\"37\":2,\"39\":1,\"49\":1,\"51\":1,\"52\":1,\"53\":1}}],[\"reactivity\",{\"1\":{\"105\":1}}],[\"react使用的jsx\",{\"1\":{\"66\":1}}],[\"react的开发模式\",{\"1\":{\"66\":1}}],[\"react脚手架中常见的设置方式\",{\"1\":{\"45\":1}}],[\"react\",{\"1\":{\"18\":2,\"56\":1,\"66\":1}}],[\"return\",{\"1\":{\"6\":2,\"12\":1,\"13\":1,\"60\":1,\"62\":1,\"66\":1,\"67\":3,\"69\":1,\"70\":1,\"75\":1,\"77\":2,\"78\":1,\"80\":2,\"81\":1,\"82\":1,\"83\":1,\"85\":1,\"86\":1,\"87\":1,\"89\":1,\"90\":1,\"94\":1,\"95\":1,\"96\":1,\"100\":1,\"108\":4,\"109\":4,\"110\":6,\"111\":3,\"113\":1,\"114\":1,\"115\":1,\"117\":5,\"120\":1,\"139\":2}}],[\"hym0jgbi25grng\",{\"1\":{\"141\":1}}],[\"how\",{\"1\":{\"137\":2}}],[\"hooks函数增加代码的复用性\",{\"1\":{\"133\":1}}],[\"hobbies\",{\"1\":{\"8\":3,\"120\":5}}],[\"hobby\",{\"1\":{\"6\":4,\"12\":4,\"13\":2,\"14\":2}}],[\"hack\",{\"1\":{\"132\":1}}],[\"handle\",{\"1\":{\"115\":1}}],[\"handle3\",{\"1\":{\"115\":2}}],[\"handle2\",{\"1\":{\"115\":2}}],[\"handle1\",{\"1\":{\"115\":2}}],[\"handler\",{\"1\":{\"114\":1,\"115\":3}}],[\"hash\",{\"1\":{\"39\":1,\"40\":1,\"42\":2,\"43\":3,\"47\":1}}],[\"hasownproperty\",{\"1\":{\"6\":1,\"12\":1}}],[\"href\",{\"1\":{\"82\":1}}],[\"href=\",{\"1\":{\"51\":1,\"74\":1,\"75\":1,\"82\":1,\"117\":1}}],[\"height\",{\"1\":{\"83\":1,\"94\":1,\"95\":1}}],[\"height=\",{\"1\":{\"83\":1}}],[\"hello\",{\"1\":{\"67\":1,\"78\":1,\"80\":1,\"81\":1,\"85\":1,\"86\":1,\"87\":1,\"108\":1,\"109\":1,\"113\":1,\"120\":1,\"139\":2}}],[\"head>\",{\"1\":{\"51\":1,\"117\":1}}],[\"h2>\",{\"1\":{\"59\":2,\"60\":2,\"62\":1,\"67\":7,\"69\":6,\"71\":2,\"72\":1,\"89\":3,\"90\":6,\"91\":1,\"92\":2,\"94\":3,\"96\":1,\"107\":3,\"108\":3,\"109\":3,\"110\":20,\"111\":1,\"114\":1,\"117\":2,\"120\":5,\"139\":4}}],[\"http\",{\"1\":{\"51\":1,\"117\":1}}],[\"https\",{\"1\":{\"19\":1,\"29\":1,\"43\":1,\"52\":1,\"59\":1,\"65\":1,\"75\":2,\"84\":1,\"97\":1,\"105\":1,\"115\":1,\"116\":1,\"120\":1,\"135\":1,\"141\":1}}],[\"html=\",{\"1\":{\"70\":1}}],[\"html的生成\",{\"1\":{\"53\":1}}],[\"html>\",{\"1\":{\"51\":2,\"117\":2}}],[\"html模块\",{\"1\":{\"51\":1}}],[\"html进行打包处理\",{\"1\":{\"50\":1}}],[\"html\",{\"0\":{\"70\":1},\"1\":{\"50\":2,\"51\":3,\"52\":1,\"53\":2,\"59\":1,\"70\":2,\"97\":1,\"105\":1,\"115\":1,\"116\":1,\"120\":2}}],[\"html文件的\",{\"1\":{\"50\":1}}],[\"htmlwebpackplugin\",{\"0\":{\"50\":1},\"1\":{\"50\":1,\"51\":6}}],[\"html资源的处理\",{\"1\":{\"20\":1}}],[\"hdx\",{\"1\":{\"7\":2}}],[\"hd1\",{\"1\":{\"7\":4}}],[\"cdn\",{\"0\":{\"135\":1}}],[\"checkbox\",{\"1\":{\"120\":5}}],[\"charat\",{\"1\":{\"126\":1}}],[\"charset=\",{\"1\":{\"51\":1,\"117\":1}}],[\"change\",{\"1\":{\"123\":2}}],[\"changed\",{\"1\":{\"115\":3}}],[\"changeinfonbaname\",{\"1\":{\"114\":2}}],[\"changeinfoname\",{\"1\":{\"114\":2}}],[\"changeinfo\",{\"1\":{\"114\":2}}],[\"changefullname\",{\"1\":{\"111\":2}}],[\"changefirstname\",{\"1\":{\"110\":2}}],[\"c和f因为key不一致\",{\"1\":{\"101\":1}}],[\"c和d来说它们事实上并不需要有任何的改动\",{\"1\":{\"101\":1}}],[\"c\",{\"1\":{\"100\":2,\"115\":4}}],[\"cba=\",{\"1\":{\"82\":1}}],[\"cba\",{\"1\":{\"77\":3,\"78\":2,\"82\":1}}],[\"cn\",{\"1\":{\"59\":1,\"97\":1,\"105\":1,\"115\":1,\"116\":1,\"120\":1}}],[\"capitalize=\",{\"1\":{\"126\":2}}],[\"capitalize\",{\"1\":{\"126\":4}}],[\"capture\",{\"1\":{\"84\":2,\"87\":2}}],[\"camelcase\",{\"1\":{\"79\":1}}],[\"camel\",{\"1\":{\"74\":1}}],[\"case\",{\"1\":{\"58\":4,\"79\":2}}],[\"cat\",{\"1\":{\"10\":1}}],[\"cmd\",{\"1\":{\"24\":1}}],[\"count++\",{\"1\":{\"117\":1}}],[\"count\",{\"1\":{\"117\":8}}],[\"counter的值时\",{\"1\":{\"140\":1}}],[\"counter++\",{\"1\":{\"69\":1,\"85\":1,\"139\":2}}],[\"counter\",{\"1\":{\"67\":2,\"69\":5,\"85\":2,\"117\":2,\"139\":6,\"140\":3}}],[\"cols=\",{\"1\":{\"120\":1}}],[\"collapse\",{\"1\":{\"117\":2}}],[\"color\",{\"1\":{\"70\":1,\"77\":1,\"80\":3,\"81\":1,\"117\":2}}],[\"coder\",{\"1\":{\"110\":1,\"111\":1}}],[\"coderwhy\",{\"1\":{\"86\":1}}],[\"core\",{\"1\":{\"105\":1}}],[\"copy\",{\"1\":{\"53\":2}}],[\"copywebpackplugin\",{\"0\":{\"53\":1},\"1\":{\"53\":3}}],[\"commitform\",{\"1\":{\"120\":1}}],[\"commonjs的模块化能力\",{\"1\":{\"62\":1}}],[\"commonjs等模块化语法在浏览器中是不被直接识别的\",{\"1\":{\"23\":1}}],[\"commonjs\",{\"1\":{\"19\":1}}],[\"composition\",{\"1\":{\"133\":2}}],[\"componentc\",{\"1\":{\"61\":1}}],[\"componentb\",{\"1\":{\"61\":2}}],[\"componenta\",{\"1\":{\"61\":7,\"62\":1,\"63\":1}}],[\"components\",{\"0\":{\"148\":1},\"1\":{\"59\":1,\"61\":4,\"62\":1}}],[\"component>\",{\"1\":{\"58\":1}}],[\"component\",{\"1\":{\"58\":2,\"59\":1,\"60\":10,\"116\":1}}],[\"componen\",{\"1\":{\"58\":1}}],[\"computed的fullname中的计算\",{\"1\":{\"110\":1}}],[\"computed\",{\"0\":{\"104\":1,\"109\":1},\"1\":{\"61\":1,\"77\":1,\"105\":1,\"106\":1,\"109\":1,\"110\":2,\"111\":1,\"112\":1,\"114\":1,\"117\":1,\"133\":1}}],[\"compatible\",{\"1\":{\"51\":1,\"117\":1}}],[\"com\",{\"1\":{\"52\":1,\"75\":2,\"135\":1,\"141\":1}}],[\"controller的简称\",{\"1\":{\"138\":1}}],[\"continue\",{\"1\":{\"51\":1}}],[\"content=\",{\"1\":{\"51\":2,\"117\":2}}],[\"contenthash\",{\"1\":{\"43\":1}}],[\"config\",{\"1\":{\"26\":1,\"27\":8,\"28\":1,\"29\":1,\"30\":1,\"37\":2,\"38\":1}}],[\"concat\",{\"0\":{\"10\":1},\"1\":{\"10\":2,\"96\":1}}],[\"console\",{\"1\":{\"6\":2,\"7\":2,\"8\":2,\"9\":2,\"10\":2,\"12\":2,\"13\":2,\"14\":2,\"16\":2,\"60\":1,\"62\":1,\"85\":2,\"86\":2,\"87\":3,\"110\":5,\"111\":1,\"113\":2,\"114\":2,\"115\":7,\"116\":1,\"124\":1,\"126\":1,\"141\":1}}],[\"const等\",{\"1\":{\"23\":1}}],[\"const\",{\"1\":{\"6\":2,\"12\":2,\"13\":3,\"14\":2,\"16\":2,\"26\":1,\"49\":1,\"51\":1,\"52\":1,\"53\":1,\"60\":2,\"67\":1,\"69\":1,\"70\":1,\"75\":1,\"77\":1,\"78\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"85\":1,\"86\":1,\"87\":1,\"89\":1,\"90\":1,\"94\":1,\"95\":1,\"96\":1,\"100\":1,\"108\":1,\"109\":1,\"110\":2,\"111\":2,\"113\":1,\"114\":1,\"116\":1,\"117\":1,\"120\":1,\"124\":1,\"141\":3}}],[\"created\",{\"1\":{\"114\":1,\"115\":1,\"116\":1,\"126\":1}}],[\"createapp的时候\",{\"1\":{\"139\":1}}],[\"createapp\",{\"1\":{\"57\":1,\"60\":2,\"67\":1,\"69\":1,\"70\":1,\"75\":1,\"77\":1,\"78\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"85\":1,\"86\":1,\"87\":1,\"89\":1,\"90\":1,\"94\":1,\"95\":1,\"96\":1,\"100\":1,\"108\":1,\"109\":1,\"110\":2,\"111\":1,\"113\":1,\"114\":1,\"117\":1,\"120\":1,\"139\":2}}],[\"create\",{\"1\":{\"18\":1,\"66\":1}}],[\"class><\",{\"1\":{\"82\":1}}],[\"classobj\",{\"1\":{\"77\":5}}],[\"classname\",{\"1\":{\"77\":2}}],[\"class=\",{\"1\":{\"77\":9,\"78\":4,\"85\":3,\"95\":1,\"117\":1}}],[\"class也是动态的\",{\"1\":{\"76\":1}}],[\"class\",{\"0\":{\"76\":1},\"1\":{\"74\":1,\"77\":3,\"78\":2,\"82\":1}}],[\"cloak>\",{\"1\":{\"73\":1}}],[\"cloak\",{\"0\":{\"73\":1},\"1\":{\"73\":3}}],[\"clone\",{\"1\":{\"16\":2}}],[\"clonedeep\",{\"1\":{\"15\":1,\"16\":2}}],[\"clean\",{\"1\":{\"49\":2}}],[\"cleanwebpackplugin\",{\"0\":{\"49\":1},\"1\":{\"49\":2}}],[\"cli创建项目\",{\"1\":{\"134\":1}}],[\"click调用时\",{\"1\":{\"86\":1}}],[\"click\",{\"1\":{\"66\":1,\"85\":2,\"87\":3,\"139\":1}}],[\"click=\",{\"1\":{\"62\":1,\"67\":1,\"69\":3,\"77\":1,\"85\":3,\"86\":2,\"87\":2,\"90\":1,\"96\":1,\"100\":1,\"110\":1,\"111\":1,\"113\":1,\"114\":3,\"117\":3,\"139\":4}}],[\"cli来创建项目\",{\"1\":{\"63\":1}}],[\"cli方式\",{\"1\":{\"30\":1}}],[\"cli中代码执行时\",{\"1\":{\"22\":1}}],[\"cli的东西\",{\"1\":{\"22\":1}}],[\"cli的\",{\"1\":{\"22\":2}}],[\"cli都是基于webpack来帮助我们支持模块化\",{\"1\":{\"18\":1}}],[\"cli\",{\"0\":{\"145\":1},\"1\":{\"18\":2,\"22\":2,\"24\":1,\"35\":2}}],[\"csspropertyvalue\",{\"1\":{\"80\":1}}],[\"csspropertyname\",{\"1\":{\"80\":1}}],[\"cssnano\",{\"1\":{\"38\":1}}],[\"css样式的重置\",{\"1\":{\"34\":1}}],[\"css文件中\",{\"1\":{\"62\":1}}],[\"css文件进行解析\",{\"1\":{\"31\":1}}],[\"css文件模块的加载\",{\"1\":{\"20\":1}}],[\"css$\",{\"1\":{\"30\":1}}],[\"css的处理\",{\"1\":{\"20\":1}}],[\"css\",{\"0\":{\"30\":1},\"1\":{\"18\":1,\"28\":3,\"29\":1,\"30\":7,\"31\":2,\"32\":2,\"33\":1,\"35\":1,\"36\":3,\"38\":6,\"73\":1,\"79\":2,\"117\":2}}],[\"cxk\",{\"1\":{\"6\":2,\"7\":2,\"8\":2,\"14\":2}}],[\"flow\",{\"1\":{\"131\":1}}],[\"false\",{\"1\":{\"120\":1}}],[\"female\",{\"1\":{\"120\":4}}],[\"f7f7f7\",{\"1\":{\"117\":1}}],[\"fullname的getter和setter方法\",{\"1\":{\"111\":1}}],[\"fullname\",{\"1\":{\"109\":2,\"110\":9,\"111\":5}}],[\"function\",{\"1\":{\"6\":1,\"12\":1,\"13\":1,\"66\":1,\"84\":1,\"106\":3,\"111\":2,\"112\":1,\"113\":1,\"114\":1,\"115\":3,\"116\":1,\"139\":2}}],[\"f\",{\"0\":{\"100\":1},\"1\":{\"100\":2,\"115\":2,\"141\":1}}],[\"first\",{\"1\":{\"127\":2}}],[\"firstname\",{\"1\":{\"106\":1,\"107\":1,\"108\":2,\"109\":2,\"110\":5,\"111\":4,\"127\":4}}],[\"filterbooks\",{\"1\":{\"117\":1}}],[\"filter\",{\"1\":{\"96\":3}}],[\"files\",{\"1\":{\"51\":1}}],[\"file\",{\"0\":{\"39\":1},\"1\":{\"39\":3,\"42\":1,\"43\":1,\"46\":2,\"62\":1}}],[\"filename\",{\"1\":{\"26\":1,\"39\":1,\"42\":1,\"47\":1}}],[\"finalprice\",{\"1\":{\"117\":3}}],[\"finalstyleobj\",{\"1\":{\"80\":2}}],[\"finalfontsize\",{\"1\":{\"80\":2}}],[\"finalcolor\",{\"1\":{\"80\":4}}],[\"fruit\",{\"1\":{\"120\":3}}],[\"friend\",{\"1\":{\"16\":2}}],[\"from\",{\"1\":{\"16\":1,\"53\":2,\"61\":1}}],[\"fontweight\",{\"1\":{\"80\":2}}],[\"fontsize\",{\"1\":{\"80\":2,\"81\":1}}],[\"font\",{\"1\":{\"20\":1,\"42\":3,\"80\":3,\"117\":1}}],[\"foo2\",{\"1\":{\"141\":2}}],[\"football\",{\"1\":{\"120\":4}}],[\"foo\",{\"1\":{\"13\":2,\"141\":2}}],[\"forms\",{\"1\":{\"120\":1}}],[\"formatprice\",{\"1\":{\"117\":3}}],[\"for进行列表渲染时\",{\"1\":{\"97\":1}}],[\"for=\",{\"1\":{\"94\":3,\"95\":1,\"96\":1,\"100\":1,\"117\":1,\"120\":7}}],[\"for同时也支持数字的遍历\",{\"1\":{\"94\":1}}],[\"for也支持遍历对象\",{\"1\":{\"94\":1}}],[\"for支持的类型\",{\"1\":{\"94\":1}}],[\"for的基本格式是\",{\"1\":{\"94\":1}}],[\"for类似于javascript的for循环\",{\"1\":{\"93\":1}}],[\"for来完成\",{\"1\":{\"93\":1}}],[\"for\",{\"0\":{\"97\":1},\"1\":{\"6\":1,\"12\":1,\"13\":1,\"117\":1,\"120\":2}}],[\"id\",{\"1\":{\"117\":4,\"120\":1}}],[\"id=\",{\"1\":{\"51\":1,\"60\":3,\"67\":1,\"69\":2,\"70\":1,\"72\":1,\"74\":1,\"75\":1,\"77\":2,\"78\":2,\"80\":2,\"81\":2,\"82\":2,\"83\":2,\"85\":2,\"86\":2,\"87\":2,\"89\":1,\"90\":2,\"91\":1,\"92\":1,\"94\":2,\"95\":2,\"96\":2,\"100\":2,\"107\":1,\"108\":1,\"109\":1,\"110\":3,\"111\":1,\"113\":2,\"114\":2,\"117\":2,\"120\":9,\"139\":4}}],[\"ignore\",{\"1\":{\"53\":1}}],[\"isagree\",{\"1\":{\"120\":3}}],[\"isactive\",{\"1\":{\"77\":6,\"78\":3}}],[\"isshowha\",{\"1\":{\"90\":4}}],[\"isshow\",{\"1\":{\"67\":5,\"91\":1,\"92\":2}}],[\"is\",{\"1\":{\"52\":1}}],[\"item是我们给每项元素起的一个别名\",{\"1\":{\"94\":1}}],[\"item\",{\"1\":{\"94\":2,\"96\":2,\"100\":3,\"117\":3}}],[\"it\",{\"1\":{\"51\":1}}],[\"ico\",{\"1\":{\"51\":1}}],[\"icon\",{\"1\":{\"51\":1}}],[\"ie=edge\",{\"1\":{\"51\":1,\"117\":1}}],[\"ime\",{\"1\":{\"123\":1}}],[\"immediate\",{\"1\":{\"114\":2,\"115\":1,\"116\":2}}],[\"imgurl\",{\"1\":{\"74\":3,\"75\":4}}],[\"img\",{\"1\":{\"22\":1,\"28\":1,\"39\":1,\"40\":2,\"44\":1,\"45\":2,\"47\":1}}],[\"image\",{\"1\":{\"19\":1,\"24\":1,\"40\":1,\"48\":1,\"57\":1,\"65\":1,\"70\":1,\"86\":1,\"87\":1,\"92\":1,\"98\":1,\"99\":1,\"101\":8,\"120\":1}}],[\"import\",{\"1\":{\"16\":1,\"30\":1,\"61\":1}}],[\"i\",{\"1\":{\"12\":8,\"16\":1}}],[\"intro\",{\"1\":{\"120\":6}}],[\"input\",{\"1\":{\"118\":1,\"123\":2,\"126\":1}}],[\"input=\",{\"1\":{\"118\":1,\"126\":2,\"127\":2}}],[\"insertf\",{\"1\":{\"100\":2}}],[\"instance\",{\"1\":{\"116\":1}}],[\"instanceof\",{\"1\":{\"6\":1,\"12\":1,\"13\":1}}],[\"install\",{\"1\":{\"24\":1,\"30\":2,\"31\":1,\"32\":2,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"49\":1,\"50\":1,\"53\":1,\"142\":2}}],[\"increment\",{\"1\":{\"69\":4,\"117\":2,\"139\":4}}],[\"injected\",{\"1\":{\"51\":1}}],[\"inline\",{\"1\":{\"46\":1,\"84\":1,\"85\":1}}],[\"initial\",{\"1\":{\"51\":1,\"117\":1}}],[\"init\",{\"1\":{\"24\":1}}],[\"index+1\",{\"1\":{\"94\":1,\"96\":1}}],[\"index\",{\"1\":{\"23\":2,\"51\":2,\"53\":2,\"94\":7,\"96\":1,\"117\":13}}],[\"info对象会被拆解成div的各个属性\",{\"1\":{\"83\":1}}],[\"info\",{\"1\":{\"8\":3,\"16\":3,\"83\":3,\"94\":2,\"95\":2,\"114\":8,\"116\":1}}],[\"in\",{\"1\":{\"6\":1,\"12\":1,\"74\":1,\"94\":8,\"95\":1,\"96\":1,\"97\":1,\"100\":1,\"117\":1}}],[\"if当条件为false时\",{\"1\":{\"92\":1}}],[\"if的区别\",{\"0\":{\"92\":1}}],[\"if的用法看起来是一致的\",{\"1\":{\"91\":1}}],[\"if的渲染原理\",{\"1\":{\"90\":1}}],[\"if上使用\",{\"1\":{\"90\":1}}],[\"if是一个指令\",{\"1\":{\"90\":1}}],[\"if是惰性的\",{\"1\":{\"90\":1}}],[\"if=\",{\"1\":{\"89\":2,\"90\":1,\"92\":1,\"117\":1}}],[\"if类似\",{\"1\":{\"89\":1}}],[\"if用于根据条件来渲染某一块的内容\",{\"1\":{\"89\":1}}],[\"if\",{\"0\":{\"90\":1},\"1\":{\"6\":2,\"12\":2,\"67\":1,\"88\":2,\"89\":1,\"92\":1,\"95\":1,\"124\":1,\"126\":1}}],[\"next\",{\"1\":{\"135\":1}}],[\"newitem\",{\"1\":{\"117\":3}}],[\"newinfo\",{\"1\":{\"114\":4,\"116\":2}}],[\"newvalue变化后的新值\",{\"1\":{\"113\":1}}],[\"newvalue\",{\"1\":{\"111\":3,\"113\":2,\"114\":3,\"118\":2}}],[\"newmovie\",{\"1\":{\"96\":4}}],[\"new\",{\"1\":{\"49\":1,\"51\":1,\"52\":1,\"53\":1,\"115\":1}}],[\"newobj\",{\"1\":{\"6\":3,\"12\":8,\"13\":7,\"14\":4,\"16\":1}}],[\"nba\",{\"1\":{\"114\":4}}],[\"n\",{\"1\":{\"94\":1}}],[\"not\",{\"1\":{\"52\":1}}],[\"noscript>\",{\"1\":{\"51\":1}}],[\"none\",{\"1\":{\"36\":5,\"73\":2}}],[\"node\",{\"1\":{\"21\":1,\"98\":1}}],[\"node官方网站\",{\"1\":{\"21\":1}}],[\"npx\",{\"1\":{\"23\":1,\"24\":1,\"32\":1,\"36\":1}}],[\"npm\",{\"1\":{\"16\":1,\"24\":3,\"26\":1,\"27\":1,\"30\":2,\"31\":1,\"32\":2,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"49\":1,\"50\":1,\"53\":1,\"142\":2}}],[\"name<\",{\"1\":{\"114\":2}}],[\"names\",{\"1\":{\"111\":3}}],[\"name>和\",{\"1\":{\"58\":1}}],[\"name>\",{\"1\":{\"58\":1}}],[\"name=\",{\"1\":{\"51\":1,\"83\":1,\"117\":1,\"120\":1,\"127\":2}}],[\"name\",{\"1\":{\"6\":4,\"7\":4,\"8\":2,\"10\":2,\"12\":4,\"13\":2,\"14\":4,\"16\":4,\"39\":1,\"40\":2,\"42\":3,\"43\":1,\"47\":1,\"67\":2,\"82\":2,\"83\":1,\"86\":2,\"94\":1,\"95\":1,\"114\":8,\"117\":5}}],[\"num\",{\"1\":{\"94\":2}}],[\"number=\",{\"1\":{\"124\":1}}],[\"number\",{\"0\":{\"124\":1},\"1\":{\"2\":1,\"124\":3}}],[\"null\",{\"1\":{\"2\":1}}],[\"null和\",{\"1\":{\"1\":1}}],[\"s\",{\"1\":{\"141\":1}}],[\"slot编译优化\",{\"1\":{\"132\":1}}],[\"slice\",{\"0\":{\"9\":1},\"1\":{\"9\":2,\"96\":1,\"126\":1}}],[\"shift\",{\"1\":{\"96\":1}}],[\"show元素无论是否需要显示到浏览器上\",{\"1\":{\"92\":1}}],[\"show不可以和v\",{\"1\":{\"92\":1}}],[\"show是不支持template\",{\"1\":{\"92\":1}}],[\"show=\",{\"1\":{\"91\":1,\"92\":1}}],[\"show和v\",{\"0\":{\"92\":1},\"1\":{\"91\":1}}],[\"show\",{\"0\":{\"91\":1},\"1\":{\"88\":1,\"92\":1}}],[\"shaking\",{\"1\":{\"61\":2}}],[\"shallowclone\",{\"1\":{\"6\":2}}],[\"size=\",{\"1\":{\"120\":1}}],[\"size\",{\"1\":{\"80\":3}}],[\"sing\",{\"1\":{\"6\":1}}],[\"s=60\",{\"1\":{\"75\":1}}],[\"spacing\",{\"1\":{\"117\":1}}],[\"span>\",{\"1\":{\"70\":1,\"117\":1,\"120\":3}}],[\"special\",{\"1\":{\"97\":1}}],[\"splice\",{\"1\":{\"96\":1,\"100\":1,\"117\":1}}],[\"split\",{\"1\":{\"67\":2,\"107\":1,\"108\":1,\"109\":1,\"111\":1}}],[\"spread\",{\"1\":{\"7\":1}}],[\"snippet\",{\"1\":{\"65\":1}}],[\"solid\",{\"1\":{\"117\":2}}],[\"something\",{\"1\":{\"115\":1}}],[\"somemethod\",{\"1\":{\"115\":2}}],[\"sort\",{\"1\":{\"96\":1}}],[\"sorry\",{\"1\":{\"51\":1}}],[\"sourcemap\",{\"1\":{\"142\":1}}],[\"sourcemappingurl=data\",{\"1\":{\"36\":1}}],[\"source\",{\"1\":{\"46\":1,\"54\":1}}],[\"score\",{\"1\":{\"89\":4,\"106\":1,\"107\":1,\"108\":2,\"109\":2,\"110\":5,\"124\":2}}],[\"scoped><\",{\"1\":{\"62\":1}}],[\"script标签\",{\"1\":{\"139\":1}}],[\"script>\",{\"1\":{\"60\":2,\"61\":1,\"62\":1,\"67\":2,\"69\":2,\"70\":2,\"75\":1,\"77\":2,\"78\":2,\"80\":2,\"81\":2,\"82\":2,\"83\":2,\"85\":2,\"86\":2,\"87\":2,\"89\":2,\"90\":2,\"94\":2,\"95\":2,\"96\":2,\"100\":2,\"108\":2,\"109\":2,\"110\":4,\"111\":2,\"113\":2,\"114\":2,\"117\":3,\"120\":2,\"126\":2,\"127\":1,\"135\":1,\"136\":1,\"139\":5}}],[\"scripts\",{\"1\":{\"24\":1}}],[\"scale=1\",{\"1\":{\"51\":1,\"117\":1}}],[\"searchtext\",{\"1\":{\"118\":5}}],[\"set\",{\"1\":{\"106\":1,\"111\":1}}],[\"setter\",{\"0\":{\"111\":1},\"1\":{\"105\":1,\"132\":1}}],[\"self\",{\"1\":{\"84\":1,\"87\":1}}],[\"select>\",{\"1\":{\"120\":1}}],[\"select\",{\"1\":{\"36\":5,\"120\":1}}],[\"service\",{\"1\":{\"22\":1}}],[\"state\",{\"1\":{\"115\":1}}],[\"statement\",{\"1\":{\"84\":1,\"85\":1}}],[\"stop=\",{\"1\":{\"87\":1}}],[\"stoppropagation\",{\"1\":{\"84\":1,\"87\":3}}],[\"stop\",{\"1\":{\"84\":1,\"87\":2}}],[\"store\",{\"1\":{\"53\":1}}],[\"strong>\",{\"1\":{\"51\":1}}],[\"stringify\",{\"0\":{\"14\":1},\"1\":{\"14\":3}}],[\"string\",{\"1\":{\"1\":1,\"2\":1,\"14\":1,\"106\":1,\"112\":2,\"126\":2,\"127\":2}}],[\"stylesheet\",{\"1\":{\"117\":1}}],[\"style2obj\",{\"1\":{\"81\":2}}],[\"style1obj\",{\"1\":{\"81\":2}}],[\"style=\",{\"1\":{\"70\":1,\"80\":6,\"81\":1}}],[\"style>\",{\"1\":{\"62\":1,\"77\":1}}],[\"style\",{\"0\":{\"31\":1,\"79\":1},\"1\":{\"28\":1,\"30\":4,\"31\":2,\"33\":1,\"36\":1,\"74\":1,\"79\":1,\"82\":1,\"117\":1}}],[\"src=\",{\"1\":{\"60\":1,\"67\":1,\"69\":1,\"70\":1,\"74\":3,\"75\":3,\"77\":1,\"78\":1,\"80\":1,\"81\":1,\"82\":2,\"83\":1,\"85\":1,\"86\":1,\"87\":1,\"89\":1,\"90\":1,\"94\":1,\"95\":1,\"96\":1,\"100\":1,\"108\":1,\"109\":1,\"110\":2,\"111\":1,\"113\":1,\"114\":1,\"117\":2,\"120\":1,\"135\":1,\"136\":1,\"139\":2}}],[\"src\",{\"1\":{\"23\":3,\"26\":1,\"32\":1,\"36\":1}}],[\"sass等\",{\"1\":{\"62\":1}}],[\"sass等预处理器的处理\",{\"1\":{\"20\":1}}],[\"save\",{\"1\":{\"16\":1,\"24\":2,\"30\":1}}],[\"syntax\",{\"1\":{\"7\":1}}],[\"拷贝的就是内存地址\",{\"1\":{\"5\":1}}],[\"拷贝的就是基本类型的值\",{\"1\":{\"5\":1}}],[\"如filter\",{\"1\":{\"132\":1}}],[\"如下\",{\"1\":{\"82\":1,\"110\":1}}],[\"如下图所示\",{\"1\":{\"1\":1}}],[\"如何阅读vue源码\",{\"0\":{\"142\":1}}],[\"如何基于key重新排列的\",{\"1\":{\"97\":1}}],[\"如何尝试修改和复用的\",{\"1\":{\"97\":1}}],[\"如何支持sfc\",{\"0\":{\"63\":1}}],[\"如何注册一个组件呢\",{\"1\":{\"59\":1}}],[\"如何使用\",{\"0\":{\"134\":1}}],[\"如何使用postcss呢\",{\"1\":{\"34\":1}}],[\"如何使用这个loader来加载css文件呢\",{\"1\":{\"30\":1}}],[\"如\",{\"1\":{\"30\":2,\"120\":1}}],[\"如javascript\",{\"1\":{\"29\":1}}],[\"如果该值无法被\",{\"1\":{\"124\":1}}],[\"如果该方法不需要额外参数\",{\"1\":{\"86\":1}}],[\"如果是一个string类型\",{\"1\":{\"124\":1}}],[\"如果是子节点的化\",{\"1\":{\"69\":1}}],[\"如果你想要默认自动去除用户输入内容中两端的空格\",{\"1\":{\"125\":1}}],[\"如果你想让用户输入自动转换为数字\",{\"1\":{\"124\":1}}],[\"如果你全局注册了一个组件\",{\"1\":{\"61\":1}}],[\"如果想侦听所有嵌套的变更\",{\"1\":{\"114\":1}}],[\"如果不使用key\",{\"1\":{\"97\":1}}],[\"如果不会频繁的发生切换\",{\"1\":{\"92\":1}}],[\"如果需要同时传入某个参数\",{\"1\":{\"86\":1}}],[\"如果方法本身中有一个参数\",{\"1\":{\"86\":1}}],[\"如果属性名称不是固定的\",{\"1\":{\"82\":1}}],[\"如果属性是引用类型\",{\"1\":{\"5\":1}}],[\"如果属性是基本类型\",{\"1\":{\"5\":1}}],[\"如果存在同名的\",{\"1\":{\"74\":1}}],[\"如果componentc没有用到但是我们依然在全局进行\",{\"1\":{\"61\":1}}],[\"如果将一个复杂的问题\",{\"1\":{\"56\":1}}],[\"如果我们确实想设置计算属性的值呢\",{\"1\":{\"111\":1}}],[\"如果我们不只是一个简单的div\",{\"1\":{\"99\":1}}],[\"如果我们需要索引\",{\"1\":{\"94\":1}}],[\"如果我们的元素需要在显示和隐藏之间频繁的切换\",{\"1\":{\"92\":1}}],[\"如果我们展示的内容本身是\",{\"1\":{\"70\":1}}],[\"如果我们希望将一个对象的所有属性\",{\"1\":{\"83\":1}}],[\"如果我们希望这个内容被vue可以解析出来\",{\"1\":{\"70\":1}}],[\"如果我们希望把数据显示到模板\",{\"1\":{\"67\":1}}],[\"如果我们希望再完成插入style的操作\",{\"1\":{\"31\":1}}],[\"如果我们想要使用这一\",{\"1\":{\"63\":1}}],[\"如果我们想在自己的模块中加入一些比较特别的内容\",{\"1\":{\"51\":1}}],[\"如果我们现在有一部分内容\",{\"1\":{\"59\":1}}],[\"如果我们将一个个功能块拆分后\",{\"1\":{\"56\":1}}],[\"如果我们将一个页面中所有的处理逻辑\",{\"1\":{\"56\":1}}],[\"如果当前项目中没有存在\",{\"1\":{\"23\":1}}],[\"如果没有安装就会报错\",{\"1\":{\"22\":1}}],[\"指定我们要使用的模块所在的路径\",{\"1\":{\"51\":1}}],[\"指定配置文件\",{\"0\":{\"27\":1}}],[\"指的是创建新的数据\",{\"1\":{\"5\":1}}],[\"指向堆内存的地址\",{\"1\":{\"3\":1}}],[\"两个对象属性完成相同\",{\"1\":{\"11\":1}}],[\"两个对象指向不同的地址\",{\"1\":{\"3\":1}}],[\"两个对象指向同一个地址\",{\"1\":{\"3\":1}}],[\"两者示意图如下\",{\"1\":{\"3\":1}}],[\"不使用箭头函数的情况下\",{\"1\":{\"141\":1}}],[\"不可以是window\",{\"1\":{\"141\":1}}],[\"不得不提供一些特殊的api\",{\"1\":{\"132\":1}}],[\"不能侦听到旧值\",{\"1\":{\"114\":1}}],[\"不管多深都会侦听到\",{\"1\":{\"114\":1}}],[\"不及格\",{\"1\":{\"107\":1,\"108\":1,\"109\":1,\"110\":2}}],[\"不便于维护\",{\"1\":{\"107\":1}}],[\"不一定一一对应\",{\"1\":{\"99\":1}}],[\"不带参数\",{\"1\":{\"74\":1}}],[\"不常用指令\",{\"0\":{\"68\":1}}],[\"不太容易定位子组件的实现\",{\"1\":{\"61\":1}}],[\"不需要单独安装\",{\"1\":{\"52\":1}}],[\"不需要再次安装全局的webpack\",{\"1\":{\"24\":1}}],[\"不会受到其他项目的影响\",{\"1\":{\"24\":1}}],[\"不会改变另一个对象的属性\",{\"1\":{\"11\":1}}],[\"不会影响到另一个变量的值\",{\"1\":{\"2\":1,\"3\":1}}],[\"不仅会在栈中开辟另一块空间\",{\"1\":{\"3\":1}}],[\"深度侦听\",{\"1\":{\"114\":2}}],[\"深拷贝开辟一个新的栈\",{\"1\":{\"11\":1}}],[\"深拷贝是新开栈\",{\"1\":{\"3\":1}}],[\"深拷贝是递归拷贝深层次\",{\"1\":{\"3\":1}}],[\"深拷贝\",{\"0\":{\"11\":1},\"1\":{\"3\":1}}],[\"深浅拷贝\",{\"0\":{\"2\":1}}],[\"会在每次\",{\"1\":{\"123\":1}}],[\"会在栈中开辟另一块空间\",{\"1\":{\"3\":1}}],[\"会被展开为如下的形式\",{\"1\":{\"118\":1}}],[\"会调用多次\",{\"1\":{\"110\":1}}],[\"会尽量利用我们的key来进行优化操作\",{\"1\":{\"102\":1}}],[\"会将它作为\",{\"1\":{\"74\":1}}],[\"会保留在所绑定的元素上\",{\"1\":{\"73\":1}}],[\"会设置development\",{\"1\":{\"54\":1}}],[\"会默认复制到打包的目录下\",{\"1\":{\"53\":1}}],[\"会有一些类似这样的语法<\",{\"1\":{\"51\":1}}],[\"会生成一个\",{\"1\":{\"28\":1}}],[\"会非常繁琐\",{\"1\":{\"27\":1}}],[\"会执行node\",{\"1\":{\"22\":1}}],[\"会影响到另一个变量的值\",{\"1\":{\"3\":1}}],[\"浅拷贝是复制\",{\"1\":{\"3\":1}}],[\"浅拷贝是拷贝一层\",{\"1\":{\"3\":1}}],[\"浅拷贝\",{\"0\":{\"5\":1},\"1\":{\"3\":1,\"5\":1}}],[\"概念\",{\"0\":{\"3\":1}}],[\"bryant\",{\"1\":{\"108\":1,\"109\":1,\"110\":1,\"111\":1}}],[\"btn2click\",{\"1\":{\"86\":2}}],[\"btn1click\",{\"1\":{\"85\":5,\"86\":2}}],[\"btnclick\",{\"1\":{\"60\":1,\"62\":2,\"87\":4}}],[\"blue\",{\"1\":{\"70\":1}}],[\"book\",{\"1\":{\"117\":9}}],[\"books\",{\"1\":{\"117\":8}}],[\"boolean\",{\"1\":{\"1\":1,\"2\":1,\"77\":1}}],[\"border\",{\"1\":{\"117\":4}}],[\"body\",{\"1\":{\"81\":1}}],[\"body>\",{\"1\":{\"51\":1,\"60\":1,\"77\":1,\"78\":1,\"80\":1,\"82\":1,\"83\":1,\"85\":1,\"86\":1,\"87\":1,\"90\":1,\"94\":1,\"95\":1,\"96\":1,\"100\":1,\"110\":1,\"113\":1,\"114\":1,\"117\":1,\"120\":1,\"139\":2}}],[\"be\",{\"1\":{\"51\":1}}],[\"built\",{\"1\":{\"51\":1,\"97\":1}}],[\"build来打包即可\",{\"1\":{\"27\":1}}],[\"build\",{\"1\":{\"23\":1,\"24\":2,\"26\":2,\"27\":1}}],[\"button>\",{\"1\":{\"62\":1,\"67\":1,\"69\":3,\"77\":1,\"85\":3,\"86\":2,\"87\":2,\"90\":1,\"96\":1,\"100\":1,\"110\":1,\"111\":1,\"113\":1,\"114\":3,\"117\":3,\"139\":4}}],[\"but\",{\"1\":{\"51\":1}}],[\"bundle\",{\"1\":{\"26\":1}}],[\"bundles\",{\"1\":{\"19\":1}}],[\"bind来进行值的绑定\",{\"1\":{\"120\":1}}],[\"bind=\",{\"1\":{\"83\":1}}],[\"bind提供一个语法糖\",{\"1\":{\"74\":1,\"75\":1}}],[\"bind的基本使用\",{\"1\":{\"74\":1,\"75\":1}}],[\"bind\",{\"0\":{\"74\":1},\"1\":{\"66\":1,\"74\":3,\"75\":2,\"77\":1,\"79\":1,\"83\":1,\"141\":1}}],[\"bin目录下的webpack\",{\"1\":{\"22\":1}}],[\"big\",{\"1\":{\"10\":1}}],[\"banana\",{\"1\":{\"120\":1}}],[\"baidu\",{\"1\":{\"75\":1}}],[\"backgroundcolor\",{\"1\":{\"80\":2}}],[\"background\",{\"1\":{\"70\":1,\"117\":1}}],[\"babel\",{\"1\":{\"62\":1}}],[\"base\",{\"1\":{\"51\":1,\"52\":3}}],[\"base64\",{\"1\":{\"36\":1}}],[\"basketball\",{\"1\":{\"6\":3,\"120\":4}}],[\"baz\",{\"1\":{\"13\":2}}],[\"bar\",{\"1\":{\"13\":2,\"141\":5}}],[\"b\",{\"1\":{\"2\":1,\"100\":2,\"115\":3}}],[\"=>\",{\"1\":{\"96\":1,\"115\":1,\"117\":1,\"118\":1,\"126\":2,\"141\":1}}],[\"==\",{\"1\":{\"6\":1,\"12\":1,\"13\":1}}],[\"=\",{\"1\":{\"2\":2,\"6\":6,\"7\":4,\"8\":3,\"9\":4,\"10\":4,\"12\":7,\"13\":6,\"14\":4,\"16\":4,\"26\":2,\"30\":1,\"37\":1,\"49\":2,\"51\":5,\"52\":2,\"53\":1,\"54\":1,\"60\":2,\"67\":4,\"69\":1,\"70\":1,\"75\":1,\"77\":3,\"78\":1,\"80\":1,\"81\":1,\"82\":3,\"83\":2,\"85\":2,\"86\":1,\"87\":1,\"89\":1,\"90\":2,\"94\":1,\"95\":1,\"96\":3,\"100\":1,\"108\":1,\"109\":1,\"110\":3,\"111\":5,\"113\":2,\"114\":4,\"115\":1,\"116\":1,\"117\":3,\"118\":2,\"120\":1,\"124\":1,\"126\":2,\"141\":3}}],[\"axios\",{\"1\":{\"120\":1}}],[\"agree\",{\"1\":{\"120\":2}}],[\"age=\",{\"1\":{\"83\":1}}],[\"age\",{\"1\":{\"10\":1,\"14\":2,\"83\":1,\"86\":2,\"94\":1,\"95\":1,\"114\":2,\"124\":1}}],[\"align\",{\"1\":{\"117\":1}}],[\"alt=\",{\"1\":{\"74\":3,\"75\":3,\"82\":1}}],[\"a和b是一致的会继续进行比较\",{\"1\":{\"101\":1}}],[\"api可以将\",{\"1\":{\"133\":1}}],[\"api\",{\"0\":{\"103\":1},\"1\":{\"97\":1,\"105\":1,\"115\":1,\"116\":1,\"133\":4}}],[\"apple\",{\"1\":{\"120\":1}}],[\"application\",{\"1\":{\"36\":1}}],[\"app\",{\"1\":{\"18\":1,\"51\":1,\"58\":1,\"60\":13,\"65\":1,\"67\":5,\"69\":6,\"70\":5,\"72\":1,\"74\":1,\"75\":5,\"77\":6,\"78\":6,\"80\":6,\"81\":6,\"82\":6,\"83\":6,\"85\":6,\"86\":6,\"87\":6,\"89\":5,\"90\":6,\"91\":1,\"92\":1,\"94\":6,\"95\":6,\"96\":6,\"100\":6,\"107\":1,\"108\":5,\"109\":5,\"110\":11,\"111\":5,\"113\":6,\"114\":6,\"117\":4,\"120\":6,\"139\":4}}],[\"addmovie\",{\"1\":{\"96\":2}}],[\"area\",{\"1\":{\"85\":3}}],[\"arr2copy\",{\"1\":{\"10\":4}}],[\"arr2\",{\"1\":{\"10\":3}}],[\"arr1copy\",{\"1\":{\"9\":4}}],[\"arr1\",{\"1\":{\"9\":3}}],[\"array\",{\"1\":{\"1\":1,\"6\":1,\"12\":1,\"13\":1,\"112\":1}}],[\"active\",{\"1\":{\"77\":8,\"78\":3}}],[\"avatars\",{\"1\":{\"75\":1}}],[\"attr\",{\"1\":{\"74\":2}}],[\"attrorprop\",{\"1\":{\"74\":1}}],[\"attributes\",{\"1\":{\"97\":1}}],[\"attribute\",{\"1\":{\"74\":7,\"118\":1}}],[\"anwser\",{\"1\":{\"113\":3}}],[\"any\",{\"1\":{\"74\":1}}],[\"angular\",{\"1\":{\"18\":2,\"56\":1}}],[\"abc\",{\"1\":{\"67\":2,\"69\":1,\"77\":4,\"78\":4}}],[\"a>\",{\"1\":{\"60\":1,\"74\":1,\"75\":1,\"82\":1}}],[\"a><\",{\"1\":{\"60\":1}}],[\"auto\",{\"1\":{\"51\":1}}],[\"autoprefixer\",{\"1\":{\"35\":1,\"36\":2,\"37\":1,\"38\":4}}],[\"asset\",{\"0\":{\"46\":1,\"47\":1},\"1\":{\"29\":1,\"39\":1,\"42\":1,\"46\":6,\"47\":1}}],[\"assign\",{\"0\":{\"8\":1},\"1\":{\"8\":2,\"117\":1}}],[\"amd等\",{\"1\":{\"19\":1}}],[\"aa\",{\"1\":{\"10\":1}}],[\"a\",{\"1\":{\"2\":2,\"60\":4,\"100\":2,\"115\":3}}],[\"例如图片\",{\"1\":{\"53\":1}}],[\"例如自动添加css前缀\",{\"1\":{\"35\":1}}],[\"例如将es6+代码转换为es5语法\",{\"1\":{\"29\":1}}],[\"例如\",{\"1\":{\"2\":1,\"28\":3,\"38\":1,\"58\":1,\"112\":1}}],[\"在浏览器中打开调试面板\",{\"1\":{\"142\":1}}],[\"在demo中打下断点\",{\"1\":{\"142\":1}}],[\"在package\",{\"1\":{\"142\":1}}],[\"在项目中配置yarn\",{\"1\":{\"142\":1}}],[\"在该方法中\",{\"1\":{\"141\":1}}],[\"在该网站中生成代码片段\",{\"1\":{\"65\":1}}],[\"在页面中通过cdn的方式来引入\",{\"1\":{\"134\":1}}],[\"在下面的代码里\",{\"1\":{\"126\":1}}],[\"在下面的组件中\",{\"1\":{\"126\":1}}],[\"在组件内访问到\",{\"1\":{\"126\":1}}],[\"在某些场景下\",{\"1\":{\"126\":1}}],[\"在某些情况下\",{\"1\":{\"82\":1,\"88\":1}}],[\"在可以转化的情况下会进行隐式转换的\",{\"1\":{\"124\":1}}],[\"在我们进行逻辑判断时\",{\"1\":{\"124\":1}}],[\"在我们编写代码完成之后\",{\"1\":{\"62\":1}}],[\"在代码背后\",{\"1\":{\"118\":1}}],[\"在原生元素上的用法\",{\"1\":{\"118\":1}}],[\"在方法中被赋值改变时\",{\"1\":{\"114\":1}}],[\"在使用\",{\"1\":{\"139\":1}}],[\"在使用时\",{\"1\":{\"110\":1}}],[\"在使用v\",{\"1\":{\"97\":1}}],[\"在数据不发生变化时\",{\"1\":{\"110\":1}}],[\"在上面的实现思路中\",{\"1\":{\"110\":1}}],[\"在模板语法中直接使用表达式\",{\"0\":{\"107\":1},\"1\":{\"106\":1}}],[\"在模板中放入太多的逻辑会让模板过重和难以维护\",{\"1\":{\"105\":1}}],[\"在模板中使用表达式\",{\"1\":{\"105\":1}}],[\"在模板中可以直接通过插值语法显示一些data中的数据\",{\"1\":{\"105\":1}}],[\"在模板中可以通过\",{\"1\":{\"58\":1}}],[\"在模板中\",{\"1\":{\"66\":1}}],[\"在界面上显示不及格\",{\"1\":{\"106\":1}}],[\"在界面上显示及格\",{\"1\":{\"106\":1}}],[\"在没有key的时候我们的效率是非常低效的\",{\"1\":{\"102\":1}}],[\"在操作真实dom的时候\",{\"1\":{\"100\":1}}],[\"在新旧nodes对比时辨识vnodes\",{\"1\":{\"97\":1}}],[\"在遍历一个数组的时候会经常需要拿到数组的索引\",{\"1\":{\"94\":1}}],[\"在真实开发中\",{\"1\":{\"93\":1,\"120\":1}}],[\"在用法上的区别\",{\"1\":{\"92\":1}}],[\"在用户的javascript被关闭时\",{\"1\":{\"51\":1}}],[\"在给元素绑定事件时\",{\"1\":{\"87\":1}}],[\"在vue\",{\"1\":{\"142\":2}}],[\"在vue3x的时候\",{\"1\":{\"140\":1}}],[\"在vue3\",{\"1\":{\"131\":1,\"133\":1}}],[\"在vue2x的时候\",{\"1\":{\"140\":1}}],[\"在vue2\",{\"1\":{\"131\":1,\"133\":1}}],[\"在vue中\",{\"1\":{\"100\":1}}],[\"在vue中如何监听事件呢\",{\"1\":{\"84\":1}}],[\"在vscode中配置代码片段\",{\"1\":{\"65\":1}}],[\"在前端开发中\",{\"1\":{\"84\":1}}],[\"在前端开发中另外一个非常重要的特性就是交互\",{\"1\":{\"84\":1}}],[\"在开发中\",{\"1\":{\"76\":1}}],[\"在开发中我们只使用了componenta\",{\"1\":{\"61\":1}}],[\"在处理绑定时\",{\"1\":{\"74\":1}}],[\"在这个组件中我们可以获得非常多的特性\",{\"1\":{\"62\":1}}],[\"在这个例子中\",{\"1\":{\"61\":1}}],[\"在这个字段中\",{\"1\":{\"29\":1}}],[\"在父组件中使用子组件时\",{\"1\":{\"61\":1}}],[\"在任何其他的组件中都可以使用的组件\",{\"1\":{\"59\":1}}],[\"在单文件组件和内联字符串模板中\",{\"1\":{\"58\":1}}],[\"在通过\",{\"1\":{\"58\":1}}],[\"在通常情况下\",{\"1\":{\"26\":1}}],[\"在进行插入或者重置顺序的时候\",{\"1\":{\"102\":1}}],[\"在进行\",{\"1\":{\"51\":1}}],[\"在进行项目部署的时\",{\"1\":{\"50\":1}}],[\"在导出一个\",{\"1\":{\"46\":1}}],[\"在webpack5开始\",{\"1\":{\"46\":1}}],[\"在webpack5之前\",{\"1\":{\"46\":1}}],[\"在webpack的一些其他地方不一样\",{\"1\":{\"43\":1}}],[\"在webpack中使用postcss就是使用postcss\",{\"1\":{\"37\":1}}],[\"在webpack中\",{\"1\":{\"29\":1,\"35\":1}}],[\"在file\",{\"1\":{\"43\":1}}],[\"在配置\",{\"1\":{\"51\":1}}],[\"在配置postcss\",{\"1\":{\"38\":1}}],[\"在配置文件中\",{\"1\":{\"31\":1}}],[\"在配置文件中指定打包输出的路径和文件名\",{\"1\":{\"28\":1}}],[\"在配置文件中指定打包的入口文件\",{\"1\":{\"28\":1}}],[\"在您的\",{\"1\":{\"38\":1}}],[\"在引入的样式前加上使用的loader\",{\"1\":{\"30\":1}}],[\"在运行webpack命令时\",{\"1\":{\"28\":1}}],[\"在命令行中运行webpack命令\",{\"1\":{\"28\":1}}],[\"在其中定义打包的入口文件\",{\"1\":{\"28\":1}}],[\"在\",{\"1\":{\"24\":1,\"29\":1,\"87\":1,\"120\":1,\"123\":1,\"132\":1,\"133\":1}}],[\"在目录下直接执行\",{\"1\":{\"23\":1}}],[\"在赋值的过程中都是深拷贝\",{\"1\":{\"2\":1}}],[\"在探讨深浅拷贝之前\",{\"1\":{\"1\":1}}],[\"而在\",{\"1\":{\"132\":1}}],[\"而在任何的子组件或更深层的子组件中都不可用\",{\"1\":{\"61\":1}}],[\"而无需额外的选项\",{\"1\":{\"127\":1}}],[\"而当使用在一个组件上时\",{\"1\":{\"118\":1}}],[\"而嵌套属性的变化不会触发\",{\"1\":{\"114\":1}}],[\"而计算属性虽然使用了多次\",{\"1\":{\"110\":1}}],[\"而进行重新计算\",{\"1\":{\"110\":1}}],[\"而且模块划分的更加清晰\",{\"1\":{\"131\":1}}],[\"而且我们多次提到计算属性有缓存\",{\"1\":{\"110\":1}}],[\"而且不利于后续的管理以及扩展\",{\"1\":{\"56\":1}}],[\"而使用key时\",{\"1\":{\"97\":1}}],[\"而不需要在多个options之间寻找\",{\"1\":{\"133\":1}}],[\"而不需要担心兼容性问题\",{\"1\":{\"38\":1}}],[\"而不一定需要全部使用vue来开发整个\",{\"1\":{\"130\":1}}],[\"而不是使用div来完成\",{\"1\":{\"95\":1}}],[\"而不是作为\",{\"1\":{\"74\":1}}],[\"而值就是相应组件的实现\",{\"1\":{\"61\":1}}],[\"而组件本身又可以在多个地方进行复用\",{\"1\":{\"56\":1}}],[\"而每一个组件又可以进行细分\",{\"1\":{\"56\":1}}],[\"而最终打包的dist文件夹中是没有index\",{\"1\":{\"50\":1}}],[\"而295kb的不会\",{\"1\":{\"41\":1}}],[\"而大的图片也进行转换\",{\"1\":{\"41\":1}}],[\"而是说\",{\"1\":{\"105\":1}}],[\"而是有一大堆的元素\",{\"1\":{\"99\":1}}],[\"而是会生成新的数组\",{\"1\":{\"96\":1}}],[\"而是可以借助于构建工具\",{\"1\":{\"37\":1}}],[\"而是其他的名字呢\",{\"1\":{\"27\":1}}],[\"而是类似于自\",{\"1\":{\"22\":1}}],[\"而webpack\",{\"1\":{\"22\":1}}],[\"而引用类型的值则是拷贝了\",{\"1\":{\"3\":1}}],[\"而引用数据类型如\",{\"1\":{\"1\":1}}],[\"而真实数据存储在堆内存中\",{\"1\":{\"1\":1}}],[\"基本使用\",{\"0\":{\"75\":1,\"85\":1,\"89\":1,\"94\":1,\"106\":1},\"1\":{\"67\":1}}],[\"基本指令\",{\"0\":{\"64\":1}}],[\"基本类型如number\",{\"1\":{\"1\":1}}],[\"基本数据类型和引用数据类型\",{\"1\":{\"1\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
