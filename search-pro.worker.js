const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const l of e.keys())if(l===F){const a=o[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=u;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=o[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=o[f+y]+ +b,A=o[f+y+1]+1,w=o[p+y]+1,L=o[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}W(e.get(l),t,s,n,o,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const l=new Map;l.set(u.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(u),e=l}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const l of Object.keys(u)){const a=u[l],h=e._fieldIds[l],m=o.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:N(n.boost,g)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,o,u,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f==null||f.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,o,u,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,o,u,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(u),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=k(u),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(u,d)),u=l,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),l=u.includes("#"),[a,h]=u.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>o.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(o.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in o)for(const c of o.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":245,\"nextId\":245,\"documentIds\":{\"0\":\"v-2e689c92\",\"1\":\"v-2e689c92#数据类型\",\"2\":\"v-2e689c92#深浅拷贝\",\"3\":\"v-2e689c92#概念\",\"4\":\"v-2e689c92#js-中的深浅拷贝\",\"5\":\"v-2e689c92#浅拷贝\",\"6\":\"v-2e689c92#手写递归\",\"7\":\"v-2e689c92#展开语法\",\"8\":\"v-2e689c92#object-assign\",\"9\":\"v-2e689c92#slice\",\"10\":\"v-2e689c92#concat\",\"11\":\"v-2e689c92#深拷贝\",\"12\":\"v-2e689c92#手写递归-1\",\"13\":\"v-2e689c92#object-entries-obj-遍历对象\",\"14\":\"v-2e689c92#json-parse-json-stringify-待拷贝对象-常用\",\"15\":\"v-2e689c92#其他方法\",\"16\":\"v-2e689c92#vue-中的深拷贝实现\",\"17\":\"v-04fdd484\",\"18\":\"v-04fdd484#什么是-vite\",\"19\":\"v-04fdd484#vite的主要特性\",\"20\":\"v-04fdd484#主流构建工具对比\",\"21\":\"v-04fdd484#为什么使用-vite\",\"22\":\"v-04fdd484#开发环境⚡️速度的提升\",\"23\":\"v-04fdd484#使用简单-开箱即用\",\"24\":\"v-04fdd484#vite-的安装与使用\",\"25\":\"v-04fdd484#安装\",\"26\":\"v-04fdd484#vite构建vue3项目\",\"27\":\"v-04fdd484#vite-支持\",\"28\":\"v-04fdd484#css-支持\",\"29\":\"v-04fdd484#全局导入\",\"30\":\"v-04fdd484#别名\",\"31\":\"v-04fdd484#ts-支持\",\"32\":\"v-04fdd484#vue支持\",\"33\":\"v-04fdd484#vite-原理\",\"34\":\"v-04fdd484#esm-esbuild\",\"35\":\"v-04fdd484#esm\",\"36\":\"v-04fdd484#esbuild\",\"37\":\"v-04fdd484#依赖处理\",\"38\":\"v-04fdd484#静态资源加载\",\"39\":\"v-04fdd484#vue文件缓存\",\"40\":\"v-04fdd484#js-ts处理\",\"41\":\"v-04fdd484#热更新原理\",\"42\":\"v-0d302623\",\"43\":\"v-0d302623#认识webpack\",\"44\":\"v-0d302623#webpack到底是什么呢\",\"45\":\"v-0d302623#vue项目加载的文件有哪些呢\",\"46\":\"v-0d302623#webpack的使用\",\"47\":\"v-0d302623#webpack的安装\",\"48\":\"v-0d302623#webpack的默认打包\",\"49\":\"v-0d302623#webpack-局部安装\",\"50\":\"v-0d302623#webpack配置\",\"51\":\"v-0d302623#webpack-配置文件\",\"52\":\"v-0d302623#指定配置文件\",\"53\":\"v-0d302623#webpack的依赖\",\"54\":\"v-0d302623#loader的使用\",\"55\":\"v-0d302623#css-loader-的使用\",\"56\":\"v-0d302623#style-loader\",\"57\":\"v-0d302623#less工具处理\",\"58\":\"v-0d302623#less-loader处理\",\"59\":\"v-0d302623#postcss-loader-认识\",\"60\":\"v-0d302623#命令行使用postcss\",\"61\":\"v-0d302623#插件autoprefixer\",\"62\":\"v-0d302623#postcss-loader\",\"63\":\"v-0d302623#postcss-preset-env\",\"64\":\"v-0d302623#file-loader\",\"65\":\"v-0d302623#url-loader\",\"66\":\"v-0d302623#url-loader的limit\",\"67\":\"v-0d302623#字体文件加载\",\"68\":\"v-0d302623#文件命名规则\",\"69\":\"v-0d302623#设置文件名称\",\"70\":\"v-0d302623#设置文件的存放路径\",\"71\":\"v-0d302623#asset-module-type\",\"72\":\"v-0d302623#asset-module-type的使用\",\"73\":\"v-0d302623#plugin\",\"74\":\"v-0d302623#cleanwebpackplugin\",\"75\":\"v-0d302623#htmlwebpackplugin\",\"76\":\"v-0d302623#自定义html模板\",\"77\":\"v-0d302623#defineplugin\",\"78\":\"v-0d302623#copywebpackplugin\",\"79\":\"v-0d302623#mode配置列表\",\"80\":\"v-c69fcd34\",\"81\":\"v-c69fcd34#什么是-babel\",\"82\":\"v-c69fcd34#babel-命令行使用\",\"83\":\"v-c69fcd34#插件\",\"84\":\"v-c69fcd34#预设-preset\",\"85\":\"v-c69fcd34#原理\",\"86\":\"v-c69fcd34#底层原理\",\"87\":\"v-c69fcd34#执行原理\",\"88\":\"v-c69fcd34#babel-loader\",\"89\":\"v-c69fcd34#配置文件\",\"90\":\"v-c69fcd34#在-webpack-中使用-vue\",\"91\":\"v-c69fcd34#补充\",\"92\":\"v-187aeed8\",\"93\":\"v-187aeed8#webpack-watch\",\"94\":\"v-187aeed8#webpack-dev-server\",\"95\":\"v-187aeed8#认识模块热替换-hmr\",\"96\":\"v-187aeed8#开启-hmr\",\"97\":\"v-187aeed8#框架-的-hmr\",\"98\":\"v-187aeed8#hmr的原理\",\"99\":\"v-187aeed8#devserver-配置信息\",\"100\":\"v-187aeed8#hotonly、host-配置\",\"101\":\"v-187aeed8#port、open、compress\",\"102\":\"v-187aeed8#proxy\",\"103\":\"v-187aeed8#historyapifallback\",\"104\":\"v-187aeed8#resolve模块解析\",\"105\":\"v-187aeed8#区分开发-生产环境\",\"106\":\"v-034a7808\",\"107\":\"v-034a7808#vue-cli-安装\",\"108\":\"v-034a7808#创建一个项目\",\"109\":\"v-034a7808#项目结构\",\"110\":\"v-034a7808#vue-cli-service-serve\",\"111\":\"v-034a7808#vue-cli-service-build\",\"112\":\"v-034a7808#vue-cli-service-inspect\",\"113\":\"v-3ddad9fa\",\"114\":\"v-3ddad9fa#认识组件的嵌套\",\"115\":\"v-3ddad9fa#组件的拆分\",\"116\":\"v-3ddad9fa#组件的通信\",\"117\":\"v-3ddad9fa#父传子\",\"118\":\"v-3ddad9fa#props-的定义\",\"119\":\"v-3ddad9fa#字符串数组\",\"120\":\"v-3ddad9fa#对象类型\",\"121\":\"v-3ddad9fa#其他\",\"122\":\"v-3ddad9fa#非-prop-的attribute\",\"123\":\"v-3ddad9fa#禁用-attribute-继承\",\"124\":\"v-3ddad9fa#多个根节点的attribute\",\"125\":\"v-3ddad9fa#子传父\",\"126\":\"v-3ddad9fa#emits\",\"127\":\"v-3ddad9fa#动态组件\",\"128\":\"v-3ddad9fa#非父子组件之间的通信\",\"129\":\"v-3ddad9fa#provide-inject\",\"130\":\"v-3ddad9fa#全局事件总线-mitt-库\",\"131\":\"v-3ddad9fa#认识组件的嵌套-1\",\"132\":\"v-3ddad9fa#组件的拆分-1\",\"133\":\"v-3ddad9fa#组件的通信-1\",\"134\":\"v-3ddad9fa#父传子-1\",\"135\":\"v-3ddad9fa#props-的定义-1\",\"136\":\"v-3ddad9fa#字符串数组-1\",\"137\":\"v-3ddad9fa#对象类型-1\",\"138\":\"v-3ddad9fa#其他-1\",\"139\":\"v-3ddad9fa#非-prop-的attribute-1\",\"140\":\"v-3ddad9fa#禁用-attribute-继承-1\",\"141\":\"v-3ddad9fa#多个根节点的attribute-1\",\"142\":\"v-3ddad9fa#子传父-1\",\"143\":\"v-3ddad9fa#emits-1\",\"144\":\"v-3ddad9fa#动态组件-1\",\"145\":\"v-3ddad9fa#非父子组件之间的通信-1\",\"146\":\"v-3ddad9fa#provide-inject-1\",\"147\":\"v-3ddad9fa#全局事件总线-mitt-库-1\",\"148\":\"v-1aacc34f\",\"149\":\"v-1aacc34f#认识组件化开发\",\"150\":\"v-1aacc34f#vue的组件化\",\"151\":\"v-1aacc34f#组件名称\",\"152\":\"v-1aacc34f#注册组件的方式\",\"153\":\"v-1aacc34f#注册全局组件\",\"154\":\"v-1aacc34f#注册局部组件\",\"155\":\"v-1aacc34f#vue的开发模式\",\"156\":\"v-1aacc34f#如何支持sfc\",\"157\":\"v-65bb3ddf\",\"158\":\"v-65bb3ddf#vscode-代码片段\",\"159\":\"v-65bb3ddf#模板语法\",\"160\":\"v-65bb3ddf#mustache-语法-双大括号语法\",\"161\":\"v-65bb3ddf#不常用指令\",\"162\":\"v-65bb3ddf#v-once指令\",\"163\":\"v-65bb3ddf#v-html\",\"164\":\"v-65bb3ddf#v-text\",\"165\":\"v-65bb3ddf#v-pre\",\"166\":\"v-65bb3ddf#v-cloak\",\"167\":\"v-65bb3ddf#v-bind\",\"168\":\"v-65bb3ddf#基本使用\",\"169\":\"v-65bb3ddf#绑定-class\",\"170\":\"v-65bb3ddf#对象语法\",\"171\":\"v-65bb3ddf#数组语法\",\"172\":\"v-65bb3ddf#绑定-style\",\"173\":\"v-65bb3ddf#对象语法-1\",\"174\":\"v-65bb3ddf#数组语法-1\",\"175\":\"v-65bb3ddf#动态绑定属性\",\"176\":\"v-65bb3ddf#属性直接绑定一个对象\",\"177\":\"v-65bb3ddf#v-on\",\"178\":\"v-65bb3ddf#基本使用-1\",\"179\":\"v-65bb3ddf#参数传递\",\"180\":\"v-65bb3ddf#v-on-的修饰符\",\"181\":\"v-65bb3ddf#条件渲染\",\"182\":\"v-65bb3ddf#基本使用-2\",\"183\":\"v-65bb3ddf#template-和-v-if-结合使用\",\"184\":\"v-65bb3ddf#v-show\",\"185\":\"v-65bb3ddf#v-show和v-if的区别\",\"186\":\"v-65bb3ddf#列表渲染\",\"187\":\"v-65bb3ddf#基本使用-3\",\"188\":\"v-65bb3ddf#template元素使用\",\"189\":\"v-65bb3ddf#数组更新检测\",\"190\":\"v-65bb3ddf#v-for-中的-key-是什么作用\",\"191\":\"v-65bb3ddf#认识-vnode\",\"192\":\"v-65bb3ddf#虚拟-dom\",\"193\":\"v-65bb3ddf#插入-f-的案例\",\"194\":\"v-65bb3ddf#vue源码对于key的判断\",\"195\":\"v-65bb3ddf#有无key的结论\",\"196\":\"v-735040ba\",\"197\":\"v-735040ba#computed\",\"198\":\"v-735040ba#认识计算属性\",\"199\":\"v-735040ba#基本使用\",\"200\":\"v-735040ba#在模板语法中直接使用表达式\",\"201\":\"v-735040ba#使用method对逻辑进行抽取\",\"202\":\"v-735040ba#computed-实现\",\"203\":\"v-735040ba#计算属性-vs-methods\",\"204\":\"v-735040ba#计算属性的-setter-和-getter\",\"205\":\"v-735040ba#侦听器-watch\",\"206\":\"v-735040ba#简单案例\",\"207\":\"v-735040ba#配置选项\",\"208\":\"v-735040ba#其他方式\",\"209\":\"v-735040ba#watch-的api\",\"210\":\"v-735040ba#阶段案例\",\"211\":\"v-735040ba#v-model\",\"212\":\"v-735040ba#内部实现\",\"213\":\"v-735040ba#绑定其他表单\",\"214\":\"v-735040ba#修饰符\",\"215\":\"v-735040ba#内置修饰符\",\"216\":\"v-735040ba#lazy\",\"217\":\"v-735040ba#number\",\"218\":\"v-735040ba#trim\",\"219\":\"v-735040ba#自定义的修饰符\",\"220\":\"v-735040ba#多个-v-model-绑定\",\"221\":\"v-45b1c858\",\"222\":\"v-45b1c858#认识-vue\",\"223\":\"v-45b1c858#什么是-vue\",\"224\":\"v-45b1c858#vue3带来的变化\",\"225\":\"v-45b1c858#性能方面\",\"226\":\"v-45b1c858#新的api\",\"227\":\"v-45b1c858#如何使用-vue\",\"228\":\"v-45b1c858#cdn-引入\",\"229\":\"v-45b1c858#下载和引入\",\"230\":\"v-45b1c858#声明式编程和命令式编程\",\"231\":\"v-45b1c858#mvvm模型\",\"232\":\"v-45b1c858#template属性\",\"233\":\"v-45b1c858#data属性\",\"234\":\"v-45b1c858#methods属性-重点\",\"235\":\"v-45b1c858#编写dom元素的模板方式\",\"236\":\"v-45b1c858#vscode对sfc文件的支持\",\"237\":\"v-45b1c858#如何阅读vue源码\",\"238\":\"v-9a3f249c\",\"239\":\"v-744e6dd4\",\"240\":\"v-5e3d92f7\",\"241\":\"v-659323e8\",\"242\":\"v-ad9a6986\",\"243\":\"v-7862baf1\",\"244\":\"v-44825889\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2],\"1\":[1,20],\"2\":[1,16],\"3\":[1,22],\"4\":[2],\"5\":[1,7],\"6\":[1,32],\"7\":[1,26],\"8\":[3,19],\"9\":[2,17],\"10\":[2,20],\"11\":[1,5],\"12\":[1,35],\"13\":[4,37],\"14\":[6,36],\"15\":[1,5],\"16\":[2,29],\"17\":[1,6],\"18\":[2,62],\"19\":[1,22],\"20\":[1,62],\"21\":[2],\"22\":[1,64],\"23\":[2,23],\"24\":[2],\"25\":[1,25],\"26\":[1,63],\"27\":[2],\"28\":[2,33],\"29\":[1,17],\"30\":[1,17],\"31\":[2,10],\"32\":[1,28],\"33\":[2],\"34\":[2],\"35\":[1,100],\"36\":[1,25],\"37\":[1,179],\"38\":[1,70],\"39\":[1,15],\"40\":[2,12],\"41\":[1,160],\"42\":[1],\"43\":[1,35],\"44\":[2,30],\"45\":[2,17],\"46\":[1,9],\"47\":[1,21],\"48\":[1,47],\"49\":[2,48],\"50\":[1],\"51\":[2,30],\"52\":[1,21],\"53\":[1,55],\"54\":[1,41],\"55\":[3,72],\"56\":[2,30],\"57\":[1,12],\"58\":[2,15],\"59\":[4,16],\"60\":[1,18],\"61\":[1,30],\"62\":[2,34],\"63\":[3,55],\"64\":[2,34],\"65\":[2,35],\"66\":[2,14],\"67\":[1,19],\"68\":[1,37],\"69\":[1,3],\"70\":[1,7],\"71\":[3,34],\"72\":[3,22],\"73\":[1,7],\"74\":[1,23],\"75\":[1,16],\"76\":[1,106],\"77\":[1,28],\"78\":[1,47],\"79\":[1,18],\"80\":[2],\"81\":[3,70],\"82\":[2,25],\"83\":[1,66],\"84\":[2,54],\"85\":[1],\"86\":[1,53],\"87\":[1,42],\"88\":[2,59],\"89\":[1,46],\"90\":[4,189],\"91\":[1,116],\"92\":[2,61],\"93\":[2,31],\"94\":[3,50],\"95\":[3,35],\"96\":[2,38],\"97\":[3,44],\"98\":[1,95],\"99\":[2,45],\"100\":[3,39],\"101\":[3,36],\"102\":[1,98],\"103\":[1,97],\"104\":[1,99],\"105\":[2,91],\"106\":[1,54],\"107\":[3,88],\"108\":[1,158],\"109\":[1,92],\"110\":[4,56],\"111\":[4,69],\"112\":[4,40],\"113\":[1,2],\"114\":[1,48],\"115\":[1,64],\"116\":[1,25],\"117\":[1,16],\"118\":[2,10],\"119\":[1,37],\"120\":[1,59],\"121\":[1,118],\"122\":[3,43],\"123\":[3,32],\"124\":[1,17],\"125\":[1,60],\"126\":[1,29],\"127\":[1,57],\"128\":[1,9],\"129\":[2,83],\"130\":[3,92],\"131\":[1,48],\"132\":[1,64],\"133\":[1,25],\"134\":[1,16],\"135\":[2,10],\"136\":[1,37],\"137\":[1,59],\"138\":[1,118],\"139\":[3,43],\"140\":[3,32],\"141\":[1,17],\"142\":[1,60],\"143\":[1,29],\"144\":[1,57],\"145\":[1,9],\"146\":[2,83],\"147\":[3,91],\"148\":[1],\"149\":[1,45],\"150\":[1,12],\"151\":[1,54],\"152\":[1,28],\"153\":[1,59],\"154\":[1,82],\"155\":[1,77],\"156\":[1,17],\"157\":[2],\"158\":[2,23],\"159\":[1,33],\"160\":[3,80],\"161\":[1],\"162\":[2,50],\"163\":[2,47],\"164\":[2,13],\"165\":[2,17],\"166\":[2,33],\"167\":[2,93],\"168\":[1,45],\"169\":[2,11],\"170\":[1,68],\"171\":[1,46],\"172\":[2,22],\"173\":[1,57],\"174\":[1,41],\"175\":[1,56],\"176\":[1,52],\"177\":[2,61],\"178\":[1,62],\"179\":[1,68],\"180\":[3,92],\"181\":[1,8],\"182\":[1,46],\"183\":[5,60],\"184\":[2,17],\"185\":[3,36],\"186\":[1,9],\"187\":[1,86],\"188\":[1,54],\"189\":[1,84],\"190\":[6,34],\"191\":[2,19],\"192\":[2,12],\"193\":[3,71],\"194\":[1,49],\"195\":[1,8],\"196\":[3],\"197\":[1],\"198\":[1,45],\"199\":[1,36],\"200\":[1,35],\"201\":[1,55],\"202\":[2,56],\"203\":[3,95],\"204\":[4,62],\"205\":[2,30],\"206\":[1,65],\"207\":[1,103],\"208\":[1,62],\"209\":[3,35],\"210\":[1,176],\"211\":[2,41],\"212\":[1,1],\"213\":[1,138],\"214\":[1],\"215\":[1],\"216\":[2,20],\"217\":[2,33],\"218\":[2,12],\"219\":[1,78],\"220\":[4,36],\"221\":[1],\"222\":[2],\"223\":[2,13],\"224\":[1,30],\"225\":[1,47],\"226\":[1,37],\"227\":[2,12],\"228\":[2,10],\"229\":[1,14],\"230\":[1,13],\"231\":[1,16],\"232\":[1,81],\"233\":[1,20],\"234\":[3,58],\"235\":[1,76],\"236\":[1,68],\"237\":[1,26],\"238\":[1],\"239\":[1],\"240\":[1],\"241\":[1],\"242\":[1],\"243\":[1],\"244\":[1]},\"averageFieldLength\":[1.620408163265306,44.483768674820915],\"storedFields\":{\"0\":{\"h\":\"Js 的浅拷贝与深拷贝\"},\"1\":{\"h\":\"数据类型\",\"t\":[\"在探讨深浅拷贝之前，我们先梳理一下js中的数据类型，js的数据类型分为两类：基本数据类型和引用数据类型\",\"前者是存储在栈内存中，后者是将其地址存在栈内存中，而真实数据存储在堆内存中。\",\"如下图所示，基本类型如number、string、boolean、Null和 undefined 等存储在栈内存中，而引用数据类型如 Array、Object 和函数等则是分别存储数据1的地址、数据2的地址和数据3的地址。\"]},\"2\":{\"h\":\"深浅拷贝\",\"t\":[\"js中的基本数据类型：String Number Boolean Null Undefined，在赋值的过程中都是深拷贝。\",\"例如，let a = 10 ; b = a , 修改其中一个变量的值，不会影响到另一个变量的值。\"]},\"3\":{\"h\":\"概念\",\"t\":[\"浅拷贝：会在栈中开辟另一块空间，并将被拷贝对象的栈内存数据完全拷贝到该块空间中，即基本数据类型的值会被完全拷贝，而引用类型的值则是拷贝了“指向堆内存的地址”。因此，当修改其中一个变量的值时，会影响到另一个变量的值。\",\"深拷贝：不仅会在栈中开辟另一块空间，若被拷贝对象中有引用类型，则还会在堆内存中开辟另一块空间存储引用类型的真实数据。因此，当修改其中一个变量的值时，不会影响到另一个变量的值。\",\"两者示意图如下：\",\"浅拷贝是拷贝一层，属性为对象时，浅拷贝是复制，两个对象指向同一个地址\",\"深拷贝是递归拷贝深层次，属性为对象时，深拷贝是新开栈，两个对象指向不同的地址\"]},\"4\":{\"h\":\"Js 中的深浅拷贝\"},\"5\":{\"h\":\"浅拷贝\",\"t\":[\"浅拷贝，指的是创建新的数据，这个数据有着原始数据属性值的一份精确拷贝\",\"如果属性是基本类型，拷贝的就是基本类型的值。如果属性是引用类型，拷贝的就是内存地址\"]},\"6\":{\"h\":\"手写递归\",\"t\":[\"function shallowClone(obj) { if (typeof obj !== 'object') return; let newObj = obj instanceof Array ? [] : {}; for (let key in obj) { if (obj.hasOwnProperty(key)) { newObj[key] = obj[key]; } } return newObj; } const person = { name: 'cxk', hobby: ['sing', 'rap', 'basketball'] } const person1 = shallowClone(person); person1.name = 'xkc'; person1.hobby[0] = 'dance'; console.log(person); // {name: \\\"cxk\\\", hobby: [\\\"dance\\\", \\\"rap\\\", \\\"basketball\\\"]} console.log(person1); // {name: \\\"xkc\\\", hobby: [\\\"dance\\\", \\\"rap\\\", \\\"basketball\\\"]} \"]},\"7\":{\"h\":\"展开语法\",\"t\":[\"展开语法(spread syntax)允许一个表达式在期望多个参数(用于函数调用)或多个元素(用于数组字面量)或多个变量(用于解构赋值)的位置扩展。\",\"let obj = { name: \\\"cxk\\\", lessons: [\\\"语文\\\", \\\"数学\\\", \\\"英语\\\"] } let hd1 = { ...obj }; hd1.name = \\\"hdx\\\"; hd1.lessons[0] = \\\"物理\\\"; console.log(obj); // {name: \\\"cxk\\\", lessons: [\\\"物理\\\", \\\"数学\\\", \\\"英语\\\"]} console.log(hd1); // {name: \\\"hdx\\\", lessons: [\\\"物理\\\", \\\"数学\\\", \\\"英语\\\"]} \"]},\"8\":{\"h\":\"Object.assign()\",\"t\":[\"Object.assign() 方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象。它将返回目标对象。\",\"let info = { name: 'cxk', hobbies: ['唱', '跳', '篮球'] }; let obj = Object.assign({}, info); obj.hobbies[0] = 'rap'; console.log(info); console.log(obj); // {name: \\\"cxk\\\", hobbies: [\\\"rap\\\", \\\"跳\\\", \\\"篮球\\\"]} \"]},\"9\":{\"h\":\"slice()\",\"t\":[\"slice() 方法可从已有的数组中返回选定的元素。\",\"let arr1 = [1, 42, [3, 4]] let arr1Copy = arr1.slice() arr1Copy[0] = 10 arr1Copy[2][0] = 100 console.log(arr1) // [1, 42, [100, 4]] console.log(arr1Copy) // [10, 42, [100, 4]] \"]},\"10\":{\"h\":\"concat()\",\"t\":[\"concat() 方法用于连接两个或多个数组。\",\"let arr2 = ['cat', 'dog', 'pig', { 'name': 'xia', 'age': 18 }] let arr2Copy = [].concat(arr2) arr2Copy[2] = 'big pig' arr2Copy[3]['name'] = 'aa' console.log(arr2) console.log(arr2Copy) \"]},\"11\":{\"h\":\"深拷贝\",\"t\":[\"深拷贝开辟一个新的栈，两个对象属性完成相同，但是对应两个不同的地址，修改一个对象的属性，不会改变另一个对象的属性\"]},\"12\":{\"h\":\"手写递归\",\"t\":[\"function deepClone(obj) { let newObj = obj instanceof Array ? [] : {}; for (let i in obj) { if (obj.hasOwnProperty(i)) { if (obj[i] && typeof obj[i] == 'object') { // 若对象属性还是引用类型，进行递归 newObj[i] = deepClone(obj[i]); } else { // 对象属性为基础数据类型，直接赋值 newObj[i] = obj[i]; } } } return newObj; } const obj = { name: 'zs', hobby: ['排球', '网球', '乒乓球'], }; const newObj = deepClone(obj); newObj.name = 'lisi'; newObj.hobby[0] = '篮球'; console.log(obj); // { name: 'zs', hobby: [ '排球', '网球', '乒乓球' ] } console.log(newObj); // { name: 'lisi', hobby: [ '篮球', '网球', '乒乓球' ] } \"]},\"13\":{\"h\":\"Object.entries(obj) 遍历对象\",\"t\":[\"Object.entries() 方法返回一个给定对象自身可枚举属性的键值对数组\",\"比如：Object.entries({ foo: 'bar', baz: 42 }); // [ ['foo', 'bar'], ['baz', 42] ]\",\"function deepClone(obj) { let newObj = obj instanceof Array ? [] : {}; for (const [k, v] of Object.entries(obj)) { newObj[k] = typeof v == 'object' ? deepClone(v) : v; } return newObj; } const obj = { name: 'zs', hobby: ['排球', '网球', '乒乓球'], }; const newObj = deepClone(obj); newObj.name = 'lisi'; newObj.hobby[0] = '篮球'; console.log(obj); console.log(newObj); \"]},\"14\":{\"h\":\"JSON.parse(JSON.stringify(待拷贝对象) -> 常用\",\"t\":[\"JSON.stringify() 方法用于将 JavaScript 值转换为 JSON 字符串。\",\"比如: JSON.stringify({ x: 5, y: 6 }); // \\\"{\\\"x\\\":5,\\\"y\\\":6}\\\" -> string\",\"JSON.parse() 方法用于将一个 JSON 字符串转换为对象。\",\"比如: JSON.parse('{\\\"name\\\":\\\"cxk\\\",\\\"age\\\":18}'); // {name: \\\"cxk\\\", age: 18} -> object\",\"const obj = { name: 'zs', hobby: ['排球', '网球', '乒乓球'], }; const newObj = JSON.parse(JSON.stringify(obj)); newObj.name = 'lisi'; newObj.hobby[0] = '篮球'; console.log(obj); console.log(newObj); \"]},\"15\":{\"h\":\"其他方法\",\"t\":[\"_.cloneDeep()\",\"jQuery.extend()\",\"手写循环递归\"]},\"16\":{\"h\":\"Vue 中的深拷贝实现\",\"t\":[\"引入loadsh,提供 cloneDeep 实现深拷贝\",\"安装loadsh npm i --save lodash\",\"引入loadsh import _ from 'lodash'\",\"直接调用 loadsh 库的方法 const newObj = _.cloneDeep(this.obj)\",\"_clone 实现浅拷贝\",\"const obj = _.clone(info); info.name = \\\"kobe\\\"; console.log(obj.name); info.friend.name = \\\"james\\\"; console.log(obj.friend.name); \"]},\"17\":{\"h\":\"Vite\",\"t\":[\"https://cn.vitejs.dev/guide/\"]},\"18\":{\"h\":\"什么是 Vite\",\"t\":[\"Vite（法语意为 \\\"快速的\\\"，发音 /vit/，发音同 \\\"veet\\\"）是一种新型前端构建工具，能够显著提升前端开发体验。它主要由两部分组成： \",\"一个开发服务器(dev server)，它基于 原生 ES 模块 提供了 丰富的内建功能，如速度快到惊人的 模块热更新（HMR）。\",\"一套构建指令，它使用 Rollup 打包你的代码，并且它是预配置的，可输出用于生产环境的高度优化过的静态资源。\",\"Vite 是一种具有明确建议的工具，具备合理的默认设置。您可以在 功能指南 中了解 Vite 的各种可能性。通过 插件，Vite 支持与其他框架或工具的集成。如有需要，您可以通过 配置部分 自定义适应你的项目。\",\"Vite 还提供了强大的扩展性，可通过其 插件 API 和 JavaScript API 进行扩展，并提供完整的类型支持。\",\"Vite作为一个基于浏览器原生ESM的构建工具，它省略了开发环境的打包过程，利用浏览器去解析imports，在服务端按需编译返回。同时，在开发环境拥有速度快到惊人的模块热更新，且热更新的速度不会随着模块增多而变慢。因此，使用Vite进行开发，至少会比Webpack快10倍左右。\",\"你可以在 为什么选 Vite 部分深入了解该项目的设计理念。\"]},\"19\":{\"h\":\"Vite的主要特性\",\"t\":[\"Instant Server Start —— 即时服务启动\",\"Lightning Fast HMR —— 闪电般快速的热更新\",\"Rich Features —— 丰富的功能\",\"Optimized Build —— 经过优化的构建\",\"Universal Plugin Interface —— 通用的Plugin接口\",\"Fully Typed APIs —— 类型齐全的API\"]},\"20\":{\"h\":\"主流构建工具对比\",\"t\":[\"Browserify\",\"预编译模块化方案（文件打包工具）\",\"Browserify基于流方式干净灵活\",\"遵循commonJS规范打包JS\",\"可引入插件打包CSS等其他资源（非原生能力）\",\"Gulp\",\"基于流的自动化构建工具（工程化）\",\"配置复杂度高，偏向编程式，需要定义task处理构建\",\"支持监听读写文件\",\"可搭配Browserify等模块化工具来使用\",\"Parcel\",\"极速打包（工程化：极速0配置）\",\"零配置，但造成了配置不灵活，内置常见场景的构建方案及其依赖，无需再次安装（babel等）\",\"以html入口，自动检测和打包依赖\",\"不支持SourceMap\",\"无法Tree-shaking\",\"Webpack\",\"预编译模块化方案（工程化：大而全）\",\"通过配置文件达到一站式配置\",\"loader进行资源转换，功能全面（css+js+icon+front）\",\"插件丰富，灵活扩展\",\"社群庞大\",\"大型项目构建慢\",\"Rollup\",\"基于ES6打包（模块打包工具）\",\"Tree-shaking\",\"打包文件小且干净，执行效率更高\",\"更专注于JS打包\",\"Snowpack\",\"基于ESM运行时编译（工程化：ESM运行时）\",\"无需递归循环依赖组装依赖树\",\"默认输出单独的构建模块（未打包），可选择不同打包器（webpack、rollup等）\",\"Vite\",\"基于ESM运行时打包\",\"借鉴了Snowpack\",\"生产环境使用Rollup，集成度更高，相比Snowpack支持多页面、库模式、动态导入自动polyfill等\"]},\"21\":{\"h\":\"为什么使用 Vite\"},\"22\":{\"h\":\"开发环境⚡️速度的提升\",\"t\":[\"使用JS开发的工具通常需要很长的时间才能启动开发服务器，且这个启动时间与代码量、代码复杂度正相关。即使使用HMR，文件修改后的效果也要几秒钟才能在浏览器中反应出来，代表如Webpack。那么Vite是如何解决如Webpack这样的构建工具一样，在复杂、多模块项目开发中启动慢、HMR慢的问题呢？\",\"我们详细对比了开发环境中的Vite和Webpack，发现主要有如下不同：\",\"Webpack\",\"Vite\",\"先打包生成bundle，再启动开发服务器\",\"先启动开发服务器，利用新一代浏览器的ESM能力，无需打包，直接请求所需模块并实时编译\",\"HMR时需要把改动模块及相关依赖全部编译\",\"HMR时只需让浏览器重新请求该模块，同时利用浏览器的缓存（源码模块协商缓存，依赖模块强缓存）来优化请求\",\"内存高效利用\",\"-\",\"因此，针对开发环境中的启动慢问题，Vite开发环境冷启动无需打包，无需分析模块之间的依赖，同时也无需在启动开发服务器前进行编译，启动时还会使用 esbuild 来进行预构建。而Webpack 启动后会做一堆事情，经历一条很长的编译打包链条，从入口开始需要逐步经历语法解析、依赖收集、代码转译、打包合并、代码优化，最终将高版本的、离散的源码编译打包成低版本、高兼容性的产物代码;\",\"针对HMR慢，即使只有很小的改动，Webpack依然需要构建完整的模块依赖图，并根据依赖图来进行转换。而Vite利用了ESM和浏览器缓存技术，更新速度与项目复杂度无关。可以看到，如Snowpack、Vite这类面相非打包的构建工具，在开发环境启动时只需要启动两个Server，一个用于页面加载，一个用于HMR的Websocket。当浏览器发出原生的ESM请求，Server收到请求只需要编译当前文件后返回给浏览器，不需要管理依赖。\",\"image-20231122171817220\",\"image-20231122171839049\"]},\"23\":{\"h\":\"使用简单，开箱即用\",\"t\":[\"相比Webpack需要对entry、loader、plugin等进行诸多配置，Vite的使用可谓是相当简单了。只需执行初始化命令，就可以得到一个预设好的开发环境，开箱即获得一堆功能，包括：CSS预处理、html预处理、异步加载、分包、压缩、HMR等。他使用复杂度介于Parcel和Webpack的中间，只是暴露了极少数的配置项和plugin接口，既不会像Parcel一样配置不灵活，又不会像Webpack一样需要了解庞大的loader、plugin生态，灵活适中、复杂度适中。适合前端新手。\"]},\"24\":{\"h\":\"Vite 的安装与使用\"},\"25\":{\"h\":\"安装\",\"t\":[\"Vite 需要 Node.js 版本 18+，20+。然而，有些模板需要依赖更高的 Node 版本才能正常运行，当你的包管理器发出警告时，请注意升级你的 Node 版本。\",\"首先，我们安装一下vite工具：\",\"npm install vite –g # 全局安装 npm install vite –D # 局部安装 12 \",\"通过vite来启动项目：\",\"npx vite \"]},\"26\":{\"h\":\"Vite构建Vue3项目\",\"t\":[\"使用 NPM:\",\"npm create vite@latest \",\"使用 Yarn:\",\"yarn create vite \",\"Need to install the following packages: create-vite@4.2.0 Ok to proceed? (y) y ✔ Project name: … vite-vue3 ? Select a framework: › - Use arrow-keys. Return to submit. Vanilla （如果你要使用Vue2可以用这个方式，然后再自己配置一下vite-plugin-vue2插件） ❯ Vue （默认是Vue3项目） React （React项目） Preact （比React项目轻量级的Preact项目） Lit Svelte Others \",\"因为我们要构建Vue3的项目，所以这里我们选择Vue就行了，然后下一步选择开发语言\",\"✔ Project name: … vite-vue3 ✔ Select a framework: › Vue ? Select a variant: › - Use arrow-keys. Return to submit. ❯ JavaScript TypeScript Customize with create-vue ↗ Nuxt ↗ \",\"cd 进项目路径, npm install, 然后 npm run dev 运行即可\"]},\"27\":{\"h\":\"Vite 支持\"},\"28\":{\"h\":\"Css 支持\",\"t\":[\"vite可以直接支持css的处理\",\"直接导入css即可；\",\"vite可以直接支持css预处理器，比如less\",\"直接导入less；\",\"之后安装less编译器；\",\" npm install less -D \",\"vite直接支持postcss的转换：\",\"只需要安装postcss，并且配置 postcss.config.js 的配置文件即可；\",\"npm install postcss postcss-preset-env -D // 在项目中创建 postcss.config.ts const postcssPresetEnv = require('postcss-preset-env'); module.exports = { // 安装了一个预设 预设就是相当于最佳实践，已经帮你安装好了很多东西 plugin: [postcssPresetEnv(/* pluginOptions */)] } \"]},\"29\":{\"h\":\"全局导入\",\"t\":[\"// vite.config.js import { defineConfig } from 'vite'; export default defineConfig({ // 其他配置项... css: { preprocessorOptions: { scss: { additionalData: ` @import \\\"@/style/globalVar.scss\\\"; `, }, }, }, }); \"]},\"30\":{\"h\":\"别名\",\"t\":[\"// vite.config.js import { defineConfig } from 'vite'; import vue from '@vitejs/plugin-vue'; export default defineConfig({ // 其他配置项... resolve: { alias: { '@': '/src' } }, plugins: [vue()] }); \"]},\"31\":{\"h\":\"Ts 支持\",\"t\":[\"vite对TypeScript是原生支持的，它会直接使用ESBuild来完成编译： \",\"只需要直接导入即可；\",\"如果我们查看浏览器中的请求，会发现请求的依然是ts的代码： \",\"这是因为vite中的服务器Connect会对我们的请求进行转发；\",\"获取ts编译后的代码，给浏览器返回，浏览器可以直接进行解析；\"]},\"32\":{\"h\":\"vue支持\",\"t\":[\"vite对vue提供第一优先级支持：\",\"Vue 3 单文件组件支持：@vitejs/plugin-vue\",\"Vue 3 JSX 支持：@vitejs/plugin-vue-jsx\",\"Vue 2 支持：underfin/vite-plugin-vue2\",\"安装支持vue的插件：\",\" npm install @vitejs/plugin-vue -D \",\"在vite.config.js中配置插件\",\"const vue = require('@vitejs/plugin-vue') module.exports = { plugins: [ vue() ] } \"]},\"33\":{\"h\":\"Vite 原理\"},\"34\":{\"h\":\"ESM&esbuild\"},\"35\":{\"h\":\"ESM\",\"t\":[\"在ES6没有出现之前，随着js代码日益膨胀，往往会对资源模块化来提效，这也就出现了多个模块化方案。如CommonJS常用于服务端，AMD、CMD规范常用在客户端。ES6出现后，紧接着出现了ESM。ESM是浏览器支持的一种模块化方案，允许在浏览器实现模块化。\",\"CommonJS：模块同步，如Browserify会对代码进行解析，整理出代码中的所有模块依赖关系，然后把nodejs的模块编译成浏览器可用的模块，相关的模块代码都打包在一起，形成一个完整的JS文件，这个文件中不会存在 require 这类的模块化语法，变成可以在浏览器中运行的普通JS，运行时加载\",\"AMD：模块异步，依赖前置，是requireJS在推广过程中对模块定义的规范化产出，加载完依赖后立即执行依赖模块，依赖加载成功后执行回调\",\"CMD：模块异步，延迟执行，是seaJS在推广过程中对模块定义的规范化产出，就近依赖，先加载所有依赖模块，运行时才执行require内容，按顺序执行\",\"与CommonJS、AMD不同，ESM的对外接口只是一种静态定义，为编译时加载，遇到模块加载命令import，就会生成一个只读引用。等脚本真正执行时，再根据这个只读引用，到被加载的那个模块内取值。由于ESM编译时就能确定模块的依赖关系，因此能够只包含要运行的代码，可以显著减少文件体积，降低浏览器压力。\",\"由于ESM是一个比较新的模块化方案，目前其浏览器能力支持如下：\",\"img\",\"可以看到，除了IE、Opera等，新一代浏览器中绝大部分都已支持。\",\"接下来以Vite创建的模板为例，看一下ESM的解析过程：\",\"<template> <img alt=\\\"Vue logo\\\" src=\\\"./assets/logo.png\\\" /> <HelloWorld msg=\\\"Hello Vue 3.0 + Vite\\\" /> </template> <script> import HelloWorld from './components/HelloWorld.vue' export default { name: 'App', components: { HelloWorld } } </script> \",\"当浏览器解析 import HelloWorld from './components/HelloWorld.vue' 时，会向当前域名发送一个请求获取对应的资源（ESM支持解析相对路径）\",\"浏览器下载对应的文件，然后解析成模块记录。接下来会进行实例化，为模块分配内存，然后按照导入、导出语句建立模块和内存的映射关系。最后，运行上述代码，把内存空间填充为真实的值。\"]},\"36\":{\"h\":\"esbuild\",\"t\":[\"ESBuild的特点： \",\"超快的构建速度，并且不需要缓存；\",\"支持ES6和CommonJS的模块化；\",\"支持ES6的Tree Shaking；\",\"支持Go、JavaScript的API；\",\"支持TypeScript、JSX等语法编译；\",\"支持SourceMap；\",\"支持代码压缩；\",\"支持扩展其他插件；\",\"ESBuild的构建速度和其他构建工具速度对比：\",\"在这里插入图片描述\",\"ESBuild为什么这么快呢？ \",\"使用Go语言编写的，可以直接转换成机器代码，而无需经过字节码；\",\"ESBuild可以充分利用CPU的多内核，尽可能让它们饱和运行；\",\"ESBuild的所有内容都是从零开始编写的，而不是使用第三方，所以从一开始就可以考虑各种性能问题；\"]},\"37\":{\"h\":\"依赖处理\",\"t\":[\"Vite 通过在一开始将应用中的模块区分为 依赖 和 源码 两类，改进了开发服务器启动时间。依赖 大多为在开发时不会变动的纯 JavaScript。一些较大的依赖（例如有上百个模块的组件库）处理的代价也很高。\",\"依赖解析\",\"以 Vite 官方 demo 为例，当我们请求 localhost:3000 时，Vite 默认返回 localhost:3000/index.html 的代码。而后发送请求 src/main.js。\",\"main.js 代码如下：\",\"import { createApp } from 'vue' import App from './App.vue' import './index.css' createApp(App).mount('#app') \",\"img\",\"可以观察到浏览器请求 vue.js 时， 请求路径是 @modules/vue.js。在 Vite 中约定若 path 的请求路径满足 /^/@modules// 格式时，被认为是一个 node_modules 模块。\",\"平时开发中，webpack & rollup(rollup有对应插件) 等打包工具会帮我们找到模块的路径，但浏览器只能通过相对路径去寻找，而如果是直接使用模块名比如：import vue from 'vue'，浏览器就会报错，这个时候就需要一个三方包进行处理。Vite 对ESM形式的 js 文件模块使用了 ES Module Lexer 处理。Lexer 会找到代码中以 import 语法导入的模块并以数组形式返回。Vite 通过该数组的值获取判断是否为一个 node_modules 模块。若是则进行对应改写成 @modules/:id 的写法。\",\"重写完路径后，浏览器会发送 path 为 /@modules/:id 的对应请求，接下来会被 Vite 客户端做一层拦截来解析模块的真实位置。\",\"首先正则匹配请求路径，如果是/@modules开头就进行后续处理，否则就跳过。若是，会设置响应类型为js，读取真实模块路径内容，返回给客户端。\",\"客户端注入本质上是创建一个script标签（type='module'），然后将其插入到head中，这样客户端在解析html是就可以执行代码了\",\"export const moduleRE = /^\\\\/@modules\\\\// // plugin for resolving /@modules/:id requests. app.use(async (ctx, next) => { if (!moduleRE.test(ctx.path)) { return next() } // path maybe contain encode chars const id = decodeURIComponent(ctx.path.replace(moduleRE, '')) ctx.type = 'js' const serve = async (id: string, file: string, type: string) => { // 在代码中做一个缓存，下次访问相同路径直接从 map 中获取 304 返回 moduleIdToFileMap.set(id, file) moduleFileToIdMap.set(file, ctx.path) debug(`(${type}) ${id} -> ${getDebugPath(root, file)}`) await ctx.read(file) return next() } } // 兼容 alias 情况 const importerFilePath = importer ? resolver.requestToFile(importer) : root const nodeModulePath = resolveNodeModuleFile(importerFilePath, id) // 如果是个 node_modules 的模块，读取文件。 if (nodeModulePath) { return serve(id, nodeModulePath, 'node_modules') } }) \",\"依赖预构建\",\"依赖预构建主要有两个目的：\",\"CommonJS 和 UMD 兼容性: 开发阶段中，Vite 的开发服务器将所有代码视为原生 ES 模块。因此，Vite 必须先将作为 CommonJS 或 UMD 发布的依赖项转换为 ESM。\",\"性能： Vite 将有许多内部模块的 ESM 依赖关系转换为单个模块，以提高后续页面加载性能。\",\"Vite使用esbuild在初次启动开发服务器前把检测到的依赖进行预构建。Vite 基于ESM，在使用某些模块时，由于模块依赖了另一些模块，依赖的模块又基于另一些模块。会出现页面初始化时一次发送数百个模块请求的情况。\",\"以 lodash-es 为例，代码中以 import { debounce } from 'lodash' 导入一个命名函数时候，并不是只下载包含这个函数的文件，而是有一个依赖图。\",\"img\",\"Vite 为了优化请求数量和速度，利用esbuild在启动的时候预先把debounce用到的所有内部模块全部打包成一个bundle，这样就浏览器在请求debounce时，便只需要发送一次请求了\"]},\"38\":{\"h\":\"静态资源加载\",\"t\":[\"当请求的路径符合 imageRE, mediaRE, fontsRE 或 JSON 格式，会被认为是一个静态资源。静态资源将处理成ESM模块返回。\",\"// src/node/utils/pathUtils.ts const imageRE = /\\\\.(png|jpe?g|gif|svg|ico|webp)(\\\\?.*)?$/ const mediaRE = /\\\\.(mp4|webm|ogg|mp3|wav|flac|aac)(\\\\?.*)?$/ const fontsRE = /\\\\.(woff2?|eot|ttf|otf)(\\\\?.*)?$/i export const isStaticAsset = (file: string) => { return imageRE.test(file) || mediaRE.test(file) || fontsRE.test(file) } // src/node/server/serverPluginAssets.ts app.use(async (ctx, next) => { if (isStaticAsset(ctx.path) && isImportRequest(ctx)) { ctx.type = 'js' ctx.body = export default ${JSON.stringify(ctx.path)} // 输出是path return } return next() }) export const jsonPlugin: ServerPlugin = ({ app }) => { app.use(async (ctx, next) => { await next() // handle .json imports // note ctx.body could be null if upstream set status to 304 if (ctx.path.endsWith('.json') && isImportRequest(ctx) && ctx.body) { ctx.type = 'js' ctx.body = dataToEsm(JSON.parse((await readBody(ctx.body))!), { namedExports: true, preferConst: true }) } }) } \"]},\"39\":{\"h\":\"vue文件缓存\",\"t\":[\"当 Vite 遇到一个 .vue 后缀的文件时。由于 .vue 模板文件的特殊性，它被拆分成 template, css, script 模块三个模块进行分别处理。最后会对 script, template, css 发送多个请求获取\",\"img\"]},\"40\":{\"h\":\"js/ts处理\",\"t\":[\"Vite使用esbuild将ts转译到js，约是tsc速度的20～30倍，同时HMR更新反应到浏览器的时间会小于50ms。但是，由于esbuild转换ts到js对于类型操作仅仅是擦除，所以完全保证不了类型正确，因此需要额外校验类型，比如使用tsc --noEmit。\",\"将ts转换成js后，浏览器便可以利用ESM直接拿到js资源。\"]},\"41\":{\"h\":\"热更新原理\",\"t\":[\"Vite 的热加载原理，其实就是在客户端与服务端建立了一个 websocket 连接，当代码被修改时，服务端发送消息通知客户端去请求修改模块的代码，完成热更新。\",\"服务端：服务端做的就是监听代码文件的改变，在合适的时机向客户端发送 websocket 信息通知客户端去请求新的模块代码。\",\"客户端：Vite 中客户端的 websocket 相关代码在处理 html 中时被写入代码中。可以看到在处理 html 时，vite/client 的相关代码已经被插入。\",\"export const clientPublicPath = `/vite/client` const devInjectionCode = `\\\\n<script type=\\\"module\\\">import \\\"${clientPublicPath}\\\"</script>\\\\n` async function rewriteHtml(importer: string, html: string) { return injectScriptToHtml(html, devInjectionCode) } \",\"当request.path 路径是 /vite/client 时，请求获取已经提前写好的关于 websocket 的代码。因此在客户端中我们创建了一个 websocket 服务并与服务端建立了连接。\",\"Vite 会接受到来自客户端的消息。通过不同的消息触发一些事件。做到浏览器端的即时热模块更换（热更新）。包括 connect、vue-reload、vue-rerender 等事件，分别触发组件vue 的重新加载，render等。\",\"// Listen for messages socket.addEventListener('message', async ({ data }) => { const payload = JSON.parse(data) as HMRPayload | MultiUpdatePayload if (payload.type === 'multi') { payload.updates.forEach(handleMessage) } else { handleMessage(payload) } }) async function handleMessage(payload: HMRPayload) { const { path, changeSrcPath, timestamp } = payload as UpdatePayload console.log(path) switch (payload.type) { case 'connected': console.log(`[vite] connected.`) break case 'vue-reload': queueUpdate( import(`${path}?t=${timestamp}`) .catch((err) => warnFailedFetch(err, path)) .then((m) => () => { __VUE_HMR_RUNTIME__.reload(path, m.default) console.log(`[vite] ${path} reloaded.`) }) ) break case 'vue-rerender': const templatePath = `${path}?type=template` import(`${templatePath}&t=${timestamp}`).then((m) => { __VUE_HMR_RUNTIME__.rerender(path, m.render) console.log(`[vite] ${path} template updated.`) }) break case 'style-update': // check if this is referenced in html via <link> const el = document.querySelector(`link[href*='${path}']`) if (el) { el.setAttribute( 'href', `${path}${path.includes('?') ? '&' : '?'}t=${timestamp}` ) break } const importQuery = path.includes('?') ? '&import' : '?import' await import(`${path}${importQuery}&t=${timestamp}`) console.log(`[vite] ${path} updated.`) break case 'js-update': queueUpdate(updateModule(path, changeSrcPath, timestamp)) break case 'custom': const cbs = customUpdateMap.get(payload.id) if (cbs) { cbs.forEach((cb) => cb(payload.customData)) } break case 'full-reload': if (path.endsWith('.html')) { // if html file is edited, only reload the page if the browser is // currently on that page. const pagePath = location.pathname if ( pagePath === path || (pagePath.endsWith('/') && pagePath + 'index.html' === path) ) { location.reload() } return } else { location.reload() } } } \"]},\"42\":{\"h\":\"Webpack\"},\"43\":{\"h\":\"认识webpack\",\"t\":[\"事实上随着前端的快速发展，目前前端的开发已经变的越来越复杂了：\",\"比如开发过程中我们需要通过模块化的方式来开发；\",\"比如也会使用一些高级的特性来加快我们的开发效率或者安全性，比如通过ES6+、TypeScript开发脚本逻辑， 通过sass、less等方式来编写 css 样式代码；\",\"比如开发过程中，我们还希望实时的监听文件的变化来并且反映到浏览器上，提高开发的效率；\",\"比如开发完成后我们还需要将代码进行压缩、合并以及其他相关的优化；\",\"但是对于很多的前端开发者来说，并不需要思考这些问题，日常的开发中根本就没有面临这些问题：\",\"这是因为目前前端开发我们通常都会直接使用三大框架来开发：Vue、React、Angular；\",\"但是事实上，这三大框架的创建过程我们都是借助于脚手架（CLI）的；\",\"事实上Vue-CLI、create-react-app、Angular-CLI都是基于webpack来帮助我们支持模块化、less、 TypeScript、打包优化等的；\"]},\"44\":{\"h\":\"Webpack到底是什么呢？\",\"t\":[\"https://webpack.docschina.org/\",\"本质上，webpack 是一个用于现代 JavaScript 应用程序的 静态模块打包工具。当 webpack 处理应用程序时，它会在内部从一个或多个入口点构建一个 依赖图(dependency graph)，然后将你项目中所需的每一个模块组合成一个或多个 bundles，它们均为静态资源，用于展示你的内容。\",\"打包bundler：webpack可以将帮助我们进行打包，所以它是一个打包工具\",\"模块化module：webpack默认支持各种模块化开发，ES Module、CommonJS、AMD等；\",\"image-20231102102926580\"]},\"45\":{\"h\":\"Vue项目加载的文件有哪些呢？\",\"t\":[\"JavaScript的打包： \",\"将ES6转换成ES5的语法；\",\"TypeScript的处理，将其转换成JavaScript；\",\"Css的处理： \",\"CSS文件模块的加载、提取；\",\"Less、Sass等预处理器的处理；\",\"资源文件img、font： \",\"图片img文件的加载；\",\"字体font文件的加载；\",\"HTML资源的处理： \",\"打包HTML资源文件；\",\"处理vue项目的SFC文件.vue文件\"]},\"46\":{\"h\":\"Webpack的使用\",\"t\":[\"webpack的官方文档是webpack\",\"webpack的中文官方文档是webpack\",\"Webpack的运行是依赖Node环境的，所以我们电脑上必须有Node环境 \",\"所以我们需要先安装Node.js，并且同时会安装npm；\",\"Node官方网站：Node.js\"]},\"47\":{\"h\":\"Webpack的安装\",\"t\":[\"webpack的安装目前分为两个：webpack、webpack-cli\",\"执行webpack命令，会执行node_modules下的.bin目录下的webpack；\",\"webpack在执行时是依赖webpack-cli的，如果没有安装就会报错；\",\"而webpack-cli中代码执行时，才是真正利用webpack进行编译和打包的过程；\",\"所以在安装webpack时，我们需要同时安装webpack-cli（第三方的脚手架事实上是没有使用webpack-cli的，而是类似于自 己的vue-service-cli的东西）\",\"img\"]},\"48\":{\"h\":\"Webpack的默认打包\",\"t\":[\"ES6、CommonJS等模块化语法在浏览器中是不被直接识别的，但是通过使用Webpack的打包功能，可以将这些语法转换为浏览器可以识别的语法。Webpack可以将多个模块打包成一个或多个浏览器可识别的文件，使得在浏览器中可以正常运行这些模块化代码。\",\"我们可以通过webpack进行打包，之后运行打包之后的代码\",\"在目录下直接执行 webpack 命令\",\"webpack \",\"生成一个 dist 文件夹，里面存放一个main.js的文件，就是我们打包之后的文件：\",\"这个文件中的代码被压缩和丑化了；\",\"另外我们发现代码中依然存在ES6的语法，比如箭头函数、const等，这是因为默认情况下webpack并不清楚我们打包后的文 件是否需要转成ES5之前的语法，后续我们需要通过babel来进行转换和设置；\",\"我们发现是可以正常进行打包的，但是有一个问题，webpack是如何确定我们的入口的呢？\",\"事实上，当我们运行webpack时，webpack会查找当前目录下的 src/index.js作为入口；\",\"所以，如果当前项目中没有存在 src/index.js 文件，那么会报错；\",\"当然，我们也可以通过配置来指定入口和出口\",\"npx webpack --entry ./src/main.js --output-path ./build \"]},\"49\":{\"h\":\"webpack 局部安装\",\"t\":[\"版本控制：通过在项目中局部安装Webpack，可以确保每个项目使用的Webpack版本是一致的，避免不同项目之间的版本冲突。\",\"简化部署：将Webpack安装在项目的本地目录中，可以简化项目的部署过程。只需要将整个项目目录复制到其他环境中，不需要再次安装全局的Webpack。\",\"隔离环境：每个项目可以拥有自己独立的Webpack配置和插件，不会受到其他项目的影响。这样可以更灵活地根据项目需求进行定制和配置。\",\"可移植性：通过局部安装Webpack，可以将整个项目打包成一个可移植的文件夹，方便在不同环境中进行迁移和共享。\",\"第一步：创建package.json文件，用于管理项目的信息、库依赖等\",\"npm init \",\"第二步：安装局部的webpack\",\"npm install webpack webpack-cli --save-dev // -D(--save-dev) 开发依赖 \",\"第三步：使用局部的webpack\",\"npx webpack \",\"第四步：在 package.json 中创建scripts脚本，执行脚本打包即可\",\"# package \\\"scripts\\\": { \\\"build\\\": \\\"webpack\\\" } # cmd npm run build \",\"image-20231105235229201\"]},\"50\":{\"h\":\"Webpack配置\"},\"51\":{\"h\":\"Webpack 配置文件\",\"t\":[\"在通常情况下，webpack需要打包的项目是非常复杂的，并且我们需要一系列的配置来满足要求，默认配置必然 是不可以的。\",\"我们可以在根目录下创建一个webpack.config.js文件，来作为webpack的配置文件：\",\"const path = require('path'); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"./build\\\"), filename: \\\"bundle.js\\\" } } \",\"继续执行webpack命令，依然可以正常打包\",\"npm run build \"]},\"52\":{\"h\":\"指定配置文件\",\"t\":[\"但是如果我们的配置文件并不是webpack.config.js的名字，而是其他的名字呢？\",\"比如我们将webpack.config.js修改成了 wk.config.js；\",\"这个时候我们可以通过 --config 来指定对应的配置文件；\",\"webpack --config wk.config.js \",\"但是每次这样执行命令来对源码进行编译，会非常繁琐，所以我们可以在package.json中增加一个新的脚本：\",\"\\\"build\\\": \\\"webpack --config wk.config.js\\\" \",\"之后我们执行 npm run build来打包即可。\"]},\"53\":{\"h\":\"Webpack的依赖\",\"t\":[\"Webpack通过以下步骤对项目进行打包：\",\"配置：创建一个Webpack配置文件（通常命名为webpack.config.js），在其中定义打包的入口文件、输出文件的路径、加载器和插件等。\",\"入口：在配置文件中指定打包的入口文件，可以是单个文件或多个文件, 从入口开始，会生成一个 依赖关系图，这个依赖关系图会包含应用程序中所需的所有模块（比如 js 文件、css 文件、图片、字体等), 然后遍历图结构，打包一个个模块（根据文件的不同使用不同的loader来解析）；\",\"加载器：根据需要，配置加载器来处理不同类型的文件。例如，使用babel-loader来转换ES6+代码，使用 css-loader 和 style-loader 来处理CSS文件。\",\"插件：根据需要，配置插件来执行额外的任务。例如，使用html-webpack-plugin生成HTML文件，使用mini-css-extract-plugin提取CSS文件。\",\"输出：在配置文件中指定打包输出的路径和文件名。\",\"运行：在命令行中运行webpack命令，Webpack将根据配置文件进行打包，并生成输出文件。\",\"在运行Webpack命令时，可以使用不同的参数和选项来控制打包的行为。例如，使用--mode参数指定打包的模式（开发模式或生产模式），使用--watch选项启用监听模式等。\",\"img\"]},\"54\":{\"h\":\"loader的使用\",\"t\":[\"https://webpack.docschina.org/loaders/\",\"在 Webpack5 以后会采用 asset module type 来替代 loader\",\"在Webpack中，Loader是用于对不同类型的文件进行转换和处理的模块。它们作为Webpack的一部分，用于在打包过程中对文件进行预处理。\",\"Loader可以将不同类型的文件（如JavaScript、CSS、图片等）转换为模块，以便在应用程序中使用。它们可以执行各种任务，例如将ES6+代码转换为ES5语法、处理CSS文件中的样式、压缩和优化图像等。\",\"Loader通常以链式调用的方式使用，可以根据需要配置多个Loader来处理文件。每个Loader都会对文件进行一次转换，并将转换后的结果传递给下一个Loader，直到最后一个Loader将最终的结果返回给Webpack进行打包。\",\"Loader的配置是通过Webpack的配置文件（通常是webpack.config.js）中的module.rules字段来完成。在这个字段中，可以指定不同类型文件的匹配规则和对应的Loader。\"]},\"55\":{\"h\":\"css-loader 的使用\",\"t\":[\"对于加载css文件来说，我们需要一个可以读取css文件的loader；\",\"这个loader最常用的是css-loader；\",\"css-loader的安装：\",\"npm install css-loader -D npm install css-loader --save-dev \",\"如何使用这个loader来加载css文件呢？有三种方式： \",\"内联方式；\",\"CLI方式（webpack5中不再使用）；\",\"配置方式；\",\"内联方式：内联方式使用较少，因为不方便管理；\",\"在引入的样式前加上使用的loader，并且使用 ! 分割；\",\"import \\\"css-loader!../css/style.css\\\" \",\"配置方式\",\"配置方式表示的意思是在我们的webpack.config.js文件中写明配置信息： \",\"module.rules中允许我们配置多个loader（因为我们也会继续使用其他的loader，来完成其他文件的加载)\",\"这种方式可以更好的表示loader的配置，也方便后期的维护，同时也让你对各个Loader有一个全局的概览\",\"module.rules的配置如下： \",\"rules属性对应的值是一个数组：[Rule]\",\"数组中存放的是一个个的Rule，Rule是一个对象，对象中可以设置多个属性： \",\"test属性：用于对 resource（资源）进行匹配的，通常会设置成正则表达式；\",\"use属性：对应的值时一个数组：[UseEntry] \",\"UseEntry是一个对象，可以通过对象的属性来设置一些其他属性 \",\"loader：必须有一个 loader属性，对应的值是一个字符串；\",\"options：可选的属性，值是一个字符串或者对象，值会被传入到loader中；\",\"query：目前已经使用options来替代；\",\"传递字符串（如：use: [ 'style-loader' ]）是 loader 属性的简写方式（如：use: [ { loader: 'style-loader'} ]）；\",\"loader属性： Rule.use: [ { loader } ] 的简写\",\"module.exports = { // ... module: { rules: [ { test: /\\\\.css$/, use: ['style-loader', 'css-loader'] } ] } }; \"]},\"56\":{\"h\":\"style-loader\",\"t\":[\"我们已经可以通过css-loader来加载css文件了\",\"但是你会发现这个css在我们的代码中并没有生效（页面没有效果）。\",\"因为css-loader只是负责将.css文件进行解析，并不会将解析之后的css插入到页面中；\",\"如果我们希望再完成插入style的操作，那么我们还需要另外一个loader，就是style-loader；\",\"安装style-loader：\",\"npm install style-loader -D \",\"那么我们应该如何使用style-loader： \",\"在配置文件中，添加style-loader；\",\"注意：因为loader的执行顺序是从右向左（或者说从下到上，或者说从后到前的），所以我们需要将style-loader写到 css-loader 的前面；\",\"use: ['style-loader', 'css-loader'] \"]},\"57\":{\"h\":\"Less工具处理\",\"t\":[\"我们可以使用less工具来完成它的编译转换：\",\"npm install less -D \",\"执行如下命令：\",\"npm install less -D npx lessc ./src/css/title.less title.css \"]},\"58\":{\"h\":\"less-loader处理\",\"t\":[\"但是在项目中我们会编写大量的css，它们如何可以自动转换呢？\",\"这个时候我们就可以使用less-loader，来自动使用less工具转换less到css；\",\"npm install less-loader -D \",\"{ test: /\\\\.less$/, use: [ \\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\" ] } \"]},\"59\":{\"h\":\"postcss-loader(认识)\",\"t\":[\"什么是PostCSS呢？ \",\"PostCSS是一个通过JavaScript来转换样式的工具；\",\"这个工具可以帮助我们进行一些CSS的转换和适配，比如自动添加浏览器前缀、css样式的重置； p但是实现这些功能，我们需要借助于PostCSS对应的插件；\",\"如何使用PostCSS呢？主要就是两个步骤： \",\"第一步：查找PostCSS在构建工具中的扩展，比如webpack中的postcss-loader；\",\"第二步：选择可以添加你需要的PostCSS相关的插件；\"]},\"60\":{\"h\":\"命令行使用postcss\",\"t\":[\"安装一下它们：postcss、postcss-cli\",\"npm install postcss postcss-cli -D \",\"我们编写一个需要添加前缀的css： \",\"Autoprefixer CSS online\",\"我们可以在上面的网站中查询一些添加css属性的样式；\",\"在Webpack中，PostCSS通常用于对CSS文件进行预处理和后处理。您可以使用PostCSS来编写现代CSS语法，然后使用各种插件对其进行处理，例如自动添加CSS前缀、压缩CSS等。\"]},\"61\":{\"h\":\"插件autoprefixer\",\"t\":[\"因为我们需要添加前缀，所以要安装autoprefixer：\",\"npm install autoprefixer -D \",\"直接使用使用postcss工具，并且制定使用autoprefixer\",\"npx postcss --use autoprefixer -o end.css ./src/css/style.css \",\"转化的结果如下\",\".title { user-select: none; } .title { -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } /*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQWlCO0tBQWpCLHNCQUFpQjtNQUFqQixxQkFBaUI7VUFBakIsaUJBQWlCO0FBQ25CIiwiZmlsZSI6ImRlbW8uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRpdGxlIHtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59Il19 */ \"]},\"62\":{\"h\":\"postcss-loader\",\"t\":[\"真实开发中我们必然不会直接使用命令行工具来对css进行处理，而是可以借助于构建工具：\",\"在webpack中使用postcss就是使用postcss-loader来处理的；\",\"我们来安装postcss-loader：\",\"npm install postcss-loader -D \",\"因为postcss需要有对应的插件才会起效果，所以我们需要配置它的plugin；\",\"use: [ { loading: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ require('autoprefixer') ] } } } ] \",\"我们可以将 postcss 配置分离, 根目录下新建 postcss.config.js\",\"module.exports = { plugins: [ require(\\\"postcss-preset-env\\\") ] } \",\"这样在 webpack.config 中只需要 添加 postcss-loader 即可\"]},\"63\":{\"h\":\"postcss-preset-env\",\"t\":[\"postcss-preset-env 是一个 PostCSS 插件，它允许您使用最新的 CSS 特性，同时它会根据您的目标环境自动添加必要的回退。\",\"这个插件包含了 autoprefixer（自动添加浏览器前缀），cssnano（压缩 CSS），以及一些其他的 PostCSS 插件。这意味着您可以在 CSS 中使用最新的特性，例如 CSS Grid，CSS Variables，等等，而不需要担心兼容性问题。\",\"在您的 postcss.config.js 文件中，您已经将 postcss-preset-env 添加为一个插件，这意味着当您运行 PostCSS 时，它将使用 postcss-preset-env 来处理您的 CSS 文件。\",\"事实上，在配置postcss-loader时，我们配置插件并不需要使用autoprefixer。\",\"我们可以使用另外一个插件：postcss-preset-env\",\"postcss-preset-env也是一个postcss的插件；\",\"它可以帮助我们将一些现代的CSS特性，转成大多数浏览器认识的CSS，并且会根据目标浏览器或者运行时环境 添加所需的polyfill；\",\"也包括会自动帮助我们添加 autoprefixer（所以相当于已经内置了 autoprefixer）；\",\"首先，我们需要安装 postcss-preset-env：\",\"npm install postcss-preset-env -D \",\"之后，我们直接修改掉之前的 autoprefixer 即可;\"]},\"64\":{\"h\":\"file-loader\",\"t\":[\"要处理jpg、png等格式的图片，我们也需要有对应的loader：file-loader\",\"file-loader的作用就是帮助我们处理import/require()方式引入的一个文件资源，并且会将它放到我们输出的文件夹中；\",\"当然我们待会儿可以学习如何修改它的名字和所在文件夹；\",\"安装file-loader：\",\"npm install file-loader -D \",\"配置处理图片的Rule：\",\"{ test: /\\\\.(jpe?g|png|gif|svg)$/, type: \\\"asset\\\", generator: { filename: \\\"img/[name]_[hash:6][ext]\\\" }, parser: { dataUrlCondition: { maxSize: 100 * 1024 } } } \"]},\"65\":{\"h\":\"url-loader\",\"t\":[\"url-loader和file-loader的工作方式是相似的，但是可以将较小的文件，转成base64的URI。\",\"安装url-loader：\",\"url-loader npm install url-loader -D \",\"显示结果是一样的，并且图片可以正常显示；\",\"image-20231111211324041\",\"但是在dist文件夹中，我们会看不到图片文件： \",\"这是因为我的两张图片的大小分别是38kb和295kb；\",\"默认情况下url-loader会将所有的图片文件转成base64编码\",\"{ test: /\\\\.(jpe?g|png|gif|svg)$/, use: { loader: \\\"url-loader\\\", options: { // outputPath: \\\"img\\\", name: \\\"img/[name]_[hash:6].[ext]\\\", limit: 100 * 1024 } } } \"]},\"66\":{\"h\":\"url-loader的limit\",\"t\":[\"但是开发中我们往往是小的图片需要转换，但是大的图片直接使用图片即可 \",\"这是因为小的图片转换base64之后可以和页面一起被请求，减少不必要的请求过程；\",\"而大的图片也进行转换，反而会影响页面的请求速度；\",\"那么，我们如何可以限制哪些大小的图片转换和不转换呢？ \",\"url-loader有一个options属性limit，可以用于设置转换的限制；\",\"下面的代码38kb的图片会进行base64编码，而295kb的不会；\"]},\"67\":{\"h\":\"字体文件加载\",\"t\":[\"{ test: /\\\\.(eot|ttf|woff2?)$/, use: { loader: \\\"file-loader\\\", options: { // outputPath: \\\"font\\\", name: \\\"font/[name]_[hash:6].[ext]\\\" } } }, { test: /\\\\.(eot|ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"font/[name]_[hash:6][ext]\\\" } } \"]},\"68\":{\"h\":\"文件命名规则\",\"t\":[\"有时候我们处理后的文件名称按照一定的规则进行显示： \",\"比如保留原来的文件名、扩展名，同时为了防止重复，包含一个hash值等；\",\"这个时候我们可以使用PlaceHolders来完成，webpack给我们提供了大量的PlaceHolders来显示不同的内容： \",\"https://webpack.js.org/loaders/file-loader/#placeholders\",\"我们这里介绍几个最常用的placeholder： \",\"[ext]： 处理文件的扩展名；\",\"[name]：处理文件的名称；\",\"[hash]：文件的内容，使用MD4的散列函数处理，生成的一个128位的hash值（32个十六进制）；\",\"[contentHash]：在file-loader中和[hash]结果是一致的（在webpack的一些其他地方不一样，后面会讲到）；\",\"[hash:<length>]：截图hash的长度，默认32个字符太长了；\",\"[path]：文件相对于webpack配置文件的路径；\"]},\"69\":{\"h\":\"设置文件名称\",\"t\":[\"那么我们可以按照如下的格式编写：\",\"这个也是vue的写法；\",\"img\"]},\"70\":{\"h\":\"设置文件的存放路径\",\"t\":[\"刚才通过 img/ 已经设置了文件夹，这个也是vue、react脚手架中常见的设置方式 \",\"其实按照这种设置方式就可以了；\",\"当然我们也可以通过outputPath来设置输出的文件夹；\",\"img\"]},\"71\":{\"h\":\"asset module type\",\"t\":[\"我们当前使用的webpack版本是webpack5： \",\"在webpack5之前，加载这些资源我们需要使用一些loader，比如raw-loader 、url-loader、file-loader；\",\"在webpack5开始，我们可以直接使用资源模块类型（asset module type），来替代上面的这些loader；\",\"资源模块类型(asset module type)，通过添加 4 种新的模块类型，来替换所有这些 loader： \",\"asset/resource 发送一个单独的文件并导出 URL。之前通过使用 file-loader 实现；\",\"asset/inline 导出一个资源的 data URI。之前通过使用 url-loader 实现；\",\"asset/source 导出资源的源代码。之前通过使用 raw-loader 实现；\",\"asset 在导出一个 data URI 和发送一个单独的文件之间自动选择。之前通过使用 url-loader，并且配置资源体积限制实现；\"]},\"72\":{\"h\":\"asset module type的使用\",\"t\":[\"比如加载图片，我们可以使用下面的方式：\",\"{ test: /\\\\.(jpe?g|png|gif|svg)$/, type: \\\"asset\\\", // 自定义文件的输出路径和文件名 generator: { filename: \\\"img/[name]_[hash:6][ext]\\\" }, parser: { dataUrlCondition: { maxSize: 100 * 1024 } } } \"]},\"73\":{\"h\":\"Plugin\",\"t\":[\"Loader是用于特定的模块类型进行转换；\",\"Plugin可以用于执行更加广泛的任务，比如打包优化、资源管理、环境变量注入等；\",\"image-20231112151429444\"]},\"74\":{\"h\":\"CleanWebpackPlugin\",\"t\":[\"每次修改了一些配置，重新打包时，都需要手动删除dist文件夹：\",\"我们可以借助于一个插件来帮助我们完成，这个插件就是CleanWebpackPlugin；\",\"首先，我们先安装这个插件：\",\" npm install clean-webpack-plugin -D \",\"之后在插件中配置：\",\"const { CleanWebpackPlugin } = require(\\\"clean-webpack-plugin\\\"); module.exports = { plugins: [ new CleanWebpackPlugin(); ] }; \"]},\"75\":{\"h\":\"HtmlWebpackPlugin\",\"t\":[\"我们的HTML文件是编写在根目录下的，而最终打包的dist文件夹中是没有index.html文件的。\",\"在进行项目部署的时，必然也是需要有对应的入口文件index.html；\",\"所以我们也需要对index.html进行打包处理；\",\"对HTML进行打包处理我们可以使用另外一个插件：HtmlWebpackPlugin；\",\"npm install html-webpack-plugin -D \"]},\"76\":{\"h\":\"自定义HTML模板\",\"t\":[\"如果我们想在自己的模块中加入一些比较特别的内容：\",\"比如添加一个noscript标签，在用户的JavaScript被关闭时，给予响应的提示；\",\"比如在开发vue或者react项目时，我们需要一个可以挂载后续组件的根标签\",\"这个我们需要一个属于自己的index.html模块：\",\"public/index.html\",\"<!DOCTYPE html> <html lang=\\\"\\\"> <head> <meta charset=\\\"utf-8\\\"> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1.0\\\"> <link rel=\\\"icon\\\" href=\\\"<%= BASE_URL %>favicon.ico\\\"> <title><%= htmlWebpackPlugin.options.title %></title> </head> <body> <noscript> <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled. Please enable it to continue.</strong> </noscript> <div id=\\\"app\\\"></div> <!-- built files will be auto injected --> </body> </html> \",\"上面的代码中，会有一些类似这样的语法<% 变量 %>，这个是EJS模块填充数据的方式。 \",\"在配置 HtmlWebpackPlugin 时，我们可以添加如下配置： \",\"template：指定我们要使用的模块所在的路径；\",\"title：在进行 htmlWebpackPlugin.options.title 读取时，就会读到该信息；\",\"const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { plugins: [ new HtmlWebpackPlugin({ template: \\\"./public/index.html\\\", title: \\\"哈哈哈哈\\\" }) ] }; \"]},\"77\":{\"h\":\"DefinePlugin\",\"t\":[\"https://github.com/jantimon/html-webpack-plugin\",\"因为在模板中使用了 BASE_URL, 但是我们并没有设置过这个常量值，所以会出现没有定义的错误 - BASE_URL is not defined\",\"这个时候我们可以使用DefinePlugin插件\",\"DefinePlugin允许在编译时创建配置的全局常量，是一个webpack内置的插件（不需要单独安装）：\",\"const { DefinePlugin } = require(\\\"webpack\\\"); module.exports = { plugins: [ new DefinePlugin({ BASE_URL: \\\"'./'\\\" }) ] }; \"]},\"78\":{\"h\":\"CopyWebpackPlugin\",\"t\":[\"CopyWebpackPlugin 是一个用于 webpack 的插件，它的主要功能是将单个文件或整个目录复制到构建目录。\",\"这个插件在以下情况下非常有用：\",\"当你有一些静态资源（例如图片、字体或公共库）需要包含在你的构建中，但是这些资源并不需要通过 webpack 处理时。\",\"当你需要将一些文件复制到构建目录，以便在部署应用程序时使用\",\"安装CopyWebpackPlugin插件：\",\"npm install copy-webpack-plugin -D \",\"接下来配置CopyWebpackPlugin即可： \",\"复制的规则在patterns中设置；\",\"from：设置从哪一个源中开始复制；\",\"to：复制到的位置，可以省略，会默认复制到打包的目录下；\",\"globOptions：设置一些额外的选项，其中可以编写需要忽略的文件： \",\".DS_Store：mac目录下回自动生成的一个文件；\",\"index.html：也不需要复制，因为我们已经通过HtmlWebpackPlugin完成了index.html的生成；\",\"const CopyWebpackPlugin = require('copy-webpack-plugin'); new CopyWebpackPlugin({ patterns: [ { from: \\\"public\\\", to: \\\"./\\\", globOptions: { ignore: [ \\\"**/index.html\\\" ] } } ] }) \"]},\"79\":{\"h\":\"Mode配置列表\",\"t\":[\"module.exports = { // 设置模式 // development 开发阶段, 会设置development // production 准备打包上线的时候, 设置production mode: \\\"development\\\", // 设置source-map, 建立js映射文件, 方便调试代码和错误 devtool: \\\"source-map\\\" } \"]},\"80\":{\"h\":\"Webpack_Babel\"},\"81\":{\"h\":\"什么是 Babel?\",\"t\":[\"https://babeljs.io/\",\"Babel 是一个 JavaScript 编译器，可以将 ECMAScript 2015+ 代码转换为向后兼容的 JavaScript 版本，以便在当前和旧版浏览器或环境中运行。它还支持将 JSX 转换为普通 JavaScript 代码。Babel 是一个非常流行的工具，许多现代的 JavaScript 应用程序都使用它来构建和部署。\",\"事实上，在开发中我们很少直接去接触babel，但是babel对于前端开发来说，目前是不可缺少的一部分：\",\"开发中，我们想要使用ES6+的语法，想要使用TypeScript，开发React项目，它们都是离不开Babel的；所以，学习Babel对于我们理解代码从编写到线上的转变过程至关重要；\",\"以下是一个使用 Babel 的示例：\",\"假设我们有一个使用箭头函数和 const 声明的简单 JavaScript 模块：\",\"const greet = (name) => { console.log(`Hello, ${name}!`); } export default greet; \",\"如果我们想要在旧版浏览器中运行它，我们可以使用 Babel 将其转换为 ES5：\",\"\\\"use strict\\\"; Object.defineProperty(exports, \\\"__esModule\\\", { value: true }); exports.default = void 0; var greet = function greet(name) { console.log(\\\"Hello, \\\".concat(name, \\\"!\\\")); }; var _default = greet; exports.default = _default; \",\"这个转换过的代码可以在大多数浏览器中运行，即使它们不支持箭头函数或 const 声明。\"]},\"82\":{\"h\":\"Babel 命令行使用\",\"t\":[\"babel本身可以作为一个独立的工具（和postcss一样），不和webpack等构建工具配置来单独使用。\",\"如果我们希望在命令行尝试使用babel，需要安装如下库： \",\"@babel/core：babel的核心代码，必须安装；\",\"@babel/cli：可以让我们在命令行使用babel；\",\"npm install @babel/cli @babel/core -D \",\"使用babel来处理我们的源代码： \",\"src：是源文件的目录；\",\"–out-dir：指定要输出的文件夹dist；\",\"--out-file: 指定要输出的文件dist；\",\"npx babel src --out-dir dist npx babel src --out-file dist \"]},\"83\":{\"h\":\"插件\",\"t\":[\"Babel 的插件是用于转换 JavaScript 代码的小型程序，可以添加到 Babel 配置中。Babel 插件可以执行各种任务，例如：\",\"转换语法：将新的 ECMAScript 特性转换为向后兼容的代码。\",\"转换 API：将使用新 API 的代码转换为旧 API。\",\"转换 JSX：将 JSX 转换为普通的 JavaScript 代码。\",\"以下是一些常见的 Babel 插件：\",\"@babel/plugin-transform-arrow-functions: 将箭头函数转换为普通函数。\",\"@babel/plugin-transform-block-scoping: 将 let 和 const 声明转换为 var 声明。\",\"@babel/plugin-transform-classes: 将类转换为 ES5 构造函数。\",\"@babel/plugin-transform-destructuring: 将解构赋值转换为普通赋值。\",\"@babel/plugin-transform-object-assign: 将 Object.assign() 转换为 ES5 兼容的代码。\",\"@babel/plugin-transform-react-jsx: 将 JSX 转换为普通的 JavaScript 代码。\",\"@babel/plugin-transform-runtime: 避免在每个文件中重复使用 Babel 运行时代码。\",\"如何使用?\",\"比如我们需要转换箭头函数, const 转成 var，那么我们就可以使用箭头函数转换相关的插件：\",\"npm install @babel/plugin-transform-arrow-functions -D npm install @babel/plugin-transform-block-scoping -D npx babel src --out-dir dist --plugins=@babel/plugin-transform-block-scoping ,@babel/plugin-transform-arrow-functions \"]},\"84\":{\"h\":\"预设 preset\",\"t\":[\"Babel 的预设（preset）是一组预先配置的转换规则，用于将特定版本的 JavaScript 代码转换为向后兼容的旧版本。以下是一些常用的 Babel 预设：\",\"@babel/preset-env: 根据目标环境自动确定需要的转换规则。它根据你在 .babelrc 或 babel.config.js 文件中的配置来确定需要转换的 JavaScript 特性。\",\"@babel/preset-react: 用于转换 React JSX 语法的预设。它可以将 JSX 转换为普通的 JavaScript 代码。\",\"@babel/preset-typescript: 用于转换 TypeScript 代码的预设。它可以将 TypeScript 的类型注解和其他特定语法转换为普通的 JavaScript 代码。\",\"@babel/preset-flow: 用于转换 Flow 类型注解的预设。它可以将 Flow 的类型注解转换为普通的 JavaScript 代码。\",\"这些预设可以根据你的项目需求进行选择和配置。你可以在 .babelrc 或 babel.config.js 文件中指定所需的预设，例如：\",\"module.exports = { presets: [ \\\"@babel/preset-env\\\" ] } \",\"也可以\",\"npm install @babel/preset-env -D npx babel src --out-dir dist --presets=@babel/preset-env \"]},\"85\":{\"h\":\"原理\"},\"86\":{\"h\":\"底层原理\",\"t\":[\"babel是如何做到将我们的一段代码（ES6、TypeScript、React）转成另外一段代码（ES5）的呢？\",\"从一种源代码（原生语言）转换成另一种源代码（目标语言），这是什么的工作呢？\",\"就是编译器，事实上我们可以将babel看成就是一个编译器。\",\"Babel编译器的作用就是将我们的源代码，转换成浏览器可以直接识别的另外一段源代码；\",\"Babel也拥有编译器的工作流程：\",\"解析（Parsing）：Babel首先将输入的JavaScript代码解析成抽象语法树（Abstract Syntax Tree，AST）。AST是一个用于表示代码结构的树状数据结构，它能够准确地描述代码的语法和语义。\",\"转换（Transformation）：在AST的基础上，Babel会应用一系列的插件和预设来进行代码转换。这些插件和预设可以执行各种转换操作，例如语法转换、代码优化、添加兼容性处理等。每个插件都负责处理AST中的特定节点，并根据需要进行修改或替换。\",\"生成（Generation）：转换完成后，Babel会将修改后的AST重新生成为JavaScript代码。这些生成的代码可以是与输入代码相同的版本，也可以是经过转换后的新代码。\",\"https://github.com/jamiebuilds/the-super-tiny-compiler: 非常简单的编译器实现，旨在教授编译器原理和实践。\"]},\"87\":{\"h\":\"执行原理\",\"t\":[\"Babel的执行阶段\",\"image-20231116205304599\",\"image-20231116205317664\",\"词法分析（Lexing）：将输入的源代码字符串转换为一个令牌（Token）序列。每个令牌代表源代码中的一个语法单元，例如标识符、运算符、括号等。\",\"语法分析（Parsing）：将令牌序列转换为抽象语法树（AST）。AST是一个用于描述代码结构的树状数据结构，它能够准确地描述源代码的语法和语义。\",\"转换（Transformation）：在AST的基础上，应用一系列的转换规则，以修改和优化AST。这些规则可以执行各种操作，例如语法转换、代码优化、添加兼容性处理等。\",\"代码生成（Code Generation）：将修改后的AST转换为目标语言的代码。在\\\"The Super Tiny Compiler\\\"中，目标语言是JavaScript。\",\"输出：输出生成的目标代码。\"]},\"88\":{\"h\":\"babel-loader\",\"t\":[\"babel-loader是一个用于在Webpack构建过程中将JavaScript代码转换的加载器（loader）。它是与Babel配合使用的常用工具之一。\",\"通过配置Webpack的规则，使用babel-loader可以将指定的JavaScript文件传递给Babel进行转换。Babel会根据配置的插件和预设，将源代码转换为目标浏览器或环境所支持的语法。\",\"指定使用的插件\",\"image-20231116220536704\",\"presets 预设: 如果我们一个个去安装使用插件，那么需要手动来管理大量的babel插件，我们可以直接给webpack提供一个 preset，webpack会根据我们的预设来加载对应的插件列表，并且将其传递给babel。以下使用 @babel/preset-env\",\"env\",\"react\",\"TypeScript\",\"使用 babel-loader 的一般步骤如下：\",\"安装 babel-loader 和相关的Babel插件和预设：\",\"npm install --save-dev babel-loader @babel/core @babel/preset-env webpack \",\"webpack.config.js，在其中配置 babel-loader：\",\"module.exports = { entry: './src/index.js', output: { filename: 'bundle.js', path: __dirname + '/dist' }, module: { rules: [ { test: /\\\\.js$/, exclude: /node_modules/, use: { loader: 'babel-loader', options: { presets: ['@babel/preset-env'] } } } ] } }; \"]},\"89\":{\"h\":\"配置文件\",\"t\":[\"我们可以将babel的配置信息放到一个独立的文件中，babel给我们提供了两种配置文件的编写： \",\"babel.config.json（或者.js，.cjs，.mjs）文件；\",\"babelrc.json（或者.babelrc，.js，.cjs，.mjs）文件；\",\"它们两个有什么区别呢？目前很多的项目都采用了多包管理的方式（babel本身、element-plus、umi等）； \",\".babelrc.json：早期使用较多的配置方式，但是对于配置Monorepos项目是比较麻烦的；\",\"babel.config.json（babel7）：可以直接作用于Monorepos项目的子包，更加推荐；\",\"补充: Monorepo 是一种项目代码管理方式,指单个仓库中管理多个项目,有助于简化代码共享、版本控制、构建和部署等方面的复杂性,并提供更好的可重用性和协作性, 类似 @babel/preset-env 这种写法大概率就是 Monorepo\",\"以下为 babel.config.js\",\"module.exports = { presets: [ \\\"@babel/preset-env\\\" ] } \",\"这样在 webpack.config.js 中只需要\",\"{ test: /\\\\.js$/, loader: \\\"babel-loader\\\" } \"]},\"90\":{\"h\":\"在 Webpack 中使用 Vue\",\"t\":[\"npm install vue \",\"import { createApp } from 'vue'; createApp({ template: \\\"<h2>{{title}} - {{message}}</h2>\\\", components: { }, data() { return { title: \\\"Hello World\\\", message: \\\"哈哈哈\\\" } } }).mount(\\\"#app\\\"); \",\"此时重新 build 运行后不显示, 报错如下\",\"runtime-core.esm-bundler.js:38 [Vue warn]: Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias \\\"vue\\\" to \\\"vue/dist/vue.esm-bundler.js\\\" at <App> -> runtime-core.esm-bundler.js:38\",\"这个错误是因为 Vue 3 默认不包含模板编译器，所以当你试图在组件中使用 template 选项时，你会看到这个警告。\",\"要解决这个问题，你需要在 webpack 配置中添加一个别名，将 \\\"vue\\\" 指向 \\\"vue/dist/vue.esm-bundler.js\\\"。这个版本的 Vue 包含了模板编译器。\",\"// 在 main.js 中更改应用, 重新部署即可 import { createApp } from 'vue/dist/vue.esm-bundler.js'; \",\"Vue打包后不同版本解析\",\"vue(.runtime).global(.prod).js 是用于直接在浏览器中引入的全局版本，可以通过 <script> 标签来使用。 + 我们之前通过CDN引入和下载的Vue版本就是这个版本； + 会暴露一个全局的Vue来使用；\",\"vue(.runtime).esm-browser(.prod).js 是用于原生 ES 模块导入的版本，在支持 ES 模块的浏览器中可以使用 <script type='module'> 来引入。\",\"vue(.runtime).esm-bundler.js 是用于构建工具（如webpack、rollup、parcel等）的版本，默认情况下会使用 vue.runtime.esm-bundler.js。如果需要解析模板（template），则需要手动指定 vue.esm-bundler.js。\",\"vue.cjs(.prod).js 是用于服务器端渲染的版本，在 Node.js 中可以使用 require() 来引入。 \",\"require 是 Node.js 中用于导入模块的函数。它是 CommonJS 模块系统的一部分，这是 Node.js 的默认模块系统。以下是一个 require 的基本用法示例：const fs = require('fs');在这个例子中，我们导入了 Node.js 的内置 fs（文件系统）模块。\",\"require 函数也可以用来导入你自己的模块。例如，如果你有一个名为 myModule.js 的文件，你可以这样导入它：const myModule = require('./myModule.js'); 注意，当导入自己的模块时，你需要提供模块的相对路径（以 ./ 开头）。\",\"然而，require 并不是 ECMAScript（JavaScript 的标准化规范）的一部分，因此它在浏览器环境中通常不可用。在浏览器环境中，你通常会使用 ECMAScript 的 import 和 export 语句来导入和导出模块。\",\"接下来我们把 main.js 中的 vue 代码抽离为单文件组件(SFC)\",\"<!-- /vue/App.vue --> <template> <h2>我是Vue渲染出来的</h2> <h2>{{title}}</h2> <hello-world></hello-world> </template> <script> import HelloWorld from './HelloWorld.vue'; export default { components: { HelloWorld }, data() { return { title: \\\"Hello World\\\", message: \\\"哈哈哈\\\" } }, methods: { } } </script> <style scoped> h2 { color: red; } </style> \",\"重新打包, 报错：我们需要合适的Loader来处理文件。\",\"npm install vue-loader -D \",\"配置 webpack.config.js\",\"{ test: /\\\\.vue$/, loader: \\\"vue-loader\\\" } \",\"重新 build 仍然报错 Error:vue-loader requires @vue/compiler present the dependency tree, 打包依然会报错，这是因为我们必须添加@vue/compiler-sfc来对template进行解析：\",\"npm install @vue/compiler-sfc -D \",\"重新打包即可支持App.vue的写法\"]},\"91\":{\"h\":\"补充\",\"t\":[\"当然此时控制台还有如下报错 You are running the csm-bundler bu1ld of Vue, It is recommended to contigure your bundler to expl1citly roplace featur flag globals with boolean literals to get proper tree-shaking in the fina bundle, See http://link,yuejs.org/feature-flags for more details.\",\"在官方解释如下: https://github.com/vuejs/core/tree/main/packages/vue#bundler-build-feature-flags\",\"image-20231117234618957\",\"Bundler Build Feature Flags是构建工具（Bundler）中的一种特性标志，用于控制Vue框架的不同特性的开启和关闭。从Vue 3.0.0-rc.3版本开始，esm-bundler构建工具现在公开了全局特性标志，可以在编译时进行覆盖。其中两个重要的特性标志包括： \",\"VUE_OPTIONS_API：启用/禁用Options API支持，默认为true。\",\"VUE_PROD_DEVTOOLS：启用/禁用生产环境下的devtools支持，默认为false。\",\"在没有配置这些特性标志的情况下，构建工具仍然可以正常工作，但强烈建议正确配置它们以便在最终的打包文件中实现正确的树摇效果。要配置这些特性标志： \",\"https://webpack.js.org/plugins/define-plugin/\",\"module.exports = { plugins: [ new DefinePlugin({ BASE_URL: \\\"'./'\\\", __VUE_OPTIONS_API__: true, __VUE_PROD_DEVTOOLS__: false }) ] } \",\"开启Bundler Build Feature Flags的好处在于能够更好地控制Vue框架的特性和功能，从而有效地减少最终打包文件的大小。通过正确配置特性标志，可以实现树摇（tree-shaking）效果，即只包含应用程序实际使用的代码，而不包含未使用的代码。这将有助于提高应用程序的性能和加载速度，并减少资源消耗。此外，通过禁用不需要的特性，还可以减少应用程序的复杂性，并提高代码的可维护性。因此，建议开发人员在使用Vue框架时正确配置Bundler Build Feature Flags，以获得更好的开发和部署体验。\"]},\"92\":{\"h\":\"Webpack_devServer\",\"t\":[\"devServer 是指开发服务器，通常用于前端开发环境。在前端开发中，开发者通常需要一个本地服务器来运行他们的应用程序，以便进行测试和调试。Webpack是一个流行的前端构建工具，而devServer就是Webpack提供的一个功能，用于在开发过程中提供一个简单的服务器。\",\"devServer 可以帮助开发者在本地启动一个服务器，监视文件的变化，并在文件发生更改时自动重新加载页面，以提高开发效率。此外，它还支持一些其他功能，比如模块热替换（Hot Module Replacement），允许在不刷新整个页面的情况下更新部分模块。\",\"在使用Webpack配置文件时，你可以配置 devServer 的各种选项，以满足你的开发需求。这包括设置服务器的端口、指定静态资源的路径、配置代理等。\",\"目前我们开发的代码，为了运行需要有两个操作： \",\"操作一：npm run build，编译相关的代码；\",\"操作二：通过live server或者直接通过浏览器，打开index.html代码，查看效果；\",\"这个过程经常操作会影响我们的开发效率，我们希望可以做到，当文件发生变化时，可以自动的完成编译和展示；\",\"为了完成自动编译，webpack提供了几种可选的方式： \",\"webpack watch mode：在文件发生变化时，Webpack会自动重新编译代码。\",\"webpack-dev-server（常用）：提供了一个开发服务器，可以在本地运行你的应用程序，并且在文件发生变化时自动重新加载页面。\",\"webpack-dev-middleware：结合其他服务器框架使用，将Webpack与服务器集成，实现在文件发生变化时自动重新编译\"]},\"93\":{\"h\":\"Webpack watch\",\"t\":[\"webpack给我们提供了watch模式：\",\"在该模式下，webpack依赖图中的所有文件，只要有一个发生了更新，那么代码将被重新编译；\",\"我们不需要手动去运行 npm run build指令了；\",\"开启watch模式有两种方式：\",\"通过在命令行中使用--watch参数来开启watch模式。例如，运行webpack --watch命令即可开启watch模式。\",\"// package.json \\\"scripts\\\": { \\\"build\\\": \\\"webpack --watch\\\" } \",\"在Webpack配置文件中添加``watch: true`选项来开启watch模式。例如，在Webpack配置文件中添加以下代码：\",\"// webpack.config.js module.exports = { watch: true } \"]},\"94\":{\"h\":\"webpack-dev-server\",\"t\":[\"上面的方式可以监听到文件的变化，但是事实上它本身是没有自动刷新浏览器的功能的： \",\"当然，目前我们可以在 VSCode 中使用 live-server 来完成这样的功能；\",\"但是，我们希望在不适用live-server的情况下，可以具备live reloading（实时重新加载）的功能；\",\"安装webpack-dev-server\",\"npm install webpack-dev-server -D \",\"修改配置文件\",\"// package.json \\\"scripts\\\": { \\\"build\\\": \\\"webpack\\\", \\\"serve\\\": \\\"webpack serve\\\" } \",\"运行 npm run serve, 在本地配置一个服务器, 使用 webpack cli 解析/ 启动本地服务\",\"image-20231119190420271\",\"在运行 npm run serve 命令时，如果没有指定输出目录，webpack会默认将打包后的文件输出到内存中，而不是硬盘上的某个目录中。因此即使没有指定输出目录，该命令仍然可以正常运行。这种方式称为内存编译，可以提高开发效率，因为不需要每次修改代码后都重新编译和写入磁盘。 使用 memfs 这一个库实现;\"]},\"95\":{\"h\":\"认识模块热替换（HMR）\",\"t\":[\"什么是HMR呢？ \",\"HMR的全称是Hot Module Replacement，翻译为模块热替换；\",\"模块热替换是指在 应用程序运行过程中，替换、添加、删除模块，而无需重新刷新整个页面；\",\"HMR通过如下几种方式，来提高开发的速度： \",\"不重新加载整个页面，这样可以保留某些应用程序的状态不丢失；\",\"只更新需要变化的内容，节省开发的时间；\",\"修改了css、js源代码，会立即在浏览器更新，相当于直接在浏览器的 devtools 中直接修改样式；\",\"如何使用HMR呢？ \",\"默认情况下，webpack-dev-server已经支持HMR，我们只需要开启即可；\",\"在不开启HMR的情况下，当我们修改了源代码之后，整个页面会自动刷新，使用的是live reloading；\"]},\"96\":{\"h\":\"开启 HMR\",\"t\":[\"修改webpack的配置：\",\"// webpack.config.js module.exports = { // target 用来指定打包后的代码在哪个环境下运行 target: \\\"web\\\", devServer: { // 1. static: 用来指定静态资源的根目录 // 如果有的资源没有在 Webpack 中加载, 那么就会去 static 中查找加载 static: \\\"./public\\\", // 2. hot: 是否开启热更新 hot: true } } \",\"image-20231119201428778\",\"指定哪些模块发生更新时，进行HMR；\",\"if(module.hot) { // module.hot.accept(moduleName, callback) module.hot.accept(\\\"./js/element\\\", () => { console.log(\\\"element模块发生了变化\\\"); }) } \"]},\"97\":{\"h\":\"框架 的 HMR\",\"t\":[\"大多数主流框架（如React、Vue和Angular）都对模块热替换（HMR）提供了内置的支持，以便在开发过程中实现更快的热更新。\",\"具体而言，这些框架通常会提供开发服务器或开发工具，用于在开发过程中启用HMR功能。通过使用这些工具，你可以在修改代码时实时查看更新后的效果，而无需手动刷新页面。\",\"以下是一些常见的框架的HMR支持方式：\",\"React：React 框架通常使用Webpack的 react-hot-loader 插件来实现HMR功能。你可以在Webpack配置文件中配置该插件，然后在开发服务器中启用HMR。\",\"Vue：Vue 框架内置了对HMR的支持。你可以使用 vue-loader 和 vue-style-loader 等相关插件，以及在Webpack配置文件中配置HMR选项，来启用Vue的HMR功能。\",\"Angular：Angular 框架使用Webpack的 @angular-builders/custom-webpack 插件来实现HMR功能。你可以在Angular项目的配置文件中进行相应的配置，以启用HMR。\",\"请注意，每个框架的具体配置方式可能会有所不同。建议查阅相应框架的官方文档或社区资源，以获取更详细的关于HMR的配置和使用说明。\"]},\"98\":{\"h\":\"HMR的原理\",\"t\":[\"HMR（Hot Module Replacement）的原理是通过在应用程序运行时，通过开发服务器向客户端发送更新的模块代码，然后使用热更新运行时（Hot Update Runtime）来替换旧的模块代码，从而实现模块的热替换，而无需重新加载整个页面。\",\"webpack-dev-server会创建两个服务：提供静态资源的服务（express）和Socket服务（net.Socket）； \",\"HMR Socket Server，是一个socket的长连接： \",\"长连接有一个最好的好处是建立连接后双方可以通信（服务器可以直接发送文件到客户端）；\",\"当服务器监听到对应的模块发生变化时，会生成两个文件.json（manifest文件）和.js文件（update chunk）；\",\"通过长连接，可以直接将这两个文件主动发送给客户端（浏览器）；\",\"浏览器拿到两个新的文件后，通过HMR runtime机制，加载这两个文件，并且针对修改的模块进行更新；\",\"Webpack-dev-server使用Node.js内置的net模块提供WebSocket服务。该服务与静态资源服务配合使用，用于与客户端进行实时通信。当客户端连接到WebSocket服务时，Webpack-dev-server会将更新的模块代码发送到客户端，并触发模块热替换（HMR）功能。客户端接收到更新后，会通过WebSocket与Webpack-dev-server建立连接，并将更新的模块代码应用到正在运行的应用程序中。\",\"express server负责直接提供静态资源的服务（打包后的资源直接被浏览器请求和解析）； \",\"Webpack-dev-server使用express框架提供静态资源服务。该服务可以将Webpack打包后的静态资源文件（如HTML、CSS、JavaScript等）提供给浏览器访问。同时，该服务还支持一些特殊的路由，如/__webpack_hmr，用于与客户端建立WebSocket通信。\",\"具体而言，HMR的原理可以分为以下几个步骤：\",\"构建过程中的注入：在Webpack构建过程中，会将特殊的HMR运行时代码注入到应用程序中的每个模块中。这些HMR运行时代码负责与开发服务器建立连接，并接收来自服务器的更新通知。\",\"开发服务器的更新通知：开发服务器会监视文件的变化，并在文件发生更改时，向连接的客户端发送更新通知。这些更新通知包含了被修改的模块的更新代码。\",\"客户端接收更新：当客户端接收到更新通知时，它会根据更新代码进行处理。这些更新代码会被热更新运行时处理，并将其应用于相应的模块。\",\"模块的热替换：热更新运行时会将新的模块代码与旧的模块代码进行比较，并尽可能地将新代码应用于正在运行的应用程序。如果新代码可以被成功替换，应用程序会保持运行状态，同时显示更新后的效果。\",\"总结起来，HMR利用了Webpack的构建能力和热更新运行时，使得在开发过程中可以实时地修改代码并查看更新后的效果，从而提高开发效率。\",\"image-20231119203330239\"]},\"99\":{\"h\":\"devServer 配置信息\",\"t\":[\"// webpack.config.js module.exports = { // target 用来指定打包后的代码在哪个环境下运行 target: \\\"web\\\", devServer: { // 1. contentBase: 用来指定静态资源的根目录 static: \\\"./public\\\", // 2. hot: 是否开启热更新 hot: true, // 3. host: 指定服务器的ip地址, 默认是localhost host: \\\"0.0.0.0\\\", port: 7777, // 4. open: 是否自动打开浏览器 open: true, // 5. compress: 是否启动gzip压缩 // compress: true, // 6. proxy: 用来配置代理 proxy: { \\\"/api\\\": { target: \\\"http://localhost:8888\\\", pathRewrite: { \\\"^/api\\\": \\\"\\\" }, secure: false, changeOrigin: true } } } } \"]},\"100\":{\"h\":\"hotOnly、host 配置\",\"t\":[\"host设置主机地址：\",\"默认值是localhost；\",\"如果希望其他地方也可以访问，可以设置为 0.0.0.0；\",\"localhost 和 0.0.0.0 的区别：\",\"localhost：localhost是一个主机名，表示本地计算机或设备自身。它通常映射到回环地址（loopback address）``127.0.0.1，也可以是IPv6的::1。当应用程序绑定到localhost`时，它只能通过本地计算机或设备上的回环接口进行访问。这意味着只有本地计算机或设备上的进程可以访问该应用程序，其他计算机或设备无法直接访问。\",\"0.0.0.0：0.0.0.0是一个特殊的IP地址，表示任意主机或所有主机。当应用程序绑定到0.0.0.0时，它将监听所有可用的网络接口，包括本地计算机上的回环接口和其他网络接口。这意味着其他计算机或设备可以通过网络访问该应用程序，前提是网络连接和防火墙允许。\",\"简而言之，localhost指的是本地计算机或设备自身，只能通过本地访问。而0.0.0.0表示任意主机或所有主机，可以通过网络访问。在开发过程中，通常将应用程序绑定到localhost以进行本地开发和测试，而将其绑定到0.0.0.0可以使其在局域网或公共网络上可访问。\"]},\"101\":{\"h\":\"port、open、compress\",\"t\":[\"port设置监听的端口，默认情况下是8080 \",\"这个选项用于指定Webpack开发服务器的端口号。通过设置port选项，你可以指定应用程序在开发服务器上监听的端口。\",\"open是否打开浏览器： \",\"默认值是false，设置为true会打开浏览器；\",\"这个选项用于指定是否在启动Webpack开发服务器后自动打开浏览器。通过设置open选项为true，开发服务器将在启动后自动打开默认浏览器，并加载应用程序\",\"也可以设置为类似于 Google Chrome等值；\",\"compress是否为静态文件开启gzip compression： \",\"默认值是false，可以设置为true；\",\"这个选项用于指定是否启用gzip压缩。通过设置compress选项为true，开发服务器将对传输到浏览器的资源进行gzip压缩，以减小文件大小，提高传输速度。\",\"module.exports = { // ... devServer: { port: 8080, // 指定端口号为8080 open: true, // 自动打开浏览器 compress: true, // 启用gzip压缩 }, }; \"]},\"102\":{\"h\":\"Proxy\",\"t\":[\"https://webpack.docschina.org/configuration/dev-server#devserverproxy\",\"proxy是我们开发中非常常用的一个配置选项，它的目的设置代理来解决跨域访问的问题：\",\"比如我们的一个api请求是 http://localhost:3000但是本地启动服务器的域名是 http://localhost:8000，这 个时候发送网络请求就会出现跨域的问题；\",\"那么我们可以将请求先发送到一个代理服务器，代理服务器和API服务器没有跨域的问题，就可以解决我们的跨域问题了\",\"代理（Proxy）是一种常见的网络应用程序架构，它可以将客户端的请求转发到另一个服务器进行处理。在开发环境中，我们通常会将应用程序和API服务分开部署，这时就需要使用代理将客户端的API请求转发到后端API服务器上。\",\"在 Webpack 的 devServer 中，可以使用proxy选项来配置代理设置。proxy选项可以是一个对象，也可以是一个函数。对象方式的proxy选项可以指定一个或多个代理规则，每个规则包含了要转发的请求路径和目标服务器地址。例如：\",\"module.exports = { // ... devServer: { proxy: { '/api': { target: 'http://localhost:3000', // 目标服务器地址 changeOrigin: true, // 改变请求头中的Origin字段 pathRewrite: { '^/api': '', // 将/api前缀替换为空 }, }, }, }, }; \",\"在这个示例中，我们将所有以/api开头的请求转发到http://localhost:3000服务器上。同时，我们还设置了changeOrigin选项为true，以改变请求头中的Origin字段，并使用pathRewrite选项将请求路径中的/api前缀替换为空。\",\"当 changeOrigin 设置为 true 时，代理服务器会将请求头中的 Origin 字段替换为目标服务器的地址，这样目标服务器就可以正确识别请求来源。否则，目标服务器可能会拒绝请求或返回错误的响应。\",\"除了对象方式的proxy选项外，还可以使用函数方式的proxy选项来进行更灵活的配置。例如：\",\"module.exports = { // ... devServer: { proxy: (req, res, proxyOptions) => { const target = 'http://localhost:3000'; if (req.url.startsWith('/api')) { return { target, changeOrigin: true, pathRewrite: { '^/api': '', }, }; } }, }, }; \",\"在这个示例中，我们使用函数方式的proxy选项来动态配置代理规则。如果请求路径以/api开头，则将其转发到http://localhost:3000服务器上，并使用相应的选项进行配置。\",\"默认情况下，将不接受在 HTTPS 上运行且证书无效的后端服务器。 如果需要，可以这样修改配置：\",\"module.exports = { //... devServer: { proxy: { '/api': { target: 'https://other-server.example.com', secure: false, }, }, }, }; \"]},\"103\":{\"h\":\"historyApiFallback\",\"t\":[\"historyApiFallback 是 webpack-dev-server 的一个配置项，用于控制当使用 HTML5 History API 时，如果找不到对应的资源应该返回什么页面。\",\"当浏览器使用 HTML5 History API 进行前端路由跳转时，例如从 /home 跳转到 /about，浏览器会向服务器发送一个 GET 请求，但是服务器上并没有对应的 /about 路径和资源，此时会返回 404 错误。为了避免这种情况，historyApiFallback 可以设置一个默认的页面，用于代替 404 错误页面。\",\"例如，设置 historyApiFallback: true 后，当访问一个不存在的路由时，webpack-dev-server 会返回一个默认的 HTML 页面，通常是 index.html。这个页面会包含前端路由所需的 JavaScript 和 CSS 资源，从而保证前端路由跳转的正常运行。\",\"需要注意的是，在生产环境中，historyApiFallback 应该由服务器来处理，而不是由前端框架或工具来处理。\",\"https://webpack.docschina.org/configuration/dev-server/#devserverhistoryapifallback\",\"module.exports = { // ...其他配置项 devServer: { port: 8080, proxy: { '/api': { target: 'http://localhost:3000', changeOrigin: true } }, historyApiFallback: true } } \",\"要将 404 错误跳转到一个名为 404.html 的页面，你可以通过 historyApiFallback 的 rewrites 选项来实现。以下是一个示例配置：\",\"module.exports = { //... devServer: { historyApiFallback: { rewrites: [ { from: /^\\\\/$/, to: '/views/landing.html' }, { from: /^\\\\/subpage/, to: '/views/subpage.html' }, { from: /./, to: '/views/404.html' }, ], }, }, }; \",\"在上述配置中，我们使用了 rewrites 数组来定义重写规则。第一个规则 { from: /^\\\\/$/, to: '/index.html' } 将根路径 / 重写到 index.html 页面，这样确保了默认路径的正确加载。第二个规则 { from: /./, to: '/404.html' } 将所有其他路径都重写到 404.html 页面，实现了将 404 错误跳转到指定页面的效果。\"]},\"104\":{\"h\":\"resolve模块解析\",\"t\":[\"https://webpack.docschina.org/configuration/resolve\",\"resolve 是 webpack 中的一个配置选项，用于配置模块解析的规则。 \",\"在开发中我们会有各种各样的模块依赖，这些模块可能来自于自己编写的代码，也可能来自第三方库；\",\"resolve可以帮助webpack从每个 require/import 语句中，找到需要引入到合适的模块代码；\",\"webpack 使用 enhanced-resolve 来解析文件路径；\",\"extensions extensions 用于配置在导入模块时可以省略的文件扩展名。例如，配置了 extensions: ['.js', '.jsx'] 后，当导入模块时可以省略文件扩展名，如 import MyComponent from './MyComponent'，webpack 会自动尝试解析 MyComponent.js 或 MyComponent.jsx。\",\"alias alias 用于创建模块的别名，可以简化模块导入的路径。例如，配置了 alias: { '@': path.resolve(__dirname, 'src') } 后，可以使用import MyComponent from '@/components/MyComponent'来导入位于 src/components/MyComponent 的模块。\",\"modules modules 用于配置 webpack 在解析模块时搜索的目录。默认情况下，webpack 只会搜索 node_modules 目录。通过配置 modules，可以告诉 webpack 在其他目录中查找模块。例如，配置了 modules: ['src', 'node_modules'] 后，webpack 会先在 src 目录中查找模块，然后再在 node_modules 目录中查找。\",\"mainFields mainFields 用于配置在导入模块时，webpack 优先使用的字段。当导入一个模块时，它可能在 package.json 文件中定义了多个入口字段（如 main, module, browser 等）。通过配置 mainFields，可以告诉 webpack 使用哪个字段作为模块的主入口。例如，配置了 mainFields: ['browser', 'module', 'main'] 后，webpack 会优先使用 browser 字段，然后是 module 字段，最后是 main 字段。\",\"module.exports = { // ...其他配置项 resolve: { extensions: ['.js', '.jsx'], alias: { // alias：创建了一个别名 @，指向项目根目录下的 src 目录。 '@': path.resolve(__dirname, 'src') }, modules: ['src', 'node_modules'], mainFields: ['browser', 'module', 'main'] } } \",\"webpack能解析三种文件路径： \",\"绝对路径 \",\"由于已经获得文件的绝对路径，因此不需要再做进一步解析。\",\"相对路径 \",\"在这种情况下，使用 import 或 require 的资源文件所处的目录，被认为是上下文目录；\",\"在 import/require 中给定的相对路径，会拼接此上下文路径，来生成模块的绝对路径；\",\"模块路径 \",\"在 resolve.modules中指定的所有目录检索模块； \",\"默认值是 [‘node_modules’]，所以默认会从node_modules中查找文件；\",\"我们可以通过设置别名的方式来替换初识模块路径，具体后面讲解alias的配置；\"]},\"105\":{\"h\":\"区分开发/ 生产环境\",\"t\":[\"目前我们所有的webpack配置信息都是放到一个配置文件中的：webpack.config.js \",\"当配置越来越多时，这个文件会变得越来越不容易维护；\",\"并且某些配置是在开发环境需要使用的，某些配置是在生成环境需要使用的，当然某些配置是在开发和生成环 境都会使用的；\",\"所以，我们最好对配置进行划分，方便我们维护和管理；\",\"方案一：编写两个不同的配置文件，开发和生成时，分别加载不同的配置文件即可；\",\"// package.json \\\"scripts\\\": { \\\"build\\\": \\\"webpack --config ./config/webpack.prod.config.js\\\", \\\"serve\\\": \\\"webpack serve --config ./config/webpack.dev.config.js\\\" } \",\"image-20231119222920881\",\"const { merge } = require('webpack-merge'); const commonConfig = require('./webpack.comm.config'); module.exports = merge(commonConfig, { mode: \\\"development\\\", devtool: \\\"source-map\\\", devServer: { contentBase: \\\"./public\\\", hot: true, // host: \\\"0.0.0.0\\\", port: 7777, open: true, // compress: true, proxy: { \\\"/api\\\": { target: \\\"http://localhost:8888\\\", pathRewrite: { \\\"^/api\\\": \\\"\\\" }, secure: false, changeOrigin: true } } }, }) \",\"方式二：使用相同的一个入口配置文件，通过设置参数来区分它们；\",\"const path = require('path'); module.exports = (env, argv) => { const isDev = argv.mode === 'development'; return { mode: argv.mode, entry: './src/index.js', output: { filename: isDev ? 'bundle.js' : 'bundle.[contenthash].js', path: path.resolve(__dirname, 'dist') }, devtool: isDev ? 'eval-source-map' : 'source-map', optimization: { minimize: !isDev }, // ...其他配置项 }; }; \",\"在命令行中，可以通过 --mode 参数来指定 webpack 的构建模式。例如：\",\"webpack --mode development \"]},\"106\":{\"h\":\"VueCLI\",\"t\":[\"https://cli.vuejs.org/zh/\",\"什么是Vue脚手架？\",\"我们前面学习了如何通过webpack配置Vue的开发环境，但是在真实开发中我们不可能每一个项目从头来完成 所有的webpack配置，这样显示开发的效率会大大的降低；\",\"所以在真实开发中，我们通常会使用脚手架来创建一个项目，Vue的项目我们使用的就是Vue的脚手架；\",\"脚手架其实是建筑工程中的一个概念，在我们软件工程中也会将一些帮助我们搭建项目的工具称之为脚手架；\",\"我们可以通过CLI选择项目的配置和创建出我们的项目；\",\"Vue CLI已经内置了webpack相关的配置，我们不需要从零来配置；\",\"Vue CLI 是一个基于 Vue.js 进行快速开发的完整系统，提供：\",\"通过 @vue/cli 实现的交互式的项目脚手架。\",\"通过 @vue/cli + @vue/cli-service-global 实现的零配置原型开发。\",\"一个运行时依赖 (@vue/cli-service)，该依赖： \",\"可升级；\",\"基于 webpack 构建，并带有合理的默认配置；\",\"可以通过项目内的配置文件进行配置；\",\"可以通过插件进行扩展。\",\"一个丰富的官方插件集合，集成了前端生态中最好的工具。\",\"一套完全图形化的创建和管理 Vue.js 项目的用户界面。\",\"Vue CLI 致力于将 Vue 生态中的工具基础标准化。它确保了各种构建工具能够基于智能的默认配置即可平稳衔接，这样你可以专注在撰写应用上，而不必花好几天去纠结配置的问题。与此同时，它也为每个工具提供了调整配置的灵活性，无需 eject。\"]},\"107\":{\"h\":\"Vue CLI 安装\",\"t\":[\"Node 版本要求\",\"Vue CLI 4.x 需要 Node.js v8.9 或更高版本 (推荐 v10 以上)。你可以使用 n，nvm 或 nvm-windows 在同一台电脑中管理多个 Node 版本。\",\"可以使用下列任一命令安装这个新的包：\",\"npm install -g @vue/cli # OR yarn global add @vue/cli \",\"安装之后，你就可以在命令行中访问 vue 命令。你可以通过简单运行 vue，看看是否展示出了一份所有可用命令的帮助信息，来验证它是否安装成功。你还可以用这个命令来检查其版本是否正确：\",\"vue --version \",\"如需升级全局的 Vue CLI 包，请运行：\",\"npm update -g @vue/cli # 或者 yarn global upgrade --latest @vue/cli \",\"上面列出来的命令是用于升级全局的 Vue CLI。如需升级项目中的 Vue CLI 相关模块（以 @vue/cli-plugin- 或 vue-cli-plugin- 开头），请在项目目录下运行 vue upgrade：\",\"用法： upgrade [options] [plugin-name] （试用）升级 Vue CLI 服务及插件 选项： -t, --to <version> 升级 <plugin-name> 到指定的版本 -f, --from <version> 跳过本地版本检测，默认插件是从此处指定的版本升级上来 -r, --registry <url> 使用指定的 registry 地址安装依赖 --all 升级所有的插件 --next 检查插件新版本时，包括 alpha/beta/rc 版本在内 -h, --help 输出帮助内容 \"]},\"108\":{\"h\":\"创建一个项目\",\"t\":[\"运行以下命令来创建一个新项目：\",\"vue create hello-world \",\"选择预设 \",\"Default ([Vue 3] babel, eslint): 选择 Vue3 版本, 并且默认选择 babel, eslint\",\"Default ([Vue 2] babel, eslint): 选择 Vue2 版本, 并且默认选择 babel, eslint\",\"Manually select features: 手动选择需要获取的特性\",\"image-20231122103332793\",\"我们选择 Manually select features\",\"Babel: Babel是一个JavaScript编译器，用于将新版本的JavaScript代码转换为向后兼容的旧版本，以便在不同浏览器和环境中运行。\",\"TypeScript: TypeScript是一种静态类型的JavaScript超集，它添加了类型注解和其他特性，以提供更强大的开发工具和更可靠的代码。\",\"Progressive Web App (PWA) Support: PWA是一种使用现代Web技术构建的应用程序，可以在各种设备和平台上提供类似原生应用的体验。\",\"Router: Vue Router是Vue.js官方提供的路由管理器，用于实现单页面应用程序（SPA）中的导航和路由功能。\",\"Vuex: Vuex是Vue.js官方提供的状态管理库，用于在大型应用程序中管理和共享状态。\",\"CSS Pre-processors: CSS预处理器（如Sass、Less）允许您在编写CSS时使用变量、嵌套规则、函数等高级功能，以提高样式表的可维护性和可重用性。\",\"Linter / Formatter: 代码检查工具（如ESLint）用于强制执行一致的代码风格和检测潜在的错误。代码格式化工具（如Prettier）可自动格式化代码，使其符合统一的样式规范。\",\"Unit Testing: 单元测试是一种软件测试方法，用于验证应用程序中各个部分的功能是否按预期工作。\",\"E2E Testing: 端到端（End-to-End）测试是一种测试方法，用于模拟用户在应用程序中执行的实际操作，以验证整个应用程序的功能和流程。\",\"image-20231122103618450\",\"选择 Vue 版本\",\"image-20231122103654515\",\"Pick a linter / formatter config: 选择的代码检查和格式化配置\",\"ESLint with error prevention only：仅使用ESLint进行错误检查，不应用其他格式化规则。\",\"ESLint + Airbnb config：使用ESLint进行错误检查，并应用Airbnb JavaScript风格指南的格式化规则。\",\"ESLint + Standard config：使用ESLint进行错误检查，并应用JavaScript Standard风格的格式化规则。\",\"ESLint + Prettier：使用ESLint进行错误检查，并与Prettier代码格式化工具集成，以实现一致的代码样式\",\"Pick additional lint features: 可供选择的附加代码检查功能\",\"Lint on save：在保存文件时运行代码检查，以及在编辑器中进行实时错误检测和提示。\",\"Lint and fix on commit：在提交代码时运行代码检查，并自动修复一些常见的问题，以确保提交的代码符合规范。\",\"Where do you prefer placing config for Babel, ESLint, etc.? 配置文件位置选择\",\"In dedicated config files：将Babel、ESLint等配置信息分别保存在它们各自的配置文件中（如.babelrc、.eslintrc等。\",\"In package.json：将Babel、ESLint等配置信息保存在package.json文件的特定字段中，如babel、eslintConfig等。\",\"Save this as a preset for future projects? (y/N) 这是一个保存预设供以后使用的选项，如果您希望将当前配置保存为预设，以便在将来的项目中重用，可以选择“y”，否则选择“N”。\",\"您还可以使用图形界面使用以下vue ui命令创建和管理项目：\",\"vue ui \",\"界面预览\"]},\"109\":{\"h\":\"项目结构\",\"t\":[\"|-node_modules -- 所有的项目依赖包都放在这个目录下 |-public -- 公共文件夹 ---|favicon.ico -- 网站的显示图标 ---|index.html -- 入口的html文件 |-src -- 源文件目录，编写的代码基本都在这个目录下 ---|assets -- 放置静态文件的目录，比如logo.png就放在这里 ---|components -- Vue的组件文件，自定义的组件都会放到这 ---|App.vue -- 根组件，这个在Vue2中也有 ---|main.ts -- 入口文件，因为采用了TypeScript所以是ts结尾 ---|shims-vue.d.ts -- 类文件(也叫定义文件)，因为.vue结尾的文件在ts中不认可，所以要有定义文件 |-.browserslistrc -- 在不同前端工具之间公用目标浏览器和node版本的配置文件，作用是设置兼容性 |-.eslintrc.js -- Eslint的配置文件，不用作过多介绍 |-.gitignore -- 用来配置那些文件不归git管理 |-package.json -- 命令配置和包管理文件 |-README.md -- 项目的说明文件，使用markdown语法进行编写 |-tsconfig.json -- 关于TypeScript的配置文件 |-yarn.lock -- 使用yarn后自动生成的文件，由Yarn管理，安装yarn包时的重要信息存储到yarn.lock文件中 \",\"在一个 Vue CLI 项目中，@vue/cli-service 安装了一个名为 vue-cli-service 的命令。你可以在 npm scripts 中以 vue-cli-service、或者从终端中以 ./node_modules/.bin/vue-cli-service 访问这个命令。\",\"\\\"scripts\\\": { \\\"serve\\\": \\\"vue-cli-service serve\\\", \\\"build\\\": \\\"vue-cli-service build\\\", \\\"lint\\\": \\\"vue-cli-service lint\\\" } \",\"你可以通过 npm 或 Yarn 调用这些 script：\",\"npm run serve # OR yarn serve \",\"如果你可以使用 npx (最新版的 npm 应该已经自带)，也可以直接这样调用命令：\",\"npx vue-cli-service serve \"]},\"110\":{\"h\":\"vue-cli-service serve\",\"t\":[\"用法：vue-cli-service serve [options] [entry] 选项： --open 在服务器启动时打开浏览器 --copy 在服务器启动时将 URL 复制到剪切版 --mode 指定环境模式 (默认值：development) --host 指定 host (默认值：0.0.0.0) --port 指定 port (默认值：8080) --https 使用 https (默认值：false) \",\"vue-cli-service serve 命令会启动一个开发服务器 (基于 webpack-dev-server) 并附带开箱即用的模块热重载 (Hot-Module-Replacement)。\",\"除了通过命令行参数，你也可以使用 vue.config.js 里的 devServer 字段配置开发服务器。\",\"命令行参数 [entry] 将被指定为唯一入口 (默认值：src/main.js，TypeScript 项目则为 src/main.ts)，而非额外的追加入口。尝试使用 [entry] 覆盖 config.pages 中的 entry 将可能引发错误。\"]},\"111\":{\"h\":\"vue-cli-service build\",\"t\":[\"用法：vue-cli-service build [options] [entry|pattern] 选项： --mode 指定环境模式 (默认值：production) --dest 指定输出目录 (默认值：dist) --modern 面向现代浏览器带自动回退地构建应用 --target app | lib | wc | wc-async (默认值：app) --name 库或 Web Components 模式下的名字 (默认值：package.json 中的 \\\"name\\\" 字段或入口文件名) --no-clean 在构建项目之前不清除目标目录的内容 --report 生成 report.html 以帮助分析包内容 --report-json 生成 report.json 以帮助分析包内容 --watch 监听文件变化 \",\"vue-cli-service build 会在 dist/ 目录产生一个可用于生产环境的包，带有 JS/CSS/HTML 的压缩，和为更好的缓存而做的自动的 vendor chunk splitting。它的 chunk manifest 会内联在 HTML 里。\",\"这里还有一些有用的命令参数：\",\"--modern 使用现代模式构建应用，为现代浏览器交付原生支持的 ES2015 代码，并生成一个兼容老浏览器的包用来自动回退。\",\"--target 允许你将项目中的任何组件以一个库或 Web Components 组件的方式进行构建。更多细节请查阅构建目标。\",\"--report 和 --report-json 会根据构建统计生成报告，它会帮助你分析包中包含的模块们的大小。\"]},\"112\":{\"h\":\"vue-cli-service inspect\",\"t\":[\"用法：vue-cli-service inspect [options] [...paths] 选项： --mode 指定环境模式 (默认值：development) \",\"如果你想要设置 inspect 命令的选项，可以在命令后面添加对应的参数。例如，如果你想要查看生产环境的 webpack 配置，可以运行以下命令：vue-cli-service inspect --mode production\",\"你也可以通过在 vue.config.js 文件中配置 configureWebpack 选项来修改 webpack 配置。这个选项允许你返回一个对象或函数来修改默认的 webpack 配置。例如：\",\"module.exports = { configureWebpack: { plugins: [ // 添加一个插件 ] } } \",\"你可以使用 vue-cli-service inspect 来审查一个 Vue CLI 项目的 webpack config。更多细节请查阅审查 webpack config。\"]},\"113\":{\"h\":\"组件之间的通信\",\"t\":[\"[TOC]\"]},\"114\":{\"h\":\"认识组件的嵌套\",\"t\":[\"在之前的案例中，我们只是创建了一个组件App；\",\"如果我们一个应用程序将所有的逻辑都放在一个组件中，那么这个组件就会变成非常的臃肿和难以维护；\",\"所以组件化的核心思想应该是对组件进行拆分，拆分成一个个小的组件；\",\"再将这些组件组合嵌套在一起，最终形成我们的应用程序；\",\"我们来分析一下下面代码的嵌套逻辑，假如我们将所有的代码逻辑都放到一个App.vue组件中：\",\"<template> <div> <h2>Header</h2> <h2>NavBar</h2> </div> <div> <h2>Banner</h2> <ul> <li>商品列表1</li> <li>商品列表2</li> <li>商品列表3</li> <li>商品列表4</li> <li>商品列表5</li> </ul> </div> <div> <h2>Footer</h2> <h2>免责声明</h2> </div> </template> <script> export default { }; </script> <style scoped></style> \",\"我们会发现，将所有的代码逻辑全部放到一个组件中，代码是非常的臃肿和难以维护的。并且在真实开发中，我们会有更多的内容和代码逻辑，对于扩展性和可维护性来说都是非常差的。\",\"所有，在真实的开发中，我们会对组件进行拆分，拆分成一个个功能的小组件。\"]},\"115\":{\"h\":\"组件的拆分\",\"t\":[\"如上代码, 我们可以按照如下的方式进行拆分：\",\"App.vue\",\"<template> <div id=\\\"app\\\"> <VueHeader></VueHeader> <VueMain></VueMain> <VueFooter></VueFooter> </div> </template> <script> import VueHeader from './VueHeader.vue'; import VueMain from './VueMain.vue'; import VueFooter from './VueFooter.vue'; export default { name: 'App', components: { VueHeader, VueMain, VueFooter } }; </script> <style scoped></style> \",\"Header.vue组件\",\"<template> <div> <h2>Header</h2> <h2>NavBar</h2> </div> </template> \",\"Main.vue组件：\",\"<template> <div> <vue-banner></vue-banner> <vue-product-list></vue-product-list> </div> </template> <script> import VueBanner from './VueBanner.vue'; import VueProductList from './VueProductList.vue'; export default { name: 'VueMain', components: { VueBanner, VueProductList } }; </script> \",\"Banner.vue组件：\",\"<template> <h2>Banner</h2> </template> \",\"ProductList组件：\",\"<template> <ul> <li>商品列表1</li> <li>商品列表2</li> <li>商品列表3</li> <li>商品列表4</li> <li>商品列表5</li> </ul> </template> \",\"Footer.vue组件：\",\"<template> <div> <h2>Footer</h2> <h2>免责声明</h2> </div> </template> \",\"按照如上的拆分方式后，我们开发对应的逻辑只需要去对应的组件编写就可。\"]},\"116\":{\"h\":\"组件的通信\",\"t\":[\"上面的嵌套逻辑如下，它们存在如下关系：\",\"App组件是Header、Main、Footer组件的父组件；\",\"Main组件是Banner、ProductList组件的父组件；\",\"在开发过程中，我们会经常遇到需要组件之间相互进行通信：\",\"比如App可能使用了多个Header，每个地方的Header展示的内容不同，那么我们就需要使用者传递给Header一些数据，让其进行展示；\",\"又比如我们在Main中一次性请求了Banner数据和ProductList数据，那么就需要传递给他们来进行展示；\",\"也可能是子组件中发生了事件，需要有父组件来完成某些操作，那就需要子组件向父组件传递事件；\",\"父子组件之间如何进行通信呢？\",\"父组件传递给子组件：通过props属性；\",\"子组件传递给父组件：通过$emit触发事件；\",\"image-20231124000011715\"]},\"117\":{\"h\":\"父传子\",\"t\":[\"在开发中很常见的就是父子组件之间通信，比如父组件有一些数据，需要子组件来进行展示：\",\"这个时候我们可以通过props来完成组件之间的通信；\",\"什么是 props?\",\"在Vue3中，props是一种用于向组件传递数据的机制。它允许父组件向子组件传递数据，并在子组件中使用这些数据。\",\"在Vue3中，每个组件都可以定义自己的props，并指定每个prop的类型、默认值和其他验证规则。当父组件向子组件传递数据时，子组件可以使用这些props来访问传递过来的数据。\"]},\"118\":{\"h\":\"props 的定义\",\"t\":[\"在Vue3中，props可以使用两种方式来定义：\",\"字符串数组，数组中的字符串就是attribute的名称；\",\"对象类型，对象类型我们可以在指定attribute名称的同时，指定它需要传递的类型、是否是必须的、默认值等等；\"]},\"119\":{\"h\":\"字符串数组\",\"t\":[\"使用字符串数组的方式，可以简单地指定需要接收的属性名称。在这种情况下，属性类型默认为any。\",\"在下面的示例中，父组件使用message=\\\"Hello from parent\\\"将message属性作为字符串传递给子组件。在子组件中，使用props选项并传递一个字符串数组来定义message属性。这样子组件就可以使用message属性来访问父组件传递过来的数据了。\",\"<!-- App.vue --> <template> <div> <child-component message=\\\"Hello from parent\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue' export default { components: { ChildComponent } } </script> \",\"<!--ChildComponent.vue --> <template> <div> {{ message }} </div> </template> <script> export default { props: ['message'] } </script> \"]},\"120\":{\"h\":\"对象类型\",\"t\":[\"使用对象类型的方式，可以更详细地指定需要接收的属性名称、类型、是否必须、默认值等等。\",\"在下面的示例中，父组件使用:message=\\\"parentMessage\\\"将parentMessage属性作为字符串传递给子组件。在子组件中，使用props选项并传递一个对象来定义message属性。在这个对象中，我们指定了type为字符串、required为true、default为'Hello from child'、以及一个自定义的验证函数。\",\"这样子组件就可以使用message属性来访问父组件传递过来的数据了。\",\"<!-- App.vue --> <template> <div> <child-component :message=\\\"parentMessage\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue' export default { components: { ChildComponent }, data() { return { parentMessage: 'Hello from parent' } } } </script> \",\"<!--ChildComponent.vue --> <template> <div> {{ message }} </div> </template> <script> export default { props: { message: { type: String, // 必须传输? required: true, // 默认值 default: 'Hello from child', // 传递的数据是否符合要求? validator: (value) => { return value.length > 0 }, info: String } } } </script> \"]},\"121\":{\"h\":\"其他\",\"t\":[\"Type的类型都可以是哪些？\",\"String：用于指定字符串类型的属性。\",\"Number：用于指定数字类型的属性。\",\"Boolean：用于指定布尔类型的属性。\",\"Array：用于指定数组类型的属性。\",\"Object：用于指定对象类型的属性。\",\"Date：用于指定日期类型的属性。\",\"Function：用于指定函数类型的属性。\",\"Symbol：用于指定符号类型的属性。\",\"对象类型的其他写法\",\"props: { // 基础的类型检查 (`null` 和 `undefined` 会通过任何类型验证) propA: Number, // 多个可能的类型 propB: [String, Number], // 必填的字符串 propC: { type: String, required: true }, // 带有默认值的数字 propD: { type: Number, default: 100 }, // 带有默认值的对象 propE: { type: Object, // 对象或数组默认值必须从一个工厂函数获取, 因为每个实例需要维护一份被返回对象的独立的副本 default: function () { return { message: 'hello' } } }, // 自定义验证函数 propF: { validator: function (value) { // 这个值必须匹配下列字符串中的一个 return ['success', 'warning', 'danger'].indexOf(value) !== -1 } }, // 具有默认值的函数 propG: { type: Function, // 对象或数组默认值必须从一个工厂函数获取 default: function () { return { message: 'hello' } } } } \",\"Prop 的大小写命名(camelCase vs kebab-case)\",\"在Vue.js中，你可以使用驼峰式(camelCase)或短横线分隔(kebab-case)来命名你的props。然而，由于HTML属性不区分大小写，所以在模板中使用驼峰式命名的props时，需要转换为短横线分隔的形式。\",\"例如，如果你在JavaScript中定义了一个名为myProp的prop，你需要在模板中使用my-prop来引用它。\",\"这是一个例子：\",\"<template> <div> <!-- 在模板中使用短横线分隔的形式 --> <child-component :my-prop=\\\"parentValue\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue'; export default { components: { ChildComponent }, data() { return { parentValue: 'Hello from Parent Component' } } } </script> \",\"<!--ChildComponent.vue --> <template> <div> <!-- 使用prop的值 --> <h2>{{ myProp }}</h2> </div> </template> <script> export default { props: { // 在JavaScript中使用驼峰式命名 myProp: String } } </script> \",\"在这个例子中，父组件将其数据parentValue传递给子组件的myProp prop。注意在父组件模板中，我们使用短横线分隔的形式:my-prop，而在子组件的JavaScript代码中，我们使用驼峰式命名myProp, 这也是官方推荐的写法。\"]},\"122\":{\"h\":\"非 Prop 的Attribute\",\"t\":[\"在Vue.js中，非prop的attribute是指那些被绑定到组件，但没有对应的prop定义的attribute。这些attribute会被添加到组件的根元素上。\",\"例如，如果你有一个组件，它的模板是一个<div>元素，然后你在使用这个组件时添加了一个class或style属性，那么这个class或style属性就会被添加到<div>元素上，即使你没有在组件的props中定义它们。\",\"这是一个例子：\",\"<template> <div> <my-component id=\\\"abc\\\" class=\\\"my-class\\\" style=\\\"color: red;\\\"></my-component> </div> </template> <script> import MyComponent from './MyComponent.vue'; export default { components: { MyComponent } } </script> \",\"在这个例子中，id, class和style就是非prop的attribute。它们会被添加到MyComponent的根元素上。\"]},\"123\":{\"h\":\"禁用 Attribute 继承\",\"t\":[\"如果你不希望非prop的attribute被添加到根元素上，你可以在组件中定义一个inheritAttrs: false选项。这样，非prop的attribute将只能通过$attrs变量来访问，而不会被添加到根元素上。\",\"export default { inheritAttrs: false } \",\"禁用attribute继承的常见情况是需要将attribute应用于根元素之外的其他元素；\",\"我们可以通过 $attrs来访问所有的 非props的attribute；\",\"<template> <div> <h2 v-bind=\\\"$attrs\\\">{{title}}</h2> <p>{{content}}</p> </div> </template> \",\"如上, <h2> 仍然会继承非prop的attribute\"]},\"124\":{\"h\":\"多个根节点的attribute\",\"t\":[\"多个根节点的attribute如果没有显示的绑定，那么会报警告，我们必须手动的指定要绑定到哪一个属性上：\",\"<template> <div :class=\\\"$attrs.class\\\"> 我是NotPropAttribue组件1 </div> <div> 我是NotPropAttribue组件2 </div> <div> 我是NotPropAttribue组件3 </div> </template> \"]},\"125\":{\"h\":\"子传父\",\"t\":[\"什么情况下子组件需要传递内容到父组件呢？\",\"当子组件有一些事件发生的时候，比如在组件中发生了点击，父组件需要切换内容；\",\"子组件有一些内容想要传递给父组件的时候；\",\"我们如何完成上面的操作呢？\",\"首先，我们需要在子组件中定义好在某些情况下触发的事件名称；\",\"其次，在父组件中以v-on的方式传入要监听的事件名称，并且绑定到对应的方法中；\",\"最后，在子组件中发生某个事件的时候，根据事件名称触发对应的事件；\",\"以下是一个简单的示例\",\"<!-- 子组件 --> <template> <button @click=\\\"sendDataToParent\\\">传递数据给父组件</button> </template> <script> export default { methods: { sendDataToParent() { const data = 'Hello, parent!'; // 传递参数给父组件 this.$emit('data-to-parent', data); } } }; </script> \",\"<!-- 父组件 --> <template> <div> <child-component @data-to-parent=\\\"handleDataFromChild\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue'; export default { components: { ChildComponent }, methods: { handleDataFromChild(data) { console.log(data); // 在控制台打印子组件传递的数据 // 在这里处理从子组件接收到的数据 } } }; </script> \"]},\"126\":{\"h\":\"emits\",\"t\":[\"当使用Vue 3时，你可以使用emits选项来对子组件触发的自定义事件进行校验: 使用emits选项可以提供类型检查和错误提示，确保子组件只触发被允许的自定义事件。这有助于提高代码的可维护性和可靠性。以下是一个示例：\",\"export default { // 一般写法 emits: [\\\"add\\\", \\\"sub\\\", \\\"addN\\\"], // 对象写法的目的是为了进行参数的验证 emits: { add: null, sub: null, addN: (num, name, age) => { console.log(num, name, age); if (num > 10) { return true } return false; } } } \"]},\"127\":{\"h\":\"动态组件\",\"t\":[\"Vue.js 的动态组件是指可以根据不同的数据渲染不同的组件的功能。你可以使用 Vue.js 的 <component> 元素来实现动态组件。\",\"例如，你可以在父组件中定义一个数据属性，根据这个属性的值来决定渲染哪个子组件。然后，在模板中使用 <component> 元素，并将该数据属性绑定到 is 属性上，这样就可以动态地渲染不同的子组件了。\",\"<script> import Home from './Home.vue' import Posts from './Posts.vue' import Archive from './Archive.vue' export default { components: { Home, Posts, Archive }, data() { return { currentTab: 'Home', tabs: ['Home', 'Posts', 'Archive'] } } } </script> <template> <div class=\\\"demo\\\"> <button v-for=\\\"tab in tabs\\\" :key=\\\"tab\\\" :class=\\\"['tab-button', { active: currentTab === tab }]\\\" @click=\\\"currentTab = tab\\\" > {{ tab }} </button> <component :is=\\\"currentTab\\\" class=\\\"tab\\\"></component> </div> </template> \"]},\"128\":{\"h\":\"非父子组件之间的通信\",\"t\":[\"在开发中，我们构建了组件树之后，除了父子组件之间的通信之外，还会有非父子组件之间的通信。\",\"这里我们主要讲两种方式：\",\"Provide/Inject\",\"Mitt全局事件总线；\"]},\"129\":{\"h\":\"Provide/Inject\",\"t\":[\"Provide/Inject用于非父子组件之间共享数据：\",\"比如有一些深度嵌套的组件，子组件想要获取父组件的部分内容；\",\"在这种情况下，如果我们仍然将props沿着组件链逐级传递下去，就会非常的麻烦；\",\"对于这种情况下，我们可以使用 Provide 和 Inject ：\",\"无论层级结构有多深，父组件都可以作为其所有子组件的依赖提供者；\",\"父组件有一个 provide 选项来提供数据；\",\"子组件有一个 inject 选项来开始使用这些数据；\",\"image-20231130195805276\",\"实际上，你可以将依赖注入看作是“long range props”，除了：\",\"父组件不需要知道哪些子组件使用它 provide 的 property\",\"子组件不需要知道 inject 的 property 来自哪里\",\"<template> <div> <child-component></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue'; export default { components: { ChildComponent }, provide() { return { message: 'Hello from the parent component' }; } }; </script> \",\"<template> <div> <p>{{ message }}</p> </div> </template> <script> export default { inject: ['message'] }; </script> \",\"当然, 我们也可以通过 this 获取到当前组件定义的 data\",\"import VueHome from './VueHome.vue'; import { computed } from 'vue'; export default { components: { VueHome }, provide() { return { name: \\\"why\\\", age: 18, length: computed(() => this.names.length) // ref对象 .value } }, data() { return { names: [\\\"abc\\\", \\\"cba\\\", \\\"nba\\\"] } }, methods: { addName() { this.names.push(\\\"why\\\"); console.log(this.names); } } } \"]},\"130\":{\"h\":\"全局事件总线 mitt 库\",\"t\":[\"在 Vue 3 中，全局事件总线是一种用于在不同组件之间进行通信的机制。它允许你在任何组件中触发事件并在其他组件中监听和响应这些事件。\",\"https://cn.vuejs.org/api/application.html#app-config-globalproperties\",\"在 Vue 3 中，可以使用 app.config.globalProperties 来创建一个全局事件总线。通过将事件总线实例添加到全局属性中，你可以在任何组件中访问它，从而实现跨组件的事件通信。\",\"以下是一个示例：\",\"// 在 main.js 中创建全局事件总线 import { createApp } from 'vue'; const app = createApp(App); app.config.globalProperties.$bus = createEventBus(); app.mount('#app'); \",\"创建一个名为 createEventBus 的函数来创建事件总线实例：\",\"function createEventBus() { const listeners = {}; function on(event, callback) { if (!listeners[event]) { listeners[event] = []; } listeners[event].push(callback); } function emit(event, ...args) { if (listeners[event]) { listeners[event].forEach(callback => { callback(...args); }); } } return { on, emit }; } \",\"现在，你可以在任何组件中使用 $bus来触发事件和监听事件：\",\"<template> <div> <button @click=\\\"sendMessage\\\">发送消息</button> </div> </template> <script> export default { methods: { sendMessage() { this.$bus.emit('message', 'Hello from component A'); } } }; </script> \",\"<template> <div> <button @click=\\\"sendMessage\\\">发送消息</button> </div> </template> <script> export default { methods: { sendMessage() { this.$bus.emit('message', 'Hello from component A'); } } }; </script> \",\"在上述示例中，当点击按钮时，组件 A 使用 $bus.emit 发送了一个名为 'message' 的事件，并传递了消息 'Hello from component A'。组件 B 使用 ​$bus.on 监听了 'message' 事件，并将接收到的消息显示在页面上。\",\"通过全局事件总线，你可以在不同组件之间进行简单而方便的通信，而无需显式地通过 props 或其他方式传递数据。 [TOC]\"]},\"131\":{\"h\":\"认识组件的嵌套\",\"t\":[\"在之前的案例中，我们只是创建了一个组件App；\",\"如果我们一个应用程序将所有的逻辑都放在一个组件中，那么这个组件就会变成非常的臃肿和难以维护；\",\"所以组件化的核心思想应该是对组件进行拆分，拆分成一个个小的组件；\",\"再将这些组件组合嵌套在一起，最终形成我们的应用程序；\",\"我们来分析一下下面代码的嵌套逻辑，假如我们将所有的代码逻辑都放到一个App.vue组件中：\",\"<template> <div> <h2>Header</h2> <h2>NavBar</h2> </div> <div> <h2>Banner</h2> <ul> <li>商品列表1</li> <li>商品列表2</li> <li>商品列表3</li> <li>商品列表4</li> <li>商品列表5</li> </ul> </div> <div> <h2>Footer</h2> <h2>免责声明</h2> </div> </template> <script> export default { }; </script> <style scoped></style> \",\"我们会发现，将所有的代码逻辑全部放到一个组件中，代码是非常的臃肿和难以维护的。并且在真实开发中，我们会有更多的内容和代码逻辑，对于扩展性和可维护性来说都是非常差的。\",\"所有，在真实的开发中，我们会对组件进行拆分，拆分成一个个功能的小组件。\"]},\"132\":{\"h\":\"组件的拆分\",\"t\":[\"如上代码, 我们可以按照如下的方式进行拆分：\",\"App.vue\",\"<template> <div id=\\\"app\\\"> <VueHeader></VueHeader> <VueMain></VueMain> <VueFooter></VueFooter> </div> </template> <script> import VueHeader from './VueHeader.vue'; import VueMain from './VueMain.vue'; import VueFooter from './VueFooter.vue'; export default { name: 'App', components: { VueHeader, VueMain, VueFooter } }; </script> <style scoped></style> \",\"Header.vue组件\",\"<template> <div> <h2>Header</h2> <h2>NavBar</h2> </div> </template> \",\"Main.vue组件：\",\"<template> <div> <vue-banner></vue-banner> <vue-product-list></vue-product-list> </div> </template> <script> import VueBanner from './VueBanner.vue'; import VueProductList from './VueProductList.vue'; export default { name: 'VueMain', components: { VueBanner, VueProductList } }; </script> \",\"Banner.vue组件：\",\"<template> <h2>Banner</h2> </template> \",\"ProductList组件：\",\"<template> <ul> <li>商品列表1</li> <li>商品列表2</li> <li>商品列表3</li> <li>商品列表4</li> <li>商品列表5</li> </ul> </template> \",\"Footer.vue组件：\",\"<template> <div> <h2>Footer</h2> <h2>免责声明</h2> </div> </template> \",\"按照如上的拆分方式后，我们开发对应的逻辑只需要去对应的组件编写就可。\"]},\"133\":{\"h\":\"组件的通信\",\"t\":[\"上面的嵌套逻辑如下，它们存在如下关系：\",\"App组件是Header、Main、Footer组件的父组件；\",\"Main组件是Banner、ProductList组件的父组件；\",\"在开发过程中，我们会经常遇到需要组件之间相互进行通信：\",\"比如App可能使用了多个Header，每个地方的Header展示的内容不同，那么我们就需要使用者传递给Header一些数据，让其进行展示；\",\"又比如我们在Main中一次性请求了Banner数据和ProductList数据，那么就需要传递给他们来进行展示；\",\"也可能是子组件中发生了事件，需要有父组件来完成某些操作，那就需要子组件向父组件传递事件；\",\"父子组件之间如何进行通信呢？\",\"父组件传递给子组件：通过props属性；\",\"子组件传递给父组件：通过$emit触发事件；\",\"image-20231124000011715\"]},\"134\":{\"h\":\"父传子\",\"t\":[\"在开发中很常见的就是父子组件之间通信，比如父组件有一些数据，需要子组件来进行展示：\",\"这个时候我们可以通过props来完成组件之间的通信；\",\"什么是 props?\",\"在Vue3中，props是一种用于向组件传递数据的机制。它允许父组件向子组件传递数据，并在子组件中使用这些数据。\",\"在Vue3中，每个组件都可以定义自己的props，并指定每个prop的类型、默认值和其他验证规则。当父组件向子组件传递数据时，子组件可以使用这些props来访问传递过来的数据。\"]},\"135\":{\"h\":\"props 的定义\",\"t\":[\"在Vue3中，props可以使用两种方式来定义：\",\"字符串数组，数组中的字符串就是attribute的名称；\",\"对象类型，对象类型我们可以在指定attribute名称的同时，指定它需要传递的类型、是否是必须的、默认值等等；\"]},\"136\":{\"h\":\"字符串数组\",\"t\":[\"使用字符串数组的方式，可以简单地指定需要接收的属性名称。在这种情况下，属性类型默认为any。\",\"在下面的示例中，父组件使用message=\\\"Hello from parent\\\"将message属性作为字符串传递给子组件。在子组件中，使用props选项并传递一个字符串数组来定义message属性。这样子组件就可以使用message属性来访问父组件传递过来的数据了。\",\"<!-- App.vue --> <template> <div> <child-component message=\\\"Hello from parent\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue' export default { components: { ChildComponent } } </script> \",\"<!--ChildComponent.vue --> <template> <div> {{ message }} </div> </template> <script> export default { props: ['message'] } </script> \"]},\"137\":{\"h\":\"对象类型\",\"t\":[\"使用对象类型的方式，可以更详细地指定需要接收的属性名称、类型、是否必须、默认值等等。\",\"在下面的示例中，父组件使用:message=\\\"parentMessage\\\"将parentMessage属性作为字符串传递给子组件。在子组件中，使用props选项并传递一个对象来定义message属性。在这个对象中，我们指定了type为字符串、required为true、default为'Hello from child'、以及一个自定义的验证函数。\",\"这样子组件就可以使用message属性来访问父组件传递过来的数据了。\",\"<!-- App.vue --> <template> <div> <child-component :message=\\\"parentMessage\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue' export default { components: { ChildComponent }, data() { return { parentMessage: 'Hello from parent' } } } </script> \",\"<!--ChildComponent.vue --> <template> <div> {{ message }} </div> </template> <script> export default { props: { message: { type: String, // 必须传输? required: true, // 默认值 default: 'Hello from child', // 传递的数据是否符合要求? validator: (value) => { return value.length > 0 }, info: String } } } </script> \"]},\"138\":{\"h\":\"其他\",\"t\":[\"Type的类型都可以是哪些？\",\"String：用于指定字符串类型的属性。\",\"Number：用于指定数字类型的属性。\",\"Boolean：用于指定布尔类型的属性。\",\"Array：用于指定数组类型的属性。\",\"Object：用于指定对象类型的属性。\",\"Date：用于指定日期类型的属性。\",\"Function：用于指定函数类型的属性。\",\"Symbol：用于指定符号类型的属性。\",\"对象类型的其他写法\",\"props: { // 基础的类型检查 (`null` 和 `undefined` 会通过任何类型验证) propA: Number, // 多个可能的类型 propB: [String, Number], // 必填的字符串 propC: { type: String, required: true }, // 带有默认值的数字 propD: { type: Number, default: 100 }, // 带有默认值的对象 propE: { type: Object, // 对象或数组默认值必须从一个工厂函数获取, 因为每个实例需要维护一份被返回对象的独立的副本 default: function () { return { message: 'hello' } } }, // 自定义验证函数 propF: { validator: function (value) { // 这个值必须匹配下列字符串中的一个 return ['success', 'warning', 'danger'].indexOf(value) !== -1 } }, // 具有默认值的函数 propG: { type: Function, // 对象或数组默认值必须从一个工厂函数获取 default: function () { return { message: 'hello' } } } } \",\"Prop 的大小写命名(camelCase vs kebab-case)\",\"在Vue.js中，你可以使用驼峰式(camelCase)或短横线分隔(kebab-case)来命名你的props。然而，由于HTML属性不区分大小写，所以在模板中使用驼峰式命名的props时，需要转换为短横线分隔的形式。\",\"例如，如果你在JavaScript中定义了一个名为myProp的prop，你需要在模板中使用my-prop来引用它。\",\"这是一个例子：\",\"<template> <div> <!-- 在模板中使用短横线分隔的形式 --> <child-component :my-prop=\\\"parentValue\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue'; export default { components: { ChildComponent }, data() { return { parentValue: 'Hello from Parent Component' } } } </script> \",\"<!--ChildComponent.vue --> <template> <div> <!-- 使用prop的值 --> <h2>{{ myProp }}</h2> </div> </template> <script> export default { props: { // 在JavaScript中使用驼峰式命名 myProp: String } } </script> \",\"在这个例子中，父组件将其数据parentValue传递给子组件的myProp prop。注意在父组件模板中，我们使用短横线分隔的形式:my-prop，而在子组件的JavaScript代码中，我们使用驼峰式命名myProp, 这也是官方推荐的写法。\"]},\"139\":{\"h\":\"非 Prop 的Attribute\",\"t\":[\"在Vue.js中，非prop的attribute是指那些被绑定到组件，但没有对应的prop定义的attribute。这些attribute会被添加到组件的根元素上。\",\"例如，如果你有一个组件，它的模板是一个<div>元素，然后你在使用这个组件时添加了一个class或style属性，那么这个class或style属性就会被添加到<div>元素上，即使你没有在组件的props中定义它们。\",\"这是一个例子：\",\"<template> <div> <my-component id=\\\"abc\\\" class=\\\"my-class\\\" style=\\\"color: red;\\\"></my-component> </div> </template> <script> import MyComponent from './MyComponent.vue'; export default { components: { MyComponent } } </script> \",\"在这个例子中，id, class和style就是非prop的attribute。它们会被添加到MyComponent的根元素上。\"]},\"140\":{\"h\":\"禁用 Attribute 继承\",\"t\":[\"如果你不希望非prop的attribute被添加到根元素上，你可以在组件中定义一个inheritAttrs: false选项。这样，非prop的attribute将只能通过$attrs变量来访问，而不会被添加到根元素上。\",\"export default { inheritAttrs: false } \",\"禁用attribute继承的常见情况是需要将attribute应用于根元素之外的其他元素；\",\"我们可以通过 $attrs来访问所有的 非props的attribute；\",\"<template> <div> <h2 v-bind=\\\"$attrs\\\">{{title}}</h2> <p>{{content}}</p> </div> </template> \",\"如上, <h2> 仍然会继承非prop的attribute\"]},\"141\":{\"h\":\"多个根节点的attribute\",\"t\":[\"多个根节点的attribute如果没有显示的绑定，那么会报警告，我们必须手动的指定要绑定到哪一个属性上：\",\"<template> <div :class=\\\"$attrs.class\\\"> 我是NotPropAttribue组件1 </div> <div> 我是NotPropAttribue组件2 </div> <div> 我是NotPropAttribue组件3 </div> </template> \"]},\"142\":{\"h\":\"子传父\",\"t\":[\"什么情况下子组件需要传递内容到父组件呢？\",\"当子组件有一些事件发生的时候，比如在组件中发生了点击，父组件需要切换内容；\",\"子组件有一些内容想要传递给父组件的时候；\",\"我们如何完成上面的操作呢？\",\"首先，我们需要在子组件中定义好在某些情况下触发的事件名称；\",\"其次，在父组件中以v-on的方式传入要监听的事件名称，并且绑定到对应的方法中；\",\"最后，在子组件中发生某个事件的时候，根据事件名称触发对应的事件；\",\"以下是一个简单的示例\",\"<!-- 子组件 --> <template> <button @click=\\\"sendDataToParent\\\">传递数据给父组件</button> </template> <script> export default { methods: { sendDataToParent() { const data = 'Hello, parent!'; // 传递参数给父组件 this.$emit('data-to-parent', data); } } }; </script> \",\"<!-- 父组件 --> <template> <div> <child-component @data-to-parent=\\\"handleDataFromChild\\\"></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue'; export default { components: { ChildComponent }, methods: { handleDataFromChild(data) { console.log(data); // 在控制台打印子组件传递的数据 // 在这里处理从子组件接收到的数据 } } }; </script> \"]},\"143\":{\"h\":\"emits\",\"t\":[\"当使用Vue 3时，你可以使用emits选项来对子组件触发的自定义事件进行校验: 使用emits选项可以提供类型检查和错误提示，确保子组件只触发被允许的自定义事件。这有助于提高代码的可维护性和可靠性。以下是一个示例：\",\"export default { // 一般写法 emits: [\\\"add\\\", \\\"sub\\\", \\\"addN\\\"], // 对象写法的目的是为了进行参数的验证 emits: { add: null, sub: null, addN: (num, name, age) => { console.log(num, name, age); if (num > 10) { return true } return false; } } } \"]},\"144\":{\"h\":\"动态组件\",\"t\":[\"Vue.js 的动态组件是指可以根据不同的数据渲染不同的组件的功能。你可以使用 Vue.js 的 <component> 元素来实现动态组件。\",\"例如，你可以在父组件中定义一个数据属性，根据这个属性的值来决定渲染哪个子组件。然后，在模板中使用 <component> 元素，并将该数据属性绑定到 is 属性上，这样就可以动态地渲染不同的子组件了。\",\"<script> import Home from './Home.vue' import Posts from './Posts.vue' import Archive from './Archive.vue' export default { components: { Home, Posts, Archive }, data() { return { currentTab: 'Home', tabs: ['Home', 'Posts', 'Archive'] } } } </script> <template> <div class=\\\"demo\\\"> <button v-for=\\\"tab in tabs\\\" :key=\\\"tab\\\" :class=\\\"['tab-button', { active: currentTab === tab }]\\\" @click=\\\"currentTab = tab\\\" > {{ tab }} </button> <component :is=\\\"currentTab\\\" class=\\\"tab\\\"></component> </div> </template> \"]},\"145\":{\"h\":\"非父子组件之间的通信\",\"t\":[\"在开发中，我们构建了组件树之后，除了父子组件之间的通信之外，还会有非父子组件之间的通信。\",\"这里我们主要讲两种方式：\",\"Provide/Inject\",\"Mitt全局事件总线；\"]},\"146\":{\"h\":\"Provide/Inject\",\"t\":[\"Provide/Inject用于非父子组件之间共享数据：\",\"比如有一些深度嵌套的组件，子组件想要获取父组件的部分内容；\",\"在这种情况下，如果我们仍然将props沿着组件链逐级传递下去，就会非常的麻烦；\",\"对于这种情况下，我们可以使用 Provide 和 Inject ：\",\"无论层级结构有多深，父组件都可以作为其所有子组件的依赖提供者；\",\"父组件有一个 provide 选项来提供数据；\",\"子组件有一个 inject 选项来开始使用这些数据；\",\"image-20231130195805276\",\"实际上，你可以将依赖注入看作是“long range props”，除了：\",\"父组件不需要知道哪些子组件使用它 provide 的 property\",\"子组件不需要知道 inject 的 property 来自哪里\",\"<template> <div> <child-component></child-component> </div> </template> <script> import ChildComponent from './ChildComponent.vue'; export default { components: { ChildComponent }, provide() { return { message: 'Hello from the parent component' }; } }; </script> \",\"<template> <div> <p>{{ message }}</p> </div> </template> <script> export default { inject: ['message'] }; </script> \",\"当然, 我们也可以通过 this 获取到当前组件定义的 data\",\"import VueHome from './VueHome.vue'; import { computed } from 'vue'; export default { components: { VueHome }, provide() { return { name: \\\"why\\\", age: 18, length: computed(() => this.names.length) // ref对象 .value } }, data() { return { names: [\\\"abc\\\", \\\"cba\\\", \\\"nba\\\"] } }, methods: { addName() { this.names.push(\\\"why\\\"); console.log(this.names); } } } \"]},\"147\":{\"h\":\"全局事件总线 mitt 库\",\"t\":[\"在 Vue 3 中，全局事件总线是一种用于在不同组件之间进行通信的机制。它允许你在任何组件中触发事件并在其他组件中监听和响应这些事件。\",\"https://cn.vuejs.org/api/application.html#app-config-globalproperties\",\"在 Vue 3 中，可以使用 app.config.globalProperties 来创建一个全局事件总线。通过将事件总线实例添加到全局属性中，你可以在任何组件中访问它，从而实现跨组件的事件通信。\",\"以下是一个示例：\",\"// 在 main.js 中创建全局事件总线 import { createApp } from 'vue'; const app = createApp(App); app.config.globalProperties.$bus = createEventBus(); app.mount('#app'); \",\"创建一个名为 createEventBus 的函数来创建事件总线实例：\",\"function createEventBus() { const listeners = {}; function on(event, callback) { if (!listeners[event]) { listeners[event] = []; } listeners[event].push(callback); } function emit(event, ...args) { if (listeners[event]) { listeners[event].forEach(callback => { callback(...args); }); } } return { on, emit }; } \",\"现在，你可以在任何组件中使用 $bus来触发事件和监听事件：\",\"<template> <div> <button @click=\\\"sendMessage\\\">发送消息</button> </div> </template> <script> export default { methods: { sendMessage() { this.$bus.emit('message', 'Hello from component A'); } } }; </script> \",\"<template> <div> <button @click=\\\"sendMessage\\\">发送消息</button> </div> </template> <script> export default { methods: { sendMessage() { this.$bus.emit('message', 'Hello from component A'); } } }; </script> \",\"在上述示例中，当点击按钮时，组件 A 使用 $bus.emit 发送了一个名为 'message' 的事件，并传递了消息 'Hello from component A'。组件 B 使用 ​$bus.on 监听了 'message' 事件，并将接收到的消息显示在页面上。\",\"通过全局事件总线，你可以在不同组件之间进行简单而方便的通信，而无需显式地通过 props 或其他方式传递数据。\"]},\"148\":{\"h\":\"认识组件化开发\"},\"149\":{\"h\":\"认识组件化开发\",\"t\":[\"人面对复杂问题的处理方式： \",\"任何一个人处理信息的逻辑能力都是有限的\",\"所以，当面对一个非常复杂的问题时，我们不太可能一次性搞定一大堆的内容。\",\"但是，我们人有一种天生的能力，就是将问题进行拆解。\",\"如果将一个复杂的问题，拆分成很多个可以处理的小问题，再将其放在整体当中，你会发现大的问题也会迎刃而解。\",\"组件化也是类似的思想： \",\"如果我们将一个页面中所有的处理逻辑 全部放在一起，处理起来就会变得非常复杂，而且不利于后续的管理以及扩展；\",\"但如果，我们讲一个页面拆分成一个个 小的功能块，每个功能块完成属于自己 这部分独立的功能，那么之后整个页面 的管理和维护就变得非常容易了；\",\"如果我们将一个个功能块拆分后，就可 以像搭建积木一下来搭建我们的项目；\",\"现在可以说整个的大前端开发都是组件化的天下，无论从三大框架（Vue、React、Angular），还是跨平台方案 的Flutter，甚至是移动端都在转向组件化开发，包括小程序的开发也是采用组件化开发的思想\",\"所以，学习组件化最重要的是它的思想，每个框架或者平台可能实现方法不同，但是思想都是一样的。\",\"我们需要通过组件化的思想来思考整个应用程序： \",\"我们将一个完整的页面分成很多个组件；\",\"每个组件都用于实现页面的一个功能块；\",\"而每一个组件又可以进行细分；\",\"而组件本身又可以在多个地方进行复用；\"]},\"150\":{\"h\":\"Vue的组件化\",\"t\":[\"vue 项目起始文件 createApp 函数传入了一个对象App，这个对象其实本质上就是一个组件，也是我们应用程序的根 组件；\",\"组件化提供了一种抽象，让我们可以开发出一个个独立可复用的小组件来构造我们的应用；\",\"任何的应用都会被抽象成一颗组件树；\",\"image-20231031204213497\"]},\"151\":{\"h\":\"组件名称\",\"t\":[\"在通过 app.componen t注册一个组件的时候，第一个参数是组件的名称，定义组件名的方式有两种：\",\"方式一：使用 kebab-case（短横线分割符） \",\"当使用 kebab-case (短横线分隔命名) 定义一个组件时，你也必须在引用这个自定义元素时使用 kebab-case， 例如 <my-component-name>;\",\"方式二：使用 PascalCase（驼峰标识符） \",\"当使用 PascalCase (首字母大写命名) 定义一个组件时，你在引用这个自定义元素时两种命名法都可以使用。也 就是说 <my-component-name>和 MyComponentName 都是可接受的；\",\"在单文件组件和内联字符串模板中，我们都推荐这样做。但是，PascalCase 的标签名在 DOM 模板中是不可用的，详情参见 DOM 内模板解析注意事项。\",\"为了方便，Vue 支持将模板中使用 kebab-case 的标签解析为使用 PascalCase 注册的组件。这意味着一个以 MyComponent 为名注册的组件，在模板中可以通过 <MyComponent> 或 <my-component> 引用。这让我们能够使用同样的 JavaScript 组件注册代码来配合不同来源的模板。\"]},\"152\":{\"h\":\"注册组件的方式\",\"t\":[\"https://cn.vuejs.org/guide/components/registration.html#component-registration\",\"如果我们现在有一部分内容（模板、逻辑等），我们希望将这部分内容抽取到一个独立的组件中去维护，这个时候 如何注册一个组件呢？\",\"我们先从简单的开始谈起，比如下面的模板希望抽离到一个单独的组件：\",\"<h2>{{title}}</h2> <h2>{{message}}</h2> \",\"注册组件分成两种： \",\"全局组件：在任何其他的组件中都可以使用的组件；\",\"局部组件：只有在注册的组件中才能使用的组件；\"]},\"153\":{\"h\":\"注册全局组件\",\"t\":[\"全局组件需要使用我们全局创建的app来注册组件；\",\"通过component方法传入组件名称、组件对象即可注册一个全局组件了；\",\"之后，我们可以在App组件的template中直接使用这个全局组件：\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <component-a></component-a> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', } // 使用 app.component() 注册一个全局组件, app.component() 是 Vue.createApp() 的一个方法 const app = Vue.createApp(App); // app.component() 的第一个参数是组件的名称, 第二个参数是组件的配置对象 app.component('component-a', { template: '<h2>{{ title }}</h2>', data() { return { title: '我是标题', desc: '我是内容, 哈哈哈哈哈' } }, methods: { btnClick() { console.log('按钮的点击'); } } }); app.mount('#app'); </script> </body> \",\"也可以\",\"<template id=\\\"component-a\\\"> <h2>{{ title }}</h2> <p>{{ desc }}</p> </template> app.component('component-a', { template: '#component-a', ... } \"]},\"154\":{\"h\":\"注册局部组件\",\"t\":[\"全局注册虽然很方便，但有以下几个问题：\",\"全局注册，但并没有被使用的组件无法在生产打包时被自动移除 (也叫“tree-shaking”)。如果你全局注册了一个组件，即使它并没有被实际使用，它仍然会出现在打包后的 JS 文件中。\",\"全局注册在大型项目中使项目的依赖关系变得不那么明确。在父组件中使用子组件时，不太容易定位子组件的实现。和使用过多的全局变量一样，这可能会影响应用长期的可维护性。\",\"相比之下，局部注册的组件需要在使用它的父组件中显式导入，并且只能在该父组件中使用。它的优点是使组件之间的依赖关系更加明确，并且对 tree-shaking 更加友好。\",\"局部注册需要使用 components 选项：\",\"<script> import ComponentA from './ComponentA.vue' export default { components: { ComponentA } } </script> <template> <ComponentA /> </template> \",\"对于每个 components 对象里的属性，它们的 key 名就是注册的组件名，而值就是相应组件的实现。上面的例子中使用的是 ES2015 的缩写语法，等价于：\",\"export default { components: { ComponentA: ComponentA } // ... } \",\"请注意：局部注册的组件在后代组件中并不可用。在这个例子中，ComponentA 注册后仅在当前组件可用，而在任何的子组件或更深层的子组件中都不可用。\",\"全局组件往往是在应用程序一开始就会全局组件完成，那么就意味着如果某些组件我们并没有用到，也会一起被注 册： \",\"比如我们注册了三个全局组件：ComponentA、ComponentB、ComponentC；\",\"在开发中我们只使用了ComponentA、ComponentB，如果ComponentC没有用到但是我们依然在全局进行 了注册，那么就意味着类似于webpack这种打包工具在打包我们的项目时，我们依然会对其进行打包；\",\"这样最终打包出的JavaScript包就会有关于ComponentC的内容，用户在下载对应的JavaScript时也会增加包 的大小；\",\"所以在开发中我们通常使用组件的时候采用的都是局部注册： \",\"局部注册是在我们需要使用到的组件中，通过components属性选项来进行注册；\",\"比如之前的App组件中，我们有data、computed、methods等选项了，事实上还可以有一个components选项；\",\"该components选项对应的是一个对象，对象中的键值对是 组件的名称: 组件对象；\"]},\"155\":{\"h\":\"Vue的开发模式\",\"t\":[\"目前我们使用vue的过程都是在html文件中，通过template编写自己的模板、脚本逻辑、样式等。\",\"但是随着项目越来越复杂，我们会采用组件化的方式来进行开发： \",\"这就意味着每个组件都会有自己的模板、脚本逻辑、样式等；\",\"当然我们依然可以把它们抽离到单独的js、css文件中，但是它们还是会分离开来；\",\"也包括我们的script是在一个全局的作用域下，很容易出现命名冲突的问题；\",\"并且我们的代码为了适配一些浏览器，必须使用ES5的语法；\",\"在我们编写代码完成之后，依然需要通过工具对代码进行构建、代码；\",\"所以在真实开发中，我们可以通过一个后缀名为 .vue 的single-file components (单文件组件) 来解决，并且可以使用 webpack 或者 vite 或者 rollup 等构建工具来对其进行处理。\",\"比如: 我们可以单独抽离组件 componentA\",\"<template> <div> <h2>{{ title }}</h2> <p>{{ desc }}</p> <button @click=\\\"btnClick\\\">按钮点击</button> </div> </template> <script> export default { data() { return { title: \\\"我是标题\\\", desc: \\\"我是内容, 哈哈哈哈哈\\\", }; }, methods: { btnClick() { console.log(\\\"按钮的点击\\\"); }, }, }; </script> <style scoped></style> \",\"在这个组件中我们可以获得非常多的特性：\",\"代码的高亮；\",\"ES6、CommonJS的模块化能力；\",\"组件作用域的CSS；\",\"可以使用预处理器来构建更加丰富的组件，比如TypeScript、Babel、Less、Sass等；\"]},\"156\":{\"h\":\"如何支持SFC\",\"t\":[\"如果我们想要使用这一 componentA.vue 文件，比较常见的是两种方式： \",\"方式一：使用Vue CLI来创建项目，项目会默认帮助我们配置好所有的配置选项，可以在其中直接使用.vue文件；\",\"方式二：自己使用webpack或rollup或 vite 这类打包工具，对其进行打包处理；\"]},\"157\":{\"h\":\"Vue3 基本指令\"},\"158\":{\"h\":\"VSCode 代码片段\",\"t\":[\"我们在前面练习Vue的过程中，有些代码片段是需要经常写的，我们再VSCode中我们可以生成一个代码片段，方便我们快速生成。\",\"VSCode中的代码片段有固定的格式，所以我们一般会借助于一个在线工具来完成。\",\"具体的步骤如下： \",\"第一步，复制自己需要生成代码片段的代码；\",\"第二步，https://snippet-generator.app/在该网站中生成代码片段；\",\"第三步，在VSCode中配置代码片段；\",\"直接 Tab trigger 即可自动填充\",\"image-20231016233051010\"]},\"159\":{\"h\":\"模板语法\",\"t\":[\"React的开发模式[了解] \",\"React使用的jsx,所以对应的代码都是编写的类似于js的一种语法\",\"之后通过Babe将js编译成 React. create Element函数调用\",\"function () { return <div></div> } \",\"vue也支持 jsx 的开发模式: \",\"但是大多数情况下,使用基于HTML的模板语法\",\"在模板中,允许开发者以声明式的方式将 DOM 和底层组件实例的数据绑定在-起;口在底层的实现中,vue将模板编译成虚拟DOM渲染函数\",\"<template> <div @click v-bind v-once> {{}} </div> </template> \"]},\"160\":{\"h\":\"Mustache 语法 双大括号语法\",\"t\":[\"如果我们希望把数据显示到模板（template）中，使用最多的语法是 “Mustache”语法 (双大括号) 的文本插值。 \",\"并且我们前端提到过，data返回的对象是有添加到Vue的响应式系统中；\",\"当data中的数据发生改变时，对应的内容也会发生更新。\",\"当然，Mustache中不仅仅可以是data中的属性，也可以是一个JavaScript的表达式。\",\"mustache的使用 1. 基本使用 2. 表达式 3. 函数 4. 三元运算符\",\"<template id=\\\"my-app\\\"> <!-- 1.mustache的基本使用 --> <h2>{{message}} - {{message}}</h2> <!-- 2.是一个表达式 --> <h2>{{counter * 10}}</h2> <h2>{{ message.split(\\\" \\\").reverse().join(\\\" \\\") }}</h2> <!-- 3.也可以调用函数 --> <!-- 可以使用computed(计算属性) --> <h2>{{getReverseMessage()}}</h2> <!-- 4.三元运算符 --> <h2>{{ isShow ? \\\"哈哈哈\\\": \\\"\\\" }}</h2> <button @click=\\\"toggle\\\">切换</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\", counter: 100, isShow: true } }, methods: { getReverseMessage() { return this.message.split(\\\" \\\").reverse().join(\\\" \\\"); }, toggle() { this.isShow = !this.isShow; } } } Vue.createApp(App).mount('#app'); </script> \",\"以下为错误写法\",\"<!-- 错误用法 --> var name = \\\"abc\\\" ; <h2>{{var name = \\\"abc\\\"}}</h2> <h2>{{ if(isShow) { return \\\"哈哈哈\\\" } }}</h2> \"]},\"161\":{\"h\":\"不常用指令\"},\"162\":{\"h\":\"v-once指令\",\"t\":[\"v-once用于指定元素或者组件只渲染一次\",\"当数据发生变化时,元素或者组件以及其所有的子元素将视为静态内容并且跳过;\",\"该指令可以用于性能优化;\",\"<h2 v-once>{{counter}}</h2> <button @click=\\\"increment\\\">+1</button> \",\"如果是子节点的化，也只能渲染一次\",\"<div v-once> <h2>{{counter}}</h2> <h2>{{message}}</h2> </div> <button @click=\\\"increment\\\">+1</button> \",\"完整代码\",\"<div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <h2>{{counter}}</h2> <div v-once> <h2>{{counter}}</h2> <h2>{{message}}</h2> </div> <button @click=\\\"increment\\\">+1</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { counter: 100, message: \\\"abc\\\" } }, methods: { increment() { this.counter++; } } } Vue.createApp(App).mount('#app'); </script> \"]},\"163\":{\"h\":\"v-html\",\"t\":[\"默认情况下，如果我们展示的内容本身是 html 的，那么vue并不会对其进行特殊的解析。 \",\"如果我们希望这个内容被Vue可以解析出来，那么可以使用 v-html 来展示\",\"<template id=\\\"my-app\\\"> <div>{{msg}}</div> <div v-html=\\\"msg\\\"></div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { msg: '<span style=\\\"color:red; background: blue;\\\">哈哈哈</span>' } } } Vue.createApp(App).mount('#app'); </script> \",\"image-20231018083558572\"]},\"164\":{\"h\":\"v-text\",\"t\":[\"用于更新元素的 textContent\",\" <h2 v-text=\\\"message\\\"></h2> <!-- 等价于 --> <h2>{{message}}</h2> \"]},\"165\":{\"h\":\"v-pre\",\"t\":[\"v-pre用于跳过元素和它的子元素的编译过程，显示原始的Mustache标签： \",\"跳过不需要编译的节点，加快编译的速度\",\" <template id=\\\"my-app\\\"> <h2 v-pre>{{message}}</h2> </template> <!-- {{message}} --> \"]},\"166\":{\"h\":\"v-cloak\",\"t\":[\"用于隐藏尚未完成编译的 DOM 模板。 \",\"无需传入\",\"详细信息\",\"该指令只在没有构建步骤的环境下需要使用。\",\"当使用直接在 DOM 中书写的模板时，可能会出现一种叫做“未编译模板闪现”的情况：用户可能先看到的是还没编译完成的双大括号标签，直到挂载的组件将它们替换为实际渲染的内容。\",\"v-cloak 会保留在所绑定的元素上，直到相关组件实例被挂载后才移除。配合像 [v-cloak] { display: none } 这样的 CSS 规则，它可以在组件编译完毕前隐藏原始模板。\",\"[v-cloak] { display: none; } \",\"<div v-cloak> {{ message }} </div> \",\"直到编译完成前，<div> 将不可见。\"]},\"167\":{\"h\":\"v-bind\",\"t\":[\"动态的绑定一个或多个 attribute，也可以是组件的 prop。\",\"缩写：: 或者 . (当使用 .prop 修饰符)\",\"期望：any (带参数) | Object (不带参数)\",\"参数：attrOrProp (可选的)\",\"修饰符\",\".camel - 将短横线命名的 attribute 转变为驼峰式命名。\",\".prop - 强制绑定为 DOM property。3.2+\",\".attr - 强制绑定为 DOM attribute。3.2+\",\"用途\",\"当用于绑定 class 或 style attribute，v-bind 支持额外的值类型如数组或对象。详见下方的指南链接。\",\"在处理绑定时，Vue 默认会利用 in 操作符来检查该元素上是否定义了和绑定的 key 同名的 DOM property。如果存在同名的 property，则 Vue 会将它作为 DOM property 赋值，而不是作为 attribute 设置。这个行为在大多数情况都符合期望的绑定值类型，但是你也可以显式用 .prop 和 .attr 修饰符来强制绑定方式。有时这是必要的，特别是在和自定义元素打交道时。\",\"当用于组件 props 绑定时，所绑定的 props 必须在子组件中已被正确声明。\",\"当不带参数使用时，可以用于绑定一个包含了多个 attribute 名称-绑定值对的对象。\",\"用法\",\"动态地绑定一个或多个 attribute，或一个组件 prop 到表达式。\",\"小知识: vue3 是允许template中有多个根元素\",\"<!-- vue2 template模板中只能有一个根元素 --> <!-- vue3 是允许template中有多个根元素 --> <template id=\\\"my-app\\\"> <!-- 1.v-bind的基本使用 --> <img v-bind:src=\\\"imgUrl\\\" alt=\\\"\\\"> <a v-bind:href=\\\"link\\\">百度一下</a> <!-- 2.v-bind提供一个语法糖 : --> <img :src=\\\"imgUrl\\\" alt=\\\"\\\"> <img src=\\\"imgUrl\\\" alt=\\\"\\\"> </template> \"]},\"168\":{\"h\":\"基本使用\",\"t\":[\"<template id=\\\"my-app\\\"> <!-- 1.v-bind的基本使用 --> <img v-bind:src=\\\"imgUrl\\\" alt=\\\"\\\"> <a v-bind:href=\\\"link\\\">百度一下</a> <!-- 2.v-bind提供一个语法糖 : --> <img :src=\\\"imgUrl\\\" alt=\\\"\\\"> <!-- 以下报错 --> <img src=\\\"imgUrl\\\" alt=\\\"\\\"> </template> <script> const App = { template: '#my-app', data() { return { imgUrl: \\\"https://avatars.githubusercontent.com/u/10335230?s=60&v=4\\\", link: \\\"https://www.baidu.com\\\" } } } Vue.createApp(App).mount('#app'); </script> \"]},\"169\":{\"h\":\"绑定 class\",\"t\":[\"在开发中,有时候我们的元素 class也是动态的,比如 \",\"当数据为某个状态时,字体显示红色。\",\"当数据另一个状态时,字体显示黑色\",\"绑定class有两种方式： \",\"对象语法\",\"数组语法\"]},\"170\":{\"h\":\"对象语法\",\"t\":[\"对象语法：我们可以传给 :class (v-bind:class 的简写) 一个对象，以动态地切换 class\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <div :class=\\\"className\\\">哈哈哈哈</div> <!-- 对象语法: {'active': boolean} --> <div :class=\\\"{'active': isActive}\\\">呵呵呵呵</div> <button @click=\\\"toggle\\\">切换</button> <!-- 也可以有多个键值对 --> <div :class=\\\"{active: isActive, title: true}\\\">呵呵呵呵</div> <!-- 默认的class和动态的class结合 --> <div class=\\\"abc cba\\\" :class=\\\"{active: isActive, title: true}\\\"> 呵呵呵呵 </div> <!-- 将对象放到一个单独的属性中 --> <div class=\\\"abc cba\\\" :class=\\\"classObj\\\">呵呵呵呵</div> <!-- 将返回的对象放到一个methods(computed)方法中 --> <div class=\\\"abc cba\\\" :class=\\\"getClassObj()\\\">呵呵呵呵</div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: \\\"#my-app\\\", data() { return { className: \\\"why\\\", isActive: true, title: \\\"abc\\\", classObj: { active: true, title: true }, }; }, methods: { toggle() { this.isActive = !this.isActive; this.classObj.active = !this.classObj.active; }, getClassObj() { return this.classObj; } }, }; Vue.createApp(App).mount(\\\"#app\\\"); </script> <style> .active { color: red; } </style> </body> \"]},\"171\":{\"h\":\"数组语法\",\"t\":[\"绑定class – 数组语法 \",\"数组语法：我们可以把一个数组传给 :class，以应用一个 class 列表\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <div :class=\\\"['abc', title]\\\">哈哈哈哈</div> <!-- class=\\\"abc cba active\\\" --> <div :class=\\\"['abc', title, isActive ? 'active': '']\\\">哈哈哈哈</div> <!-- 可以嵌套对象语法 --> <div :class=\\\"['abc', title, {active: isActive}]\\\">哈哈哈哈</div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\", title: \\\"cba\\\", isActive: true } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"172\":{\"h\":\"绑定 style\",\"t\":[\"我们可以利用 v-bind:style 来绑定一些CSS内联样式 \",\"这次因为某些样式我们需要根据数据动态来决定\",\"比如某段文字的颜色，大小等等\",\"CSS property 名可以用驼峰式 (camelCase) 或短横线分隔 (kebab-case，记得用引号括起来) 来命名\",\"绑定class有两种方式 \",\"对象语法\",\"数组语法\",\"CSS property 名短横线分隔 (kebab-case，记得用引号括起来)\"]},\"173\":{\"h\":\"对象语法\",\"t\":[\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- :style=\\\"{cssPropertyName: cssPropertyValue}\\\" --> <div :style=\\\"{color: finalColor, 'font-size': '30px'}\\\">哈哈哈哈</div> <div :style=\\\"{color: finalColor, fontSize: '30px'}\\\">哈哈哈哈</div> <div :style=\\\"{color: finalColor, fontSize: finalFontSize + 'px'}\\\">哈哈哈哈</div> <!-- 绑定一个data中的属性值, 并且是一个对象 --> <div :style=\\\"finalStyleObj\\\">呵呵呵呵</div> <!-- 调用一个方法 --> <div :style=\\\"getFinalStyleObj()\\\">呵呵呵呵</div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\", finalColor: 'red', finalFontSize: 50, finalStyleObj: { 'font-size': '50px', fontWeight: 700, backgroundColor: 'red' } } }, methods: { getFinalStyleObj() { return { 'font-size': '50px', fontWeight: 700, backgroundColor: 'red' } } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"174\":{\"h\":\"数组语法\",\"t\":[\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <div :style=\\\"[style1Obj, style2Obj]\\\">哈哈哈</div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\", style1Obj: { color: 'red', fontSize: '30px' }, style2Obj: { textDecoration: \\\"underline\\\" } } } } Vue.createApp(App).mount('#app'); </script> </body \"]},\"175\":{\"h\":\"动态绑定属性\",\"t\":[\"在某些情况下，我们属性的名称可能也不是固定的 \",\"前端我们无论绑定src、href、class、style，属性名称都是固定的\",\"如果属性名称不是固定的，我们可以使用 :[属性名]=“值” 的格式来定义\",\"这种绑定的方式，我们称之为 动态绑定属性；如下:\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- <div cba=\\\"kobe\\\">哈哈哈</div> --> <div :[name]=\\\"value\\\">哈哈哈</div> <img :src=\\\"\\\" alt=\\\"\\\"> <a :href=\\\"\\\"></a> <div :class></div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { name: \\\"cba\\\", value: \\\"kobe\\\" } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"176\":{\"h\":\"属性直接绑定一个对象\",\"t\":[\"如果我们希望将一个对象的所有属性，绑定到元素上的所有属性，应该怎么做呢？ \",\"非常简单，我们可以直接使用 v-bind 绑定一个 对象\",\"案例：info对象会被拆解成div的各个属性\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- <div name=\\\"why\\\" age=\\\"18\\\" height=\\\"1.88\\\">哈哈哈哈</div> --> <div v-bind=\\\"info\\\">哈哈哈哈</div> <div :=\\\"info\\\">哈哈哈哈</div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { info: { name: \\\"why\\\", age: 18, height: 1.88 } } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"177\":{\"h\":\"v-on\",\"t\":[\"v-on绑定事件\",\"前面我们绑定了元素的内容和属性，在前端开发中另外一个非常重要的特性就是交互。\",\"在前端开发中，我们需要经常和用户进行各种各样的交互 \",\"这个时候，我们就必须监听用户发生的事件，比如点击、拖拽、键盘事件等等\",\"在Vue中如何监听事件呢？使用v-on指令。\",\"v-on的用法\",\"缩写：@\",\"预期：Function | Inline Statement | Object\",\"参数：event p 修饰符： \",\".stop - 调用 event.stopPropagation()。\",\".prevent - 调用 event.preventDefault()。\",\".capture - 添加事件侦听器时使用 capture 模式。\",\".self - 只当事件是从侦听器绑定的元素本身触发时才触发回调。\",\".{keyAlias} - 仅当事件是从特定键触发时才触发回调。\",\".once - 只触发一次回调。\",\".left - 只当点击鼠标左键时触发。\",\".right - 只当点击鼠标右键时触发。\",\".middle - 只当点击鼠标中键时触发。\",\".passive - { passive: true } 模式添加侦听器\",\"用法：绑定事件监听\",\"event 事件可以参考 https://developer.mozilla.org/en-US/docs/Web/Events\"]},\"178\":{\"h\":\"基本使用\",\"t\":[\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- 完整写法: v-on:监听的事件=\\\"methods中方法\\\" --> <button v-on:click=\\\"btn1Click\\\">按钮1</button> <div class=\\\"area\\\" v-on:mousemove=\\\"mouseMove\\\">div</div> <!-- 语法糖 --> <button @click=\\\"btn1Click\\\">按钮1</button> <!-- 绑定一个表达式: inline statement --> <button @click=\\\"counter++\\\">{{counter}}</button> <!-- 绑定一个对象 --> <div class=\\\"area\\\" v-on=\\\"{click: btn1Click, mousemove: mouseMove}\\\"></div> <div class=\\\"area\\\" @=\\\"{click: btn1Click, mousemove: mouseMove}\\\"></div> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\", counter: 100 } }, methods: { btn1Click() { console.log(\\\"按钮1发生了点击\\\"); }, mouseMove() { console.log(\\\"鼠标移动\\\"); } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"179\":{\"h\":\"参数传递\",\"t\":[\"当通过methods中定义方法，以供 @click调用时，需要注意参数问题：\",\"情况一：如果该方法不需要额外参数，那么方法后的()可以不添加。 \",\"但是注意：如果方法本身中有一个参数，那么会默认将原生事件event参数传递进去\",\"情况二：如果需要同时传入某个参数，同时需要 event 时，可以通过 $event 传入事件。\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- 默认传入event对象, 可以在方法中获取 --> <button @click=\\\"btn1Click\\\">按钮1</button> <!-- $event可以获取到事件发生时的事件对象 --> <button @click=\\\"btn2Click($event, 'coderwhy', 18)\\\">按钮2</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\" } }, methods: { btn1Click(event) { console.log(event); }, btn2Click(event, name, age) { console.log(name, age, event); } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"image-20231019004604619\"]},\"180\":{\"h\":\"v-on 的修饰符\",\"t\":[\"v-on支持修饰符，修饰符相当于对事件进行了一些特殊的处理： \",\".stop - 调用 event.stopPropagation()。\",\".prevent - 调用 event.preventDefault()。\",\".capture - 添加事件侦听器时使用 capture 模式。\",\".self - 只当事件是从侦听器绑定的元素本身触发时才触发回调。\",\".{keyAlias} - 仅当事件是从特定键触发时才触发回调。\",\".once - 只触发一次回调。\",\".left - 只当点击鼠标左键时触发。\",\".right - 只当点击鼠标右键时触发。\",\".middle - 只当点击鼠标中键时触发。\",\".passive - { passive: true } 模式添加侦听器\",\"stopPropagation 是一个事件修饰符，用于阻止事件冒泡。在 Vue.js 中，当一个元素上的事件被触发时，它会先执行该元素上的事件处理函数，然后再冒泡到该元素的父元素，继续执行父元素的事件处理函数。使用 stopPropagation 可以阻止事件继续冒泡到父元素。在给元素绑定事件时，可以使用 @click.stop 来阻止 click 事件冒泡到父元素。\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <div @click=\\\"divClick\\\"> <button @click=\\\"btnClick\\\">按钮</button> <button @click.stop=\\\"btnClick\\\">按钮</button> </div> <input type=\\\"text\\\" @keyup.enter=\\\"enterKeyup\\\"> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { message: \\\"Hello World\\\" } }, methods: { divClick() { console.log(\\\"divClick\\\"); }, btnClick() { console.log('btnClick'); }, enterKeyup(event) { console.log(\\\"keyup\\\", event.target.value); } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"image-20231019005251770\"]},\"181\":{\"h\":\"条件渲染\",\"t\":[\"在某些情况下，我们需要根据当前的条件决定某些元素或组件是否渲染，这个时候我们就需要进行条件判断了。 \",\"Vue提供了下面的指令来进行条件判断： \",\"v-if\",\"v-else\",\"v-else-if\",\"v-show\"]},\"182\":{\"h\":\"基本使用\",\"t\":[\"v-if、v-else、v-else-if用于根据条件来渲染某一块的内容： \",\"这些内容只有在条件为true时，才会被渲染出来；\",\"这三个指令与JavaScript的条件语句if、else、else if类似；\",\" <template id=\\\"my-app\\\"> <input type=\\\"text\\\" v-model=\\\"score\\\"> <h2 v-if=\\\"score > 90\\\">优秀</h2> <h2 v-else-if=\\\"score > 60\\\">良好</h2> <h2 v-else>不及格</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { score: 95 } } } Vue.createApp(App).mount('#app'); </script> \"]},\"183\":{\"h\":\"template 和 v-if 结合使用\",\"t\":[\"v-if的渲染原理： \",\"v-if是惰性的；\",\"当条件为false时，其判断的内容完全不会被渲染或者会被销毁掉；\",\"当条件为true时，才会真正渲染条件块中的内容;\",\"template元素 \",\"因为v-if是一个指令，所以必须将其添加到一个元素上： \",\"但是如果我们希望切换的是多个元素呢？\",\"此时我们渲染div，但是我们并不希望div这种元素被渲染；\",\"这个时候，我们可以选择使用template；\",\"template元素可以当做不可见的包裹元素，并且在v-if上使用，但是最终template不会被渲染出来： \",\"有点类似于小程序中的block\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <template v-if=\\\"isShowHa\\\"> <h2>哈哈哈哈</h2> <h2>哈哈哈哈</h2> <h2>哈哈哈哈</h2> </template> <template v-else> <h2>呵呵呵呵</h2> <h2>呵呵呵呵</h2> <h2>呵呵呵呵</h2> </template> <button @click=\\\"isShowHa = !isShowHa\\\">切换</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { isShowHa: true } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"184\":{\"h\":\"v-show\",\"t\":[\"v-show和v-if的用法看起来是一致的，也是根据一个条件决定是否显示元素或者组件\",\" <template id=\\\"my-app\\\"> <h2 v-show=\\\"isShow\\\">哈哈哈哈</h2> </template> \"]},\"185\":{\"h\":\"v-show和v-if的区别\",\"t\":[\"首先，在用法上的区别： \",\"v-show是不支持template；\",\"v-show不可以和v-else一起使用；\",\"其次，本质的区别： \",\"v-show元素无论是否需要显示到浏览器上，它的DOM实际都是有渲染的，只是通过CSS的display属性来进行 切换；\",\"v-if当条件为false时，其对应的元素压根不会被渲染到DOM中；\",\"开发中如何进行选择呢？ \",\"如果我们的元素需要在显示和隐藏之间频繁的切换，那么使用v-show；\",\"如果不会频繁的发生切换，那么使用v-if；\",\"<template id=\\\"my-app\\\"> <h2 v-if=\\\"isShow\\\">哈哈哈哈</h2> <h2 v-show=\\\"isShow\\\">呵呵呵呵</h2> </template> \",\"image-20231019222841008\"]},\"186\":{\"h\":\"列表渲染\",\"t\":[\"在真实开发中，我们往往会从服务器拿到一组数据，并且需要对其进行渲染。 \",\"这个时候我们可以使用v-for来完成；\",\"v-for类似于JavaScript的for循环，可以用于遍历一组数据；\"]},\"187\":{\"h\":\"基本使用\",\"t\":[\"n v-for的基本格式是 \\\"item in 数组\\\"：\",\"数组通常是来自data或者prop，也可以是其他方式；\",\"item是我们给每项元素起的一个别名，这个别名可以自定来定义；\",\"我们知道，在遍历一个数组的时候会经常需要拿到数组的索引：\",\"如果我们需要索引，可以使用格式： \\\"(item, index) in 数组\\\"；\",\"注意上面的顺序：数组元素项item是在前面的，索引项index是在后面的；\",\"v-for支持的类型\",\"v-for也支持遍历对象，并且支持有一二三个参数： \",\"一个参数： \\\"value in object\\\";\",\"二个参数： \\\"(value, key) in object\\\";\",\"三个参数： \\\"(value, key, index) in object\\\";\",\"v-for同时也支持数字的遍历： \",\"每一个item都是一个数字；\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <h2>电影列表</h2> <ul> <!-- 遍历数组 --> <li v-for=\\\"(movie, index) in movies\\\">{{index+1}}.{{movie}}</li> </ul> <h2>个人信息</h2> <ul> <!-- 遍历对象 --> <li v-for=\\\"(value, key, index) in info\\\">{{value}}-{{key}}-{{index}}</li> </ul> <h2>遍历数字</h2> <ul> <li v-for=\\\"(num, index) in 10\\\">{{num}}-{{index}}</li> </ul> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { movies: [ \\\"星际穿越\\\", \\\"盗梦空间\\\", \\\"大话西游\\\", \\\"教父\\\", \\\"少年派\\\" ], info: { name: \\\"why\\\", age: 18, height: 1.88 } } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"188\":{\"h\":\"template元素使用\",\"t\":[\"类似于v-if，你可以使用 template 元素来循环渲染一段包含多个元素的内容： \",\"我们使用template来对多个元素进行包裹，而不是使用div来完成；\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <ul> <template v-for=\\\"(value, key) in info\\\"> <li>{{key}}</li> <li>{{value}}</li> <li class=\\\"divider\\\"></li> </template> </ul> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { info: { name: \\\"why\\\", age: 18, height: 1.88 } } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"189\":{\"h\":\"数组更新检测\",\"t\":[\"Vue 将被侦听的数组的变更方法进行了包裹，所以它们也将会触发视图更新。这些被包裹过的方法包括： \",\"push()\",\"pop()\",\"shift()\",\"unshift()\",\"splice()\",\"sort()\",\"reverse()\",\"替换数组的方法 \",\"上面的方法会直接修改原来的数组，但是某些方法不会替换原来的数组，而是会生成新的数组，比如 filter()、 concat() 和 slice()。\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <h2>电影列表</h2> <ul> <li v-for=\\\"(movie, index) in movies\\\">{{index+1}}.{{movie}}</li> </ul> <input type=\\\"text\\\" v-model=\\\"newMovie\\\"> <button @click=\\\"addMovie\\\">添加电影</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { newMovie: \\\"\\\", movies: [ \\\"星际穿越\\\", \\\"盗梦空间\\\", \\\"大话西游\\\", \\\"教父\\\", \\\"少年派\\\" ] } }, methods: { addMovie() { this.movies.push(this.newMovie); this.newMovie = \\\"\\\"; // filter 是过滤的意思, 下文中的代码的意思是: 过滤掉长度小于等于2的电影 // this.movies = this.movies.filter(item => item.length > 2); } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"190\":{\"h\":\"v-for 中的 key 是什么作用？\",\"t\":[\"https://cn.vuejs.org/api/built-in-special-attributes.html#key\",\"在使用v-for进行列表渲染时，我们通常会给元素或者组件绑定一个key属性。\",\"这个key属性有什么作用呢？我们先来看一下官方的解释：\",\"key属性主要用在Vue的虚拟DOM算法，在新旧nodes对比时辨识VNodes；\",\"如果不使用key，Vue会使用一种最大限度减少动态元素并且尽可能的尝试就地修改/复用相同类型元素的算法；\",\"而使用key时，它会基于key的变化重新排列元素顺序，并且会移除/销毁key不存在的元素；\",\"官方的解释对于初学者来说并不好理解，比如下面的问题：\",\"什么是新旧nodes，什么是VNode？\",\"没有key的时候，如何尝试修改和复用的？\",\"有key的时候，如何基于key重新排列的？\"]},\"191\":{\"h\":\"认识 VNode\",\"t\":[\"我们先来解释一下VNode的概念： \",\"因为目前我们还没有比较完整的学习组件的概念，所以目前我们先理解HTML元素创建出来的VNode；\",\"VNode的全称是Virtual Node，也就是虚拟节点；\",\"事实上，无论是组件还是元素，它们最终在Vue中表示出来的都是一个个VNode；\",\"VNode的本质是一个JavaScript的对象；可以用于描述某一个标签/ 元素 的样子\",\"好处: 多平台的渲染, 跨平台(主要好处)\",\"image-20231020162812819\"]},\"192\":{\"h\":\"虚拟 DOM\",\"t\":[\"如果我们不只是一个简单的div，而是有一大堆的元素，那么它们应该会形成一个 VNode Tree\",\"虚拟 DOM 与 真实 DOM 不一定一一对应\",\"image-20231020163154944\"]},\"193\":{\"h\":\"插入 F 的案例\",\"t\":[\"我们先来看一个案例：这个案例是当我点击按钮时会在中间插入一个f；\",\"我们可以确定的是，这次更新对于ul和button是不需要进行更新，需要更新的是我们 li 的列表：\",\"在Vue中，对于相同父元素的子元素节点并不会重新渲染整个列 表；\",\"因为对于列表中 a、b、c、d它们都是没有变化的；\",\"在操作真实DOM的时候，我们只需要在中间插入一个 f 的 li 即可；\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <ul> <li v-for=\\\"item in letters\\\" :key=\\\"item\\\">{{item}}</li> </ul> <button @click=\\\"insertF\\\">插入F元素</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { letters: ['a', 'b', 'c', 'd'] } }, methods: { insertF() { this.letters.splice(2, 0, 'f') } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"那么Vue中对于列表的更新究竟是如何操作的呢？ \",\"Vue事实上会对于有key和没有key会调用两个不同的方法；\"]},\"194\":{\"h\":\"Vue源码对于key的判断\",\"t\":[\"有key，那么就使用 patchKeyedChildren方法；\",\"没有key，那么久使用 patchUnkeyedChildren方法；\",\"image-20231020164733530\",\"diff算法: diff 算法是指生成更新补丁的方式,主要应用于虚拟 DOM 树变化后,更新真实 DOM。所以 diff 算法一定存在这样一个过程:触发更新 → 生成补丁 → 应用补丁。\",\"没有key的操作过程\",\"image-20231022182341619\",\"我们会发现上面的diff算法效率并不高： \",\"c和d来说它们事实上并不需要有任何的改动；\",\"但是因为我们的c被f所使用了，所有后续所有的内容都要一次进行改动，并且最后进行新增；\",\"image-20231022182012027\",\"有key的操作过程-diff算法 \",\"第一步的操作是从头开始进行遍历、比较： \",\"a和b是一致的会继续进行比较；\",\"c和f因为key不一致，所以就会break跳出循环\",\"第二步的操作是从尾部开始进行遍历、比较\",\"第三步是如果旧节点遍历完毕，但是依然有新的节点，那么就新增节点：\",\"第四步是如果新的节点遍历完毕，但是依然有旧的节点，那么就移除旧节点：\",\"第五步是最特色的情况，中间还有很多未知的或者乱序的节点：\",\"image-20231022182232738\",\"image-20231022182140133\",\"image-20231022182241976\",\"image-20231022182251535\",\"image-20231022182300781\"]},\"195\":{\"h\":\"有无key的结论\",\"t\":[\"有无key的结论 \",\"所以我们可以发现，Vue在进行diff算法的时候，会尽量利用我们的key来进行优化操作： \",\"在没有key的时候我们的效率是非常低效的；\",\"在进行插入或者重置顺序的时候，保持相同的key可以让diff算法更加的高效；\"]},\"196\":{\"h\":\"Vue 的Options API\"},\"197\":{\"h\":\"Computed\"},\"198\":{\"h\":\"认识计算属性\",\"t\":[\"我们知道，在模板中可以直接通过插值语法显示一些data中的数据。\",\"但是在某些情况，我们可能需要对数据进行一些转化后再显示，或者需要将多个数据结合起来进行显示；\",\"比如我们需要对多个data数据进行运算、三元运算符来决定结果、数据进行某种转化后显示；\",\"在模板中使用表达式，可以非常方便的实现，但是设计它们的初衷是用于简单的运算；\",\"在模板中放入太多的逻辑会让模板过重和难以维护；\",\"并且如果多个地方都使用到，那么会有大量重复的代码；\",\"我们有没有什么方法可以将逻辑抽离出去呢？\",\"可以，其中一种方式就是将逻辑抽取到一个method中，放到methods的options中；\",\"但是，这种做法有一个直观的弊端，就是所有的data使用过程都会变成了一个方法的调用；\",\"另外一种方式就是使用计算属性computed；\",\"什么是计算属性呢？\",\"https://cn.vuejs.org/api/reactivity-core.html#computed\",\"官方并没有给出直接的概念解释；\",\"而是说：对于任何包含响应式数据的复杂逻辑，你都应该使用计算属性；\",\"计算属性将被混入到组件实例中。所有 getter 和 setter 的 this 上下文自动地绑定为组件实例；\"]},\"199\":{\"h\":\"基本使用\",\"t\":[\"计算属性的用法：\",\"选项： computed\",\"类型：{ [key: string]: Function | { get: Function, set: Function } }\",\"我们来看三个案例：\",\"我们有两个变量：firstName 和 lastName，希望它们拼接之后在界面上显示；\",\"我们有一个分数：score \",\"当score大于60的时候，在界面上显示及格；\",\"当score小于60的时候，在界面上显示不及格；\",\"我们有一个变量message，记录一段文字：比如Hello World \",\"某些情况下我们是直接显示这段文字；\",\"某些情况下我们需要对这段文字进行反转；\",\"我们可以有三种实现思路： \",\"思路一：在模板语法中直接使用表达式；\",\"思路二：使用method对逻辑进行抽取；\",\"思路三：使用计算属性computed；\"]},\"200\":{\"h\":\"在模板语法中直接使用表达式\",\"t\":[\"缺点一：模板中存在大量的复杂逻辑，不便于维护（模板中表达式的初衷是用于简单的计算）；\",\"缺点二：当有多次一样的逻辑时，存在重复的代码；\",\"缺点三：多次使用的时候，很多运算也需要多次执行，没有缓存；\",\"<template id=\\\"my-app\\\"> <!-- 1.实现思路一: --> <h2>{{ firstName + lastName }}</h2> <h2>{{ score >= 60 ? \\\"及格\\\": \\\"不及格\\\" }}</h2> <h2>{{ message.split(\\\"\\\").reverse().join(\\\" \\\") }}</h2> </template> \"]},\"201\":{\"h\":\"使用method对逻辑进行抽取\",\"t\":[\"缺点一：我们事实上先显示的是一个结果，但是都变成了一种方法的调用；\",\"缺点二：多次使用方法的时候，没有缓存，也需要多次计算；\",\"<template id=\\\"my-app\\\"> <h2>{{getFullName()}}</h2> <h2>{{getResult()}}</h2> <h2>{{getReverseMessage()}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { firstName: \\\"Kobe\\\", lastName: \\\"Bryant\\\", score: 80, message: \\\"Hello World\\\" } }, methods: { getFullName() { return this.firstName + \\\" \\\" + this.lastName; }, getResult() { return this.score >= 60 ? \\\"及格\\\": \\\"不及格\\\"; }, getReverseMessage() { return this.message.split(\\\" \\\").reverse().join(\\\" \\\"); } } } Vue.createApp(App).mount('#app'); </script> \"]},\"202\":{\"h\":\"computed 实现\",\"t\":[\"注意：计算属性看起来像是一个函数，但是我们在使用的时候不需要加()，这个后面讲setter和getter时会讲到；\",\"我们会发现无论是直观上，还是效果上计算属性都是更好的选择；\",\"并且计算属性是有缓存的；\",\"<template id=\\\"my-app\\\"> <h2>{{fullName}}</h2> <h2>{{result}}</h2> <h2>{{reverseMessage}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { firstName: \\\"Kobe\\\", lastName: \\\"Bryant\\\", score: 80, message: \\\"Hello World\\\" } }, computed: { // 定义了一个计算属性叫fullname fullName() { return this.firstName + \\\" \\\" + this.lastName; }, result() { return this.score >= 60 ? \\\"及格\\\": \\\"不及格\\\"; }, reverseMessage() { return this.message.split(\\\" \\\").reverse().join(\\\" \\\"); } } } Vue.createApp(App).mount('#app'); </script> \"]},\"203\":{\"h\":\"计算属性 vs methods\",\"t\":[\"在上面的实现思路中，我们会发现计算属性和methods的实现看起来是差别是不大的，而且我们多次提到计算属性有缓存。\",\"接下来我们来看一下同一个计算多次使用，计算属性和methods的差异：\",\"<template id=\\\"my-app\\\"> <button @click=\\\"changeFirstName\\\">修改firstName</button> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{fullName}}</h2> <h2>{{getFullName()}}</h2> <h2>{{getFullName()}}</h2> <h2>{{getFullName()}}</h2> <h2>{{getFullName()}}</h2> <h2>{{getFullName()}}</h2> <h2>{{getFullName()}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { firstName: \\\"Kobe\\\", lastName: \\\"Bryant\\\" } }, computed: { // 计算属性是有缓存的, 当我们多次使用计算属性时, 计算属性中的运算只会执行一次. // 计算属性会随着依赖的数据(firstName)的改变, 而进行重新计算. fullName() { console.log(\\\"computed的fullName中的计算\\\"); return this.firstName + \\\" \\\" + this.lastName; } }, methods: { getFullName() { console.log(\\\"methods的getFullName中的计算\\\"); return this.firstName + \\\" \\\" + this.lastName; }, changeFirstName() { this.firstName = \\\"Coder\\\" } } } Vue.createApp(App).mount('#app'); </script> \",\"打印结果如下：\",\"我们会发现methods在多次使用时，会调用多次；\",\"而计算属性虽然使用了多次，但是计算的过程只调用了一次；\",\"这是因为计算属性会基于它们的依赖关系进行缓存；\",\"在数据不发生变化时，计算属性是不需要重新计算的；\",\"但是如果依赖的数据发生变化，在使用时，计算属性依然会重新进行计算；如下:\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <input type=\\\"text\\\" v-model=\\\"score\\\"> <!-- 1.使用methods --> <h2>{{getResult()}}</h2> <h2>{{getResult()}}</h2> <h2>{{getResult()}}</h2> <!-- 2.使用computed --> <h2>{{result}}</h2> <h2>{{result}}</h2> <h2>{{result}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { score: 90 } }, computed: { result() { console.log(\\\"调用了计算属性result的getter\\\"); return this.score >= 60 ? \\\"及格\\\": \\\"不及格\\\"; } }, methods: { getResult() { console.log(\\\"调用了getResult方法\\\"); return this.score >= 60 ? \\\"及格\\\": \\\"不及格\\\"; } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"当 score 变化, console 输出如下:\",\"调用了getResult方法 调用了getResult方法 调用了getResult方法 调用了计算属性result的getter \"]},\"204\":{\"h\":\"计算属性的 setter 和 getter\",\"t\":[\"计算属性在大多数情况下，只需要一个getter方法即可，所以我们会将计算属性直接写成一个函数。\",\"但是，如果我们确实想设置计算属性的值呢？\",\"这个时候我们也可以给计算属性设置一个setter的方法；\",\"<template id=\\\"my-app\\\"> <button @click=\\\"changeFullName\\\">修改fullName</button> <h2>{{fullName}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { firstName: \\\"Kobe\\\", lastName: \\\"Bryant\\\" } }, computed: { // fullName 的 getter方法 fullName() { return this.firstName + \\\" \\\" + this.lastName; }, // fullName的getter和setter方法 fullName: { get: function() { return this.firstName + \\\" \\\" + this.lastName; }, set: function(newValue) { console.log(newValue); const names = newValue.split(\\\" \\\"); this.firstName = names[0]; this.lastName = names[1]; } } }, methods: { changeFullName() { this.fullName = \\\"Coder Why\\\"; } } } Vue.createApp(App).mount('#app'); </script> \",\"以下为内部判断\",\"图片\"]},\"205\":{\"h\":\"侦听器 watch\",\"t\":[\"用于声明在数据更改时调用的侦听回调。watch 选项期望接受一个对象，其中键是需要侦听的响应式组件实例属性 (例如，通过 data 或 computed 声明的属性)——值是相应的回调函数。该回调函数接受被侦听源的新值和旧值。\",\"什么是侦听器？ \",\"开发中我们在data返回的对象中定义了数据，这个数据通过插值语法等方式绑定到template中;\",\"当数据变化时，template会自动进行更新来显示最新的数据;\",\"但是在某些情况下，我们希望在代码逻辑中监听某个数据的变化，这个时候就需要用侦听器watch来完成了;\",\"用法如下： \",\"选项：watch\",\"类型: {[key: string]: string | Function | Object | Array}\"]},\"206\":{\"h\":\"简单案例\",\"t\":[\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> 您的问题: <input type=\\\"text\\\" v-model=\\\"question\\\"> <button @click=\\\"queryAnswer\\\">查找答案</button> <p>您的问题是: {{ question }}</p> <p>答案是: {{ anwser }}</p> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { // 侦听question的变化时, 去进行一些逻辑的处理(JavaScript, 网络请求) question: \\\"Hello World\\\", anwser: \\\"\\\" } }, watch: { // question侦听的data中的属性的名称 // newValue变化后的新值 // oldValue变化前的旧值 question: function(newValue, oldValue) { console.log(\\\"新值: \\\", newValue, \\\"旧值\\\", oldValue); this.queryAnswer(); } }, methods: { queryAnswer() { // console.log(`你的问题${this.question}的答案是哈哈哈哈哈`); this.anwser = `你的问题${this.question}的答案是哈哈哈哈哈`; } } } Vue.createApp(App).mount('#app'); </script> </body> \"]},\"207\":{\"h\":\"配置选项\",\"t\":[\"watch 默认是浅层的：被侦听的属性，仅在被赋新值时，才会触发回调函数——而嵌套属性的变化不会触发。如果想侦听所有嵌套的变更，你需要深层侦听器：\",\"以下为不使用深度监听, 当 info.name 在方法中被赋值改变时, 页面会改变, 但是watch不会侦听到, 理由如上\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <h2>{{info.name}}</h2> <button @click=\\\"changeInfo\\\">改变info</button> <!-- 页面会改变, 但是watch不会侦听到 --> <button @click=\\\"changeInfoName\\\">改变info.name</button> <button @click=\\\"changeInfoNbaName\\\">改变info.nba.name</button> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { info: { name: \\\"why\\\", age: 18, nba: {name: 'kobe'} } } }, watch: { // 默认情况下我们的侦听器只会针对监听的数据本身的改变(内部发生的改变是不能侦听) info(newInfo, oldInfo) { console.log(\\\"newValue:\\\", newInfo, \\\"oldValue:\\\", oldInfo); } }, methods: { changeInfo() { this.info = {name: \\\"kobe\\\"}; }, changeInfoName() { this.info.name = \\\"kobe\\\"; }, changeInfoNbaName() { this.info.nba.name = \\\"james\\\"; } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"将 watch 中更改如下, 不管多深都会侦听到\",\"watch: { // 深度侦听/立即执行(一定会执行一次) info: { handler: function(newInfo, oldInfo) { console.log(\\\"newValue:\\\", newInfo, \\\"oldValue:\\\", oldInfo); }, deep: true, // 深度侦听 // immediate: true // 立即执行 } } \",\"immediate: true 立即执行, 这个时候无论后面数据是否有变化，侦听的函数都会有限执行一次；即当刷新页面时会立刻执行一次, 回调函数的初次执行就发生在 created 钩子之前。Vue 此时已经处理了 data、computed 和 methods 选项，所以这些属性在第一次调用时就是可用的。\",\"newValue: Proxy(Object) {name: 'why', age: 18, nba: {…}} oldValue: undefined \",\"注意: 引用对象 or watch 不能侦听到旧值, 可以利用 计算属性 缓存旧值, 或者自己深拷贝一份作为保存\"]},\"208\":{\"h\":\"其他方式\",\"t\":[\"https://cn.vuejs.org/api/options-state.html#watch\",\"export default { data() { return { a: 1, b: 2, c: { d: 4 }, e: 5, f: 6 } }, watch: { // 侦听根级属性 a(val, oldVal) { console.log(`new: ${val}, old: ${oldVal}`) }, // 字符串方法名称 b: 'someMethod', // 该回调将会在被侦听的对象的属性改变时调动，无论其被嵌套多深 c: { handler(val, oldVal) { console.log('c changed') }, deep: true }, // 侦听单个嵌套属性： 'c.d': function (val, oldVal) { // do something }, // 该回调将会在侦听开始之后立即调用 e: { handler(val, oldVal) { console.log('e changed') }, immediate: true }, // 你可以传入回调数组，它们将会被逐一调用 f: [ 'handle1', function handle2(val, oldVal) { console.log('handle2 triggered') }, { handler: function handle3(val, oldVal) { console.log('handle3 triggered') } /* ... */ } ] }, methods: { someMethod() { console.log('b changed') }, handle1() { console.log('handle 1 triggered') } }, created() { this.a = 3 // => new: 3, old: 1 } } \"]},\"209\":{\"h\":\"$watch 的API：\",\"t\":[\"https://cn.vuejs.org/api/component-instance.html#watch\",\"我们可以在created的生命周期（后续会讲到）中，使用 this.$watchs 来侦听；\",\"第一个参数是要侦听的源；\",\"第二个参数是侦听的回调函数callback；\",\"第三个参数是额外的其他选项，比如deep、immediate；\",\"created() { const unwatch = this.$watch(\\\"info\\\", function(newInfo, oldInfo) { console.log(newInfo, oldInfo); }, { deep: true, immediate: true }) // unwatch() } \"]},\"210\":{\"h\":\"阶段案例\",\"t\":[\"现在我们来做一个相对综合一点的练习：书籍购物车\",\"css\",\"table { border: 1px solid #e9e9e9; border-collapse: collapse; border-spacing: 0; } th, td { padding: 8px 16px; border: 1px solid #e9e9e9; text-align: left; } th { background-color: #f7f7f7; color: #5c6b77; font-weight: 600; } .counter { margin: 0 5px; } \",\"index\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\" /> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <title>Document</title> <link rel=\\\"stylesheet\\\" href=\\\"./style.css\\\" /> </head> <body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <template v-if=\\\"books.length > 0\\\"> <table> <thead> <th>序号</th> <th>书籍名称</th> <th>出版日期</th> <th>价格</th> <th>购买数量</th> <th>操作</th> </thead> <tbody> <tr v-for=\\\"(book, index) in books\\\"> <td>{{index + 1}}</td> <td>{{book.name}}</td> <td>{{book.date}}</td> <td>{{formatPrice(book.price)}}</td> <td> <button :disabled=\\\"book.count <= 1\\\" @click=\\\"decrement(index)\\\"> - </button> <span class=\\\"counter\\\">{{book.count}}</span> <button @click=\\\"increment(index)\\\">+</button> </td> <td> <button @click=\\\"removeBook(index)\\\">移除</button> </td> </tr> </tbody> </table> <h2>总价格: {{formatPrice(totalPrice)}}</h2> </template> <template v-else> <h2>购物车为空~</h2> </template> </template> <script src=\\\"../js/vue.js\\\"></script> <script src=\\\"./index.js\\\"></script> <script> Vue.createApp({ template: \\\"#my-app\\\", data() { return { books: [ { id: 1, name: \\\"《算法导论》\\\", date: \\\"2006-9\\\", price: 85.0, count: 1, }, { id: 2, name: \\\"《UNIX编程艺术》\\\", date: \\\"2006-2\\\", price: 59.0, count: 1, }, { id: 3, name: \\\"《编程珠玑》\\\", date: \\\"2008-10\\\", price: 39.0, count: 1, }, { id: 4, name: \\\"《代码大全》\\\", date: \\\"2006-3\\\", price: 128.0, count: 1, }, ], }; }, computed: { totalPrice() { let finalPrice = 0; for (let book of this.books) { finalPrice += book.count * book.price; } return finalPrice; }, // Vue3不支持过滤器了, 推荐两种做法: 使用计算属性/使用全局的方法 filterBooks() { return this.books.map((item) => { const newItem = Object.assign({}, item); newItem.price = \\\"¥\\\" + item.price; return newItem; }); }, }, methods: { increment(index) { // 通过索引值获取到对象 this.books[index].count++; }, decrement(index) { this.books[index].count--; }, removeBook(index) { this.books.splice(index, 1); }, formatPrice(price) { return \\\"¥\\\" + price; }, }, }).mount(\\\"#app\\\"); </script> </body> </html> \"]},\"211\":{\"h\":\"v-model\",\"t\":[\"v-model 可以在组件上使用以实现双向绑定。\",\"首先让我们回忆一下 v-model 在原生元素上的用法：\",\"template\",\"<input v-model=\\\"searchText\\\" /> \",\"在代码背后，模板编译器会对 v-model 进行更冗长的等价展开。因此上面的代码其实等价于下面这段：\",\"<input :value=\\\"searchText\\\" @input=\\\"searchText = $event.target.value\\\" /> \",\"而当使用在一个组件上时，v-model 会被展开为如下的形式：\",\"<CustomInput :model-value=\\\"searchText\\\" @update:model-value=\\\"newValue => searchText = newValue\\\" /> \",\"要让这个例子实际工作起来，<CustomInput> 组件内部需要做两件事：\",\"将内部原生 <input> 元素的 value attribute 绑定到 modelValue prop\",\"当原生的 input 事件触发时，触发一个携带了新值的 update:modelValue 自定义事件\"]},\"212\":{\"h\":\"内部实现\",\"t\":[\"图片\"]},\"213\":{\"h\":\"绑定其他表单\",\"t\":[\"具体可以看: https://cn.vuejs.org/guide/essentials/forms.html#modifiers\",\"在 HTML 中，<label> 标签的 for 属性被用来关联 <label> 标签和表单控件（如 <input>、<textarea>、<select> 等）。for 属性的值应该是你想要关联的表单控件的 id。 当 <label> 被点击时，与其关联的表单控件会获得焦点。\",\"<body> <div id=\\\"app\\\"></div> <template id=\\\"my-app\\\"> <!-- 1.绑定textarea --> <label for=\\\"intro\\\"> 自我介绍 <textarea name=\\\"intro\\\" id=\\\"intro\\\" cols=\\\"30\\\" rows=\\\"10\\\" v-model=\\\"intro\\\"></textarea> </label> <h2>intro: {{intro}}</h2> <!-- 2.checkbox --> <!-- 2.1.单选框 --> <label for=\\\"agree\\\"> <input id=\\\"agree\\\" type=\\\"checkbox\\\" v-model=\\\"isAgree\\\"> 同意协议 </label> <h2>isAgree: {{isAgree}}</h2> <!-- 2.2.多选框 --> <span>你的爱好: </span> <label for=\\\"basketball\\\"> <input id=\\\"basketball\\\" type=\\\"checkbox\\\" v-model=\\\"hobbies\\\" value=\\\"basketball\\\"> 篮球 </label> <label for=\\\"football\\\"> <input id=\\\"football\\\" type=\\\"checkbox\\\" v-model=\\\"hobbies\\\" value=\\\"football\\\"> 足球 </label> <label for=\\\"tennis\\\"> <input id=\\\"tennis\\\" type=\\\"checkbox\\\" v-model=\\\"hobbies\\\" value=\\\"tennis\\\"> 网球 </label> <h2>hobbies: {{hobbies}}</h2> <!-- 3.radio --> <span>你的爱好: </span> <label for=\\\"male\\\"> <input id=\\\"male\\\" type=\\\"radio\\\" v-model=\\\"gender\\\" value=\\\"male\\\">男 </label> <label for=\\\"female\\\"> <input id=\\\"female\\\" type=\\\"radio\\\" v-model=\\\"gender\\\" value=\\\"female\\\">女 </label> <h2>gender: {{gender}}</h2> <!-- 4.select --> <span>喜欢的水果: </span> <select v-model=\\\"fruit\\\" multiple size=\\\"2\\\"> <option value=\\\"apple\\\">苹果</option> <option value=\\\"orange\\\">橘子</option> <option value=\\\"banana\\\">香蕉</option> </select> <h2>fruit: {{fruit}}</h2> </template> <script src=\\\"../js/vue.js\\\"></script> <script> const App = { template: '#my-app', data() { return { intro: \\\"Hello World\\\", isAgree: false, hobbies: [\\\"basketball\\\"], gender: \\\"\\\", fruit: \\\"orange\\\" } }, methods: { commitForm() { axios } } } Vue.createApp(App).mount('#app'); </script> </body> \",\"image-20231031200224648\",\"目前我们在前面的案例中大部分的值都是在template中固定好的：\",\"比如gender的两个输入框值male、female；\",\"比如hobbies的三个输入框值basketball、football、tennis；\",\"在真实开发中，我们的数据可能是来自服务器的，那么我们就可以先将值请求下来，绑定到data返回的对象中，再通过v-bind来进行值的绑定，这个过程就是值绑定。\"]},\"214\":{\"h\":\"修饰符\"},\"215\":{\"h\":\"内置修饰符\"},\"216\":{\"h\":\".lazy\",\"t\":[\"默认情况下，v-model 会在每次 input 事件后更新数据 (IME 拼字阶段的状态例外)。你可以添加 lazy 修饰符来改为在每次 change 事件后更新数据：\",\"<!-- 在 \\\"change\\\" 事件后同步更新而不是 \\\"input\\\" --> <input v-model.lazy=\\\"msg\\\" /> \"]},\"217\":{\"h\":\".number\",\"t\":[\"如果你想让用户输入自动转换为数字，你可以在 v-model 后添加 .number 修饰符来管理输入：\",\"另外，在我们进行逻辑判断时，如果是一个string类型，在可以转化的情况下会进行隐式转换的：\",\"下面的score在进行判断的过程中会进行隐式转化的；\",\"const score = \\\"100\\\";if (score > 90) { console.log(\\\"优秀\\\");} \",\"<input v-model.number=\\\"age\\\" /> \",\"如果该值无法被 parseFloat() 处理，那么将返回原始值。\",\"number 修饰符会在输入框有 type=\\\"number\\\" 时自动启用。\"]},\"218\":{\"h\":\".trim\",\"t\":[\"如果你想要默认自动去除用户输入内容中两端的空格，你可以在 v-model 后添加 .trim 修饰符：\",\"<input v-model.trim=\\\"msg\\\" /> \"]},\"219\":{\"h\":\"自定义的修饰符\",\"t\":[\"在某些场景下，你可能想要一个自定义组件的 v-model 支持自定义的修饰符。\",\"我们来创建一个自定义的修饰符 capitalize，它会自动将 v-model 绑定输入的字符串值第一个字母转为大写：\",\"<MyComponent v-model.capitalize=\\\"myText\\\" /> \",\"组件的 v-model 上所添加的修饰符，可以通过 modelModifiers prop 在组件内访问到。在下面的组件中，我们声明了 modelModifiers 这个 prop，它的默认值是一个空对象：\",\"<script> export default { props: { modelValue: String, modelModifiers: { default: () => ({}) } }, emits: ['update:modelValue'], created() { console.log(this.modelModifiers) // { capitalize: true } } } </script> <template> <input type=\\\"text\\\" :value=\\\"modelValue\\\" @input=\\\"$emit('update:modelValue', $event.target.value)\\\" /> </template> \",\"注意这里组件的 modelModifiers prop 包含了 capitalize 且其值为 true，因为它在模板中的 v-model 绑定 v-model.capitalize=\\\"myText\\\" 上被使用了。\",\"有了这个 prop，我们就可以检查 modelModifiers 对象的键，并编写一个处理函数来改变抛出的值。在下面的代码里，我们就是在每次 <input /> 元素触发 input 事件时将值的首字母大写：\",\"<script> export default { props: { modelValue: String, modelModifiers: { default: () => ({}) } }, emits: ['update:modelValue'], methods: { emitValue(e) { let value = e.target.value if (this.modelModifiers.capitalize) { value = value.charAt(0).toUpperCase() + value.slice(1) } this.$emit('update:modelValue', value) } } } </script> <template> <input type=\\\"text\\\" :value=\\\"modelValue\\\" @input=\\\"emitValue\\\" /> </template> \"]},\"220\":{\"h\":\"多个 v-model 绑定\",\"t\":[\"我们可以在单个组件实例上创建多个 v-model 双向绑定。\",\"组件上的每一个 v-model 都会同步不同的 prop，而无需额外的选项：\",\"<UserName v-model:first-name=\\\"first\\\" v-model:last-name=\\\"last\\\" /> \",\"<script> export default { props: { firstName: String, lastName: String }, emits: ['update:firstName', 'update:lastName'] } </script> <template> <input type=\\\"text\\\" :value=\\\"firstName\\\" @input=\\\"$emit('update:firstName', $event.target.value)\\\" /> <input type=\\\"text\\\" :value=\\\"lastName\\\" @input=\\\"$emit('update:lastName', $event.target.value)\\\" /> </template> \"]},\"221\":{\"h\":\"邂逅Vue3开发\"},\"222\":{\"h\":\"认识 Vue\"},\"223\":{\"h\":\"什么是 Vue\",\"t\":[\"Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。 \",\"全程是Vue.js或者Vuejs；\",\"什么是渐进式框架呢？表示我们可以在项目中一点点来引入和使用Vue，而不一定需要全部使用Vue来开发整个 项目；\"]},\"224\":{\"h\":\"Vue3带来的变化\",\"t\":[\"源码通过monorepo的形式来管理源代码： \",\"Mono：单个\",\"Repo：repository仓库\",\"主要是将许多项目的代码存储在同一个 repository 中；\",\"这样做的目的是多个包本身相互独立，可以有自己的功能逻辑、单元测试等，同时又在同一个仓库下方便管理；\",\"而且模块划分的更加清晰，可维护性、可扩展性更强；\",\"源码使用TypeScript来进行重写： \",\"在Vue2.x的时候，Vue使用 Flow 来进行类型检测；\",\"在Vue3.x的时候，Vue的源码全部使用 TypeScript 来进行重构，并且 Vue 本身对 TypeScript 支持也更好了；\"]},\"225\":{\"h\":\"性能方面\",\"t\":[\"使用Proxy进行数据劫持 \",\"在 Vue2.x 的时候，Vue2 是使用 Object.defineProperty 来劫持数据的 getter 和 setter 方法的；\",\"这种方式一致存在一个缺陷就是当给对象添加或者删除属性时，是无法劫持和监听的；\",\"所以在 Vue2.x 的时候，不得不提供一些特殊的API，比如 $set 或 $delete ，事实上都是一些 hack 方法，也增加了 开发者学习新的API的成本；\",\"而在 Vue3.x 开始，Vue 使用 Proxy 来实现数据的劫持\",\"删除了一些不必要的API： \",\"移除了实例上的 $on , $off 和 $once；\",\"移除了一些特性：如filter、内联模板等；\",\"包括编译方面的优化： \",\"生成Block Tree、Slot编译优化、diff算法优化；\"]},\"226\":{\"h\":\"新的API\",\"t\":[\"由Options API 到 Composition API： \",\"在 Vue2.x 的时候，我们会通过 Options API 来描述组件对象；\",\"Options API 包括data、props、methods、computed、生命周期等等这些选项；\",\"存在比较大的问题是多个逻辑可能是在不同的地方： \",\"比如created中会使用某一个method来修改data的数据，代码的内聚性非常差；\",\"Composition API可以将 相关联的代码 放到同一处 进行处理，而不需要在多个Options之间寻找；\",\"Hooks函数增加代码的复用性： \",\"在Vue2.x的时候，我们通常通过mixins在多个组件之间共享逻辑；但是有一个很大的缺陷就是 mixins也是由一大堆的Options组成的，并且多个mixins会存在命名冲突的问题；\",\"在Vue3.x中，我们可以通过Hook函数，来将一部分独立的逻辑抽取出去，并且它们还可以做到是响应式的；\"]},\"227\":{\"h\":\"如何使用 Vue\",\"t\":[\"方式一：在页面中通过CDN的方式来引入；\",\"方式二：下载Vue的JavaScript文件，并且自己手动引入；\",\"方式三：通过npm包管理工具安装使用它；\",\"方式四：直接通过Vue CLI创建项目，并且使用它；\"]},\"228\":{\"h\":\"CDN 引入\",\"t\":[\"<script src=\\\"https://unpkg.com/vue@next\\\"></script> \"]},\"229\":{\"h\":\"下载和引入\",\"t\":[\"下载Vue的源码，可以直接打开CDN的链接： \",\"打开链接，复制其中所有的代码；\",\"创建一个新的文件，比如vue.js，将代码复制到其中；\",\"<script src=\\\"../js/vue.js\\\"></script> \"]},\"230\":{\"h\":\"声明式编程和命令式编程\",\"t\":[\"原生开发和Vue开发的模式和特点,我们会发现是完全不同的,这里其实涉及到两种不同的编程范式命令式编程和声明式编程\",\"命令式编程关注的是“ how to do”,声明式编程关注的是\\\" what to do\\\",由框架(机器)完成\\\"how\\\"的过程\"]},\"231\":{\"h\":\"MVVM模型\",\"t\":[\"MVC和MVVM都是一种软件的体系结构 \",\"MVC是 Model-View-Controller的简称,是在前期被使用非常框架的架构模式,比如iS、前端\",\"MVVM是 Model-View- ViewMode的简称,是目前非常流行的架构模式\",\"通常情况下,我们也经常称vue是一个MVVM的框架 \",\"vue官方其实有说明,vue虽然并没有完全遵守MVVM的模型,但是整个设计是受到它的启发的\"]},\"232\":{\"h\":\"template属性\",\"t\":[\"在使用 createApp的时候,我们传入了一个对象,接下来我们详细解析一下之前传入的属性分别代表什么含义。 \",\"template属性:表示的是Vue需要帮助我们渲染的模板信息\",\"目前我们看到它里面有很多的HTML标签,这些标签会替换掉我们挂载到的元素(比如id为app的dⅳv)的innerHTML\",\"模板中有一些奇怪的语法,比如{},比如@ )click,这些都是模板特有的语法\",\"但是这个模板的写法有点过于别扭了,并且IDE很有可能没有任何提示,阻碍我们编程的效率\",\"vue提供了两种方式:\",\"方式一:使用 script标签,并且标记它的类型为 X-template;\",\"<body> <div id=\\\"app\\\">hhhh</div> <script type=\\\"x-template\\\" id=\\\"why\\\"> <div> <h2>{{message}}</h2> <h2>{{counter}}</h2> <button @click='increment'>+1</button> <button @click='decrement'>-1</button> </div> </script> <script src=\\\"../js//Vue.js\\\"></script> <script> Vue.createApp({ template: '#why', data: function(){ return{ message:\\\"Hello World\\\", counter: 100 } }, methods: { increment(){ this.counter++ }, decrement(){ this.counter-- } } }).mount(\\\"#app\\\") </script> </body> \",\"方式二:使用任意标签(通常使用 template标签,因为不会被浏览器渲染),设置id;v template元素是一种用于保存客户端内容的机制,该内容再加载页面时不会被呈现,但随后可以在运行时使用 JavaScript 实例化\",\" <body> <div id=\\\"app\\\"></div> <template id=\\\"why\\\"> <div> <h2>{{message}}</h2> <h2>{{counter}}</h2> <button @click='increment'>+1</button> <button @click='decrement'>-1</button> </div> </template> <script src=\\\"../js//Vue.js\\\"></script> <script> Vue.createApp({ template: '#why', data: function(){ return{ message:\\\"Hello World\\\", counter: 100 } }, methods: { increment(){ this.counter++ }, decrement(){ this.counter-- } } }).mount(\\\"#app\\\") </script> </body> \"]},\"233\":{\"h\":\"data属性\",\"t\":[\"data属性是传入一个函数,并且该函数需要返回一个对象\",\"在Vue2x的时候,也可以传入一个对象(虽然官方推荐是一个函数);\",\"在Vue3x的时候,必须传入一个函数,否则就会直接在浏览器中报错\",\"data中返回的对象会被vue的响应式系统劫持,之后对该对象的修改或者访问都会在劫持中被处理\",\"所以我们在 template中通过{ counter} 访问 counter,可以从对象中获取到数据\",\"所以我们修改 counter的值时, template中的{ counter)也会发生改变;\"]},\"234\":{\"h\":\"methods属性（重点）\",\"t\":[\"methods属性是一个对象,通常我们会在这个对象中定义很多的方法\",\"这些方法可以被绑定到 template模板中;\",\"在该方法中,我们可以使用this关键字来直接访问到data中返回的对象的属性;\",\"问题：官方文档有这个描述，即不能使用箭头函数\",\"为什么不能使用箭头函数(VUE3.0)？\",\"我们在methods中要使用data返回对象中的数据：\",\"那么这个this是必须有值的，并且应该可以通过this获取到data返回对象中的数据。\",\"那么我们这个this能不能是window呢？\",\"不可以是window，因为window中我们无法获取到data返回对象中的数据；\",\"但是如果我们使用箭头函数，那么这个this就会是window了；\",\"为什么是window呢？\",\"这里涉及到箭头函数使用this的查找规则，它会在自己的上层作用于中来查找this；\",\"最终刚好找到的是script作用于中的this，所以就是window；\",\"this到底是如何查找和绑定的呢？\",\"前端面试之彻底搞懂this指向\",\"不使用箭头函数的情况下，this到底指向什么\",\"事实上Vue的源码当中就是对methods中的所有函数进行了遍历，并且通过 bind 绑定了 this\",\"具体看 https://mp.weixin.qq.com/s/hYm0JgBI25grNG_2sCRlTA\",\"// window 隐式绑定 foo(); const obj = { bar: foo }; obj.bar(); /* Window{} {bar: f()} */ const foo2 = () => { console.log(this); } const obj2 = { bar: foo2 }; obj2.bar(); /* Window{} Window{} */ \"]},\"235\":{\"h\":\"编写DOM元素的模板方式\",\"t\":[\"方式一：template模板的方式：使用 <template> 标签编写模板。这种方式是之前经常使用的方式。\",\"<template> <div> <h1>{{ message }}</h1> <p>{{ description }}</p> </div> </template> \",\"方式二：render函数的方式：使用h函数来编写渲染的内容。在这种方式中，h函数可以直接返回一个虚拟节点（Vnode节点）。\",\"export default { render(h) { return h('div', [ h('h1', this.message), h('p', this.description) ]) } } \",\"方式三：通过.vue文件中的template来编写模板：在.vue文件中使用<template>标签编写模板。这种方式需要通过特定的代码来对模板进行解析：\",\"对于方式三，即.vue文件中的template，可以通过vue-loader对其进行编译和处理。\",\"对于方式一，即template模板，我们必须通过源码中的一部分代码来进行编译。\",\"<template> <div> <h1>{{ message }}</h1> <p>{{ description }}</p> </div> </template> \",\"因此，Vue在让我们选择版本时，提供了\\\"运行时+编译器\\\"和\\\"仅运行时\\\"两种选项：\",\"运行时+编译器：这个版本包含了Vue的完整功能，包括对template模板的编译代码。在使用这个版本时，我们可以直接在代码中使用template模板，并且Vue会在运行时将其编译成渲染函数。这使得我们可以在开发过程中更方便地编写和调试模板。然而，由于包含了编译代码，这个版本的文件体积相对较大。\",\"仅运行时：这个版本不包含对template模板的编译代码。它更小巧，文件体积更小。在使用这个版本时，我们需要使用render函数来手动编写渲染逻辑，而不是直接使用template模板。这意味着我们需要更多的代码来实现相同的功能，但也带来了更好的性能和更小的文件大小。\",\"选择哪个版本取决于项目的需求和优化目标。如果我们需要更完整的功能，并且对文件大小没有太大的担忧，可以选择运行时+编译器版本。如果我们对文件大小敏感，并且愿意手动编写渲染逻辑，可以选择仅运行时版本。\"]},\"236\":{\"h\":\"VSCode对SFC文件的支持\",\"t\":[\"Vue 的单文件组件 (即 *.vue 文件，英文 Single-File Component，简称 SFC) 是一种特殊的文件格式，使我们能够将一个 Vue 组件的模板、逻辑与样式封装在单个文件中。下面是一个单文件组件的示例：\",\"为什么要使用 SFC​ 使用 SFC 必须使用构建工具，但作为回报带来了以下优点：\",\"使用熟悉的 HTML、CSS 和 JavaScript 语法编写模块化的组件\",\"让本来就强相关的关注点自然内聚\",\"预编译模板，避免运行时的编译开销\",\"组件作用域的 CSS\",\"在使用组合式 API 时语法更简单\",\"通过交叉分析模板和逻辑代码能进行更多编译时优化\",\"更好的 IDE 支持，提供自动补全和对模板中表达式的类型检查\",\"开箱即用的模块热更新 (HMR) 支持\",\"SFC 是 Vue 框架提供的一个功能，并且在下列场景中都是官方推荐的项目组织方式：\",\"单页面应用 (SPA)\",\"静态站点生成 (SSG)\",\"任何值得引入构建步骤以获得更好的开发体验 (DX) 的项目\",\"https://cn.vuejs.org/guide/scaling-up/sfc.html\",\"插件一：Vetur，从Vue2开发就一直在使用的VSCode支持Vue的插件；\",\"插件二：Volar，官方推荐的插件（后续会基于Volar开发官方的VSCode插件）；\"]},\"237\":{\"h\":\"如何阅读Vue源码\",\"t\":[\"需要的环境 npm，yarn\",\"操作步骤 \",\"安装yarn npm install yarn -g\",\"在项目中配置yarn yarn install\",\"在package.json中的dev后加上--sourcemap\",\"打包项目 yarn dev （在vue/dist文件夹下有两个文件，vue.global.js和vue.global.js.map）\",\"在vue/examplex新建自己的文件夹以及测试demo\",\"在demo中打下断点—debugger\",\"在浏览器中打开调试面板，选择其中的source面板，查看执行对应的源码\"]},\"238\":{\"h\":\"Js\"},\"239\":{\"h\":\"Web\"},\"240\":{\"h\":\"Cli\"},\"241\":{\"h\":\"Learn\"},\"242\":{\"h\":\"Vue\"},\"243\":{\"h\":\"Components\"},\"244\":{\"h\":\"Essential\"}},\"dirtCount\":0,\"index\":[[\"逻辑与样式封装在单个文件中\",{\"1\":{\"236\":1}}],[\"逻辑等\",{\"1\":{\"152\":1}}],[\"英文\",{\"1\":{\"236\":1}}],[\"英语\",{\"1\":{\"7\":3}}],[\"隐式绑定\",{\"1\":{\"234\":1}}],[\"qq\",{\"1\":{\"234\":1}}],[\"question侦听的data中的属性的名称\",{\"1\":{\"206\":1}}],[\"question\",{\"1\":{\"206\":6}}],[\"queryanswer\",{\"1\":{\"206\":3}}],[\"query\",{\"1\":{\"55\":1}}],[\"queryselector\",{\"1\":{\"41\":1}}],[\"queueupdate\",{\"1\":{\"41\":2}}],[\"问题\",{\"1\":{\"234\":1}}],[\"访问\",{\"1\":{\"233\":1}}],[\"访问这个命令\",{\"1\":{\"109\":1}}],[\"虽然官方推荐是一个函数\",{\"1\":{\"233\":1}}],[\"阻碍我们编程的效率\",{\"1\":{\"232\":1}}],[\"机器\",{\"1\":{\"230\":1}}],[\"存在比较大的问题是多个逻辑可能是在不同的地方\",{\"1\":{\"226\":1}}],[\"存在重复的代码\",{\"1\":{\"200\":1}}],[\"移除了一些特性\",{\"1\":{\"225\":1}}],[\"移除了实例上的\",{\"1\":{\"225\":1}}],[\"删除了一些不必要的api\",{\"1\":{\"225\":1}}],[\"删除模块\",{\"1\":{\"95\":1}}],[\"本身对\",{\"1\":{\"224\":1}}],[\"本质的区别\",{\"1\":{\"185\":1}}],[\"本质上\",{\"1\":{\"44\":1}}],[\"读音\",{\"1\":{\"223\":1}}],[\"读取时\",{\"1\":{\"76\":1}}],[\"读取文件\",{\"1\":{\"37\":1}}],[\"读取真实模块路径内容\",{\"1\":{\"37\":1}}],[\"邂逅vue3开发\",{\"0\":{\"221\":1}}],[\"双向绑定\",{\"1\":{\"220\":1}}],[\"双大括号\",{\"1\":{\"160\":1}}],[\"双大括号语法\",{\"0\":{\"160\":1}}],[\"优秀\",{\"1\":{\"217\":1}}],[\"优先使用的字段\",{\"1\":{\"104\":1}}],[\"拼字阶段的状态例外\",{\"1\":{\"216\":1}}],[\"足球\",{\"1\":{\"213\":1}}],[\"标签编写模板\",{\"1\":{\"235\":1}}],[\"标签和表单控件\",{\"1\":{\"213\":1}}],[\"标签的\",{\"1\":{\"213\":1}}],[\"标签来使用\",{\"1\":{\"90\":1}}],[\"触发一个携带了新值的\",{\"1\":{\"211\":1}}],[\"触发更新\",{\"1\":{\"194\":1}}],[\"¥\",{\"1\":{\"210\":2}}],[\"书籍购物车\",{\"1\":{\"210\":1}}],[\"阶段案例\",{\"0\":{\"210\":1}}],[\"缓存旧值\",{\"1\":{\"207\":1}}],[\"钩子之前\",{\"1\":{\"207\":1}}],[\"回调函数的初次执行就发生在\",{\"1\":{\"207\":1}}],[\"立即执行\",{\"1\":{\"207\":3}}],[\"理由如上\",{\"1\":{\"207\":1}}],[\"被点击时\",{\"1\":{\"213\":1}}],[\"被侦听的属性\",{\"1\":{\"207\":1}}],[\"被认为是上下文目录\",{\"1\":{\"104\":1}}],[\"被认为是一个\",{\"1\":{\"37\":1}}],[\"旧值\",{\"1\":{\"206\":1}}],[\"新的api\",{\"0\":{\"226\":1}}],[\"新值\",{\"1\":{\"206\":1}}],[\"新一代浏览器中绝大部分都已支持\",{\"1\":{\"35\":1}}],[\"去进行一些逻辑的处理\",{\"1\":{\"206\":1}}],[\"侦听单个嵌套属性\",{\"1\":{\"208\":1}}],[\"侦听根级属性\",{\"1\":{\"208\":1}}],[\"侦听的函数都会有限执行一次\",{\"1\":{\"207\":1}}],[\"侦听question的变化时\",{\"1\":{\"206\":1}}],[\"侦听器\",{\"0\":{\"205\":1}}],[\"及格\",{\"1\":{\"200\":1,\"201\":1,\"202\":1,\"203\":2}}],[\"没有缓存\",{\"1\":{\"200\":1,\"201\":1}}],[\"没有key的操作过程\",{\"1\":{\"194\":1}}],[\"没有key的时候\",{\"1\":{\"190\":1}}],[\"没有key\",{\"1\":{\"194\":1}}],[\"很多运算也需要多次执行\",{\"1\":{\"200\":1}}],[\"很容易出现命名冲突的问题\",{\"1\":{\"155\":1}}],[\"缺点三\",{\"1\":{\"200\":1}}],[\"缺点二\",{\"1\":{\"200\":1,\"201\":1}}],[\"缺点一\",{\"1\":{\"200\":1,\"201\":1}}],[\"思路三\",{\"1\":{\"199\":1}}],[\"思路二\",{\"1\":{\"199\":1}}],[\"思路一\",{\"1\":{\"199\":1}}],[\"某些情况下我们需要对这段文字进行反转\",{\"1\":{\"199\":1}}],[\"某些情况下我们是直接显示这段文字\",{\"1\":{\"199\":1}}],[\"某些配置是在生成环境需要使用的\",{\"1\":{\"105\":1}}],[\"记录一段文字\",{\"1\":{\"199\":1}}],[\"记得用引号括起来\",{\"1\":{\"172\":2}}],[\"希望它们拼接之后在界面上显示\",{\"1\":{\"199\":1}}],[\"另外\",{\"1\":{\"217\":1}}],[\"另外一种方式就是使用计算属性computed\",{\"1\":{\"198\":1}}],[\"另外我们发现代码中依然存在es6的语法\",{\"1\":{\"48\":1}}],[\"放到同一处\",{\"1\":{\"226\":1}}],[\"放到methods的options中\",{\"1\":{\"198\":1}}],[\"放置静态文件的目录\",{\"1\":{\"109\":1}}],[\"保持相同的key可以让diff算法更加的高效\",{\"1\":{\"195\":1}}],[\"→\",{\"1\":{\"194\":2}}],[\"算法导论\",{\"1\":{\"210\":1}}],[\"算法一定存在这样一个过程\",{\"1\":{\"194\":1}}],[\"算法是指生成更新补丁的方式\",{\"1\":{\"194\":1}}],[\"树变化后\",{\"1\":{\"194\":1}}],[\"插入\",{\"0\":{\"193\":1}}],[\"插件二\",{\"1\":{\"236\":1}}],[\"插件一\",{\"1\":{\"236\":1}}],[\"插件来实现hmr功能\",{\"1\":{\"97\":2}}],[\"插件可以执行各种任务\",{\"1\":{\"83\":1}}],[\"插件autoprefixer\",{\"0\":{\"61\":1}}],[\"插件丰富\",{\"1\":{\"20\":1}}],[\"插件\",{\"0\":{\"83\":1},\"1\":{\"18\":2,\"53\":1,\"63\":2,\"83\":1}}],[\"真实\",{\"1\":{\"192\":1}}],[\"真实开发中我们必然不会直接使用命令行工具来对css进行处理\",{\"1\":{\"62\":1}}],[\"虚拟\",{\"0\":{\"192\":1},\"1\":{\"192\":1}}],[\"跨平台\",{\"1\":{\"191\":1}}],[\"好处\",{\"1\":{\"191\":1}}],[\"销毁key不存在的元素\",{\"1\":{\"190\":1}}],[\"过滤掉长度小于等于2的电影\",{\"1\":{\"189\":1}}],[\"少年派\",{\"1\":{\"187\":1,\"189\":1}}],[\"教父\",{\"1\":{\"187\":1,\"189\":1}}],[\"盗梦空间\",{\"1\":{\"187\":1,\"189\":1}}],[\"星际穿越\",{\"1\":{\"187\":1,\"189\":1}}],[\"遍历数组\",{\"1\":{\"187\":1}}],[\"遍历对象\",{\"0\":{\"13\":1},\"1\":{\"187\":1}}],[\"三个参数\",{\"1\":{\"187\":1}}],[\"三元运算符来决定结果\",{\"1\":{\"198\":1}}],[\"三元运算符\",{\"1\":{\"160\":2}}],[\"二个参数\",{\"1\":{\"187\":1}}],[\"索引项index是在后面的\",{\"1\":{\"187\":1}}],[\"切换\",{\"1\":{\"185\":1}}],[\"才会触发回调函数\",{\"1\":{\"207\":1}}],[\"才会真正渲染条件块中的内容\",{\"1\":{\"183\":1}}],[\"才会被渲染出来\",{\"1\":{\"182\":1}}],[\"才是真正利用webpack进行编译和打包的过程\",{\"1\":{\"47\":1}}],[\"条件渲染\",{\"0\":{\"181\":1}}],[\"传入事件\",{\"1\":{\"179\":1}}],[\"传递参数给父组件\",{\"1\":{\"125\":1,\"142\":1}}],[\"传递的数据是否符合要求\",{\"1\":{\"120\":1,\"137\":1}}],[\"传递字符串\",{\"1\":{\"55\":1}}],[\"鼠标移动\",{\"1\":{\"178\":1}}],[\"仅运行时\",{\"1\":{\"235\":2}}],[\"仅在被赋新值时\",{\"1\":{\"207\":1}}],[\"仅当事件是从特定键触发时才触发回调\",{\"1\":{\"177\":1,\"180\":1}}],[\"仅使用eslint进行错误检查\",{\"1\":{\"108\":1}}],[\"键盘事件等等\",{\"1\":{\"177\":1}}],[\"拖拽\",{\"1\":{\"177\":1}}],[\"案例\",{\"1\":{\"176\":1}}],[\"700\",{\"1\":{\"173\":2}}],[\"7777\",{\"1\":{\"99\":1,\"105\":1}}],[\"调用了getresult方法\",{\"1\":{\"203\":4}}],[\"调用了计算属性result的getter\",{\"1\":{\"203\":2}}],[\"调用\",{\"1\":{\"177\":2,\"180\":2}}],[\"调用一个方法\",{\"1\":{\"173\":1}}],[\"调用这些\",{\"1\":{\"109\":1}}],[\"列表渲染\",{\"0\":{\"186\":1}}],[\"列表\",{\"1\":{\"171\":1}}],[\"呵呵呵呵\",{\"1\":{\"170\":1}}],[\"小知识\",{\"1\":{\"167\":1}}],[\"小的功能块\",{\"1\":{\"149\":1}}],[\"绑定了\",{\"1\":{\"234\":1}}],[\"绑定输入的字符串值第一个字母转为大写\",{\"1\":{\"219\":1}}],[\"绑定textarea\",{\"1\":{\"213\":1}}],[\"绑定其他表单\",{\"0\":{\"213\":1}}],[\"绑定到data返回的对象中\",{\"1\":{\"213\":1}}],[\"绑定到\",{\"1\":{\"211\":1}}],[\"绑定到元素上的所有属性\",{\"1\":{\"176\":1}}],[\"绑定事件监听\",{\"1\":{\"177\":1}}],[\"绑定一个对象\",{\"1\":{\"178\":1}}],[\"绑定一个表达式\",{\"1\":{\"178\":1}}],[\"绑定一个\",{\"1\":{\"176\":1}}],[\"绑定一个data中的属性值\",{\"1\":{\"173\":1}}],[\"绑定class\",{\"1\":{\"171\":1}}],[\"绑定class有两种方式\",{\"1\":{\"169\":1,\"172\":1}}],[\"绑定\",{\"0\":{\"169\":1,\"172\":1,\"220\":1},\"1\":{\"219\":1}}],[\"绑定值对的对象\",{\"1\":{\"167\":1}}],[\"绑定时\",{\"1\":{\"167\":1}}],[\"名短横线分隔\",{\"1\":{\"172\":1}}],[\"名可以用驼峰式\",{\"1\":{\"172\":1}}],[\"名称\",{\"1\":{\"167\":1}}],[\"名就是注册的组件名\",{\"1\":{\"154\":1}}],[\"特别是在和自定义元素打交道时\",{\"1\":{\"167\":1}}],[\"特性转换为向后兼容的代码\",{\"1\":{\"83\":1}}],[\"特性\",{\"1\":{\"63\":1,\"84\":1}}],[\"赋值\",{\"1\":{\"167\":1}}],[\"同意协议\",{\"1\":{\"213\":1}}],[\"同名的\",{\"1\":{\"167\":1}}],[\"同时又在同一个仓库下方便管理\",{\"1\":{\"224\":1}}],[\"同时需要\",{\"1\":{\"179\":1}}],[\"同时显示更新后的效果\",{\"1\":{\"98\":1}}],[\"同时为了防止重复\",{\"1\":{\"68\":1}}],[\"同时它会根据您的目标环境自动添加必要的回退\",{\"1\":{\"63\":1}}],[\"同时也让你对各个loader有一个全局的概览\",{\"1\":{\"55\":1}}],[\"同时也无需在启动开发服务器前进行编译\",{\"1\":{\"22\":1}}],[\"同时hmr更新反应到浏览器的时间会小于50ms\",{\"1\":{\"40\":1}}],[\"同时利用浏览器的缓存\",{\"1\":{\"22\":1}}],[\"同时\",{\"1\":{\"18\":1,\"98\":1,\"102\":1}}],[\"强制绑定为\",{\"1\":{\"167\":2}}],[\"参数传递\",{\"0\":{\"179\":1}}],[\"参数\",{\"1\":{\"167\":1,\"177\":1}}],[\"参数来指定\",{\"1\":{\"105\":1}}],[\"带参数\",{\"1\":{\"167\":1}}],[\"带有默认值的对象\",{\"1\":{\"121\":1,\"138\":1}}],[\"带有默认值的数字\",{\"1\":{\"121\":1,\"138\":1}}],[\"带有\",{\"1\":{\"111\":1}}],[\"期望\",{\"1\":{\"167\":1}}],[\"修饰符会在输入框有\",{\"1\":{\"217\":1}}],[\"修饰符来管理输入\",{\"1\":{\"217\":1}}],[\"修饰符来改为在每次\",{\"1\":{\"216\":1}}],[\"修饰符来强制绑定方式\",{\"1\":{\"167\":1}}],[\"修饰符相当于对事件进行了一些特殊的处理\",{\"1\":{\"180\":1}}],[\"修饰符\",{\"0\":{\"214\":1},\"1\":{\"167\":2,\"177\":1,\"218\":1}}],[\"修改webpack的配置\",{\"1\":{\"96\":1}}],[\"修改了css\",{\"1\":{\"95\":1}}],[\"修改配置文件\",{\"1\":{\"94\":1}}],[\"修改一个对象的属性\",{\"1\":{\"11\":1}}],[\"修改其中一个变量的值\",{\"1\":{\"2\":1}}],[\"缩写\",{\"1\":{\"167\":1,\"177\":1}}],[\"规则\",{\"1\":{\"166\":1}}],[\"配合像\",{\"1\":{\"166\":1}}],[\"配置选项\",{\"0\":{\"207\":1}}],[\"配置了\",{\"1\":{\"104\":4}}],[\"配置信息\",{\"0\":{\"99\":1}}],[\"配置代理等\",{\"1\":{\"92\":1}}],[\"配置中添加一个别名\",{\"1\":{\"90\":1}}],[\"配置中\",{\"1\":{\"83\":1}}],[\"配置处理图片的rule\",{\"1\":{\"64\":1}}],[\"配置分离\",{\"1\":{\"62\":1}}],[\"配置方式表示的意思是在我们的webpack\",{\"1\":{\"55\":1}}],[\"配置方式\",{\"1\":{\"55\":2}}],[\"配置插件来执行额外的任务\",{\"1\":{\"53\":1}}],[\"配置加载器来处理不同类型的文件\",{\"1\":{\"53\":1}}],[\"配置\",{\"0\":{\"100\":1},\"1\":{\"53\":1,\"90\":1,\"112\":3}}],[\"配置文件位置选择\",{\"1\":{\"108\":1}}],[\"配置文件\",{\"0\":{\"51\":1,\"89\":1}}],[\"配置复杂度高\",{\"1\":{\"20\":1}}],[\"配置部分\",{\"1\":{\"18\":1}}],[\"未编译模板闪现\",{\"1\":{\"166\":1}}],[\"未打包\",{\"1\":{\"20\":1}}],[\"详见下方的指南链接\",{\"1\":{\"167\":1}}],[\"详细信息\",{\"1\":{\"166\":1}}],[\"详情参见\",{\"1\":{\"151\":1}}],[\"加快编译的速度\",{\"1\":{\"165\":1}}],[\"加载这两个文件\",{\"1\":{\"98\":1}}],[\"加载这些资源我们需要使用一些loader\",{\"1\":{\"71\":1}}],[\"加载器\",{\"1\":{\"53\":1}}],[\"加载器和插件等\",{\"1\":{\"53\":1}}],[\"加载完依赖后立即执行依赖模块\",{\"1\":{\"35\":1}}],[\"显示原始的mustache标签\",{\"1\":{\"165\":1}}],[\"显示结果是一样的\",{\"1\":{\"65\":1}}],[\"完成\",{\"1\":{\"230\":1}}],[\"完成热更新\",{\"1\":{\"41\":1}}],[\"完整写法\",{\"1\":{\"178\":1}}],[\"完整代码\",{\"1\":{\"162\":1}}],[\"计算属性在大多数情况下\",{\"1\":{\"204\":1}}],[\"计算属性的\",{\"0\":{\"204\":1}}],[\"计算属性的用法\",{\"1\":{\"199\":1}}],[\"计算属性依然会重新进行计算\",{\"1\":{\"203\":1}}],[\"计算属性是不需要重新计算的\",{\"1\":{\"203\":1}}],[\"计算属性是有缓存的\",{\"1\":{\"203\":1}}],[\"计算属性会随着依赖的数据\",{\"1\":{\"203\":1}}],[\"计算属性中的运算只会执行一次\",{\"1\":{\"203\":1}}],[\"计算属性和methods的差异\",{\"1\":{\"203\":1}}],[\"计算属性看起来像是一个函数\",{\"1\":{\"202\":1}}],[\"计算属性将被混入到组件实例中\",{\"1\":{\"198\":1}}],[\"计算属性\",{\"0\":{\"203\":1},\"1\":{\"160\":1,\"207\":1}}],[\"表\",{\"1\":{\"193\":1}}],[\"表达式\",{\"1\":{\"160\":1}}],[\"表示的是vue需要帮助我们渲染的模板信息\",{\"1\":{\"232\":1}}],[\"表示我们可以在项目中一点点来引入和使用vue\",{\"1\":{\"223\":1}}],[\"表示任意主机或所有主机\",{\"1\":{\"100\":1}}],[\"表示本地计算机或设备自身\",{\"1\":{\"100\":1}}],[\"口在底层的实现中\",{\"1\":{\"159\":1}}],[\"起\",{\"1\":{\"159\":1}}],[\"了解\",{\"1\":{\"159\":1}}],[\"了注册\",{\"1\":{\"154\":1}}],[\"样式等\",{\"1\":{\"155\":2}}],[\"样式代码\",{\"1\":{\"43\":1}}],[\"脚本逻辑\",{\"1\":{\"155\":2}}],[\"脚手架其实是建筑工程中的一个概念\",{\"1\":{\"106\":1}}],[\"册\",{\"1\":{\"154\":1}}],[\"局部注册是在我们需要使用到的组件中\",{\"1\":{\"154\":1}}],[\"局部注册的组件在后代组件中并不可用\",{\"1\":{\"154\":1}}],[\"局部注册的组件需要在使用它的父组件中显式导入\",{\"1\":{\"154\":1}}],[\"局部注册需要使用\",{\"1\":{\"154\":1}}],[\"局部组件\",{\"1\":{\"152\":1}}],[\"局部安装\",{\"0\":{\"49\":1},\"1\":{\"25\":1}}],[\"引入\",{\"0\":{\"228\":1}}],[\"引入loadsh\",{\"1\":{\"16\":2}}],[\"引用对象\",{\"1\":{\"207\":1}}],[\"引用\",{\"1\":{\"151\":1}}],[\"注册后仅在当前组件可用\",{\"1\":{\"154\":1}}],[\"注册局部组件\",{\"0\":{\"154\":1}}],[\"注册一个全局组件\",{\"1\":{\"153\":1}}],[\"注册全局组件\",{\"0\":{\"153\":1}}],[\"注册组件分成两种\",{\"1\":{\"152\":1}}],[\"注册组件的方式\",{\"0\":{\"152\":1}}],[\"注册的组件\",{\"1\":{\"151\":1}}],[\"注意这里组件的\",{\"1\":{\"219\":1}}],[\"注意上面的顺序\",{\"1\":{\"187\":1}}],[\"注意在父组件模板中\",{\"1\":{\"121\":1,\"138\":1}}],[\"注意\",{\"1\":{\"56\":1,\"90\":1,\"202\":1,\"207\":1}}],[\"首字母大写命名\",{\"1\":{\"151\":1}}],[\"首先让我们回忆一下\",{\"1\":{\"211\":1}}],[\"首先正则匹配请求路径\",{\"1\":{\"37\":1}}],[\"首先\",{\"1\":{\"25\":1,\"63\":1,\"74\":1,\"125\":1,\"142\":1,\"185\":1}}],[\"驼峰标识符\",{\"1\":{\"151\":1}}],[\"定义了一个计算属性叫fullname\",{\"1\":{\"202\":1}}],[\"定义一个组件时\",{\"1\":{\"151\":2}}],[\"定义组件名的方式有两种\",{\"1\":{\"151\":1}}],[\"短横线分隔命名\",{\"1\":{\"151\":1}}],[\"短横线分割符\",{\"1\":{\"151\":1}}],[\"任何值得引入构建步骤以获得更好的开发体验\",{\"1\":{\"236\":1}}],[\"任何的应用都会被抽象成一颗组件树\",{\"1\":{\"150\":1}}],[\"任何一个人处理信息的逻辑能力都是有限的\",{\"1\":{\"149\":1}}],[\"让本来就强相关的关注点自然内聚\",{\"1\":{\"236\":1}}],[\"让我们可以开发出一个个独立可复用的小组件来构造我们的应用\",{\"1\":{\"150\":1}}],[\"让其进行展示\",{\"1\":{\"116\":1,\"133\":1}}],[\"学习组件化最重要的是它的思想\",{\"1\":{\"149\":1}}],[\"学习babel对于我们理解代码从编写到线上的转变过程至关重要\",{\"1\":{\"81\":1}}],[\"甚至是移动端都在转向组件化开发\",{\"1\":{\"149\":1}}],[\"全程是vue\",{\"1\":{\"223\":1}}],[\"全部放在一起\",{\"1\":{\"149\":1}}],[\"全局注册在大型项目中使项目的依赖关系变得不那么明确\",{\"1\":{\"154\":1}}],[\"全局注册\",{\"1\":{\"154\":1}}],[\"全局注册虽然很方便\",{\"1\":{\"154\":1}}],[\"全局组件往往是在应用程序一开始就会全局组件完成\",{\"1\":{\"154\":1}}],[\"全局组件需要使用我们全局创建的app来注册组件\",{\"1\":{\"153\":1}}],[\"全局组件\",{\"1\":{\"152\":1}}],[\"全局事件总线是一种用于在不同组件之间进行通信的机制\",{\"1\":{\"130\":1,\"147\":1}}],[\"全局事件总线\",{\"0\":{\"130\":1,\"147\":1}}],[\"全局导入\",{\"0\":{\"29\":1}}],[\"全局安装\",{\"1\":{\"25\":1}}],[\"拆分成很多个可以处理的小问题\",{\"1\":{\"149\":1}}],[\"拆分成一个个功能的小组件\",{\"1\":{\"114\":1,\"131\":1}}],[\"拆分成一个个小的组件\",{\"1\":{\"114\":1,\"131\":1}}],[\"人面对复杂问题的处理方式\",{\"1\":{\"149\":1}}],[\"事件时将值的首字母大写\",{\"1\":{\"219\":1}}],[\"事件后同步更新而不是\",{\"1\":{\"216\":1}}],[\"事件后更新数据\",{\"1\":{\"216\":2}}],[\"事件触发时\",{\"1\":{\"211\":1}}],[\"事件冒泡到父元素\",{\"1\":{\"180\":1}}],[\"事件可以参考\",{\"1\":{\"177\":1}}],[\"事件\",{\"1\":{\"130\":1,\"147\":1}}],[\"事实上都是一些\",{\"1\":{\"225\":1}}],[\"事实上还可以有一个components选项\",{\"1\":{\"154\":1}}],[\"事实上我们可以将babel看成就是一个编译器\",{\"1\":{\"86\":1}}],[\"事实上\",{\"1\":{\"48\":1,\"63\":1,\"81\":1,\"191\":1}}],[\"事实上vue的源码当中就是对methods中的所有函数进行了遍历\",{\"1\":{\"234\":1}}],[\"事实上vue\",{\"1\":{\"43\":1}}],[\"事实上随着前端的快速发展\",{\"1\":{\"43\":1}}],[\"​$bus\",{\"1\":{\"130\":1,\"147\":1}}],[\"现在我们来做一个相对综合一点的练习\",{\"1\":{\"210\":1}}],[\"现在可以说整个的大前端开发都是组件化的天下\",{\"1\":{\"149\":1}}],[\"现在\",{\"1\":{\"130\":1,\"147\":1}}],[\"获取到当前组件定义的\",{\"1\":{\"129\":1,\"146\":1}}],[\"获取ts编译后的代码\",{\"1\":{\"31\":1}}],[\"元素触发\",{\"1\":{\"219\":1}}],[\"元素的\",{\"1\":{\"211\":1}}],[\"元素来循环渲染一段包含多个元素的内容\",{\"1\":{\"188\":1}}],[\"元素来实现动态组件\",{\"1\":{\"127\":1,\"144\":1}}],[\"元素或者组件以及其所有的子元素将视为静态内容并且跳过\",{\"1\":{\"162\":1}}],[\"元素\",{\"1\":{\"127\":1,\"144\":1,\"191\":1}}],[\"动态绑定属性\",{\"0\":{\"175\":1},\"1\":{\"175\":1}}],[\"动态地绑定一个或多个\",{\"1\":{\"167\":1}}],[\"动态的绑定一个或多个\",{\"1\":{\"167\":1}}],[\"动态组件\",{\"0\":{\"127\":1,\"144\":1}}],[\"动态导入自动polyfill等\",{\"1\":{\"20\":1}}],[\"确保子组件只触发被允许的自定义事件\",{\"1\":{\"126\":1,\"143\":1}}],[\"什么情况下子组件需要传递内容到父组件呢\",{\"1\":{\"125\":1,\"142\":1}}],[\"什么是渐进式框架呢\",{\"1\":{\"223\":1}}],[\"什么是侦听器\",{\"1\":{\"205\":1}}],[\"什么是计算属性呢\",{\"1\":{\"198\":1}}],[\"什么是vnode\",{\"1\":{\"190\":1}}],[\"什么是vue脚手架\",{\"1\":{\"106\":1}}],[\"什么是新旧nodes\",{\"1\":{\"190\":1}}],[\"什么是hmr呢\",{\"1\":{\"95\":1}}],[\"什么是postcss呢\",{\"1\":{\"59\":1}}],[\"什么是\",{\"0\":{\"18\":1,\"81\":1,\"223\":1},\"1\":{\"117\":1,\"134\":1}}],[\"子传父\",{\"0\":{\"125\":1,\"142\":1}}],[\"子组件不需要知道\",{\"1\":{\"129\":1,\"146\":1}}],[\"子组件有一个\",{\"1\":{\"129\":1,\"146\":1}}],[\"子组件有一些内容想要传递给父组件的时候\",{\"1\":{\"125\":1,\"142\":1}}],[\"子组件想要获取父组件的部分内容\",{\"1\":{\"129\":1,\"146\":1}}],[\"子组件\",{\"1\":{\"125\":1,\"142\":1}}],[\"子组件可以使用这些props来访问传递过来的数据\",{\"1\":{\"117\":1,\"134\":1}}],[\"子组件传递给父组件\",{\"1\":{\"116\":1,\"133\":1}}],[\"我是内容\",{\"1\":{\"153\":1,\"155\":1}}],[\"我是标题\",{\"1\":{\"153\":1,\"155\":1}}],[\"我是notpropattribue组件3\",{\"1\":{\"124\":1,\"141\":1}}],[\"我是notpropattribue组件2\",{\"1\":{\"124\":1,\"141\":1}}],[\"我是notpropattribue组件1\",{\"1\":{\"124\":1,\"141\":1}}],[\"我们必须通过源码中的一部分代码来进行编译\",{\"1\":{\"235\":1}}],[\"我们必须手动的指定要绑定到哪一个属性上\",{\"1\":{\"124\":1,\"141\":1}}],[\"我们在methods中要使用data返回对象中的数据\",{\"1\":{\"234\":1}}],[\"我们在前面练习vue的过程中\",{\"1\":{\"158\":1}}],[\"我们传入了一个对象\",{\"1\":{\"232\":1}}],[\"我们通常通过mixins在多个组件之间共享逻辑\",{\"1\":{\"226\":1}}],[\"我们通常会给元素或者组件绑定一个key属性\",{\"1\":{\"190\":1}}],[\"我们通常会使用脚手架来创建一个项目\",{\"1\":{\"106\":1}}],[\"我们通常会将应用程序和api服务分开部署\",{\"1\":{\"102\":1}}],[\"我们就是在每次\",{\"1\":{\"219\":1}}],[\"我们就可以检查\",{\"1\":{\"219\":1}}],[\"我们就必须监听用户发生的事件\",{\"1\":{\"177\":1}}],[\"我们声明了\",{\"1\":{\"219\":1}}],[\"我们的数据可能是来自服务器的\",{\"1\":{\"213\":1}}],[\"我们的html文件是编写在根目录下的\",{\"1\":{\"75\":1}}],[\"我们事实上先显示的是一个结果\",{\"1\":{\"201\":1}}],[\"我们有一个变量message\",{\"1\":{\"199\":1}}],[\"我们有一个分数\",{\"1\":{\"199\":1}}],[\"我们有两个变量\",{\"1\":{\"199\":1}}],[\"我们有没有什么方法可以将逻辑抽离出去呢\",{\"1\":{\"198\":1}}],[\"我们有data\",{\"1\":{\"154\":1}}],[\"我们可能需要对数据进行一些转化后再显示\",{\"1\":{\"198\":1}}],[\"我们可以有三种实现思路\",{\"1\":{\"199\":1}}],[\"我们可以确定的是\",{\"1\":{\"193\":1}}],[\"我们可以选择使用template\",{\"1\":{\"183\":1}}],[\"我们可以利用\",{\"1\":{\"172\":1}}],[\"我们可以把一个数组传给\",{\"1\":{\"171\":1}}],[\"我们可以传给\",{\"1\":{\"170\":1}}],[\"我们可以单独抽离组件\",{\"1\":{\"155\":1}}],[\"我们可以按照如下的方式进行拆分\",{\"1\":{\"115\":1,\"132\":1}}],[\"我们可以通过hook函数\",{\"1\":{\"226\":1}}],[\"我们可以通过一个后缀名为\",{\"1\":{\"155\":1}}],[\"我们可以通过\",{\"1\":{\"123\":1,\"140\":1}}],[\"我们可以通过cli选择项目的配置和创建出我们的项目\",{\"1\":{\"106\":1}}],[\"我们可以通过设置别名的方式来替换初识模块路径\",{\"1\":{\"104\":1}}],[\"我们可以通过webpack进行打包\",{\"1\":{\"48\":1}}],[\"我们可以直接在代码中使用template模板\",{\"1\":{\"235\":1}}],[\"我们可以直接使用\",{\"1\":{\"176\":1}}],[\"我们可以直接使用资源模块类型\",{\"1\":{\"71\":1}}],[\"我们可以直接给webpack提供一个\",{\"1\":{\"88\":1}}],[\"我们可以添加如下配置\",{\"1\":{\"76\":1}}],[\"我们可以借助于一个插件来帮助我们完成\",{\"1\":{\"74\":1}}],[\"我们可以使用this关键字来直接访问到data中返回的对象的属性\",{\"1\":{\"234\":1}}],[\"我们可以使用\",{\"1\":{\"81\":1,\"129\":1,\"146\":1,\"175\":1}}],[\"我们可以使用下面的方式\",{\"1\":{\"72\":1}}],[\"我们可以使用另外一个插件\",{\"1\":{\"63\":1}}],[\"我们可以使用less工具来完成它的编译转换\",{\"1\":{\"57\":1}}],[\"我们可以将babel的配置信息放到一个独立的文件中\",{\"1\":{\"89\":1}}],[\"我们可以将\",{\"1\":{\"62\":1}}],[\"我们可以在单个组件实例上创建多个\",{\"1\":{\"220\":1}}],[\"我们可以在created的生命周期\",{\"1\":{\"209\":1}}],[\"我们可以在app组件的template中直接使用这个全局组件\",{\"1\":{\"153\":1}}],[\"我们可以在上面的网站中查询一些添加css属性的样式\",{\"1\":{\"60\":1}}],[\"我们可以在根目录下创建一个webpack\",{\"1\":{\"51\":1}}],[\"我们知道\",{\"1\":{\"187\":1,\"198\":1}}],[\"我们往往会从服务器拿到一组数据\",{\"1\":{\"186\":1}}],[\"我们称之为\",{\"1\":{\"175\":1}}],[\"我们属性的名称可能也不是固定的\",{\"1\":{\"175\":1}}],[\"我们再vscode中我们可以生成一个代码片段\",{\"1\":{\"158\":1}}],[\"我们依然会对其进行打包\",{\"1\":{\"154\":1}}],[\"我们都推荐这样做\",{\"1\":{\"151\":1}}],[\"我们将一个完整的页面分成很多个组件\",{\"1\":{\"149\":1}}],[\"我们将所有以\",{\"1\":{\"102\":1}}],[\"我们讲一个页面拆分成一个个\",{\"1\":{\"149\":1}}],[\"我们人有一种天生的能力\",{\"1\":{\"149\":1}}],[\"我们不太可能一次性搞定一大堆的内容\",{\"1\":{\"149\":1}}],[\"我们不需要从零来配置\",{\"1\":{\"106\":1}}],[\"我们不需要手动去运行\",{\"1\":{\"93\":1}}],[\"我们构建了组件树之后\",{\"1\":{\"128\":1,\"145\":1}}],[\"我们如何完成上面的操作呢\",{\"1\":{\"125\":1,\"142\":1}}],[\"我们如何可以限制哪些大小的图片转换和不转换呢\",{\"1\":{\"66\":1}}],[\"我们指定了type为字符串\",{\"1\":{\"120\":1,\"137\":1}}],[\"我们开发对应的逻辑只需要去对应的组件编写就可\",{\"1\":{\"115\":1,\"132\":1}}],[\"我们会通过\",{\"1\":{\"226\":1}}],[\"我们会采用组件化的方式来进行开发\",{\"1\":{\"155\":1}}],[\"我们会经常遇到需要组件之间相互进行通信\",{\"1\":{\"116\":1,\"133\":1}}],[\"我们会对组件进行拆分\",{\"1\":{\"114\":1,\"131\":1}}],[\"我们会有更多的内容和代码逻辑\",{\"1\":{\"114\":1,\"131\":1}}],[\"我们会发现是完全不同的\",{\"1\":{\"230\":1}}],[\"我们会发现methods在多次使用时\",{\"1\":{\"203\":1}}],[\"我们会发现计算属性和methods的实现看起来是差别是不大的\",{\"1\":{\"203\":1}}],[\"我们会发现无论是直观上\",{\"1\":{\"202\":1}}],[\"我们会发现上面的diff算法效率并不高\",{\"1\":{\"194\":1}}],[\"我们会发现\",{\"1\":{\"114\":1,\"131\":1}}],[\"我们会看不到图片文件\",{\"1\":{\"65\":1}}],[\"我们来创建一个自定义的修饰符\",{\"1\":{\"219\":1}}],[\"我们来看三个案例\",{\"1\":{\"199\":1}}],[\"我们来分析一下下面代码的嵌套逻辑\",{\"1\":{\"114\":1,\"131\":1}}],[\"我们来安装postcss\",{\"1\":{\"62\":1}}],[\"我们只需要在中间插入一个\",{\"1\":{\"193\":1}}],[\"我们只需要开启即可\",{\"1\":{\"95\":1}}],[\"我们只是创建了一个组件app\",{\"1\":{\"114\":1,\"131\":1}}],[\"我们选择\",{\"1\":{\"108\":1}}],[\"我们前面学习了如何通过webpack配置vue的开发环境\",{\"1\":{\"106\":1}}],[\"我们最好对配置进行划分\",{\"1\":{\"105\":1}}],[\"我们使用template来对多个元素进行包裹\",{\"1\":{\"188\":1}}],[\"我们使用驼峰式命名myprop\",{\"1\":{\"121\":1,\"138\":1}}],[\"我们使用短横线分隔的形式\",{\"1\":{\"121\":1,\"138\":1}}],[\"我们使用了\",{\"1\":{\"103\":1}}],[\"我们使用函数方式的proxy选项来动态配置代理规则\",{\"1\":{\"102\":1}}],[\"我们还设置了changeorigin选项为true\",{\"1\":{\"102\":1}}],[\"我们还希望实时的监听文件的变化来并且反映到浏览器上\",{\"1\":{\"43\":1}}],[\"我们希望在代码逻辑中监听某个数据的变化\",{\"1\":{\"205\":1}}],[\"我们希望在不适用live\",{\"1\":{\"94\":1}}],[\"我们希望将这部分内容抽取到一个独立的组件中去维护\",{\"1\":{\"152\":1}}],[\"我们希望可以做到\",{\"1\":{\"92\":1}}],[\"我们导入了\",{\"1\":{\"90\":1}}],[\"我们之前通过cdn引入和下载的vue版本就是这个版本\",{\"1\":{\"90\":1}}],[\"我们想要使用es6+的语法\",{\"1\":{\"81\":1}}],[\"我们先来看一个案例\",{\"1\":{\"193\":1}}],[\"我们先来看一下官方的解释\",{\"1\":{\"190\":1}}],[\"我们先来解释一下vnode的概念\",{\"1\":{\"191\":1}}],[\"我们先从简单的开始谈起\",{\"1\":{\"152\":1}}],[\"我们先安装这个插件\",{\"1\":{\"74\":1}}],[\"我们先梳理一下js中的数据类型\",{\"1\":{\"1\":1}}],[\"我们当前使用的webpack版本是webpack5\",{\"1\":{\"71\":1}}],[\"我们这里介绍几个最常用的placeholder\",{\"1\":{\"68\":1}}],[\"我们也经常称vue是一个mvvm的框架\",{\"1\":{\"231\":1}}],[\"我们也可以通过\",{\"1\":{\"129\":1,\"146\":1}}],[\"我们也可以通过配置来指定入口和出口\",{\"1\":{\"48\":1}}],[\"我们也需要有对应的loader\",{\"1\":{\"64\":1}}],[\"我们直接修改掉之前的\",{\"1\":{\"63\":1}}],[\"我们配置插件并不需要使用autoprefixer\",{\"1\":{\"63\":1}}],[\"我们编写一个需要添加前缀的css\",{\"1\":{\"60\":1}}],[\"我们已经可以通过css\",{\"1\":{\"56\":1}}],[\"我们需要使用render函数来手动编写渲染逻辑\",{\"1\":{\"235\":1}}],[\"我们需要根据当前的条件决定某些元素或组件是否渲染\",{\"1\":{\"181\":1}}],[\"我们需要经常和用户进行各种各样的交互\",{\"1\":{\"177\":1}}],[\"我们需要通过组件化的思想来思考整个应用程序\",{\"1\":{\"149\":1}}],[\"我们需要在子组件中定义好在某些情况下触发的事件名称\",{\"1\":{\"125\":1,\"142\":1}}],[\"我们需要合适的loader来处理文件\",{\"1\":{\"90\":1}}],[\"我们需要一个可以挂载后续组件的根标签\",{\"1\":{\"76\":1}}],[\"我们需要一个可以读取css文件的loader\",{\"1\":{\"55\":1}}],[\"我们需要安装\",{\"1\":{\"63\":1}}],[\"我们需要借助于postcss对应的插件\",{\"1\":{\"59\":1}}],[\"我们需要同时安装webpack\",{\"1\":{\"47\":1}}],[\"我们发现是可以正常进行打包的\",{\"1\":{\"48\":1}}],[\"我们安装一下vite工具\",{\"1\":{\"25\":1}}],[\"我们详细对比了开发环境中的vite和webpack\",{\"1\":{\"22\":1}}],[\"仍然会继承非prop的attribute\",{\"1\":{\"123\":1,\"140\":1}}],[\"仍然报错\",{\"1\":{\"90\":1}}],[\"继续执行父元素的事件处理函数\",{\"1\":{\"180\":1}}],[\"继续执行webpack命令\",{\"1\":{\"51\":1}}],[\"继承\",{\"0\":{\"123\":1,\"140\":1}}],[\"多选框\",{\"1\":{\"213\":1}}],[\"多次使用方法的时候\",{\"1\":{\"201\":1}}],[\"多次使用的时候\",{\"1\":{\"200\":1}}],[\"多平台的渲染\",{\"1\":{\"191\":1}}],[\"多个\",{\"0\":{\"220\":1}}],[\"多个根节点的attribute如果没有显示的绑定\",{\"1\":{\"124\":1,\"141\":1}}],[\"多个根节点的attribute\",{\"0\":{\"124\":1,\"141\":1}}],[\"多个可能的类型\",{\"1\":{\"121\":1,\"138\":1}}],[\"多模块项目开发中启动慢\",{\"1\":{\"22\":1}}],[\"父组件不需要知道哪些子组件使用它\",{\"1\":{\"129\":1,\"146\":1}}],[\"父组件有一个\",{\"1\":{\"129\":1,\"146\":1}}],[\"父组件都可以作为其所有子组件的依赖提供者\",{\"1\":{\"129\":1,\"146\":1}}],[\"父组件\",{\"1\":{\"125\":1,\"142\":1}}],[\"父组件需要切换内容\",{\"1\":{\"125\":1,\"142\":1}}],[\"父组件将其数据parentvalue传递给子组件的myprop\",{\"1\":{\"121\":1,\"138\":1}}],[\"父组件使用\",{\"1\":{\"120\":1,\"137\":1}}],[\"父组件使用message=\",{\"1\":{\"119\":1,\"136\":1}}],[\"父组件传递给子组件\",{\"1\":{\"116\":1,\"133\":1}}],[\"父传子\",{\"0\":{\"117\":1,\"134\":1}}],[\"父子组件之间如何进行通信呢\",{\"1\":{\"116\":1,\"133\":1}}],[\"那就需要子组件向父组件传递事件\",{\"1\":{\"116\":1,\"133\":1}}],[\"那么将返回原始值\",{\"1\":{\"217\":1}}],[\"那么久使用\",{\"1\":{\"194\":1}}],[\"那么它们应该会形成一个\",{\"1\":{\"192\":1}}],[\"那么使用v\",{\"1\":{\"185\":2}}],[\"那么会有大量重复的代码\",{\"1\":{\"198\":1}}],[\"那么会默认将原生事件event参数传递进去\",{\"1\":{\"179\":1}}],[\"那么会报警告\",{\"1\":{\"124\":1,\"141\":1}}],[\"那么会报错\",{\"1\":{\"48\":1}}],[\"那么方法后的\",{\"1\":{\"179\":1}}],[\"那么可以使用\",{\"1\":{\"163\":1}}],[\"那么vue中对于列表的更新究竟是如何操作的呢\",{\"1\":{\"193\":1}}],[\"那么vue并不会对其进行特殊的解析\",{\"1\":{\"163\":1}}],[\"那么vite是如何解决如webpack这样的构建工具一样\",{\"1\":{\"22\":1}}],[\"那么之后整个页面\",{\"1\":{\"149\":1}}],[\"那么这个this就会是window了\",{\"1\":{\"234\":1}}],[\"那么这个this是必须有值的\",{\"1\":{\"234\":1}}],[\"那么这个class或style属性就会被添加到<div>元素上\",{\"1\":{\"122\":1,\"139\":1}}],[\"那么这个组件就会变成非常的臃肿和难以维护\",{\"1\":{\"114\":1,\"131\":1}}],[\"那么就移除旧节点\",{\"1\":{\"194\":1}}],[\"那么就新增节点\",{\"1\":{\"194\":1}}],[\"那么就使用\",{\"1\":{\"194\":1}}],[\"那么就意味着类似于webpack这种打包工具在打包我们的项目时\",{\"1\":{\"154\":1}}],[\"那么就意味着如果某些组件我们并没有用到\",{\"1\":{\"154\":1}}],[\"那么就需要传递给他们来进行展示\",{\"1\":{\"116\":1,\"133\":1}}],[\"那么就会去\",{\"1\":{\"96\":1}}],[\"那么代码将被重新编译\",{\"1\":{\"93\":1}}],[\"那么需要手动来管理大量的babel插件\",{\"1\":{\"88\":1}}],[\"那么\",{\"1\":{\"66\":1}}],[\"那么我们这个this能不能是window呢\",{\"1\":{\"234\":1}}],[\"那么我们就可以先将值请求下来\",{\"1\":{\"213\":1}}],[\"那么我们就可以使用箭头函数转换相关的插件\",{\"1\":{\"83\":1}}],[\"那么我们就需要使用者传递给header一些数据\",{\"1\":{\"116\":1,\"133\":1}}],[\"那么我们可以将请求先发送到一个代理服务器\",{\"1\":{\"102\":1}}],[\"那么我们可以按照如下的格式编写\",{\"1\":{\"69\":1}}],[\"那么我们应该如何使用style\",{\"1\":{\"56\":1}}],[\"那么我们还需要另外一个loader\",{\"1\":{\"56\":1}}],[\"又比如我们在main中一次性请求了banner数据和productlist数据\",{\"1\":{\"116\":1,\"133\":1}}],[\"又不会像webpack一样需要了解庞大的loader\",{\"1\":{\"23\":1}}],[\"按钮1发生了点击\",{\"1\":{\"178\":1}}],[\"按钮的点击\",{\"1\":{\"153\":1,\"155\":1}}],[\"按照如上的拆分方式后\",{\"1\":{\"115\":1,\"132\":1}}],[\"按顺序执行\",{\"1\":{\"35\":1}}],[\"假如我们将所有的代码逻辑都放到一个app\",{\"1\":{\"114\":1,\"131\":1}}],[\"假设我们有一个使用箭头函数和\",{\"1\":{\"81\":1}}],[\"组件作用域的\",{\"1\":{\"236\":1}}],[\"组件作用域的css\",{\"1\":{\"155\":1}}],[\"组件上的每一个\",{\"1\":{\"220\":1}}],[\"组件内部需要做两件事\",{\"1\":{\"211\":1}}],[\"组件对象\",{\"1\":{\"154\":1}}],[\"组件对象即可注册一个全局组件了\",{\"1\":{\"153\":1}}],[\"组件注册代码来配合不同来源的模板\",{\"1\":{\"151\":1}}],[\"组件名称\",{\"0\":{\"151\":1}}],[\"组件化提供了一种抽象\",{\"1\":{\"150\":1}}],[\"组件化也是类似的思想\",{\"1\":{\"149\":1}}],[\"组件\",{\"1\":{\"130\":2,\"147\":2,\"150\":1}}],[\"组件的模板\",{\"1\":{\"236\":1}}],[\"组件的\",{\"1\":{\"219\":1}}],[\"组件的名称\",{\"1\":{\"154\":1}}],[\"组件的通信\",{\"0\":{\"116\":1,\"133\":1}}],[\"组件的拆分\",{\"0\":{\"115\":1,\"132\":1}}],[\"组件的方式进行构建\",{\"1\":{\"111\":1}}],[\"组件之间的通信\",{\"0\":{\"113\":1}}],[\"监听的事件=\",{\"1\":{\"178\":1}}],[\"监听了\",{\"1\":{\"130\":1,\"147\":1}}],[\"监听文件变化\",{\"1\":{\"111\":1}}],[\"监视文件的变化\",{\"1\":{\"92\":1}}],[\"面向现代浏览器带自动回退地构建应用\",{\"1\":{\"111\":1}}],[\"覆盖\",{\"1\":{\"110\":1}}],[\"尝试使用\",{\"1\":{\"110\":1}}],[\"里\",{\"1\":{\"111\":1}}],[\"里的\",{\"1\":{\"110\":1}}],[\"里面存放一个main\",{\"1\":{\"48\":1}}],[\"由框架\",{\"1\":{\"230\":1}}],[\"由options\",{\"1\":{\"226\":1}}],[\"由yarn管理\",{\"1\":{\"109\":1}}],[\"由于包含了编译代码\",{\"1\":{\"235\":1}}],[\"由于html属性不区分大小写\",{\"1\":{\"121\":1,\"138\":1}}],[\"由于已经获得文件的绝对路径\",{\"1\":{\"104\":1}}],[\"由于esbuild转换ts到js对于类型操作仅仅是擦除\",{\"1\":{\"40\":1}}],[\"由于esm是一个比较新的模块化方案\",{\"1\":{\"35\":1}}],[\"由于esm编译时就能确定模块的依赖关系\",{\"1\":{\"35\":1}}],[\"由于\",{\"1\":{\"39\":1}}],[\"由于模块依赖了另一些模块\",{\"1\":{\"37\":1}}],[\"关于typescript的配置文件\",{\"1\":{\"109\":1}}],[\"作用是设置兼容性\",{\"1\":{\"109\":1}}],[\"源文件目录\",{\"1\":{\"109\":1}}],[\"源码使用typescript来进行重写\",{\"1\":{\"224\":1}}],[\"源码通过monorepo的形式来管理源代码\",{\"1\":{\"224\":1}}],[\"源码\",{\"1\":{\"37\":1}}],[\"源码模块协商缓存\",{\"1\":{\"22\":1}}],[\"网络请求\",{\"1\":{\"206\":1}}],[\"网站的显示图标\",{\"1\":{\"109\":1}}],[\"网球\",{\"1\":{\"12\":3,\"13\":1,\"14\":1,\"213\":1}}],[\"公共文件夹\",{\"1\":{\"109\":1}}],[\"项目\",{\"1\":{\"223\":1}}],[\"项目会默认帮助我们配置好所有的配置选项\",{\"1\":{\"156\":1}}],[\"项目起始文件\",{\"1\":{\"150\":1}}],[\"项目则为\",{\"1\":{\"110\":1}}],[\"项目中\",{\"1\":{\"109\":1}}],[\"项目的\",{\"1\":{\"112\":1}}],[\"项目的说明文件\",{\"1\":{\"109\":1}}],[\"项目的用户界面\",{\"1\":{\"106\":1}}],[\"项目结构\",{\"0\":{\"109\":1}}],[\"界面预览\",{\"1\":{\"108\":1}}],[\"测试是一种测试方法\",{\"1\":{\"108\":1}}],[\"端到端\",{\"1\":{\"108\":1}}],[\"单页面应用\",{\"1\":{\"236\":1}}],[\"单元测试等\",{\"1\":{\"224\":1}}],[\"单元测试是一种软件测试方法\",{\"1\":{\"108\":1}}],[\"单个\",{\"1\":{\"224\":1}}],[\"单选框\",{\"1\":{\"213\":1}}],[\"单文件组件\",{\"1\":{\"155\":1}}],[\"单文件组件支持\",{\"1\":{\"32\":1}}],[\"函数\",{\"1\":{\"160\":1}}],[\"函数传入了一个对象app\",{\"1\":{\"150\":1}}],[\"函数等高级功能\",{\"1\":{\"108\":1}}],[\"函数也可以用来导入你自己的模块\",{\"1\":{\"90\":1}}],[\"嵌套规则\",{\"1\":{\"108\":1}}],[\"手动选择需要获取的特性\",{\"1\":{\"108\":1}}],[\"手写循环递归\",{\"1\":{\"15\":1}}],[\"手写递归\",{\"0\":{\"6\":1,\"12\":1}}],[\"检查插件新版本时\",{\"1\":{\"107\":1}}],[\"地址安装依赖\",{\"1\":{\"107\":1}}],[\"到\",{\"1\":{\"226\":1}}],[\"到表达式\",{\"1\":{\"167\":1}}],[\"到指定的版本\",{\"1\":{\"107\":1}}],[\"到被加载的那个模块内取值\",{\"1\":{\"35\":1}}],[\"升级所有的插件\",{\"1\":{\"107\":1}}],[\"升级\",{\"1\":{\"107\":2}}],[\"试用\",{\"1\":{\"107\":1}}],[\"看看是否展示出了一份所有可用命令的帮助信息\",{\"1\":{\"107\":1}}],[\"看一下esm的解析过程\",{\"1\":{\"35\":1}}],[\"推荐两种做法\",{\"1\":{\"210\":1}}],[\"推荐\",{\"1\":{\"107\":1}}],[\"95\",{\"1\":{\"182\":1}}],[\"90\",{\"1\":{\"182\":1,\"203\":1,\"217\":1}}],[\"9\",{\"1\":{\"107\":1,\"210\":1}}],[\"与其关联的表单控件会获得焦点\",{\"1\":{\"213\":1}}],[\"与\",{\"1\":{\"192\":1}}],[\"与此同时\",{\"1\":{\"106\":1}}],[\"与commonjs\",{\"1\":{\"35\":1}}],[\"致力于将\",{\"1\":{\"106\":1}}],[\"集成了前端生态中最好的工具\",{\"1\":{\"106\":1}}],[\"集成度更高\",{\"1\":{\"20\":1}}],[\"所绑定的\",{\"1\":{\"167\":1}}],[\"所有后续所有的内容都要一次进行改动\",{\"1\":{\"194\":1}}],[\"所有\",{\"1\":{\"114\":1,\"131\":1,\"198\":1}}],[\"所有的项目依赖包都放在这个目录下\",{\"1\":{\"109\":1}}],[\"所有的webpack配置\",{\"1\":{\"106\":1}}],[\"所以就是window\",{\"1\":{\"234\":1}}],[\"所以就会break跳出循环\",{\"1\":{\"194\":1}}],[\"所以这些属性在第一次调用时就是可用的\",{\"1\":{\"207\":1}}],[\"所以这里我们选择vue就行了\",{\"1\":{\"26\":1}}],[\"所以目前我们先理解html元素创建出来的vnode\",{\"1\":{\"191\":1}}],[\"所以它们也将会触发视图更新\",{\"1\":{\"189\":1}}],[\"所以它是一个打包工具\",{\"1\":{\"44\":1}}],[\"所以必须将其添加到一个元素上\",{\"1\":{\"183\":1}}],[\"所以对应的代码都是编写的类似于js的一种语法\",{\"1\":{\"159\":1}}],[\"所以组件化的核心思想应该是对组件进行拆分\",{\"1\":{\"114\":1,\"131\":1}}],[\"所以要有定义文件\",{\"1\":{\"109\":1}}],[\"所以要安装autoprefixer\",{\"1\":{\"61\":1}}],[\"所以在\",{\"1\":{\"225\":1}}],[\"所以在开发中我们通常使用组件的时候采用的都是局部注册\",{\"1\":{\"154\":1}}],[\"所以在模板中使用驼峰式命名的props时\",{\"1\":{\"121\":1,\"138\":1}}],[\"所以在真实开发中\",{\"1\":{\"106\":1,\"155\":1}}],[\"所以在安装webpack时\",{\"1\":{\"47\":1}}],[\"所以默认会从node\",{\"1\":{\"104\":1}}],[\"所以当你试图在组件中使用\",{\"1\":{\"90\":1}}],[\"所以会出现没有定义的错误\",{\"1\":{\"77\":1}}],[\"所以相当于已经内置了\",{\"1\":{\"63\":1}}],[\"所以\",{\"1\":{\"48\":1,\"81\":1,\"105\":1,\"149\":2,\"194\":1}}],[\"所以我们修改\",{\"1\":{\"233\":1}}],[\"所以我们在\",{\"1\":{\"233\":1}}],[\"所以我们会将计算属性直接写成一个函数\",{\"1\":{\"204\":1}}],[\"所以我们可以发现\",{\"1\":{\"195\":1}}],[\"所以我们可以在package\",{\"1\":{\"52\":1}}],[\"所以我们一般会借助于一个在线工具来完成\",{\"1\":{\"158\":1}}],[\"所以我们也需要对index\",{\"1\":{\"75\":1}}],[\"所以我们需要配置它的plugin\",{\"1\":{\"62\":1}}],[\"所以我们需要将style\",{\"1\":{\"56\":1}}],[\"所以我们需要先安装node\",{\"1\":{\"46\":1}}],[\"所以我们电脑上必须有node环境\",{\"1\":{\"46\":1}}],[\"所以完全保证不了类型正确\",{\"1\":{\"40\":1}}],[\"所以从一开始就可以考虑各种性能问题\",{\"1\":{\"36\":1}}],[\"zh\",{\"1\":{\"106\":1}}],[\"zs\",{\"1\":{\"12\":2,\"13\":1,\"14\":1}}],[\"编程珠玑\",{\"1\":{\"210\":1}}],[\"编写dom元素的模板方式\",{\"0\":{\"235\":1}}],[\"编写的代码基本都在这个目录下\",{\"1\":{\"109\":1}}],[\"编写两个不同的配置文件\",{\"1\":{\"105\":1}}],[\"编译相关的代码\",{\"1\":{\"92\":1}}],[\"编译器\",{\"1\":{\"81\":1}}],[\"境都会使用的\",{\"1\":{\"105\":1}}],[\"区分开发\",{\"0\":{\"105\":1}}],[\"绝对路径\",{\"1\":{\"104\":1}}],[\"找到需要引入到合适的模块代码\",{\"1\":{\"104\":1}}],[\"应该怎么做呢\",{\"1\":{\"176\":1}}],[\"应该已经自带\",{\"1\":{\"109\":1}}],[\"应该由服务器来处理\",{\"1\":{\"103\":1}}],[\"应用补丁\",{\"1\":{\"194\":1}}],[\"应用一系列的转换规则\",{\"1\":{\"87\":1}}],[\"应用程序会保持运行状态\",{\"1\":{\"98\":1}}],[\"应用程序运行过程中\",{\"1\":{\"95\":1}}],[\"应用程序都使用它来构建和部署\",{\"1\":{\"81\":1}}],[\"应用程序的\",{\"1\":{\"44\":1}}],[\"页面会改变\",{\"1\":{\"207\":2}}],[\"页面\",{\"1\":{\"103\":3}}],[\"页面没有效果\",{\"1\":{\"56\":1}}],[\"错误用法\",{\"1\":{\"160\":1}}],[\"错误跳转到指定页面的效果\",{\"1\":{\"103\":1}}],[\"错误跳转到一个名为\",{\"1\":{\"103\":1}}],[\"错误页面\",{\"1\":{\"103\":1}}],[\"错误\",{\"1\":{\"103\":1}}],[\"路径和资源\",{\"1\":{\"103\":1}}],[\"路径是\",{\"1\":{\"41\":1}}],[\"上被使用了\",{\"1\":{\"219\":1}}],[\"上所添加的修饰符\",{\"1\":{\"219\":1}}],[\"上下文自动地绑定为组件实例\",{\"1\":{\"198\":1}}],[\"上面列出来的命令是用于升级全局的\",{\"1\":{\"107\":1}}],[\"上面的方法会直接修改原来的数组\",{\"1\":{\"189\":1}}],[\"上面的方式可以监听到文件的变化\",{\"1\":{\"94\":1}}],[\"上面的例子中使用的是\",{\"1\":{\"154\":1}}],[\"上面的嵌套逻辑如下\",{\"1\":{\"116\":1,\"133\":1}}],[\"上面的代码中\",{\"1\":{\"76\":1}}],[\"上运行且证书无效的后端服务器\",{\"1\":{\"102\":1}}],[\"除了\",{\"1\":{\"129\":1,\"146\":1}}],[\"除了父子组件之间的通信之外\",{\"1\":{\"128\":1,\"145\":1}}],[\"除了通过命令行参数\",{\"1\":{\"110\":1}}],[\"除了对象方式的proxy选项外\",{\"1\":{\"102\":1}}],[\"除了ie\",{\"1\":{\"35\":1}}],[\"否则就会直接在浏览器中报错\",{\"1\":{\"233\":1}}],[\"否则就跳过\",{\"1\":{\"37\":1}}],[\"否则选择\",{\"1\":{\"108\":1}}],[\"否则\",{\"1\":{\"102\":1}}],[\"改变请求头中的origin字段\",{\"1\":{\"102\":1}}],[\"改进了开发服务器启动时间\",{\"1\":{\"37\":1}}],[\"个时候发送网络请求就会出现跨域的问题\",{\"1\":{\"102\":1}}],[\"简称\",{\"1\":{\"236\":1}}],[\"简单案例\",{\"0\":{\"206\":1}}],[\"简而言之\",{\"1\":{\"100\":1}}],[\"简化部署\",{\"1\":{\"49\":1}}],[\"前端面试之彻底搞懂this指向\",{\"1\":{\"234\":1}}],[\"前端\",{\"1\":{\"231\":1}}],[\"前端我们无论绑定src\",{\"1\":{\"175\":1}}],[\"前面我们绑定了元素的内容和属性\",{\"1\":{\"177\":1}}],[\"前提是网络连接和防火墙允许\",{\"1\":{\"100\":1}}],[\"前者是存储在栈内存中\",{\"1\":{\"1\":1}}],[\"总结起来\",{\"1\":{\"98\":1}}],[\"向连接的客户端发送更新通知\",{\"1\":{\"98\":1}}],[\"该内容再加载页面时不会被呈现\",{\"1\":{\"232\":1}}],[\"该回调将会在侦听开始之后立即调用\",{\"1\":{\"208\":1}}],[\"该回调将会在被侦听的对象的属性改变时调动\",{\"1\":{\"208\":1}}],[\"该回调函数接受被侦听源的新值和旧值\",{\"1\":{\"205\":1}}],[\"该指令只在没有构建步骤的环境下需要使用\",{\"1\":{\"166\":1}}],[\"该指令可以用于性能优化\",{\"1\":{\"162\":1}}],[\"该components选项对应的是一个对象\",{\"1\":{\"154\":1}}],[\"该依赖\",{\"1\":{\"106\":1}}],[\"该服务还支持一些特殊的路由\",{\"1\":{\"98\":1}}],[\"该服务可以将webpack打包后的静态资源文件\",{\"1\":{\"98\":1}}],[\"该服务与静态资源服务配合使用\",{\"1\":{\"98\":1}}],[\"该命令仍然可以正常运行\",{\"1\":{\"94\":1}}],[\"长连接有一个最好的好处是建立连接后双方可以通信\",{\"1\":{\"98\":1}}],[\"具有默认值的函数\",{\"1\":{\"121\":1,\"138\":1}}],[\"具体看\",{\"1\":{\"234\":1}}],[\"具体可以看\",{\"1\":{\"213\":1}}],[\"具体的步骤如下\",{\"1\":{\"158\":1}}],[\"具体后面讲解alias的配置\",{\"1\":{\"104\":1}}],[\"具体而言\",{\"1\":{\"97\":1,\"98\":1}}],[\"具备合理的默认设置\",{\"1\":{\"18\":1}}],[\"都会同步不同的\",{\"1\":{\"220\":1}}],[\"都是可接受的\",{\"1\":{\"151\":1}}],[\"都对模块热替换\",{\"1\":{\"97\":1}}],[\"都需要手动删除dist文件夹\",{\"1\":{\"74\":1}}],[\"框架提供的一个功能\",{\"1\":{\"236\":1}}],[\"框架使用webpack的\",{\"1\":{\"97\":1}}],[\"框架内置了对hmr的支持\",{\"1\":{\"97\":1}}],[\"框架通常使用webpack的\",{\"1\":{\"97\":1}}],[\"框架\",{\"0\":{\"97\":1}}],[\"用途\",{\"1\":{\"167\":1}}],[\"用户可能先看到的是还没编译完成的双大括号标签\",{\"1\":{\"166\":1}}],[\"用户在下载对应的javascript时也会增加包\",{\"1\":{\"154\":1}}],[\"用法如下\",{\"1\":{\"205\":1}}],[\"用法\",{\"1\":{\"107\":1,\"110\":1,\"111\":1,\"112\":1,\"167\":1,\"177\":1}}],[\"用来配置那些文件不归git管理\",{\"1\":{\"109\":1}}],[\"用来配置代理\",{\"1\":{\"99\":1}}],[\"用来指定静态资源的根目录\",{\"1\":{\"96\":1,\"99\":1}}],[\"用来指定打包后的代码在哪个环境下运行\",{\"1\":{\"96\":1,\"99\":1}}],[\"用于声明在数据更改时调用的侦听回调\",{\"1\":{\"205\":1}}],[\"用于阻止事件冒泡\",{\"1\":{\"180\":1}}],[\"用于隐藏尚未完成编译的\",{\"1\":{\"166\":1}}],[\"用于更新元素的\",{\"1\":{\"164\":1}}],[\"用于指定符号类型的属性\",{\"1\":{\"121\":1,\"138\":1}}],[\"用于指定函数类型的属性\",{\"1\":{\"121\":1,\"138\":1}}],[\"用于指定日期类型的属性\",{\"1\":{\"121\":1,\"138\":1}}],[\"用于指定对象类型的属性\",{\"1\":{\"121\":1,\"138\":1}}],[\"用于指定数组类型的属性\",{\"1\":{\"121\":1,\"138\":1}}],[\"用于指定数字类型的属性\",{\"1\":{\"121\":1,\"138\":1}}],[\"用于指定布尔类型的属性\",{\"1\":{\"121\":1,\"138\":1}}],[\"用于指定字符串类型的属性\",{\"1\":{\"121\":1,\"138\":1}}],[\"用于模拟用户在应用程序中执行的实际操作\",{\"1\":{\"108\":1}}],[\"用于验证应用程序中各个部分的功能是否按预期工作\",{\"1\":{\"108\":1}}],[\"用于强制执行一致的代码风格和检测潜在的错误\",{\"1\":{\"108\":1}}],[\"用于实现单页面应用程序\",{\"1\":{\"108\":1}}],[\"用于将新版本的javascript代码转换为向后兼容的旧版本\",{\"1\":{\"108\":1}}],[\"用于将特定版本的\",{\"1\":{\"84\":1}}],[\"用于创建模块的别名\",{\"1\":{\"104\":1}}],[\"用于配置在导入模块时\",{\"1\":{\"104\":1}}],[\"用于配置在导入模块时可以省略的文件扩展名\",{\"1\":{\"104\":1}}],[\"用于配置\",{\"1\":{\"104\":1}}],[\"用于配置模块解析的规则\",{\"1\":{\"104\":1}}],[\"用于代替\",{\"1\":{\"103\":1}}],[\"用于控制当使用\",{\"1\":{\"103\":1}}],[\"用于控制vue框架的不同特性的开启和关闭\",{\"1\":{\"91\":1}}],[\"用于与客户端建立websocket通信\",{\"1\":{\"98\":1}}],[\"用于与客户端进行实时通信\",{\"1\":{\"98\":1}}],[\"用于在大型应用程序中管理和共享状态\",{\"1\":{\"108\":1}}],[\"用于在开发过程中启用hmr功能\",{\"1\":{\"97\":1}}],[\"用于在开发过程中提供一个简单的服务器\",{\"1\":{\"92\":1}}],[\"用于在打包过程中对文件进行预处理\",{\"1\":{\"54\":1}}],[\"用于转换\",{\"1\":{\"84\":3}}],[\"用于对\",{\"1\":{\"55\":1}}],[\"用于管理项目的信息\",{\"1\":{\"49\":1}}],[\"用于展示你的内容\",{\"1\":{\"44\":1}}],[\"用于解构赋值\",{\"1\":{\"7\":1}}],[\"用于数组字面量\",{\"1\":{\"7\":1}}],[\"用于函数调用\",{\"1\":{\"7\":1}}],[\"整个页面会自动刷新\",{\"1\":{\"95\":1}}],[\"整理出代码中的所有模块依赖关系\",{\"1\":{\"35\":1}}],[\"节省开发的时间\",{\"1\":{\"95\":1}}],[\"替换数组的方法\",{\"1\":{\"189\":1}}],[\"替换\",{\"1\":{\"95\":1}}],[\"翻译为模块热替换\",{\"1\":{\"95\":1}}],[\"实例化\",{\"1\":{\"232\":1}}],[\"实际上\",{\"1\":{\"129\":1,\"146\":1}}],[\"实时重新加载\",{\"1\":{\"94\":1}}],[\"实现思路一\",{\"1\":{\"200\":1}}],[\"实现的零配置原型开发\",{\"1\":{\"106\":1}}],[\"实现的交互式的项目脚手架\",{\"1\":{\"106\":1}}],[\"实现了将\",{\"1\":{\"103\":1}}],[\"实现在文件发生变化时自动重新编译\",{\"1\":{\"92\":1}}],[\"实现\",{\"0\":{\"202\":1},\"1\":{\"71\":3}}],[\"实现浅拷贝\",{\"1\":{\"16\":1}}],[\"实现深拷贝\",{\"1\":{\"16\":1}}],[\"结合使用\",{\"0\":{\"183\":1}}],[\"结合其他服务器框架使用\",{\"1\":{\"92\":1}}],[\"结果是一致的\",{\"1\":{\"68\":1}}],[\"查看执行对应的源码\",{\"1\":{\"237\":1}}],[\"查看效果\",{\"1\":{\"92\":1}}],[\"查找postcss在构建工具中的扩展\",{\"1\":{\"59\":1}}],[\"打开链接\",{\"1\":{\"229\":1}}],[\"打开index\",{\"1\":{\"92\":1}}],[\"打印结果如下\",{\"1\":{\"203\":1}}],[\"打包项目\",{\"1\":{\"237\":1}}],[\"打包后的资源直接被浏览器请求和解析\",{\"1\":{\"98\":1}}],[\"打包依然会报错\",{\"1\":{\"90\":1}}],[\"打包一个个模块\",{\"1\":{\"53\":1}}],[\"打包html资源文件\",{\"1\":{\"45\":1}}],[\"打包bundler\",{\"1\":{\"44\":1}}],[\"打包优化等的\",{\"1\":{\"43\":1}}],[\"打包合并\",{\"1\":{\"22\":1}}],[\"打包文件小且干净\",{\"1\":{\"20\":1}}],[\"打包你的代码\",{\"1\":{\"18\":1}}],[\"操作步骤\",{\"1\":{\"237\":1}}],[\"操作符来检查该元素上是否定义了和绑定的\",{\"1\":{\"167\":1}}],[\"操作二\",{\"1\":{\"92\":1}}],[\"操作一\",{\"1\":{\"92\":1}}],[\"建议查阅相应框架的官方文档或社区资源\",{\"1\":{\"97\":1}}],[\"建议开发人员在使用vue框架时正确配置bundler\",{\"1\":{\"91\":1}}],[\"建立js映射文件\",{\"1\":{\"79\":1}}],[\"还是效果上计算属性都是更好的选择\",{\"1\":{\"202\":1}}],[\"还是跨平台方案\",{\"1\":{\"149\":1}}],[\"还会有非父子组件之间的通信\",{\"1\":{\"128\":1,\"145\":1}}],[\"还可以使用函数方式的proxy选项来进行更灵活的配置\",{\"1\":{\"102\":1}}],[\"还可以减少应用程序的复杂性\",{\"1\":{\"91\":1}}],[\"还提供了强大的扩展性\",{\"1\":{\"18\":1}}],[\"此时已经处理了\",{\"1\":{\"207\":1}}],[\"此时我们渲染div\",{\"1\":{\"183\":1}}],[\"此时会返回\",{\"1\":{\"103\":1}}],[\"此时重新\",{\"1\":{\"90\":1}}],[\"此外\",{\"1\":{\"91\":1,\"92\":1}}],[\"效果\",{\"1\":{\"91\":1}}],[\"禁用attribute继承的常见情况是需要将attribute应用于根元素之外的其他元素\",{\"1\":{\"123\":1,\"140\":1}}],[\"禁用\",{\"0\":{\"123\":1,\"140\":1}}],[\"禁用生产环境下的devtools支持\",{\"1\":{\"91\":1}}],[\"禁用options\",{\"1\":{\"91\":1}}],[\"启用gzip压缩\",{\"1\":{\"101\":1}}],[\"启用\",{\"1\":{\"91\":2}}],[\"启动本地服务\",{\"1\":{\"94\":1}}],[\"启动后会做一堆事情\",{\"1\":{\"22\":1}}],[\"启动时还会使用\",{\"1\":{\"22\":1}}],[\"报错\",{\"1\":{\"90\":1}}],[\"报错如下\",{\"1\":{\"90\":1}}],[\"则\",{\"1\":{\"167\":1}}],[\"则将其转发到http\",{\"1\":{\"102\":1}}],[\"则需要手动指定\",{\"1\":{\"90\":1}}],[\"则还会在堆内存中开辟另一块空间存储引用类型的真实数据\",{\"1\":{\"3\":1}}],[\"要让这个例子实际工作起来\",{\"1\":{\"211\":1}}],[\"要将\",{\"1\":{\"103\":1}}],[\"要配置这些特性标志\",{\"1\":{\"91\":1}}],[\"要解决这个问题\",{\"1\":{\"90\":1}}],[\"要处理jpg\",{\"1\":{\"64\":1}}],[\"你可能想要一个自定义组件的\",{\"1\":{\"219\":1}}],[\"你可以添加\",{\"1\":{\"216\":1}}],[\"你可以传入回调数组\",{\"1\":{\"208\":1}}],[\"你可以将依赖注入看作是\",{\"1\":{\"129\":1,\"146\":1}}],[\"你可以通过简单运行\",{\"1\":{\"107\":1}}],[\"你可以通过\",{\"1\":{\"103\":1,\"109\":1}}],[\"你可以指定应用程序在开发服务器上监听的端口\",{\"1\":{\"101\":1}}],[\"你可以使用emits选项来对子组件触发的自定义事件进行校验\",{\"1\":{\"126\":1,\"143\":1}}],[\"你可以使用驼峰式\",{\"1\":{\"121\":1,\"138\":1}}],[\"你可以使用\",{\"1\":{\"97\":1,\"107\":1,\"112\":1,\"127\":1,\"144\":1,\"188\":1}}],[\"你可以配置\",{\"1\":{\"92\":1}}],[\"你可以这样导入它\",{\"1\":{\"90\":1}}],[\"你可以在不同组件之间进行简单而方便的通信\",{\"1\":{\"130\":1,\"147\":1}}],[\"你可以在任何组件中使用\",{\"1\":{\"130\":1,\"147\":1}}],[\"你可以在任何组件中访问它\",{\"1\":{\"130\":1,\"147\":1}}],[\"你可以在父组件中定义一个数据属性\",{\"1\":{\"127\":1,\"144\":1}}],[\"你可以在组件中定义一个inheritattrs\",{\"1\":{\"123\":1,\"140\":1}}],[\"你可以在angular项目的配置文件中进行相应的配置\",{\"1\":{\"97\":1}}],[\"你可以在webpack配置文件中配置该插件\",{\"1\":{\"97\":1}}],[\"你可以在修改代码时实时查看更新后的效果\",{\"1\":{\"97\":1}}],[\"你可以在\",{\"1\":{\"18\":1,\"84\":1,\"109\":1,\"217\":1,\"218\":1}}],[\"你都应该使用计算属性\",{\"1\":{\"198\":1}}],[\"你在引用这个自定义元素时两种命名法都可以使用\",{\"1\":{\"151\":1}}],[\"你也必须在引用这个自定义元素时使用\",{\"1\":{\"151\":1}}],[\"你也可以通过在\",{\"1\":{\"112\":1}}],[\"你也可以使用\",{\"1\":{\"110\":1}}],[\"你会发现大的问题也会迎刃而解\",{\"1\":{\"149\":1}}],[\"你会看到这个警告\",{\"1\":{\"90\":1}}],[\"你还可以用这个命令来检查其版本是否正确\",{\"1\":{\"107\":1}}],[\"你就可以在命令行中访问\",{\"1\":{\"107\":1}}],[\"你通常会使用\",{\"1\":{\"90\":1}}],[\"你需要深层侦听器\",{\"1\":{\"207\":1}}],[\"你需要提供模块的相对路径\",{\"1\":{\"90\":1}}],[\"你需要在模板中使用my\",{\"1\":{\"121\":1,\"138\":1}}],[\"你需要在\",{\"1\":{\"90\":1}}],[\"选择其中的source面板\",{\"1\":{\"237\":1}}],[\"选择哪个版本取决于项目的需求和优化目标\",{\"1\":{\"235\":1}}],[\"选择的代码检查和格式化配置\",{\"1\":{\"108\":1}}],[\"选择\",{\"1\":{\"108\":3}}],[\"选择预设\",{\"1\":{\"108\":1}}],[\"选择可以添加你需要的postcss相关的插件\",{\"1\":{\"59\":1}}],[\"选项期望接受一个对象\",{\"1\":{\"205\":1}}],[\"选项来开始使用这些数据\",{\"1\":{\"129\":1,\"146\":1}}],[\"选项来提供数据\",{\"1\":{\"129\":1,\"146\":1}}],[\"选项来修改\",{\"1\":{\"112\":1}}],[\"选项来实现\",{\"1\":{\"103\":1}}],[\"选项\",{\"1\":{\"107\":1,\"110\":1,\"111\":1,\"112\":1,\"154\":1,\"199\":1,\"205\":1,\"207\":1}}],[\"选项时\",{\"1\":{\"90\":1}}],[\"哈哈哈\",{\"1\":{\"90\":2,\"160\":2}}],[\"哈哈哈哈哈\",{\"1\":{\"153\":1,\"155\":1}}],[\"哈哈哈哈\",{\"1\":{\"76\":1}}],[\"类文件\",{\"1\":{\"109\":1}}],[\"类似于\",{\"1\":{\"223\":1}}],[\"类似于v\",{\"1\":{\"188\":1}}],[\"类似\",{\"1\":{\"89\":1}}],[\"类型\",{\"1\":{\"120\":1,\"137\":1,\"199\":1,\"205\":1}}],[\"类型注解的预设\",{\"1\":{\"84\":1}}],[\"类型齐全的api\",{\"1\":{\"19\":1}}],[\"构建\",{\"1\":{\"106\":1}}],[\"构建过程中的注入\",{\"1\":{\"98\":1}}],[\"构建工具仍然可以正常工作\",{\"1\":{\"91\":1}}],[\"构建和部署等方面的复杂性\",{\"1\":{\"89\":1}}],[\"构造函数\",{\"1\":{\"83\":1}}],[\"补充\",{\"0\":{\"91\":1},\"1\":{\"89\":1}}],[\"早期使用较多的配置方式\",{\"1\":{\"89\":1}}],[\"括号等\",{\"1\":{\"87\":1}}],[\"运算符\",{\"1\":{\"87\":1}}],[\"运行以下命令来创建一个新项目\",{\"1\":{\"108\":1}}],[\"运行webpack\",{\"1\":{\"93\":1}}],[\"运行后不显示\",{\"1\":{\"90\":1}}],[\"运行\",{\"1\":{\"53\":1,\"94\":1}}],[\"运行上述代码\",{\"1\":{\"35\":1}}],[\"运行时+编译器\",{\"1\":{\"235\":2}}],[\"运行时代码\",{\"1\":{\"83\":1}}],[\"运行时才执行require内容\",{\"1\":{\"35\":1}}],[\"运行时加载\",{\"1\":{\"35\":1}}],[\"运行即可\",{\"1\":{\"26\":1}}],[\"序列\",{\"1\":{\"87\":1}}],[\"词法分析\",{\"1\":{\"87\":1}}],[\"旨在教授编译器原理和实践\",{\"1\":{\"86\":1}}],[\"非常简单\",{\"1\":{\"176\":1}}],[\"非常简单的编译器实现\",{\"1\":{\"86\":1}}],[\"非父子组件之间的通信\",{\"0\":{\"128\":1,\"145\":1}}],[\"非props的attribute\",{\"1\":{\"123\":1,\"140\":1}}],[\"非prop的attribute将只能通过$attrs变量来访问\",{\"1\":{\"123\":1,\"140\":1}}],[\"非prop的attribute是指那些被绑定到组件\",{\"1\":{\"122\":1,\"139\":1}}],[\"非\",{\"0\":{\"122\":1,\"139\":1}}],[\"非原生能力\",{\"1\":{\"20\":1}}],[\"解析\",{\"1\":{\"86\":1,\"94\":1}}],[\"目录产生一个可用于生产环境的包\",{\"1\":{\"111\":1}}],[\"目录中查找\",{\"1\":{\"104\":1}}],[\"目录中查找模块\",{\"1\":{\"104\":1}}],[\"目录\",{\"1\":{\"104\":2}}],[\"目标服务器可能会拒绝请求或返回错误的响应\",{\"1\":{\"102\":1}}],[\"目标服务器地址\",{\"1\":{\"102\":1}}],[\"目标语言是javascript\",{\"1\":{\"87\":1}}],[\"目标语言\",{\"1\":{\"86\":1}}],[\"目前我们看到它里面有很多的html标签\",{\"1\":{\"232\":1}}],[\"目前我们在前面的案例中大部分的值都是在template中固定好的\",{\"1\":{\"213\":1}}],[\"目前我们使用vue的过程都是在html文件中\",{\"1\":{\"155\":1}}],[\"目前我们所有的webpack配置信息都是放到一个配置文件中的\",{\"1\":{\"105\":1}}],[\"目前我们可以在\",{\"1\":{\"94\":1}}],[\"目前我们开发的代码\",{\"1\":{\"92\":1}}],[\"目前很多的项目都采用了多包管理的方式\",{\"1\":{\"89\":1}}],[\"目前是不可缺少的一部分\",{\"1\":{\"81\":1}}],[\"目前已经使用options来替代\",{\"1\":{\"55\":1}}],[\"目前前端的开发已经变的越来越复杂了\",{\"1\":{\"43\":1}}],[\"目前其浏览器能力支持如下\",{\"1\":{\"35\":1}}],[\"从而实现跨组件的事件通信\",{\"1\":{\"130\":1,\"147\":1}}],[\"从而实现模块的热替换\",{\"1\":{\"98\":1}}],[\"从而保证前端路由跳转的正常运行\",{\"1\":{\"103\":1}}],[\"从而提高开发效率\",{\"1\":{\"98\":1}}],[\"从而有效地减少最终打包文件的大小\",{\"1\":{\"91\":1}}],[\"从vue2开发就一直在使用的vscode支持vue的插件\",{\"1\":{\"236\":1}}],[\"从vue\",{\"1\":{\"91\":1}}],[\"从一种源代码\",{\"1\":{\"86\":1}}],[\"从入口开始\",{\"1\":{\"53\":1}}],[\"从入口开始需要逐步经历语法解析\",{\"1\":{\"22\":1}}],[\"底层原理\",{\"0\":{\"86\":1}}],[\"避免运行时的编译开销\",{\"1\":{\"236\":1}}],[\"避免在每个文件中重复使用\",{\"1\":{\"83\":1}}],[\"避免不同项目之间的版本冲突\",{\"1\":{\"49\":1}}],[\"声明式编程关注的是\",{\"1\":{\"230\":1}}],[\"声明式编程和命令式编程\",{\"0\":{\"230\":1}}],[\"声明的属性\",{\"1\":{\"205\":1}}],[\"声明的简单\",{\"1\":{\"81\":1}}],[\"声明转换为\",{\"1\":{\"83\":1}}],[\"声明\",{\"1\":{\"81\":1,\"83\":1}}],[\"想要使用typescript\",{\"1\":{\"81\":1}}],[\"许多现代的\",{\"1\":{\"81\":1}}],[\"准备打包上线的时候\",{\"1\":{\"79\":1}}],[\"设置id\",{\"1\":{\"232\":1}}],[\"设置\",{\"1\":{\"103\":1,\"167\":1}}],[\"设置为\",{\"1\":{\"102\":1}}],[\"设置为true会打开浏览器\",{\"1\":{\"101\":1}}],[\"设置source\",{\"1\":{\"79\":1}}],[\"设置production\",{\"1\":{\"79\":1}}],[\"设置模式\",{\"1\":{\"79\":1}}],[\"设置一些额外的选项\",{\"1\":{\"78\":1}}],[\"设置从哪一个源中开始复制\",{\"1\":{\"78\":1}}],[\"设置文件的存放路径\",{\"0\":{\"70\":1}}],[\"设置文件名称\",{\"0\":{\"69\":1}}],[\"复用相同类型元素的算法\",{\"1\":{\"190\":1}}],[\"复制其中所有的代码\",{\"1\":{\"229\":1}}],[\"复制自己需要生成代码片段的代码\",{\"1\":{\"158\":1}}],[\"复制到剪切版\",{\"1\":{\"110\":1}}],[\"复制到的位置\",{\"1\":{\"78\":1}}],[\"复制的规则在patterns中设置\",{\"1\":{\"78\":1}}],[\"复杂度适中\",{\"1\":{\"23\":1}}],[\"变化\",{\"1\":{\"203\":1}}],[\"变量\",{\"1\":{\"76\":1}}],[\"变成可以在浏览器中运行的普通js\",{\"1\":{\"35\":1}}],[\"85\",{\"1\":{\"210\":1}}],[\"8px\",{\"1\":{\"210\":1}}],[\"88\",{\"1\":{\"176\":2,\"187\":1,\"188\":1}}],[\"8888\",{\"1\":{\"99\":1,\"105\":1}}],[\"80\",{\"1\":{\"201\":1,\"202\":1}}],[\"8000\",{\"1\":{\"102\":1}}],[\"8080\",{\"1\":{\"101\":1,\"103\":1,\"110\":1}}],[\"8\",{\"1\":{\"76\":1,\"210\":1}}],[\"给予响应的提示\",{\"1\":{\"76\":1}}],[\"给浏览器返回\",{\"1\":{\"31\":1}}],[\"必填的字符串\",{\"1\":{\"121\":1,\"138\":1}}],[\"必然也是需要有对应的入口文件index\",{\"1\":{\"75\":1}}],[\"必须使用构建工具\",{\"1\":{\"236\":1}}],[\"必须使用es5的语法\",{\"1\":{\"155\":1}}],[\"必须传入一个函数\",{\"1\":{\"233\":1}}],[\"必须传输\",{\"1\":{\"120\":1,\"137\":1}}],[\"必须在子组件中已被正确声明\",{\"1\":{\"167\":1}}],[\"必须安装\",{\"1\":{\"82\":1}}],[\"必须有一个\",{\"1\":{\"55\":1}}],[\"必须先将作为\",{\"1\":{\"37\":1}}],[\"重点\",{\"0\":{\"234\":1}}],[\"重写到\",{\"1\":{\"103\":1}}],[\"重写完路径后\",{\"1\":{\"37\":1}}],[\"重新\",{\"1\":{\"90\":1}}],[\"重新打包即可支持app\",{\"1\":{\"90\":1}}],[\"重新打包\",{\"1\":{\"90\":1}}],[\"重新打包时\",{\"1\":{\"74\":1}}],[\"重新部署即可\",{\"1\":{\"90\":1}}],[\"每一个item都是一个数字\",{\"1\":{\"187\":1}}],[\"每次修改了一些配置\",{\"1\":{\"74\":1}}],[\"每个组件都用于实现页面的一个功能块\",{\"1\":{\"149\":1}}],[\"每个组件都可以定义自己的props\",{\"1\":{\"117\":1,\"134\":1}}],[\"每个框架或者平台可能实现方法不同\",{\"1\":{\"149\":1}}],[\"每个框架的具体配置方式可能会有所不同\",{\"1\":{\"97\":1}}],[\"每个功能块完成属于自己\",{\"1\":{\"149\":1}}],[\"每个地方的header展示的内容不同\",{\"1\":{\"116\":1,\"133\":1}}],[\"每个规则包含了要转发的请求路径和目标服务器地址\",{\"1\":{\"102\":1}}],[\"每个令牌代表源代码中的一个语法单元\",{\"1\":{\"87\":1}}],[\"每个插件都负责处理ast中的特定节点\",{\"1\":{\"86\":1}}],[\"每个loader都会对文件进行一次转换\",{\"1\":{\"54\":1}}],[\"每个项目可以拥有自己独立的webpack配置和插件\",{\"1\":{\"49\":1}}],[\"环境变量注入等\",{\"1\":{\"73\":1}}],[\"之前通过使用\",{\"1\":{\"71\":4}}],[\"之后对该对象的修改或者访问都会在劫持中被处理\",{\"1\":{\"233\":1}}],[\"之后通过babe将js编译成\",{\"1\":{\"159\":1}}],[\"之后在插件中配置\",{\"1\":{\"74\":1}}],[\"之后\",{\"1\":{\"63\":1,\"153\":1}}],[\"之后我们执行\",{\"1\":{\"52\":1}}],[\"之后运行打包之后的代码\",{\"1\":{\"48\":1}}],[\"之后安装less编译器\",{\"1\":{\"28\":1}}],[\"种新的模块类型\",{\"1\":{\"71\":1}}],[\"已经设置了文件夹\",{\"1\":{\"70\":1}}],[\"已经帮你安装好了很多东西\",{\"1\":{\"28\":1}}],[\"刚才通过\",{\"1\":{\"70\":1}}],[\"截图hash的长度\",{\"1\":{\"68\":1}}],[\"包\",{\"1\":{\"107\":1}}],[\"包含了\",{\"1\":{\"219\":1}}],[\"包含了模板编译器\",{\"1\":{\"90\":1}}],[\"包含一个hash值等\",{\"1\":{\"68\":1}}],[\"包括对template模板的编译代码\",{\"1\":{\"235\":1}}],[\"包括data\",{\"1\":{\"226\":1}}],[\"包括编译方面的优化\",{\"1\":{\"225\":1}}],[\"包括小程序的开发也是采用组件化开发的思想\",{\"1\":{\"149\":1}}],[\"包括本地计算机上的回环接口和其他网络接口\",{\"1\":{\"100\":1}}],[\"包括\",{\"1\":{\"23\":1,\"41\":1,\"107\":1}}],[\"扩展名\",{\"1\":{\"68\":1}}],[\"下面是一个单文件组件的示例\",{\"1\":{\"236\":1}}],[\"下面的score在进行判断的过程中会进行隐式转化的\",{\"1\":{\"217\":1}}],[\"下面的代码38kb的图片会进行base64编码\",{\"1\":{\"66\":1}}],[\"下载vue的源码\",{\"1\":{\"229\":1}}],[\"下载vue的javascript文件\",{\"1\":{\"227\":1}}],[\"下载和引入\",{\"0\":{\"229\":1}}],[\"下文中的代码的意思是\",{\"1\":{\"189\":1}}],[\"下次访问相同路径直接从\",{\"1\":{\"37\":1}}],[\"反而会影响页面的请求速度\",{\"1\":{\"66\":1}}],[\"减少不必要的请求过程\",{\"1\":{\"66\":1}}],[\"也会发生改变\",{\"1\":{\"233\":1}}],[\"也会一起被注\",{\"1\":{\"154\":1}}],[\"也增加了\",{\"1\":{\"225\":1}}],[\"也需要多次计算\",{\"1\":{\"201\":1}}],[\"也就是虚拟节点\",{\"1\":{\"191\":1}}],[\"也是根据一个条件决定是否显示元素或者组件\",{\"1\":{\"184\":1}}],[\"也是我们应用程序的根\",{\"1\":{\"150\":1}}],[\"也只能渲染一次\",{\"1\":{\"162\":1}}],[\"也包括我们的script是在一个全局的作用域下\",{\"1\":{\"155\":1}}],[\"也包括会自动帮助我们添加\",{\"1\":{\"63\":1}}],[\"也叫\",{\"1\":{\"154\":1}}],[\"也叫定义文件\",{\"1\":{\"109\":1}}],[\"也\",{\"1\":{\"151\":1}}],[\"也可能是子组件中发生了事件\",{\"1\":{\"116\":1,\"133\":1}}],[\"也可能来自第三方库\",{\"1\":{\"104\":1}}],[\"也可以传入一个对象\",{\"1\":{\"233\":1}}],[\"也可以有多个键值对\",{\"1\":{\"170\":1}}],[\"也可以调用函数\",{\"1\":{\"160\":1}}],[\"也可以直接这样调用命令\",{\"1\":{\"109\":1}}],[\"也可以设置为类似于\",{\"1\":{\"101\":1}}],[\"也可以是其他方式\",{\"1\":{\"187\":1}}],[\"也可以是组件的\",{\"1\":{\"167\":1}}],[\"也可以是一个javascript的表达式\",{\"1\":{\"160\":1}}],[\"也可以是一个函数\",{\"1\":{\"102\":1}}],[\"也可以是ipv6的\",{\"1\":{\"100\":1}}],[\"也可以是经过转换后的新代码\",{\"1\":{\"86\":1}}],[\"也可以\",{\"1\":{\"84\":1,\"153\":1}}],[\"也不需要复制\",{\"1\":{\"78\":1}}],[\"也方便后期的维护\",{\"1\":{\"55\":1}}],[\"您的问题\",{\"1\":{\"206\":1}}],[\"您还可以使用图形界面使用以下vue\",{\"1\":{\"108\":1}}],[\"您已经将\",{\"1\":{\"63\":1}}],[\"您可以使用postcss来编写现代css语法\",{\"1\":{\"60\":1}}],[\"您可以通过\",{\"1\":{\"18\":1}}],[\"您可以在\",{\"1\":{\"18\":1}}],[\"添加事件侦听器时使用\",{\"1\":{\"177\":1,\"180\":1}}],[\"添加一个插件\",{\"1\":{\"112\":1}}],[\"添加兼容性处理等\",{\"1\":{\"86\":1,\"87\":1}}],[\"添加所需的polyfill\",{\"1\":{\"63\":1}}],[\"添加为一个插件\",{\"1\":{\"63\":1}}],[\"添加\",{\"1\":{\"62\":1,\"95\":1}}],[\"添加style\",{\"1\":{\"56\":1}}],[\"根组件\",{\"1\":{\"109\":1}}],[\"根目录下新建\",{\"1\":{\"62\":1}}],[\"根据这个属性的值来决定渲染哪个子组件\",{\"1\":{\"127\":1,\"144\":1}}],[\"根据事件名称触发对应的事件\",{\"1\":{\"125\":1,\"142\":1}}],[\"根据目标环境自动确定需要的转换规则\",{\"1\":{\"84\":1}}],[\"根据需要\",{\"1\":{\"53\":2}}],[\"根据文件的不同使用不同的loader来解析\",{\"1\":{\"53\":1}}],[\"转变为驼峰式命名\",{\"1\":{\"167\":1}}],[\"转换完成后\",{\"1\":{\"86\":1}}],[\"转换成浏览器可以直接识别的另外一段源代码\",{\"1\":{\"86\":1}}],[\"转换成另一种源代码\",{\"1\":{\"86\":1}}],[\"转换\",{\"1\":{\"83\":2,\"86\":1,\"87\":1}}],[\"转换语法\",{\"1\":{\"83\":1}}],[\"转换为\",{\"1\":{\"83\":1}}],[\"转换为普通的\",{\"1\":{\"83\":2,\"84\":1}}],[\"转换为普通\",{\"1\":{\"81\":1}}],[\"转换为模块\",{\"1\":{\"54\":1}}],[\"转成另外一段代码\",{\"1\":{\"86\":1}}],[\"转成\",{\"1\":{\"83\":1}}],[\"转成base64的uri\",{\"1\":{\"65\":1}}],[\"转成大多数浏览器认识的css\",{\"1\":{\"63\":1}}],[\"转化的结果如下\",{\"1\":{\"61\":1}}],[\"主要是将许多项目的代码存储在同一个\",{\"1\":{\"224\":1}}],[\"主要应用于虚拟\",{\"1\":{\"194\":1}}],[\"主要好处\",{\"1\":{\"191\":1}}],[\"主要就是两个步骤\",{\"1\":{\"59\":1}}],[\"主流构建工具对比\",{\"0\":{\"20\":1}}],[\"认识计算属性\",{\"0\":{\"198\":1}}],[\"认识组件化开发\",{\"0\":{\"148\":1,\"149\":1}}],[\"认识组件的嵌套\",{\"0\":{\"114\":1,\"131\":1}}],[\"认识模块热替换\",{\"0\":{\"95\":1}}],[\"认识\",{\"0\":{\"59\":1,\"191\":1,\"222\":1}}],[\"认识webpack\",{\"0\":{\"43\":1}}],[\"属性的值应该是你想要关联的表单控件的\",{\"1\":{\"213\":1}}],[\"属性的简写方式\",{\"1\":{\"55\":1}}],[\"属性被用来关联\",{\"1\":{\"213\":1}}],[\"属性直接绑定一个对象\",{\"0\":{\"176\":1}}],[\"属性名\",{\"1\":{\"175\":1}}],[\"属性名称都是固定的\",{\"1\":{\"175\":1}}],[\"属性上\",{\"1\":{\"127\":1,\"144\":1}}],[\"属性类型默认为any\",{\"1\":{\"119\":1,\"136\":1}}],[\"属性为对象时\",{\"1\":{\"3\":2}}],[\"值是相应的回调函数\",{\"1\":{\"205\":1}}],[\"值是一个字符串或者对象\",{\"1\":{\"55\":1}}],[\"值\",{\"1\":{\"175\":1}}],[\"值会被传入到loader中\",{\"1\":{\"55\":1}}],[\"值转换为\",{\"1\":{\"14\":1}}],[\"资源管理\",{\"1\":{\"73\":1}}],[\"资源模块类型\",{\"1\":{\"71\":1}}],[\"资源\",{\"1\":{\"55\":1,\"103\":1}}],[\"资源文件img\",{\"1\":{\"45\":1}}],[\"有了这个\",{\"1\":{\"219\":1}}],[\"有无key的结论\",{\"0\":{\"195\":1},\"1\":{\"195\":1}}],[\"有key的操作过程\",{\"1\":{\"194\":1}}],[\"有key的时候\",{\"1\":{\"190\":1}}],[\"有key\",{\"1\":{\"194\":1}}],[\"有点类似于小程序中的block\",{\"1\":{\"183\":1}}],[\"有时候我们的元素\",{\"1\":{\"169\":1}}],[\"有时候我们处理后的文件名称按照一定的规则进行显示\",{\"1\":{\"68\":1}}],[\"有时这是必要的\",{\"1\":{\"167\":1}}],[\"有些代码片段是需要经常写的\",{\"1\":{\"158\":1}}],[\"有些模板需要依赖更高的\",{\"1\":{\"25\":1}}],[\"有助于简化代码共享\",{\"1\":{\"89\":1}}],[\"有三种方式\",{\"1\":{\"55\":1}}],[\"直到编译完成前\",{\"1\":{\"166\":1}}],[\"直到相关组件实例被挂载后才移除\",{\"1\":{\"166\":1}}],[\"直到挂载的组件将它们替换为实际渲染的内容\",{\"1\":{\"166\":1}}],[\"直到最后一个loader将最终的结果返回给webpack进行打包\",{\"1\":{\"54\":1}}],[\"直接通过vue\",{\"1\":{\"227\":1}}],[\"直接\",{\"1\":{\"158\":1}}],[\"直接使用使用postcss工具\",{\"1\":{\"61\":1}}],[\"直接导入less\",{\"1\":{\"28\":1}}],[\"直接导入css即可\",{\"1\":{\"28\":1}}],[\"直接请求所需模块并实时编译\",{\"1\":{\"22\":1}}],[\"直接调用\",{\"1\":{\"16\":1}}],[\"直接赋值\",{\"1\":{\"12\":1}}],[\"图片等\",{\"1\":{\"54\":1}}],[\"图片\",{\"1\":{\"53\":1,\"204\":1,\"212\":1}}],[\"图片img文件的加载\",{\"1\":{\"45\":1}}],[\"入口文件\",{\"1\":{\"109\":1}}],[\"入口的html文件\",{\"1\":{\"109\":1}}],[\"入口\",{\"1\":{\"53\":1}}],[\"输出如下\",{\"1\":{\"203\":1}}],[\"输出帮助内容\",{\"1\":{\"107\":1}}],[\"输出生成的目标代码\",{\"1\":{\"87\":1}}],[\"输出\",{\"1\":{\"53\":1,\"87\":1}}],[\"输出文件的路径\",{\"1\":{\"53\":1}}],[\"输出是path\",{\"1\":{\"38\":1}}],[\"创建一个新的文件\",{\"1\":{\"229\":1}}],[\"创建一个名为\",{\"1\":{\"130\":1,\"147\":1}}],[\"创建一个项目\",{\"0\":{\"108\":1}}],[\"创建一个webpack配置文件\",{\"1\":{\"53\":1}}],[\"创建了一个别名\",{\"1\":{\"104\":1}}],[\"创建package\",{\"1\":{\"49\":1}}],[\"依然需要通过工具对代码进行构建\",{\"1\":{\"155\":1}}],[\"依然可以正常打包\",{\"1\":{\"51\":1}}],[\"依赖关系图\",{\"1\":{\"53\":1}}],[\"依赖关系转换为单个模块\",{\"1\":{\"37\":1}}],[\"依赖图\",{\"1\":{\"44\":1}}],[\"依赖的模块又基于另一些模块\",{\"1\":{\"37\":1}}],[\"依赖预构建主要有两个目的\",{\"1\":{\"37\":1}}],[\"依赖预构建\",{\"1\":{\"37\":1}}],[\"依赖解析\",{\"1\":{\"37\":1}}],[\"依赖\",{\"1\":{\"37\":2}}],[\"依赖处理\",{\"0\":{\"37\":1}}],[\"依赖加载成功后执行回调\",{\"1\":{\"35\":1}}],[\"依赖前置\",{\"1\":{\"35\":1}}],[\"依赖收集\",{\"1\":{\"22\":1}}],[\"依赖模块强缓存\",{\"1\":{\"22\":1}}],[\"第五步是最特色的情况\",{\"1\":{\"194\":1}}],[\"第二个参数是侦听的回调函数callback\",{\"1\":{\"209\":1}}],[\"第二个参数是组件的配置对象\",{\"1\":{\"153\":1}}],[\"第二个规则\",{\"1\":{\"103\":1}}],[\"第二步的操作是从尾部开始进行遍历\",{\"1\":{\"194\":1}}],[\"第二步\",{\"1\":{\"49\":1,\"59\":1,\"158\":1}}],[\"第一个参数是要侦听的源\",{\"1\":{\"209\":1}}],[\"第一个参数是组件的名称\",{\"1\":{\"151\":1}}],[\"第一个规则\",{\"1\":{\"103\":1}}],[\"第一步的操作是从头开始进行遍历\",{\"1\":{\"194\":1}}],[\"第一步\",{\"1\":{\"49\":1,\"59\":1,\"158\":1}}],[\"第四步是如果新的节点遍历完毕\",{\"1\":{\"194\":1}}],[\"第四步\",{\"1\":{\"49\":1}}],[\"第三个参数是额外的其他选项\",{\"1\":{\"209\":1}}],[\"第三步是如果旧节点遍历完毕\",{\"1\":{\"194\":1}}],[\"第三步\",{\"1\":{\"49\":1,\"158\":1}}],[\"第三方的脚手架事实上是没有使用webpack\",{\"1\":{\"47\":1}}],[\"方式四\",{\"1\":{\"227\":1}}],[\"方式三\",{\"1\":{\"227\":1,\"235\":1}}],[\"方式一\",{\"1\":{\"151\":1,\"156\":1,\"227\":1,\"232\":1,\"235\":1}}],[\"方式二\",{\"1\":{\"105\":1,\"151\":1,\"156\":1,\"227\":1,\"232\":1,\"235\":1}}],[\"方式引入的一个文件资源\",{\"1\":{\"64\":1}}],[\"方案一\",{\"1\":{\"105\":1}}],[\"方便我们快速生成\",{\"1\":{\"158\":1}}],[\"方便我们维护和管理\",{\"1\":{\"105\":1}}],[\"方便调试代码和错误\",{\"1\":{\"79\":1}}],[\"方便在不同环境中进行迁移和共享\",{\"1\":{\"49\":1}}],[\"方法\",{\"1\":{\"225\":1}}],[\"方法的\",{\"1\":{\"225\":1}}],[\"方法中\",{\"1\":{\"170\":1}}],[\"方法返回一个给定对象自身可枚举属性的键值对数组\",{\"1\":{\"13\":1}}],[\"方法用于将一个\",{\"1\":{\"14\":1}}],[\"方法用于将\",{\"1\":{\"14\":1}}],[\"方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象\",{\"1\":{\"8\":1}}],[\"方法用于连接两个或多个数组\",{\"1\":{\"10\":1}}],[\"方法可从已有的数组中返回选定的元素\",{\"1\":{\"9\":1}}],[\"隔离环境\",{\"1\":{\"49\":1}}],[\"件是否需要转成es5之前的语法\",{\"1\":{\"48\":1}}],[\"生命周期等等这些选项\",{\"1\":{\"226\":1}}],[\"生态中的工具基础标准化\",{\"1\":{\"106\":1}}],[\"生产环境\",{\"0\":{\"105\":1}}],[\"生产环境使用rollup\",{\"1\":{\"20\":1}}],[\"生成block\",{\"1\":{\"225\":1}}],[\"生成补丁\",{\"1\":{\"194\":1}}],[\"生成\",{\"1\":{\"86\":1,\"111\":2}}],[\"生成的一个128位的hash值\",{\"1\":{\"68\":1}}],[\"生成一个\",{\"1\":{\"48\":1}}],[\"命令式编程关注的是\",{\"1\":{\"230\":1}}],[\"命令的选项\",{\"1\":{\"112\":1}}],[\"命令行参数\",{\"1\":{\"110\":1}}],[\"命令行使用\",{\"0\":{\"82\":1}}],[\"命令行使用postcss\",{\"0\":{\"60\":1}}],[\"命令会启动一个开发服务器\",{\"1\":{\"110\":1}}],[\"命令配置和包管理文件\",{\"1\":{\"109\":1}}],[\"命令时\",{\"1\":{\"94\":1}}],[\"命令\",{\"1\":{\"48\":1,\"107\":1}}],[\"使我们能够将一个\",{\"1\":{\"236\":1}}],[\"使其符合统一的样式规范\",{\"1\":{\"108\":1}}],[\"使得在开发过程中可以实时地修改代码并查看更新后的效果\",{\"1\":{\"98\":1}}],[\"使得在浏览器中可以正常运行这些模块化代码\",{\"1\":{\"48\":1}}],[\"使用熟悉的\",{\"1\":{\"236\":1}}],[\"使用h函数来编写渲染的内容\",{\"1\":{\"235\":1}}],[\"使用html\",{\"1\":{\"53\":1}}],[\"使用任意标签\",{\"1\":{\"232\":1}}],[\"使用proxy进行数据劫持\",{\"1\":{\"225\":1}}],[\"使用prop的值\",{\"1\":{\"121\":1,\"138\":1}}],[\"使用props选项并传递一个对象来定义message属性\",{\"1\":{\"120\":1,\"137\":1}}],[\"使用props选项并传递一个字符串数组来定义message属性\",{\"1\":{\"119\":1,\"136\":1}}],[\"使用全局的方法\",{\"1\":{\"210\":1}}],[\"使用计算属性\",{\"1\":{\"210\":1}}],[\"使用计算属性computed\",{\"1\":{\"199\":1}}],[\"使用computed\",{\"1\":{\"203\":1}}],[\"使用最多的语法是\",{\"1\":{\"160\":1}}],[\"使用基于html的模板语法\",{\"1\":{\"159\":1}}],[\"使用v\",{\"1\":{\"177\":1}}],[\"使用vue\",{\"1\":{\"156\":1}}],[\"使用vite进行开发\",{\"1\":{\"18\":1}}],[\"使用emits选项可以提供类型检查和错误提示\",{\"1\":{\"126\":1,\"143\":1}}],[\"使用eslint进行错误检查\",{\"1\":{\"108\":3}}],[\"使用对象类型的方式\",{\"1\":{\"120\":1,\"137\":1}}],[\"使用字符串数组的方式\",{\"1\":{\"119\":1,\"136\":1}}],[\"使用现代模式构建应用\",{\"1\":{\"111\":1}}],[\"使用yarn后自动生成的文件\",{\"1\":{\"109\":1}}],[\"使用指定的\",{\"1\":{\"107\":1}}],[\"使用相同的一个入口配置文件\",{\"1\":{\"105\":1}}],[\"使用哪个字段作为模块的主入口\",{\"1\":{\"104\":1}}],[\"使用的是live\",{\"1\":{\"95\":1}}],[\"使用methods\",{\"1\":{\"203\":1}}],[\"使用method对逻辑进行抽取\",{\"0\":{\"201\":1},\"1\":{\"199\":1}}],[\"使用markdown语法进行编写\",{\"1\":{\"109\":1}}],[\"使用md4的散列函数处理\",{\"1\":{\"68\":1}}],[\"使用mini\",{\"1\":{\"53\":1}}],[\"使用babel来处理我们的源代码\",{\"1\":{\"82\":1}}],[\"使用babel\",{\"1\":{\"53\":1,\"88\":1}}],[\"使用局部的webpack\",{\"1\":{\"49\":1}}],[\"使用go语言编写的\",{\"1\":{\"36\":1}}],[\"使用\",{\"1\":{\"26\":2,\"53\":3,\"88\":1,\"94\":2,\"104\":2,\"110\":1,\"130\":2,\"147\":2,\"151\":2,\"153\":1,\"180\":1,\"209\":1,\"225\":1,\"232\":1,\"235\":1,\"236\":1}}],[\"使用简单\",{\"0\":{\"23\":1}}],[\"使用js开发的工具通常需要很长的时间才能启动开发服务器\",{\"1\":{\"22\":1}}],[\"己的vue\",{\"1\":{\"47\":1}}],[\"执行原理\",{\"0\":{\"87\":1}}],[\"执行如下命令\",{\"1\":{\"57\":1}}],[\"执行脚本打包即可\",{\"1\":{\"49\":1}}],[\"执行webpack命令\",{\"1\":{\"47\":1}}],[\"执行效率更高\",{\"1\":{\"20\":1}}],[\"字段或入口文件名\",{\"1\":{\"111\":1}}],[\"字段配置开发服务器\",{\"1\":{\"110\":1}}],[\"字段\",{\"1\":{\"104\":3}}],[\"字段替换为目标服务器的地址\",{\"1\":{\"102\":1}}],[\"字体显示黑色\",{\"1\":{\"169\":1}}],[\"字体显示红色\",{\"1\":{\"169\":1}}],[\"字体或公共库\",{\"1\":{\"78\":1}}],[\"字体文件加载\",{\"0\":{\"67\":1}}],[\"字体等\",{\"1\":{\"53\":1}}],[\"字体font文件的加载\",{\"1\":{\"45\":1}}],[\"字符串方法名称\",{\"1\":{\"208\":1}}],[\"字符串数组\",{\"0\":{\"119\":1,\"136\":1},\"1\":{\"118\":1,\"135\":1}}],[\"字符串转换为对象\",{\"1\":{\"14\":1}}],[\"字符串\",{\"1\":{\"14\":1}}],[\"静态站点生成\",{\"1\":{\"236\":1}}],[\"静态模块打包工具\",{\"1\":{\"44\":1}}],[\"静态资源将处理成esm模块返回\",{\"1\":{\"38\":1}}],[\"静态资源加载\",{\"0\":{\"38\":1}}],[\"日常的开发中根本就没有面临这些问题\",{\"1\":{\"43\":1}}],[\"合并以及其他相关的优化\",{\"1\":{\"43\":1}}],[\"提高传输速度\",{\"1\":{\"101\":1}}],[\"提高开发的效率\",{\"1\":{\"43\":1}}],[\"提取\",{\"1\":{\"45\":1}}],[\"提供自动补全和对模板中表达式的类型检查\",{\"1\":{\"236\":1}}],[\"提供给浏览器访问\",{\"1\":{\"98\":1}}],[\"提供静态资源的服务\",{\"1\":{\"98\":1}}],[\"提供了内置的支持\",{\"1\":{\"97\":1}}],[\"提供了一个开发服务器\",{\"1\":{\"92\":1}}],[\"提供了\",{\"1\":{\"18\":1,\"235\":1}}],[\"提供\",{\"1\":{\"16\":1,\"106\":1}}],[\"分别加载不同的配置文件即可\",{\"1\":{\"105\":1}}],[\"分别触发组件vue\",{\"1\":{\"41\":1}}],[\"分割\",{\"1\":{\"55\":1}}],[\"分包\",{\"1\":{\"23\":1}}],[\"热更新运行时会将新的模块代码与旧的模块代码进行比较\",{\"1\":{\"98\":1}}],[\"热更新\",{\"1\":{\"41\":1}}],[\"热更新原理\",{\"0\":{\"41\":1}}],[\"做到浏览器端的即时热模块更换\",{\"1\":{\"41\":1}}],[\"服务及插件\",{\"1\":{\"107\":1}}],[\"服务器可以直接发送文件到客户端\",{\"1\":{\"98\":1}}],[\"服务并与服务端建立了连接\",{\"1\":{\"41\":1}}],[\"服务端做的就是监听代码文件的改变\",{\"1\":{\"41\":1}}],[\"服务端\",{\"1\":{\"41\":1}}],[\"服务端发送消息通知客户端去请求修改模块的代码\",{\"1\":{\"41\":1}}],[\"信息通知客户端去请求新的模块代码\",{\"1\":{\"41\":1}}],[\"连接\",{\"1\":{\"41\":1}}],[\"其对应的元素压根不会被渲染到dom中\",{\"1\":{\"185\":1}}],[\"其判断的内容完全不会被渲染或者会被销毁掉\",{\"1\":{\"183\":1}}],[\"其次\",{\"1\":{\"125\":1,\"142\":1,\"185\":1}}],[\"其中键是需要侦听的响应式组件实例属性\",{\"1\":{\"205\":1}}],[\"其中一种方式就是将逻辑抽取到一个method中\",{\"1\":{\"198\":1}}],[\"其中两个重要的特性标志包括\",{\"1\":{\"91\":1}}],[\"其中可以编写需要忽略的文件\",{\"1\":{\"78\":1}}],[\"其实按照这种设置方式就可以了\",{\"1\":{\"70\":1}}],[\"其实就是在客户端与服务端建立了一个\",{\"1\":{\"41\":1}}],[\"其他方式\",{\"0\":{\"208\":1}}],[\"其他方法\",{\"0\":{\"15\":1}}],[\"其他\",{\"0\":{\"121\":1,\"138\":1}}],[\"其他计算机或设备无法直接访问\",{\"1\":{\"100\":1}}],[\"其他配置项\",{\"1\":{\"29\":1,\"30\":1,\"103\":1,\"104\":1,\"105\":1}}],[\"将代码复制到其中\",{\"1\":{\"229\":1}}],[\"将内部原生\",{\"1\":{\"211\":1}}],[\"将被侦听的数组的变更方法进行了包裹\",{\"1\":{\"189\":1}}],[\"将被指定为唯一入口\",{\"1\":{\"110\":1}}],[\"将返回的对象放到一个methods\",{\"1\":{\"170\":1}}],[\"将对象放到一个单独的属性中\",{\"1\":{\"170\":1}}],[\"将短横线命名的\",{\"1\":{\"167\":1}}],[\"将不可见\",{\"1\":{\"166\":1}}],[\"将不接受在\",{\"1\":{\"102\":1}}],[\"将parentmessage属性作为字符串传递给子组件\",{\"1\":{\"120\":1,\"137\":1}}],[\"将message属性作为字符串传递给子组件\",{\"1\":{\"119\":1,\"136\":1}}],[\"将所有的代码逻辑全部放到一个组件中\",{\"1\":{\"114\":1,\"131\":1}}],[\"将所有其他路径都重写到\",{\"1\":{\"103\":1}}],[\"将可能引发错误\",{\"1\":{\"110\":1}}],[\"将babel\",{\"1\":{\"108\":2}}],[\"将根路径\",{\"1\":{\"103\":1}}],[\"将webpack与服务器集成\",{\"1\":{\"92\":1}}],[\"将webpack安装在项目的本地目录中\",{\"1\":{\"49\":1}}],[\"将源代码转换为目标浏览器或环境所支持的语法\",{\"1\":{\"88\":1}}],[\"将修改后的ast转换为目标语言的代码\",{\"1\":{\"87\":1}}],[\"将令牌序列转换为抽象语法树\",{\"1\":{\"87\":1}}],[\"将输入的源代码字符串转换为一个令牌\",{\"1\":{\"87\":1}}],[\"将解构赋值转换为普通赋值\",{\"1\":{\"83\":1}}],[\"将类转换为\",{\"1\":{\"83\":1}}],[\"将箭头函数转换为普通函数\",{\"1\":{\"83\":1}}],[\"将\",{\"1\":{\"83\":4,\"90\":1,\"102\":1,\"207\":1}}],[\"将使用新\",{\"1\":{\"83\":1}}],[\"将新的\",{\"1\":{\"83\":1}}],[\"将其转换为\",{\"1\":{\"81\":1}}],[\"将其转换成javascript\",{\"1\":{\"45\":1}}],[\"将es6转换成es5的语法\",{\"1\":{\"45\":1}}],[\"将ts转换成js后\",{\"1\":{\"40\":1}}],[\"将有许多内部模块的\",{\"1\":{\"37\":1}}],[\"约是tsc速度的20～30倍\",{\"1\":{\"40\":1}}],[\"模式添加侦听器\",{\"1\":{\"177\":1,\"180\":1}}],[\"模式\",{\"1\":{\"177\":1,\"180\":1}}],[\"模式下的名字\",{\"1\":{\"111\":1}}],[\"模板编译器会对\",{\"1\":{\"211\":1}}],[\"模板中有一些奇怪的语法\",{\"1\":{\"232\":1}}],[\"模板中表达式的初衷是用于简单的计算\",{\"1\":{\"200\":1}}],[\"模板中存在大量的复杂逻辑\",{\"1\":{\"200\":1}}],[\"模板中是不可用的\",{\"1\":{\"151\":1}}],[\"模板语法\",{\"0\":{\"159\":1}}],[\"模板\",{\"1\":{\"152\":1,\"166\":1}}],[\"模板文件的特殊性\",{\"1\":{\"39\":1}}],[\"模块路径\",{\"1\":{\"104\":1}}],[\"模块的热替换\",{\"1\":{\"98\":1}}],[\"模块的浏览器中可以使用\",{\"1\":{\"90\":1}}],[\"模块热替换是指在\",{\"1\":{\"95\":1}}],[\"模块热更新\",{\"1\":{\"18\":1}}],[\"模块系统的一部分\",{\"1\":{\"90\":1}}],[\"模块导入的版本\",{\"1\":{\"90\":1}}],[\"模块化module\",{\"1\":{\"44\":1}}],[\"模块三个模块进行分别处理\",{\"1\":{\"39\":1}}],[\"模块异步\",{\"1\":{\"35\":2}}],[\"模块同步\",{\"1\":{\"35\":1}}],[\"模块打包工具\",{\"1\":{\"20\":1}}],[\"模块\",{\"1\":{\"18\":1,\"37\":3,\"81\":1,\"90\":1}}],[\"后添加\",{\"1\":{\"217\":1,\"218\":1}}],[\"后续会基于volar开发官方的vscode插件\",{\"1\":{\"236\":1}}],[\"后续会讲到\",{\"1\":{\"209\":1}}],[\"后续我们需要通过babel来进行转换和设置\",{\"1\":{\"48\":1}}],[\"后\",{\"1\":{\"103\":1,\"104\":4}}],[\"后面会讲到\",{\"1\":{\"68\":1}}],[\"后缀的文件时\",{\"1\":{\"39\":1}}],[\"后者是将其地址存在栈内存中\",{\"1\":{\"1\":1}}],[\"遇到一个\",{\"1\":{\"39\":1}}],[\"遇到模块加载命令import\",{\"1\":{\"35\":1}}],[\"|shims\",{\"1\":{\"109\":1}}],[\"|main\",{\"1\":{\"109\":1}}],[\"|app\",{\"1\":{\"109\":1}}],[\"|assets\",{\"1\":{\"109\":1}}],[\"|components\",{\"1\":{\"109\":1}}],[\"|index\",{\"1\":{\"109\":1}}],[\"|favicon\",{\"1\":{\"109\":1}}],[\"|\",{\"1\":{\"41\":1,\"109\":10,\"111\":3,\"167\":1,\"177\":2,\"199\":1,\"205\":3}}],[\"||\",{\"1\":{\"38\":2,\"41\":1}}],[\"|eot|ttf|otf\",{\"1\":{\"38\":1}}],[\"格式\",{\"1\":{\"38\":1}}],[\"格式时\",{\"1\":{\"37\":1}}],[\"便只需要发送一次请求了\",{\"1\":{\"37\":1}}],[\"导出资源的源代码\",{\"1\":{\"71\":1}}],[\"导出一个资源的\",{\"1\":{\"71\":1}}],[\"导出语句建立模块和内存的映射关系\",{\"1\":{\"35\":1}}],[\"导入一个命名函数时候\",{\"1\":{\"37\":1}}],[\"性能方面\",{\"0\":{\"225\":1}}],[\"性能\",{\"1\":{\"37\":1}}],[\"或一个组件\",{\"1\":{\"167\":1}}],[\"或其他方式传递数据\",{\"1\":{\"130\":1,\"147\":1}}],[\"或短横线分隔\",{\"1\":{\"121\":1,\"138\":1,\"172\":1}}],[\"或更高版本\",{\"1\":{\"107\":1}}],[\"或者自己深拷贝一份作为保存\",{\"1\":{\"207\":1}}],[\"或者需要将多个数据结合起来进行显示\",{\"1\":{\"198\":1}}],[\"或者从终端中以\",{\"1\":{\"109\":1}}],[\"或者\",{\"1\":{\"89\":2,\"107\":1,\"155\":2,\"167\":1}}],[\"或者说从后到前的\",{\"1\":{\"56\":1}}],[\"或者说从下到上\",{\"1\":{\"56\":1}}],[\"或\",{\"1\":{\"37\":1,\"38\":1,\"84\":2,\"104\":2,\"107\":2,\"109\":1,\"151\":1,\"167\":1,\"205\":1,\"225\":1}}],[\"或多个变量\",{\"1\":{\"7\":1}}],[\"或多个元素\",{\"1\":{\"7\":1}}],[\"情况二\",{\"1\":{\"179\":1}}],[\"情况一\",{\"1\":{\"179\":1}}],[\"情况\",{\"1\":{\"37\":1}}],[\"兼容的代码\",{\"1\":{\"83\":1}}],[\"兼容性\",{\"1\":{\"37\":1}}],[\"兼容\",{\"1\":{\"37\":1}}],[\"$off\",{\"1\":{\"225\":1}}],[\"$once\",{\"1\":{\"225\":1}}],[\"$on\",{\"1\":{\"225\":1}}],[\"$delete\",{\"1\":{\"225\":1}}],[\"$set\",{\"1\":{\"225\":1}}],[\"$watchs\",{\"1\":{\"209\":1}}],[\"$watch\",{\"0\":{\"209\":1},\"1\":{\"209\":1}}],[\"$event可以获取到事件发生时的事件对象\",{\"1\":{\"179\":1}}],[\"$event\",{\"1\":{\"179\":2,\"211\":1,\"219\":1,\"220\":2}}],[\"$emit\",{\"1\":{\"125\":1,\"142\":1,\"219\":2,\"220\":2}}],[\"$bus来触发事件和监听事件\",{\"1\":{\"130\":1,\"147\":1}}],[\"$bus\",{\"1\":{\"130\":4,\"147\":4}}],[\"$attrs\",{\"1\":{\"123\":1,\"124\":1,\"140\":1,\"141\":1}}],[\"$attrs来访问所有的\",{\"1\":{\"123\":1,\"140\":1}}],[\"$\",{\"1\":{\"37\":3,\"38\":4,\"41\":7,\"64\":1,\"65\":1,\"67\":2,\"72\":1,\"81\":1,\"103\":2,\"208\":2}}],[\"返回\",{\"1\":{\"37\":1}}],[\"返回给客户端\",{\"1\":{\"37\":1}}],[\"客户端接收更新\",{\"1\":{\"98\":1}}],[\"客户端接收到更新后\",{\"1\":{\"98\":1}}],[\"客户端\",{\"1\":{\"41\":1}}],[\"客户端注入本质上是创建一个script标签\",{\"1\":{\"37\":1}}],[\"客户端做一层拦截来解析模块的真实位置\",{\"1\":{\"37\":1}}],[\"语句中\",{\"1\":{\"104\":1}}],[\"语句来导入和导出模块\",{\"1\":{\"90\":1}}],[\"语法编写模块化的组件\",{\"1\":{\"236\":1}}],[\"语法糖\",{\"1\":{\"178\":1}}],[\"语法\",{\"0\":{\"160\":1},\"1\":{\"160\":1}}],[\"语法分析\",{\"1\":{\"87\":1}}],[\"语法的预设\",{\"1\":{\"84\":1}}],[\"语法导入的模块并以数组形式返回\",{\"1\":{\"37\":1}}],[\"语文\",{\"1\":{\"7\":1}}],[\"处理起来就会变得非常复杂\",{\"1\":{\"149\":1}}],[\"处理时\",{\"1\":{\"78\":1}}],[\"处理文件的名称\",{\"1\":{\"68\":1}}],[\"处理文件的扩展名\",{\"1\":{\"68\":1}}],[\"处理css文件中的样式\",{\"1\":{\"54\":1}}],[\"处理vue项目的sfc文件\",{\"1\":{\"45\":1}}],[\"处理应用程序时\",{\"1\":{\"44\":1}}],[\"处理\",{\"1\":{\"37\":1,\"217\":1}}],[\"处理的代价也很高\",{\"1\":{\"37\":1}}],[\"对应的内容也会发生更新\",{\"1\":{\"160\":1}}],[\"对应的值是一个字符串\",{\"1\":{\"55\":1}}],[\"对应的值时一个数组\",{\"1\":{\"55\":1}}],[\"对其进行打包处理\",{\"1\":{\"156\":1}}],[\"对于方式一\",{\"1\":{\"235\":1}}],[\"对于方式三\",{\"1\":{\"235\":1}}],[\"对于任何包含响应式数据的复杂逻辑\",{\"1\":{\"198\":1}}],[\"对于相同父元素的子元素节点并不会重新渲染整个列\",{\"1\":{\"193\":1}}],[\"对于每个\",{\"1\":{\"154\":1}}],[\"对于这种情况下\",{\"1\":{\"129\":1,\"146\":1}}],[\"对于扩展性和可维护性来说都是非常差的\",{\"1\":{\"114\":1,\"131\":1}}],[\"对于加载css文件来说\",{\"1\":{\"55\":1}}],[\"对html进行打包处理我们可以使用另外一个插件\",{\"1\":{\"75\":1}}],[\"对象的键\",{\"1\":{\"219\":1}}],[\"对象\",{\"1\":{\"176\":1}}],[\"对象语法\",{\"0\":{\"170\":1,\"173\":1},\"1\":{\"169\":1,\"170\":2,\"172\":1}}],[\"对象中的键值对是\",{\"1\":{\"154\":1}}],[\"对象中可以设置多个属性\",{\"1\":{\"55\":1}}],[\"对象里的属性\",{\"1\":{\"154\":1}}],[\"对象写法的目的是为了进行参数的验证\",{\"1\":{\"126\":1,\"143\":1}}],[\"对象或数组默认值必须从一个工厂函数获取\",{\"1\":{\"121\":2,\"138\":2}}],[\"对象类型的其他写法\",{\"1\":{\"121\":1,\"138\":1}}],[\"对象类型我们可以在指定attribute名称的同时\",{\"1\":{\"118\":1,\"135\":1}}],[\"对象类型\",{\"0\":{\"120\":1,\"137\":1},\"1\":{\"118\":1,\"135\":1}}],[\"对象方式的proxy选项可以指定一个或多个代理规则\",{\"1\":{\"102\":1}}],[\"对象属性为基础数据类型\",{\"1\":{\"12\":1}}],[\"对esm形式的\",{\"1\":{\"37\":1}}],[\"平时开发中\",{\"1\":{\"37\":1}}],[\"^\",{\"1\":{\"37\":2,\"99\":1,\"102\":2,\"103\":3,\"105\":1}}],[\"请在项目目录下运行\",{\"1\":{\"107\":1}}],[\"请运行\",{\"1\":{\"107\":1}}],[\"请注意\",{\"1\":{\"97\":1,\"154\":1}}],[\"请注意升级你的\",{\"1\":{\"25\":1}}],[\"请求\",{\"1\":{\"103\":1}}],[\"请求获取已经提前写好的关于\",{\"1\":{\"41\":1}}],[\"请求路径是\",{\"1\":{\"37\":1}}],[\"官方推荐的插件\",{\"1\":{\"236\":1}}],[\"官方文档有这个描述\",{\"1\":{\"234\":1}}],[\"官方并没有给出直接的概念解释\",{\"1\":{\"198\":1}}],[\"官方的解释对于初学者来说并不好理解\",{\"1\":{\"190\":1}}],[\"官方\",{\"1\":{\"37\":1}}],[\"以供\",{\"1\":{\"179\":1}}],[\"以应用一个\",{\"1\":{\"171\":1}}],[\"以动态地切换\",{\"1\":{\"170\":1}}],[\"以像搭建积木一下来搭建我们的项目\",{\"1\":{\"149\":1}}],[\"以帮助分析包内容\",{\"1\":{\"111\":2}}],[\"以确保提交的代码符合规范\",{\"1\":{\"108\":1}}],[\"以实现一致的代码样式\",{\"1\":{\"108\":1}}],[\"以验证整个应用程序的功能和流程\",{\"1\":{\"108\":1}}],[\"以提供更强大的开发工具和更可靠的代码\",{\"1\":{\"108\":1}}],[\"以提高样式表的可维护性和可重用性\",{\"1\":{\"108\":1}}],[\"以提高开发效率\",{\"1\":{\"92\":1}}],[\"以提高后续页面加载性能\",{\"1\":{\"37\":1}}],[\"以上\",{\"1\":{\"107\":1}}],[\"以改变请求头中的origin字段\",{\"1\":{\"102\":1}}],[\"以减小文件大小\",{\"1\":{\"101\":1}}],[\"以获取更详细的关于hmr的配置和使用说明\",{\"1\":{\"97\":1}}],[\"以获得更好的开发和部署体验\",{\"1\":{\"91\":1}}],[\"以启用hmr\",{\"1\":{\"97\":1}}],[\"以及一个自定义的验证函数\",{\"1\":{\"120\":1,\"137\":1}}],[\"以及一些其他的\",{\"1\":{\"63\":1}}],[\"以及在编辑器中进行实时错误检测和提示\",{\"1\":{\"108\":1}}],[\"以及在webpack配置文件中配置hmr选项\",{\"1\":{\"97\":1}}],[\"以满足你的开发需求\",{\"1\":{\"92\":1}}],[\"以便进行测试和调试\",{\"1\":{\"92\":1}}],[\"以便在将来的项目中重用\",{\"1\":{\"108\":1}}],[\"以便在不同浏览器和环境中运行\",{\"1\":{\"108\":1}}],[\"以便在开发过程中实现更快的热更新\",{\"1\":{\"97\":1}}],[\"以便在当前和旧版浏览器或环境中运行\",{\"1\":{\"81\":1}}],[\"以便在部署应用程序时使用\",{\"1\":{\"78\":1}}],[\"以便在应用程序中使用\",{\"1\":{\"54\":1}}],[\"以下报错\",{\"1\":{\"168\":1}}],[\"以下为不使用深度监听\",{\"1\":{\"207\":1}}],[\"以下为内部判断\",{\"1\":{\"204\":1}}],[\"以下为错误写法\",{\"1\":{\"160\":1}}],[\"以下为\",{\"1\":{\"89\":1}}],[\"以下使用\",{\"1\":{\"88\":1}}],[\"以下是一个示例\",{\"1\":{\"126\":1,\"130\":1,\"143\":1,\"147\":1}}],[\"以下是一个示例配置\",{\"1\":{\"103\":1}}],[\"以下是一个简单的示例\",{\"1\":{\"125\":1,\"142\":1}}],[\"以下是一个\",{\"1\":{\"90\":1}}],[\"以下是一个使用\",{\"1\":{\"81\":1}}],[\"以下是一些常用的\",{\"1\":{\"84\":1}}],[\"以下是一些常见的框架的hmr支持方式\",{\"1\":{\"97\":1}}],[\"以下是一些常见的\",{\"1\":{\"83\":1}}],[\"以修改和优化ast\",{\"1\":{\"87\":1}}],[\"以后会采用\",{\"1\":{\"54\":1}}],[\"以\",{\"1\":{\"37\":2,\"90\":1,\"107\":1}}],[\"以html入口\",{\"1\":{\"20\":1}}],[\"尽可能让它们饱和运行\",{\"1\":{\"36\":1}}],[\"超快的构建速度\",{\"1\":{\"36\":1}}],[\"把内存空间填充为真实的值\",{\"1\":{\"35\":1}}],[\"最终刚好找到的是script作用于中的this\",{\"1\":{\"234\":1}}],[\"最终形成我们的应用程序\",{\"1\":{\"114\":1,\"131\":1}}],[\"最终将高版本的\",{\"1\":{\"22\":1}}],[\"最新版的\",{\"1\":{\"109\":1}}],[\"最后是\",{\"1\":{\"104\":1}}],[\"最后会对\",{\"1\":{\"39\":1}}],[\"最后\",{\"1\":{\"35\":1,\"125\":1,\"142\":1}}],[\"接下来我们详细解析一下之前传入的属性分别代表什么含义\",{\"1\":{\"232\":1}}],[\"接下来我们来看一下同一个计算多次使用\",{\"1\":{\"203\":1}}],[\"接下来我们把\",{\"1\":{\"90\":1}}],[\"接下来配置copywebpackplugin即可\",{\"1\":{\"78\":1}}],[\"接下来会被\",{\"1\":{\"37\":1}}],[\"接下来会进行实例化\",{\"1\":{\"35\":1}}],[\"接下来以vite创建的模板为例\",{\"1\":{\"35\":1}}],[\"浏览器会向服务器发送一个\",{\"1\":{\"103\":1}}],[\"浏览器会发送\",{\"1\":{\"37\":1}}],[\"浏览器拿到两个新的文件后\",{\"1\":{\"98\":1}}],[\"浏览器\",{\"1\":{\"98\":1}}],[\"浏览器便可以利用esm直接拿到js资源\",{\"1\":{\"40\":1}}],[\"浏览器就会报错\",{\"1\":{\"37\":1}}],[\"浏览器下载对应的文件\",{\"1\":{\"35\":1}}],[\"浏览器可以直接进行解析\",{\"1\":{\"31\":1}}],[\"时语法更简单\",{\"1\":{\"236\":1}}],[\"时自动启用\",{\"1\":{\"217\":1}}],[\"时\",{\"1\":{\"35\":1,\"37\":2,\"41\":2,\"63\":1,\"76\":1,\"102\":1,\"103\":1,\"179\":1}}],[\"+=\",{\"1\":{\"210\":1}}],[\"+\",{\"1\":{\"35\":1,\"41\":1,\"88\":1,\"90\":2,\"106\":1,\"108\":3,\"173\":1,\"200\":1,\"201\":2,\"202\":2,\"203\":4,\"204\":4,\"210\":3,\"219\":1}}],[\"mp\",{\"1\":{\"234\":1}}],[\"mp4|webm|ogg|mp3|wav|flac|aac\",{\"1\":{\"38\":1}}],[\"mvvm是\",{\"1\":{\"231\":1}}],[\"mvvm模型\",{\"0\":{\"231\":1}}],[\"mvc是\",{\"1\":{\"231\":1}}],[\"mvc和mvvm都是一种软件的体系结构\",{\"1\":{\"231\":1}}],[\"mustache的基本使用\",{\"1\":{\"160\":1}}],[\"mustache的使用\",{\"1\":{\"160\":1}}],[\"mustache中不仅仅可以是data中的属性\",{\"1\":{\"160\":1}}],[\"mustache\",{\"0\":{\"160\":1},\"1\":{\"160\":1}}],[\"multiple\",{\"1\":{\"213\":1}}],[\"multi\",{\"1\":{\"41\":1}}],[\"multiupdatepayload\",{\"1\":{\"41\":1}}],[\"md\",{\"1\":{\"109\":1}}],[\"mixins也是由一大堆的options组成的\",{\"1\":{\"226\":1}}],[\"middle\",{\"1\":{\"177\":1,\"180\":1}}],[\"middleware\",{\"1\":{\"92\":1}}],[\"mitt\",{\"0\":{\"130\":1,\"147\":1}}],[\"mitt全局事件总线\",{\"1\":{\"128\":1,\"145\":1}}],[\"minimize\",{\"1\":{\"105\":1}}],[\"mytext\",{\"1\":{\"219\":2}}],[\"myprop\",{\"1\":{\"121\":2,\"138\":2}}],[\"my\",{\"1\":{\"121\":2,\"122\":2,\"138\":2,\"139\":2,\"153\":2,\"160\":2,\"162\":2,\"163\":2,\"165\":1,\"167\":1,\"168\":2,\"170\":2,\"171\":2,\"173\":2,\"174\":2,\"175\":2,\"176\":2,\"178\":2,\"179\":2,\"180\":2,\"182\":2,\"183\":2,\"184\":1,\"185\":1,\"187\":2,\"188\":2,\"189\":2,\"193\":2,\"200\":1,\"201\":2,\"202\":2,\"203\":4,\"204\":2,\"206\":2,\"207\":2,\"210\":2,\"213\":2}}],[\"mycomponentname\",{\"1\":{\"151\":1}}],[\"mycomponent\",{\"1\":{\"104\":7,\"122\":3,\"139\":3,\"151\":1}}],[\"mymodule\",{\"1\":{\"90\":3}}],[\"mjs\",{\"1\":{\"89\":2}}],[\"msg\",{\"1\":{\"163\":3,\"216\":1,\"218\":1}}],[\"msg=\",{\"1\":{\"35\":1}}],[\"ms\",{\"1\":{\"61\":1}}],[\"m\",{\"1\":{\"41\":4}}],[\"merge\",{\"1\":{\"105\":3}}],[\"memfs\",{\"1\":{\"94\":1}}],[\"methods属性是一个对象\",{\"1\":{\"234\":1}}],[\"methods属性\",{\"0\":{\"234\":1}}],[\"methods的getfullname中的计算\",{\"1\":{\"203\":1}}],[\"methods中方法\",{\"1\":{\"178\":1}}],[\"methods等选项了\",{\"1\":{\"154\":1}}],[\"methods\",{\"0\":{\"203\":1},\"1\":{\"90\":1,\"125\":2,\"129\":1,\"130\":2,\"142\":2,\"146\":1,\"147\":2,\"153\":1,\"155\":1,\"160\":1,\"162\":1,\"170\":1,\"173\":1,\"178\":1,\"179\":1,\"180\":1,\"189\":1,\"193\":1,\"201\":1,\"203\":2,\"204\":1,\"206\":1,\"207\":2,\"208\":1,\"210\":1,\"213\":1,\"219\":1,\"226\":1,\"232\":2}}],[\"message=\",{\"1\":{\"119\":1,\"120\":2,\"136\":1,\"137\":2}}],[\"message\",{\"1\":{\"41\":1,\"90\":3,\"119\":2,\"120\":2,\"121\":2,\"129\":3,\"130\":4,\"136\":2,\"137\":2,\"138\":2,\"146\":3,\"147\":4,\"152\":1,\"160\":5,\"162\":3,\"164\":2,\"165\":2,\"166\":1,\"171\":1,\"173\":1,\"174\":1,\"178\":1,\"179\":1,\"180\":1,\"200\":1,\"201\":2,\"202\":2,\"232\":4,\"235\":3}}],[\"messages\",{\"1\":{\"41\":1}}],[\"mediare\",{\"1\":{\"38\":3}}],[\"male\",{\"1\":{\"213\":3}}],[\"margin\",{\"1\":{\"210\":1}}],[\"manifest\",{\"1\":{\"111\":1}}],[\"manifest文件\",{\"1\":{\"98\":1}}],[\"manually\",{\"1\":{\"108\":2}}],[\"mac目录下回自动生成的一个文件\",{\"1\":{\"78\":1}}],[\"maxsize\",{\"1\":{\"64\":1,\"72\":1}}],[\"map\",{\"1\":{\"37\":1,\"79\":2,\"105\":3,\"210\":1,\"237\":1}}],[\"maybe\",{\"1\":{\"37\":1}}],[\"main组件是banner\",{\"1\":{\"116\":1,\"133\":1}}],[\"mainfields\",{\"1\":{\"104\":5}}],[\"main\",{\"1\":{\"37\":2,\"48\":1,\"51\":1,\"90\":2,\"91\":1,\"104\":4,\"110\":2,\"115\":1,\"116\":1,\"130\":1,\"132\":1,\"133\":1,\"147\":1}}],[\"mono\",{\"1\":{\"224\":1}}],[\"monorepo\",{\"1\":{\"89\":2}}],[\"movies\",{\"1\":{\"187\":2,\"189\":5}}],[\"movie\",{\"1\":{\"187\":2,\"189\":2}}],[\"mousemove\",{\"1\":{\"178\":6}}],[\"mousemove=\",{\"1\":{\"178\":1}}],[\"mount\",{\"1\":{\"37\":1,\"90\":1,\"130\":1,\"147\":1,\"153\":1,\"160\":1,\"162\":1,\"163\":1,\"168\":1,\"170\":1,\"171\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"178\":1,\"179\":1,\"180\":1,\"182\":1,\"183\":1,\"187\":1,\"188\":1,\"189\":1,\"193\":1,\"201\":1,\"202\":1,\"203\":2,\"204\":1,\"206\":1,\"207\":1,\"210\":1,\"213\":1,\"232\":2}}],[\"more\",{\"1\":{\"91\":1}}],[\"mozilla\",{\"1\":{\"177\":1}}],[\"moz\",{\"1\":{\"61\":1}}],[\"modifiers\",{\"1\":{\"213\":1}}],[\"modelmodifiers\",{\"1\":{\"219\":8}}],[\"modelvalue\",{\"1\":{\"211\":2,\"219\":8}}],[\"model\",{\"0\":{\"211\":1,\"220\":1},\"1\":{\"211\":6,\"216\":2,\"217\":2,\"218\":2,\"219\":6,\"220\":4,\"231\":2}}],[\"model=\",{\"1\":{\"182\":1,\"189\":1,\"203\":1,\"206\":1,\"211\":1,\"213\":8}}],[\"modern\",{\"1\":{\"111\":2}}],[\"mode\",{\"1\":{\"79\":1,\"92\":1,\"105\":6,\"110\":1,\"111\":1,\"112\":2}}],[\"mode配置列表\",{\"0\":{\"79\":1}}],[\"mode参数指定打包的模式\",{\"1\":{\"53\":1}}],[\"modulename\",{\"1\":{\"96\":1}}],[\"modulefiletoidmap\",{\"1\":{\"37\":1}}],[\"moduleidtofilemap\",{\"1\":{\"37\":1}}],[\"modulere\",{\"1\":{\"37\":3}}],[\"modules中查找文件\",{\"1\":{\"104\":1}}],[\"modules中指定的所有目录检索模块\",{\"1\":{\"104\":1}}],[\"modules下的\",{\"1\":{\"47\":1}}],[\"modules开头就进行后续处理\",{\"1\":{\"37\":1}}],[\"modules\",{\"1\":{\"37\":10,\"88\":1,\"104\":10,\"109\":2}}],[\"module\",{\"0\":{\"71\":1,\"72\":1},\"1\":{\"28\":1,\"32\":1,\"37\":2,\"41\":1,\"44\":1,\"51\":1,\"54\":1,\"55\":4,\"62\":1,\"71\":2,\"74\":1,\"76\":1,\"77\":1,\"79\":1,\"84\":1,\"88\":2,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"95\":1,\"96\":4,\"98\":1,\"99\":1,\"101\":1,\"102\":3,\"103\":2,\"104\":5,\"105\":2,\"110\":1,\"112\":1}}],[\"<option\",{\"1\":{\"213\":3}}],[\"<=\",{\"1\":{\"210\":1}}],[\"<input>\",{\"1\":{\"211\":1,\"213\":1}}],[\"<input\",{\"1\":{\"180\":1,\"182\":1,\"189\":1,\"203\":1,\"206\":1,\"211\":2,\"213\":6,\"216\":1,\"217\":1,\"218\":1,\"219\":3,\"220\":2}}],[\"<img\",{\"1\":{\"35\":1,\"167\":3,\"168\":3,\"175\":1}}],[\"<a\",{\"1\":{\"167\":1,\"168\":1,\"175\":1}}],[\"<app>\",{\"1\":{\"90\":1}}],[\"<custominput>\",{\"1\":{\"211\":1}}],[\"<custominput\",{\"1\":{\"211\":1}}],[\"<componenta\",{\"1\":{\"154\":1}}],[\"<component\",{\"1\":{\"127\":1,\"144\":1,\"153\":1}}],[\"<component>\",{\"1\":{\"127\":2,\"144\":2}}],[\"<child\",{\"1\":{\"119\":1,\"120\":1,\"121\":1,\"125\":1,\"129\":1,\"136\":1,\"137\":1,\"138\":1,\"142\":1,\"146\":1}}],[\"<button\",{\"1\":{\"125\":1,\"127\":1,\"130\":2,\"142\":1,\"144\":1,\"147\":2,\"155\":1,\"160\":1,\"162\":3,\"170\":1,\"178\":3,\"179\":2,\"180\":2,\"183\":1,\"189\":1,\"193\":1,\"203\":1,\"204\":1,\"206\":1,\"207\":3,\"210\":3,\"232\":4}}],[\"<body>\",{\"1\":{\"76\":1,\"153\":1,\"170\":1,\"171\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"178\":1,\"179\":1,\"180\":1,\"183\":1,\"187\":1,\"188\":1,\"189\":1,\"193\":1,\"203\":1,\"206\":1,\"207\":1,\"210\":1,\"213\":1,\"232\":2}}],[\"<p>答案是\",{\"1\":{\"206\":1}}],[\"<p>您的问题是\",{\"1\":{\"206\":1}}],[\"<p>\",{\"1\":{\"123\":1,\"129\":1,\"140\":1,\"146\":1,\"153\":1,\"155\":1,\"235\":2}}],[\"<plugin\",{\"1\":{\"107\":1}}],[\"<mycomponent\",{\"1\":{\"219\":1}}],[\"<mycomponent>\",{\"1\":{\"151\":1}}],[\"<my\",{\"1\":{\"122\":1,\"139\":1,\"151\":3}}],[\"<meta\",{\"1\":{\"76\":3,\"210\":3}}],[\"<vue\",{\"1\":{\"115\":2,\"132\":2}}],[\"<vuefooter><\",{\"1\":{\"115\":1,\"132\":1}}],[\"<vuemain><\",{\"1\":{\"115\":1,\"132\":1}}],[\"<vueheader><\",{\"1\":{\"115\":1,\"132\":1}}],[\"<version>\",{\"1\":{\"107\":2}}],[\"<username\",{\"1\":{\"220\":1}}],[\"<ul>\",{\"1\":{\"114\":1,\"115\":1,\"131\":1,\"132\":1,\"187\":3,\"188\":1,\"189\":1,\"193\":1}}],[\"<url>\",{\"1\":{\"107\":1}}],[\"<div><\",{\"1\":{\"159\":1}}],[\"<div>\",{\"1\":{\"114\":3,\"115\":3,\"119\":2,\"120\":2,\"121\":2,\"122\":1,\"123\":1,\"124\":2,\"125\":1,\"129\":2,\"130\":2,\"131\":3,\"132\":3,\"136\":2,\"137\":2,\"138\":2,\"139\":1,\"140\":1,\"141\":2,\"142\":1,\"146\":2,\"147\":2,\"155\":1,\"163\":1,\"166\":1,\"232\":2,\"235\":2}}],[\"<div\",{\"1\":{\"76\":1,\"115\":1,\"124\":1,\"127\":1,\"132\":1,\"141\":1,\"144\":1,\"153\":1,\"159\":1,\"162\":3,\"163\":1,\"166\":1,\"170\":7,\"171\":4,\"173\":6,\"174\":2,\"175\":4,\"176\":4,\"178\":4,\"179\":1,\"180\":2,\"183\":1,\"187\":1,\"188\":1,\"189\":1,\"193\":1,\"203\":1,\"206\":1,\"207\":1,\"210\":1,\"213\":1,\"232\":2}}],[\"<select\",{\"1\":{\"213\":1}}],[\"<select>\",{\"1\":{\"213\":1}}],[\"<span>喜欢的水果\",{\"1\":{\"213\":1}}],[\"<span>你的爱好\",{\"1\":{\"213\":2}}],[\"<span\",{\"1\":{\"163\":1,\"210\":1}}],[\"<style>\",{\"1\":{\"170\":1}}],[\"<style\",{\"1\":{\"90\":1,\"114\":1,\"115\":1,\"131\":1,\"132\":1,\"155\":1}}],[\"<strong>we\",{\"1\":{\"76\":1}}],[\"<script\",{\"1\":{\"90\":1,\"153\":1,\"160\":1,\"162\":1,\"163\":1,\"170\":1,\"171\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"178\":1,\"179\":1,\"180\":1,\"182\":1,\"183\":1,\"187\":1,\"188\":1,\"189\":1,\"193\":1,\"201\":1,\"202\":1,\"203\":2,\"204\":1,\"206\":1,\"207\":1,\"210\":2,\"213\":1,\"228\":1,\"229\":1,\"232\":3}}],[\"<script>\",{\"1\":{\"35\":1,\"90\":2,\"114\":1,\"115\":2,\"119\":2,\"120\":2,\"121\":2,\"122\":1,\"125\":2,\"127\":1,\"129\":2,\"130\":2,\"131\":1,\"132\":2,\"136\":2,\"137\":2,\"138\":2,\"139\":1,\"142\":2,\"144\":1,\"146\":2,\"147\":2,\"153\":1,\"154\":1,\"155\":1,\"160\":1,\"162\":1,\"163\":1,\"168\":1,\"170\":1,\"171\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"178\":1,\"179\":1,\"180\":1,\"182\":1,\"183\":1,\"187\":1,\"188\":1,\"189\":1,\"193\":1,\"201\":1,\"202\":1,\"203\":2,\"204\":1,\"206\":1,\"207\":1,\"210\":1,\"213\":1,\"219\":2,\"220\":1,\"232\":2}}],[\"<noscript>\",{\"1\":{\"76\":1}}],[\"<textarea\",{\"1\":{\"213\":1}}],[\"<textarea>\",{\"1\":{\"213\":1}}],[\"<template\",{\"1\":{\"153\":2,\"160\":1,\"162\":1,\"163\":1,\"165\":1,\"167\":1,\"168\":1,\"170\":1,\"171\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"178\":1,\"179\":1,\"180\":1,\"182\":1,\"183\":3,\"184\":1,\"185\":1,\"187\":1,\"188\":2,\"189\":1,\"193\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":2,\"204\":1,\"206\":1,\"207\":1,\"210\":3,\"213\":1,\"232\":1}}],[\"<template>\",{\"1\":{\"35\":1,\"90\":1,\"114\":1,\"115\":6,\"119\":2,\"120\":2,\"121\":2,\"122\":1,\"123\":1,\"124\":1,\"125\":2,\"127\":1,\"129\":2,\"130\":2,\"131\":1,\"132\":6,\"136\":2,\"137\":2,\"138\":2,\"139\":1,\"140\":1,\"141\":1,\"142\":2,\"144\":1,\"146\":2,\"147\":2,\"154\":1,\"155\":1,\"159\":1,\"219\":2,\"220\":1,\"235\":3}}],[\"<td>\",{\"1\":{\"210\":6}}],[\"<tr\",{\"1\":{\"210\":1}}],[\"<tbody>\",{\"1\":{\"210\":1}}],[\"<th>操作<\",{\"1\":{\"210\":1}}],[\"<th>购买数量<\",{\"1\":{\"210\":1}}],[\"<th>价格<\",{\"1\":{\"210\":1}}],[\"<th>出版日期<\",{\"1\":{\"210\":1}}],[\"<th>书籍名称<\",{\"1\":{\"210\":1}}],[\"<th>序号<\",{\"1\":{\"210\":1}}],[\"<thead>\",{\"1\":{\"210\":1}}],[\"<table>\",{\"1\":{\"210\":1}}],[\"<title>document<\",{\"1\":{\"210\":1}}],[\"<title><\",{\"1\":{\"76\":1}}],[\"<h1>\",{\"1\":{\"235\":2}}],[\"<h2\",{\"1\":{\"123\":1,\"140\":1,\"162\":1,\"164\":1,\"165\":1,\"182\":3,\"184\":1,\"185\":2}}],[\"<h2>fruit\",{\"1\":{\"213\":1}}],[\"<h2>footer<\",{\"1\":{\"114\":1,\"115\":1,\"131\":1,\"132\":1}}],[\"<h2>gender\",{\"1\":{\"213\":1}}],[\"<h2>hobbies\",{\"1\":{\"213\":1}}],[\"<h2>header<\",{\"1\":{\"114\":1,\"115\":1,\"131\":1,\"132\":1}}],[\"<h2>isagree\",{\"1\":{\"213\":1}}],[\"<h2>intro\",{\"1\":{\"213\":1}}],[\"<h2>购物车为空~<\",{\"1\":{\"210\":1}}],[\"<h2>总价格\",{\"1\":{\"210\":1}}],[\"<h2>遍历数字<\",{\"1\":{\"187\":1}}],[\"<h2>个人信息<\",{\"1\":{\"187\":1}}],[\"<h2>电影列表<\",{\"1\":{\"187\":1,\"189\":1}}],[\"<h2>呵呵呵呵<\",{\"1\":{\"183\":3}}],[\"<h2>哈哈哈哈<\",{\"1\":{\"183\":3}}],[\"<h2>免责声明<\",{\"1\":{\"114\":1,\"115\":1,\"131\":1,\"132\":1}}],[\"<h2>banner<\",{\"1\":{\"114\":1,\"115\":1,\"131\":1,\"132\":1}}],[\"<h2>navbar<\",{\"1\":{\"114\":1,\"115\":1,\"131\":1,\"132\":1}}],[\"<h2>我是vue渲染出来的<\",{\"1\":{\"90\":1}}],[\"<h2>\",{\"1\":{\"90\":2,\"121\":1,\"123\":1,\"138\":1,\"140\":1,\"152\":2,\"153\":2,\"155\":1,\"160\":7,\"162\":5,\"164\":1,\"200\":3,\"201\":3,\"202\":3,\"203\":20,\"204\":1,\"207\":1,\"232\":4}}],[\"<hello\",{\"1\":{\"90\":1}}],[\"<helloworld\",{\"1\":{\"35\":1}}],[\"<head>\",{\"1\":{\"76\":1,\"210\":1}}],[\"<html\",{\"1\":{\"76\":1,\"210\":1}}],[\"<label\",{\"1\":{\"213\":7}}],[\"<label>\",{\"1\":{\"213\":3}}],[\"<li>\",{\"1\":{\"188\":2}}],[\"<li>商品列表5<\",{\"1\":{\"114\":1,\"115\":1,\"131\":1,\"132\":1}}],[\"<li>商品列表4<\",{\"1\":{\"114\":1,\"115\":1,\"131\":1,\"132\":1}}],[\"<li>商品列表3<\",{\"1\":{\"114\":1,\"115\":1,\"131\":1,\"132\":1}}],[\"<li>商品列表2<\",{\"1\":{\"114\":1,\"115\":1,\"131\":1,\"132\":1}}],[\"<li>商品列表1<\",{\"1\":{\"114\":1,\"115\":1,\"131\":1,\"132\":1}}],[\"<li\",{\"1\":{\"187\":3,\"188\":1,\"189\":1,\"193\":1}}],[\"<link\",{\"1\":{\"76\":1,\"210\":1}}],[\"<link>\",{\"1\":{\"41\":1}}],[\"<length>\",{\"1\":{\"68\":1}}],[\"<\",{\"1\":{\"35\":2,\"41\":1,\"76\":9,\"90\":6,\"114\":6,\"115\":13,\"119\":8,\"120\":8,\"121\":10,\"122\":3,\"123\":4,\"124\":4,\"125\":7,\"127\":4,\"129\":7,\"130\":6,\"131\":6,\"132\":13,\"136\":8,\"137\":8,\"138\":10,\"139\":3,\"140\":4,\"141\":4,\"142\":7,\"144\":4,\"146\":7,\"147\":6,\"152\":2,\"153\":7,\"154\":2,\"155\":5,\"159\":2,\"160\":15,\"162\":10,\"163\":3,\"164\":2,\"165\":3,\"166\":1,\"167\":5,\"168\":5,\"170\":10,\"171\":5,\"173\":6,\"174\":3,\"175\":4,\"176\":4,\"178\":8,\"179\":5,\"180\":4,\"182\":2,\"183\":5,\"184\":1,\"185\":1,\"187\":11,\"188\":7,\"189\":5,\"193\":5,\"200\":5,\"201\":5,\"202\":5,\"203\":27,\"204\":3,\"206\":5,\"207\":5,\"210\":21,\"213\":25,\"216\":1,\"219\":4,\"220\":2,\"232\":12,\"235\":8}}],[\"降低浏览器压力\",{\"1\":{\"35\":1}}],[\"再通过v\",{\"1\":{\"213\":1}}],[\"再将其放在整体当中\",{\"1\":{\"149\":1}}],[\"再将这些组件组合嵌套在一起\",{\"1\":{\"114\":1,\"131\":1}}],[\"再根据这个只读引用\",{\"1\":{\"35\":1}}],[\"再启动开发服务器\",{\"1\":{\"22\":1}}],[\"等构建工具来对其进行处理\",{\"1\":{\"155\":1}}],[\"等价于\",{\"1\":{\"154\":1,\"164\":1}}],[\"等\",{\"1\":{\"104\":1,\"213\":1}}],[\"等相关插件\",{\"1\":{\"97\":1}}],[\"等等\",{\"1\":{\"63\":1}}],[\"等事件\",{\"1\":{\"41\":1}}],[\"等打包工具会帮我们找到模块的路径\",{\"1\":{\"37\":1}}],[\"等脚本真正执行时\",{\"1\":{\"35\":1}}],[\"等存储在栈内存中\",{\"1\":{\"1\":1}}],[\"为名注册的组件\",{\"1\":{\"151\":1}}],[\"为现代浏览器交付原生支持的\",{\"1\":{\"111\":1}}],[\"为了方便\",{\"1\":{\"151\":1}}],[\"为了避免这种情况\",{\"1\":{\"103\":1}}],[\"为了完成自动编译\",{\"1\":{\"92\":1}}],[\"为了运行需要有两个操作\",{\"1\":{\"92\":1}}],[\"为了优化请求数量和速度\",{\"1\":{\"37\":1}}],[\"为\",{\"1\":{\"37\":1}}],[\"为例\",{\"1\":{\"37\":2}}],[\"为模块分配内存\",{\"1\":{\"35\":1}}],[\"为编译时加载\",{\"1\":{\"35\":1}}],[\"为什么要使用\",{\"1\":{\"236\":1}}],[\"为什么是window呢\",{\"1\":{\"234\":1}}],[\"为什么不能使用箭头函数\",{\"1\":{\"234\":1}}],[\"为什么使用\",{\"0\":{\"21\":1}}],[\"为什么选\",{\"1\":{\"18\":1}}],[\"就可\",{\"1\":{\"149\":1}}],[\"就可以解决我们的跨域问题了\",{\"1\":{\"102\":1}}],[\"就可以得到一个预设好的开发环境\",{\"1\":{\"23\":1}}],[\"就会非常的麻烦\",{\"1\":{\"129\":1,\"146\":1}}],[\"就会读到该信息\",{\"1\":{\"76\":1}}],[\"就会生成一个只读引用\",{\"1\":{\"35\":1}}],[\"就是所有的data使用过程都会变成了一个方法的调用\",{\"1\":{\"198\":1}}],[\"就是说\",{\"1\":{\"151\":1}}],[\"就是将问题进行拆解\",{\"1\":{\"149\":1}}],[\"就是编译器\",{\"1\":{\"86\":1}}],[\"就是style\",{\"1\":{\"56\":1}}],[\"就是我们打包之后的文件\",{\"1\":{\"48\":1}}],[\"就近依赖\",{\"1\":{\"35\":1}}],[\"延迟执行\",{\"1\":{\"35\":1}}],[\"是目前非常流行的架构模式\",{\"1\":{\"231\":1}}],[\"是在前期被使用非常框架的架构模式\",{\"1\":{\"231\":1}}],[\"是无法劫持和监听的\",{\"1\":{\"225\":1}}],[\"是使用\",{\"1\":{\"225\":1}}],[\"是什么作用\",{\"0\":{\"190\":1}}],[\"是过滤的意思\",{\"1\":{\"189\":1}}],[\"是允许template中有多个根元素\",{\"1\":{\"167\":2}}],[\"是否必须\",{\"1\":{\"120\":1,\"137\":1}}],[\"是否是必须的\",{\"1\":{\"118\":1,\"135\":1}}],[\"是否启动gzip压缩\",{\"1\":{\"99\":1}}],[\"是否自动打开浏览器\",{\"1\":{\"99\":1}}],[\"是否开启热更新\",{\"1\":{\"96\":1,\"99\":1}}],[\"是指开发服务器\",{\"1\":{\"92\":1}}],[\"是用于服务器端渲染的版本\",{\"1\":{\"90\":1}}],[\"是用于构建工具\",{\"1\":{\"90\":1}}],[\"是用于原生\",{\"1\":{\"90\":1}}],[\"是用于直接在浏览器中引入的全局版本\",{\"1\":{\"90\":1}}],[\"是源文件的目录\",{\"1\":{\"82\":1}}],[\"是\",{\"1\":{\"55\":1,\"90\":1,\"103\":1,\"104\":1,\"153\":1,\"236\":1}}],[\"是不可以的\",{\"1\":{\"51\":1}}],[\"是一套用于构建用户界面的渐进式框架\",{\"1\":{\"223\":1}}],[\"是一组预先配置的转换规则\",{\"1\":{\"84\":1}}],[\"是一个事件修饰符\",{\"1\":{\"180\":1}}],[\"是一个表达式\",{\"1\":{\"160\":1}}],[\"是一个基于\",{\"1\":{\"106\":1}}],[\"是一个socket的长连接\",{\"1\":{\"98\":1}}],[\"是一个非常流行的工具\",{\"1\":{\"81\":1}}],[\"是一个用于\",{\"1\":{\"78\":1}}],[\"是一个用于现代\",{\"1\":{\"44\":1}}],[\"是一个webpack内置的插件\",{\"1\":{\"77\":1}}],[\"是一个\",{\"1\":{\"63\":1,\"81\":1}}],[\"是一种特殊的文件格式\",{\"1\":{\"236\":1}}],[\"是一种常见的网络应用程序架构\",{\"1\":{\"102\":1}}],[\"是一种项目代码管理方式\",{\"1\":{\"89\":1}}],[\"是一种具有明确建议的工具\",{\"1\":{\"18\":1}}],[\"是一种新型前端构建工具\",{\"1\":{\"18\":1}}],[\"是seajs在推广过程中对模块定义的规范化产出\",{\"1\":{\"35\":1}}],[\"是requirejs在推广过程中对模块定义的规范化产出\",{\"1\":{\"35\":1}}],[\"形成一个完整的js文件\",{\"1\":{\"35\":1}}],[\"相对路径\",{\"1\":{\"104\":1}}],[\"相当于直接在浏览器的\",{\"1\":{\"95\":1}}],[\"相关联的代码\",{\"1\":{\"226\":1}}],[\"相关模块\",{\"1\":{\"107\":1}}],[\"相关代码在处理\",{\"1\":{\"41\":1}}],[\"相关的模块代码都打包在一起\",{\"1\":{\"35\":1}}],[\"相比之下\",{\"1\":{\"154\":1}}],[\"相比webpack需要对entry\",{\"1\":{\"23\":1}}],[\"相比snowpack支持多页面\",{\"1\":{\"20\":1}}],[\"允许开发者以声明式的方式将\",{\"1\":{\"159\":1}}],[\"允许你将项目中的任何组件以一个库或\",{\"1\":{\"111\":1}}],[\"允许您在编写css时使用变量\",{\"1\":{\"108\":1}}],[\"允许在不刷新整个页面的情况下更新部分模块\",{\"1\":{\"92\":1}}],[\"允许在浏览器实现模块化\",{\"1\":{\"35\":1}}],[\"允许一个表达式在期望多个参数\",{\"1\":{\"7\":1}}],[\"紧接着出现了esm\",{\"1\":{\"35\":1}}],[\"往往会对资源模块化来提效\",{\"1\":{\"35\":1}}],[\"随着js代码日益膨胀\",{\"1\":{\"35\":1}}],[\"原理\",{\"0\":{\"33\":1,\"85\":1}}],[\"原生开发和vue开发的模式和特点\",{\"1\":{\"230\":1}}],[\"原生语言\",{\"1\":{\"86\":1}}],[\"原生\",{\"1\":{\"18\":1}}],[\"这使得我们可以在开发过程中更方便地编写和调试模板\",{\"1\":{\"235\":1}}],[\"这次更新对于ul和button是不需要进行更新\",{\"1\":{\"193\":1}}],[\"这次因为某些样式我们需要根据数据动态来决定\",{\"1\":{\"172\":1}}],[\"这三个指令与javascript的条件语句if\",{\"1\":{\"182\":1}}],[\"这三大框架的创建过程我们都是借助于脚手架\",{\"1\":{\"43\":1}}],[\"这类打包工具\",{\"1\":{\"156\":1}}],[\"这类的模块化语法\",{\"1\":{\"35\":1}}],[\"这就意味着每个组件都会有自己的模板\",{\"1\":{\"155\":1}}],[\"这可能会影响应用长期的可维护性\",{\"1\":{\"154\":1}}],[\"这让我们能够使用同样的\",{\"1\":{\"151\":1}}],[\"这部分独立的功能\",{\"1\":{\"149\":1}}],[\"这里涉及到箭头函数使用this的查找规则\",{\"1\":{\"234\":1}}],[\"这里其实涉及到两种不同的编程范式命令式编程和声明式编程\",{\"1\":{\"230\":1}}],[\"这里我们主要讲两种方式\",{\"1\":{\"128\":1,\"145\":1}}],[\"这里还有一些有用的命令参数\",{\"1\":{\"111\":1}}],[\"这有助于提高代码的可维护性和可靠性\",{\"1\":{\"126\":1,\"143\":1}}],[\"这也是官方推荐的写法\",{\"1\":{\"121\":1,\"138\":1}}],[\"这也就出现了多个模块化方案\",{\"1\":{\"35\":1}}],[\"这时就需要使用代理将客户端的api请求转发到后端api服务器上\",{\"1\":{\"102\":1}}],[\"这\",{\"1\":{\"102\":1}}],[\"这一个库实现\",{\"1\":{\"94\":1}}],[\"这包括设置服务器的端口\",{\"1\":{\"92\":1}}],[\"这将有助于提高应用程序的性能和加载速度\",{\"1\":{\"91\":1}}],[\"这种做法有一个直观的弊端\",{\"1\":{\"198\":1}}],[\"这种绑定的方式\",{\"1\":{\"175\":1}}],[\"这种方式需要通过特定的代码来对模板进行解析\",{\"1\":{\"235\":1}}],[\"这种方式是之前经常使用的方式\",{\"1\":{\"235\":1}}],[\"这种方式一致存在一个缺陷就是当给对象添加或者删除属性时\",{\"1\":{\"225\":1}}],[\"这种方式称为内存编译\",{\"1\":{\"94\":1}}],[\"这种方式可以更好的表示loader的配置\",{\"1\":{\"55\":1}}],[\"这种写法大概率就是\",{\"1\":{\"89\":1}}],[\"这些方法可以被绑定到\",{\"1\":{\"234\":1}}],[\"这些都是模板特有的语法\",{\"1\":{\"232\":1}}],[\"这些标签会替换掉我们挂载到的元素\",{\"1\":{\"232\":1}}],[\"这些被包裹过的方法包括\",{\"1\":{\"189\":1}}],[\"这些内容只有在条件为true时\",{\"1\":{\"182\":1}}],[\"这些attribute会被添加到组件的根元素上\",{\"1\":{\"122\":1,\"139\":1}}],[\"这些模块可能来自于自己编写的代码\",{\"1\":{\"104\":1}}],[\"这些更新代码会被热更新运行时处理\",{\"1\":{\"98\":1}}],[\"这些更新通知包含了被修改的模块的更新代码\",{\"1\":{\"98\":1}}],[\"这些hmr运行时代码负责与开发服务器建立连接\",{\"1\":{\"98\":1}}],[\"这些框架通常会提供开发服务器或开发工具\",{\"1\":{\"97\":1}}],[\"这些规则可以执行各种操作\",{\"1\":{\"87\":1}}],[\"这些生成的代码可以是与输入代码相同的版本\",{\"1\":{\"86\":1}}],[\"这些插件和预设可以执行各种转换操作\",{\"1\":{\"86\":1}}],[\"这些预设可以根据你的项目需求进行选择和配置\",{\"1\":{\"84\":1}}],[\"这是一个例子\",{\"1\":{\"121\":1,\"122\":1,\"138\":1,\"139\":1}}],[\"这是一个保存预设供以后使用的选项\",{\"1\":{\"108\":1}}],[\"这是\",{\"1\":{\"90\":1}}],[\"这是什么的工作呢\",{\"1\":{\"86\":1}}],[\"这是因为计算属性会基于它们的依赖关系进行缓存\",{\"1\":{\"203\":1}}],[\"这是因为我们必须添加\",{\"1\":{\"90\":1}}],[\"这是因为我的两张图片的大小分别是38kb和295kb\",{\"1\":{\"65\":1}}],[\"这是因为小的图片转换base64之后可以和页面一起被请求\",{\"1\":{\"66\":1}}],[\"这是因为默认情况下webpack并不清楚我们打包后的文\",{\"1\":{\"48\":1}}],[\"这是因为目前前端开发我们通常都会直接使用三大框架来开发\",{\"1\":{\"43\":1}}],[\"这是因为vite中的服务器connect会对我们的请求进行转发\",{\"1\":{\"31\":1}}],[\"这意味着我们需要更多的代码来实现相同的功能\",{\"1\":{\"235\":1}}],[\"这意味着一个以\",{\"1\":{\"151\":1}}],[\"这意味着其他计算机或设备可以通过网络访问该应用程序\",{\"1\":{\"100\":1}}],[\"这意味着只有本地计算机或设备上的进程可以访问该应用程序\",{\"1\":{\"100\":1}}],[\"这意味着当您运行\",{\"1\":{\"63\":1}}],[\"这意味着您可以在\",{\"1\":{\"63\":1}}],[\"这样做的目的是多个包本身相互独立\",{\"1\":{\"224\":1}}],[\"这样的\",{\"1\":{\"166\":1}}],[\"这样最终打包出的javascript包就会有关于componentc的内容\",{\"1\":{\"154\":1}}],[\"这样就可以动态地渲染不同的子组件了\",{\"1\":{\"127\":1,\"144\":1}}],[\"这样就浏览器在请求debounce时\",{\"1\":{\"37\":1}}],[\"这样\",{\"1\":{\"123\":1,\"140\":1}}],[\"这样子组件就可以使用message属性来访问父组件传递过来的数据了\",{\"1\":{\"119\":1,\"120\":1,\"136\":1,\"137\":1}}],[\"这样你可以专注在撰写应用上\",{\"1\":{\"106\":1}}],[\"这样显示开发的效率会大大的降低\",{\"1\":{\"106\":1}}],[\"这样确保了默认路径的正确加载\",{\"1\":{\"103\":1}}],[\"这样目标服务器就可以正确识别请求来源\",{\"1\":{\"102\":1}}],[\"这样可以保留某些应用程序的状态不丢失\",{\"1\":{\"95\":1}}],[\"这样可以更灵活地根据项目需求进行定制和配置\",{\"1\":{\"49\":1}}],[\"这样在\",{\"1\":{\"62\":1,\"89\":1}}],[\"这样客户端在解析html是就可以执行代码了\",{\"1\":{\"37\":1}}],[\"这个版本不包含对template模板的编译代码\",{\"1\":{\"235\":1}}],[\"这个版本包含了vue的完整功能\",{\"1\":{\"235\":1}}],[\"这个版本的文件体积相对较大\",{\"1\":{\"235\":1}}],[\"这个版本的\",{\"1\":{\"90\":1}}],[\"这个\",{\"1\":{\"219\":1}}],[\"这个过程就是值绑定\",{\"1\":{\"213\":1}}],[\"这个过程经常操作会影响我们的开发效率\",{\"1\":{\"92\":1}}],[\"这个数据通过插值语法等方式绑定到template中\",{\"1\":{\"205\":1}}],[\"这个数据有着原始数据属性值的一份精确拷贝\",{\"1\":{\"5\":1}}],[\"这个后面讲setter和getter时会讲到\",{\"1\":{\"202\":1}}],[\"这个案例是当我点击按钮时会在中间插入一个f\",{\"1\":{\"193\":1}}],[\"这个key属性有什么作用呢\",{\"1\":{\"190\":1}}],[\"这个别名可以自定来定义\",{\"1\":{\"187\":1}}],[\"这个行为在大多数情况都符合期望的绑定值类型\",{\"1\":{\"167\":1}}],[\"这个对象其实本质上就是一个组件\",{\"1\":{\"150\":1}}],[\"这个值必须匹配下列字符串中的一个\",{\"1\":{\"121\":1,\"138\":1}}],[\"这个选项允许你返回一个对象或函数来修改默认的\",{\"1\":{\"112\":1}}],[\"这个选项用于指定是否启用gzip压缩\",{\"1\":{\"101\":1}}],[\"这个选项用于指定是否在启动webpack开发服务器后自动打开浏览器\",{\"1\":{\"101\":1}}],[\"这个选项用于指定webpack开发服务器的端口号\",{\"1\":{\"101\":1}}],[\"这个在vue2中也有\",{\"1\":{\"109\":1}}],[\"这个文件会变得越来越不容易维护\",{\"1\":{\"105\":1}}],[\"这个文件中的代码被压缩和丑化了\",{\"1\":{\"48\":1}}],[\"这个文件中不会存在\",{\"1\":{\"35\":1}}],[\"这个页面会包含前端路由所需的\",{\"1\":{\"103\":1}}],[\"这个错误是因为\",{\"1\":{\"90\":1}}],[\"这个转换过的代码可以在大多数浏览器中运行\",{\"1\":{\"81\":1}}],[\"这个是ejs模块填充数据的方式\",{\"1\":{\"76\":1}}],[\"这个我们需要一个属于自己的index\",{\"1\":{\"76\":1}}],[\"这个插件在以下情况下非常有用\",{\"1\":{\"78\":1}}],[\"这个插件就是cleanwebpackplugin\",{\"1\":{\"74\":1}}],[\"这个插件包含了\",{\"1\":{\"63\":1}}],[\"这个也是vue\",{\"1\":{\"70\":1}}],[\"这个也是vue的写法\",{\"1\":{\"69\":1}}],[\"这个工具可以帮助我们进行一些css的转换和适配\",{\"1\":{\"59\":1}}],[\"这个loader最常用的是css\",{\"1\":{\"55\":1}}],[\"这个依赖关系图会包含应用程序中所需的所有模块\",{\"1\":{\"53\":1}}],[\"这个时候无论后面数据是否有变化\",{\"1\":{\"207\":1}}],[\"这个时候就需要用侦听器watch来完成了\",{\"1\":{\"205\":1}}],[\"这个时候就需要一个三方包进行处理\",{\"1\":{\"37\":1}}],[\"这个时候\",{\"1\":{\"152\":1,\"177\":1,\"183\":1}}],[\"这个时候我们也可以给计算属性设置一个setter的方法\",{\"1\":{\"204\":1}}],[\"这个时候我们就需要进行条件判断了\",{\"1\":{\"181\":1}}],[\"这个时候我们就可以使用less\",{\"1\":{\"58\":1}}],[\"这个时候我们可以使用v\",{\"1\":{\"186\":1}}],[\"这个时候我们可以使用defineplugin插件\",{\"1\":{\"77\":1}}],[\"这个时候我们可以使用placeholders来完成\",{\"1\":{\"68\":1}}],[\"这个时候我们可以通过props来完成组件之间的通信\",{\"1\":{\"117\":1,\"134\":1}}],[\"这个时候我们可以通过\",{\"1\":{\"52\":1}}],[\"别名\",{\"0\":{\"30\":1}}],[\"`new\",{\"1\":{\"208\":1}}],[\"`null`\",{\"1\":{\"121\":1,\"138\":1}}],[\"`你的问题$\",{\"1\":{\"206\":2}}],[\"`undefined`\",{\"1\":{\"121\":1,\"138\":1}}],[\"``127\",{\"1\":{\"100\":1}}],[\"`hello\",{\"1\":{\"81\":1}}],[\"`link\",{\"1\":{\"41\":1}}],[\"`$\",{\"1\":{\"41\":5}}],[\"`\",{\"1\":{\"29\":2,\"37\":2,\"41\":15,\"81\":1,\"208\":1}}],[\"预编译模板\",{\"1\":{\"236\":1}}],[\"预编译模块化方案\",{\"1\":{\"20\":2}}],[\"预期\",{\"1\":{\"177\":1}}],[\"预设\",{\"0\":{\"84\":1},\"1\":{\"84\":1,\"88\":1}}],[\"预设就是相当于最佳实践\",{\"1\":{\"28\":1}}],[\"进项目路径\",{\"1\":{\"26\":1}}],[\"进行处理\",{\"1\":{\"226\":1}}],[\"进行更冗长的等价展开\",{\"1\":{\"211\":1}}],[\"进行快速开发的完整系统\",{\"1\":{\"106\":1}}],[\"进行前端路由跳转时\",{\"1\":{\"103\":1}}],[\"进行hmr\",{\"1\":{\"96\":1}}],[\"进行匹配的\",{\"1\":{\"55\":1}}],[\"进行扩展\",{\"1\":{\"18\":1}}],[\"进行递归\",{\"1\":{\"12\":1}}],[\"↗\",{\"1\":{\"26\":2}}],[\"weixin\",{\"1\":{\"234\":1}}],[\"weight\",{\"1\":{\"210\":1}}],[\"web\",{\"0\":{\"239\":1},\"1\":{\"96\":1,\"99\":1,\"108\":1,\"111\":2,\"177\":1}}],[\"webkit\",{\"1\":{\"61\":1}}],[\"websocket\",{\"1\":{\"41\":5}}],[\"webpack能解析三种文件路径\",{\"1\":{\"104\":1}}],[\"webpack依赖图中的所有文件\",{\"1\":{\"93\":1}}],[\"webpack依然需要构建完整的模块依赖图\",{\"1\":{\"22\":1}}],[\"webpack给我们提供了watch模式\",{\"1\":{\"93\":1}}],[\"webpack给我们提供了大量的placeholders来显示不同的内容\",{\"1\":{\"68\":1}}],[\"webpack提供了几种可选的方式\",{\"1\":{\"92\":1}}],[\"webpack是一个流行的前端构建工具\",{\"1\":{\"92\":1}}],[\"webpack是如何确定我们的入口的呢\",{\"1\":{\"48\":1}}],[\"webpack会默认将打包后的文件输出到内存中\",{\"1\":{\"94\":1}}],[\"webpack会自动重新编译代码\",{\"1\":{\"92\":1}}],[\"webpack会根据我们的预设来加载对应的插件列表\",{\"1\":{\"88\":1}}],[\"webpack会查找当前目录下的\",{\"1\":{\"48\":1}}],[\"webpack5中不再使用\",{\"1\":{\"55\":1}}],[\"webpack5\",{\"1\":{\"54\":1}}],[\"webpack将根据配置文件进行打包\",{\"1\":{\"53\":1}}],[\"webpack通过以下步骤对项目进行打包\",{\"1\":{\"53\":1}}],[\"webpack需要打包的项目是非常复杂的\",{\"1\":{\"51\":1}}],[\"webpack配置\",{\"0\":{\"50\":1}}],[\"webpack可以将多个模块打包成一个或多个浏览器可识别的文件\",{\"1\":{\"48\":1}}],[\"webpack可以将帮助我们进行打包\",{\"1\":{\"44\":1}}],[\"webpack在执行时是依赖webpack\",{\"1\":{\"47\":1}}],[\"webpack的依赖\",{\"0\":{\"53\":1}}],[\"webpack的默认打包\",{\"0\":{\"48\":1}}],[\"webpack的安装目前分为两个\",{\"1\":{\"47\":1}}],[\"webpack的安装\",{\"0\":{\"47\":1}}],[\"webpack的运行是依赖node环境的\",{\"1\":{\"46\":1}}],[\"webpack的中文官方文档是webpack\",{\"1\":{\"46\":1}}],[\"webpack的官方文档是webpack\",{\"1\":{\"46\":1}}],[\"webpack的使用\",{\"0\":{\"46\":1}}],[\"webpack默认支持各种模块化开发\",{\"1\":{\"44\":1}}],[\"webpack到底是什么呢\",{\"0\":{\"44\":1}}],[\"webpack\",{\"0\":{\"42\":1,\"49\":1,\"51\":1,\"80\":1,\"90\":1,\"92\":1,\"93\":1,\"94\":1},\"1\":{\"20\":2,\"22\":1,\"37\":1,\"44\":3,\"47\":2,\"48\":3,\"49\":4,\"52\":2,\"53\":1,\"54\":1,\"62\":1,\"68\":1,\"74\":2,\"75\":1,\"76\":1,\"77\":2,\"78\":4,\"88\":2,\"89\":1,\"90\":2,\"91\":1,\"92\":3,\"93\":2,\"94\":4,\"95\":1,\"96\":2,\"97\":1,\"98\":5,\"99\":1,\"102\":2,\"103\":3,\"104\":11,\"105\":9,\"106\":1,\"110\":1,\"112\":5,\"155\":1}}],[\"www\",{\"1\":{\"168\":1}}],[\"what\",{\"1\":{\"230\":1}}],[\"why\",{\"1\":{\"129\":2,\"146\":2,\"170\":1,\"176\":2,\"187\":1,\"188\":1,\"204\":1,\"207\":2,\"232\":4}}],[\"where\",{\"1\":{\"108\":1}}],[\"wc\",{\"1\":{\"111\":2}}],[\"world>\",{\"1\":{\"90\":1}}],[\"world><\",{\"1\":{\"90\":1}}],[\"world\",{\"1\":{\"90\":2,\"108\":1,\"160\":1,\"171\":1,\"173\":1,\"174\":1,\"178\":1,\"179\":1,\"180\":1,\"199\":1,\"201\":1,\"202\":1,\"206\":1,\"213\":1,\"232\":2}}],[\"work\",{\"1\":{\"76\":1}}],[\"woff2\",{\"1\":{\"38\":1}}],[\"window\",{\"1\":{\"234\":4}}],[\"windows\",{\"1\":{\"107\":1}}],[\"will\",{\"1\":{\"76\":1}}],[\"width\",{\"1\":{\"76\":1,\"210\":1}}],[\"width=device\",{\"1\":{\"76\":1,\"210\":1}}],[\"without\",{\"1\":{\"76\":1}}],[\"with\",{\"1\":{\"26\":1,\"91\":1,\"108\":1}}],[\"watch命令即可开启watch模式\",{\"1\":{\"93\":1}}],[\"watch参数来开启watch模式\",{\"1\":{\"93\":1}}],[\"watch\",{\"0\":{\"93\":1,\"205\":1},\"1\":{\"92\":1,\"93\":2,\"111\":1,\"205\":2,\"206\":1,\"207\":5,\"208\":2,\"209\":1}}],[\"watch选项启用监听模式等\",{\"1\":{\"53\":1}}],[\"warning\",{\"1\":{\"121\":1,\"138\":1}}],[\"warn\",{\"1\":{\"90\":1}}],[\"warnfailedfetch\",{\"1\":{\"41\":1}}],[\"wk\",{\"1\":{\"52\":3}}],[\"因为window中我们无法获取到data返回对象中的数据\",{\"1\":{\"234\":1}}],[\"因为它在模板中的\",{\"1\":{\"219\":1}}],[\"因为对于列表中\",{\"1\":{\"193\":1}}],[\"因为目前我们还没有比较完整的学习组件的概念\",{\"1\":{\"191\":1}}],[\"因为v\",{\"1\":{\"183\":1}}],[\"因为每个实例需要维护一份被返回对象的独立的副本\",{\"1\":{\"121\":1,\"138\":1}}],[\"因为\",{\"1\":{\"109\":1}}],[\"因为采用了typescript所以是ts结尾\",{\"1\":{\"109\":1}}],[\"因为不会被浏览器渲染\",{\"1\":{\"232\":1}}],[\"因为不需要每次修改代码后都重新编译和写入磁盘\",{\"1\":{\"94\":1}}],[\"因为不方便管理\",{\"1\":{\"55\":1}}],[\"因为在模板中使用了\",{\"1\":{\"77\":1}}],[\"因为postcss需要有对应的插件才会起效果\",{\"1\":{\"62\":1}}],[\"因为loader的执行顺序是从右向左\",{\"1\":{\"56\":1}}],[\"因为css\",{\"1\":{\"56\":1}}],[\"因为我们已经通过htmlwebpackplugin完成了index\",{\"1\":{\"78\":1}}],[\"因为我们需要添加前缀\",{\"1\":{\"61\":1}}],[\"因为我们也会继续使用其他的loader\",{\"1\":{\"55\":1}}],[\"因为我们要构建vue3的项目\",{\"1\":{\"26\":1}}],[\"因此上面的代码其实等价于下面这段\",{\"1\":{\"211\":1}}],[\"因此不需要再做进一步解析\",{\"1\":{\"104\":1}}],[\"因此即使没有指定输出目录\",{\"1\":{\"94\":1}}],[\"因此它在浏览器环境中通常不可用\",{\"1\":{\"90\":1}}],[\"因此在客户端中我们创建了一个\",{\"1\":{\"41\":1}}],[\"因此需要额外校验类型\",{\"1\":{\"40\":1}}],[\"因此能够只包含要运行的代码\",{\"1\":{\"35\":1}}],[\"因此\",{\"1\":{\"3\":2,\"18\":1,\"22\":1,\"37\":1,\"91\":1,\"235\":1}}],[\"比较\",{\"1\":{\"194\":2}}],[\"比较常见的是两种方式\",{\"1\":{\"156\":1}}],[\"比react项目轻量级的preact项目\",{\"1\":{\"26\":1}}],[\"比如id为app的dⅳv\",{\"1\":{\"232\":1}}],[\"比如is\",{\"1\":{\"231\":1}}],[\"比如vue\",{\"1\":{\"229\":1}}],[\"比如created中会使用某一个method来修改data的数据\",{\"1\":{\"226\":1}}],[\"比如hobbies的三个输入框值basketball\",{\"1\":{\"213\":1}}],[\"比如hello\",{\"1\":{\"199\":1}}],[\"比如gender的两个输入框值male\",{\"1\":{\"213\":1}}],[\"比如deep\",{\"1\":{\"209\":1}}],[\"比如下面的问题\",{\"1\":{\"190\":1}}],[\"比如下面的模板希望抽离到一个单独的组件\",{\"1\":{\"152\":1}}],[\"比如点击\",{\"1\":{\"177\":1}}],[\"比如某段文字的颜色\",{\"1\":{\"172\":1}}],[\"比如typescript\",{\"1\":{\"155\":1}}],[\"比如之前的app组件中\",{\"1\":{\"154\":1}}],[\"比如有一些深度嵌套的组件\",{\"1\":{\"129\":1,\"146\":1}}],[\"比如在组件中发生了点击\",{\"1\":{\"125\":1,\"142\":1}}],[\"比如在开发vue或者react项目时\",{\"1\":{\"76\":1}}],[\"比如父组件有一些数据\",{\"1\":{\"117\":1,\"134\":1}}],[\"比如app可能使用了多个header\",{\"1\":{\"116\":1,\"133\":1}}],[\"比如logo\",{\"1\":{\"109\":1}}],[\"比如less\",{\"1\":{\"28\":1}}],[\"比如模块热替换\",{\"1\":{\"92\":1}}],[\"比如我们需要对多个data数据进行运算\",{\"1\":{\"198\":1}}],[\"比如我们需要转换箭头函数\",{\"1\":{\"83\":1}}],[\"比如我们注册了三个全局组件\",{\"1\":{\"154\":1}}],[\"比如我们的一个api请求是\",{\"1\":{\"102\":1}}],[\"比如我们将webpack\",{\"1\":{\"52\":1}}],[\"比如添加一个noscript标签\",{\"1\":{\"76\":1}}],[\"比如打包优化\",{\"1\":{\"73\":1}}],[\"比如加载图片\",{\"1\":{\"72\":1}}],[\"比如raw\",{\"1\":{\"71\":1}}],[\"比如保留原来的文件名\",{\"1\":{\"68\":1}}],[\"比如webpack中的postcss\",{\"1\":{\"59\":1}}],[\"比如自动添加浏览器前缀\",{\"1\":{\"59\":1}}],[\"比如箭头函数\",{\"1\":{\"48\":1}}],[\"比如开发完成后我们还需要将代码进行压缩\",{\"1\":{\"43\":1}}],[\"比如开发过程中\",{\"1\":{\"43\":1}}],[\"比如开发过程中我们需要通过模块化的方式来开发\",{\"1\":{\"43\":1}}],[\"比如通过es6+\",{\"1\":{\"43\":1}}],[\"比如也会使用一些高级的特性来加快我们的开发效率或者安全性\",{\"1\":{\"43\":1}}],[\"比如使用tsc\",{\"1\":{\"40\":1}}],[\"比如\",{\"1\":{\"13\":1,\"14\":2,\"53\":1,\"155\":1,\"169\":1,\"189\":1,\"225\":1,\"232\":2}}],[\"默认传入event对象\",{\"1\":{\"179\":1}}],[\"默认的class和动态的class结合\",{\"1\":{\"170\":1}}],[\"默认会利用\",{\"1\":{\"167\":1}}],[\"默认值等等\",{\"1\":{\"118\":1,\"120\":1,\"135\":1,\"137\":1}}],[\"默认值和其他验证规则\",{\"1\":{\"117\":1,\"134\":1}}],[\"默认值\",{\"1\":{\"110\":5,\"111\":4,\"112\":1,\"120\":1,\"137\":1}}],[\"默认值是\",{\"1\":{\"104\":1}}],[\"默认值是false\",{\"1\":{\"101\":2}}],[\"默认值是localhost\",{\"1\":{\"100\":1}}],[\"默认插件是从此处指定的版本升级上来\",{\"1\":{\"107\":1}}],[\"默认是浅层的\",{\"1\":{\"207\":1}}],[\"默认是localhost\",{\"1\":{\"99\":1}}],[\"默认是vue3项目\",{\"1\":{\"26\":1}}],[\"默认为false\",{\"1\":{\"91\":1}}],[\"默认为true\",{\"1\":{\"91\":1}}],[\"默认情况下我们的侦听器只会针对监听的数据本身的改变\",{\"1\":{\"207\":1}}],[\"默认情况下是8080\",{\"1\":{\"101\":1}}],[\"默认情况下\",{\"1\":{\"95\":1,\"102\":1,\"104\":1,\"163\":1,\"216\":1}}],[\"默认情况下会使用\",{\"1\":{\"90\":1}}],[\"默认情况下url\",{\"1\":{\"65\":1}}],[\"默认不包含模板编译器\",{\"1\":{\"90\":1}}],[\"默认32个字符太长了\",{\"1\":{\"68\":1}}],[\"默认配置必然\",{\"1\":{\"51\":1}}],[\"默认返回\",{\"1\":{\"37\":1}}],[\"默认输出单独的构建模块\",{\"1\":{\"20\":1}}],[\"然后你在使用这个组件时添加了一个class或style属性\",{\"1\":{\"122\":1,\"139\":1}}],[\"然后是\",{\"1\":{\"104\":1}}],[\"然后再冒泡到该元素的父元素\",{\"1\":{\"180\":1}}],[\"然后再在\",{\"1\":{\"104\":1}}],[\"然后再自己配置一下vite\",{\"1\":{\"26\":1}}],[\"然后使用热更新运行时\",{\"1\":{\"98\":1}}],[\"然后使用各种插件对其进行处理\",{\"1\":{\"60\":1}}],[\"然后在开发服务器中启用hmr\",{\"1\":{\"97\":1}}],[\"然后遍历图结构\",{\"1\":{\"53\":1}}],[\"然后将你项目中所需的每一个模块组合成一个或多个\",{\"1\":{\"44\":1}}],[\"然后将其插入到head中\",{\"1\":{\"37\":1}}],[\"然后按照导入\",{\"1\":{\"35\":1}}],[\"然后解析成模块记录\",{\"1\":{\"35\":1}}],[\"然后把nodejs的模块编译成浏览器可用的模块\",{\"1\":{\"35\":1}}],[\"然后\",{\"1\":{\"26\":1,\"127\":1,\"144\":1}}],[\"然后下一步选择开发语言\",{\"1\":{\"26\":1}}],[\"然而\",{\"1\":{\"25\":1,\"90\":1,\"121\":1,\"138\":1,\"235\":1}}],[\"us\",{\"1\":{\"177\":1}}],[\"user\",{\"1\":{\"61\":5}}],[\"useentry是一个对象\",{\"1\":{\"55\":1}}],[\"useentry\",{\"1\":{\"55\":1}}],[\"use属性\",{\"1\":{\"55\":1}}],[\"use\",{\"1\":{\"26\":2,\"37\":1,\"38\":2,\"55\":4,\"56\":1,\"58\":1,\"61\":1,\"62\":1,\"65\":1,\"67\":1,\"81\":1,\"88\":1}}],[\"u\",{\"1\":{\"168\":1}}],[\"ul>\",{\"1\":{\"114\":1,\"115\":1,\"131\":1,\"132\":1,\"187\":3,\"188\":1,\"189\":1,\"193\":1}}],[\"ui\",{\"1\":{\"108\":1}}],[\"ui命令创建和管理项目\",{\"1\":{\"108\":1}}],[\"umi等\",{\"1\":{\"89\":1}}],[\"umd\",{\"1\":{\"37\":2}}],[\"ua\",{\"1\":{\"76\":1,\"210\":1}}],[\"utf\",{\"1\":{\"76\":1,\"210\":1}}],[\"utils\",{\"1\":{\"38\":1}}],[\"uri\",{\"1\":{\"71\":2}}],[\"url\",{\"0\":{\"65\":1,\"66\":1},\"1\":{\"65\":4,\"66\":1,\"71\":4,\"76\":1,\"77\":3,\"91\":1,\"102\":1,\"110\":1}}],[\"up\",{\"1\":{\"236\":1}}],[\"upgrade\",{\"1\":{\"107\":3}}],[\"updatemodule\",{\"1\":{\"41\":1}}],[\"update\",{\"1\":{\"41\":2,\"98\":2,\"107\":1,\"211\":2,\"219\":4,\"220\":4}}],[\"updated\",{\"1\":{\"41\":2}}],[\"updatepayload\",{\"1\":{\"41\":1}}],[\"updates\",{\"1\":{\"41\":1}}],[\"upstream\",{\"1\":{\"38\":1}}],[\"unpkg\",{\"1\":{\"228\":1}}],[\"unwatch\",{\"1\":{\"209\":2}}],[\"unshift\",{\"1\":{\"189\":1}}],[\"unix编程艺术\",{\"1\":{\"210\":1}}],[\"unit\",{\"1\":{\"108\":1}}],[\"universal\",{\"1\":{\"19\":1}}],[\"underline\",{\"1\":{\"174\":1}}],[\"underfin\",{\"1\":{\"32\":1}}],[\"undefined\",{\"1\":{\"1\":1,\"2\":1,\"207\":1}}],[\"✔\",{\"1\":{\"26\":3}}],[\"gitignore\",{\"1\":{\"109\":1}}],[\"githubusercontent\",{\"1\":{\"168\":1}}],[\"github\",{\"1\":{\"77\":1,\"86\":1,\"91\":1}}],[\"google\",{\"1\":{\"101\":1}}],[\"globalproperties\",{\"1\":{\"130\":3,\"147\":3}}],[\"globals\",{\"1\":{\"91\":1}}],[\"global\",{\"1\":{\"90\":1,\"106\":1,\"107\":2,\"237\":2}}],[\"globalvar\",{\"1\":{\"29\":1}}],[\"globoptions\",{\"1\":{\"78\":2}}],[\"gender\",{\"1\":{\"213\":4}}],[\"generation\",{\"1\":{\"86\":1,\"87\":1}}],[\"generator\",{\"1\":{\"64\":1,\"67\":1,\"72\":1,\"158\":1}}],[\"getresult\",{\"1\":{\"201\":2,\"203\":4}}],[\"getreversemessage\",{\"1\":{\"160\":2,\"201\":2}}],[\"getfullname\",{\"1\":{\"201\":2,\"203\":7}}],[\"getfinalstyleobj\",{\"1\":{\"173\":2}}],[\"getter方法\",{\"1\":{\"204\":1}}],[\"getter\",{\"0\":{\"204\":1},\"1\":{\"198\":1,\"225\":1}}],[\"getclassobj\",{\"1\":{\"170\":2}}],[\"get\",{\"1\":{\"41\":1,\"91\":1,\"103\":1,\"199\":1,\"204\":1}}],[\"getdebugpath\",{\"1\":{\"37\":1}}],[\"g|png|gif|svg\",{\"1\":{\"64\":1,\"65\":1,\"72\":1}}],[\"g|gif|svg|ico|webp\",{\"1\":{\"38\":1}}],[\"greet\",{\"1\":{\"81\":5}}],[\"grid\",{\"1\":{\"63\":1}}],[\"graph\",{\"1\":{\"44\":1}}],[\"g\",{\"1\":{\"25\":1,\"107\":2,\"237\":1}}],[\"gulp\",{\"1\":{\"20\":1}}],[\"guide\",{\"1\":{\"17\":1,\"152\":1,\"213\":1,\"236\":1}}],[\"版本在内\",{\"1\":{\"107\":1}}],[\"版本要求\",{\"1\":{\"107\":1}}],[\"版本控制\",{\"1\":{\"49\":1,\"89\":1}}],[\"版本才能正常运行\",{\"1\":{\"25\":1}}],[\"版本\",{\"1\":{\"25\":2,\"81\":1,\"107\":1,\"108\":3}}],[\"需要的环境\",{\"1\":{\"237\":1}}],[\"需要更新的是我们\",{\"1\":{\"193\":1}}],[\"需要注意参数问题\",{\"1\":{\"179\":1}}],[\"需要注意的是\",{\"1\":{\"103\":1}}],[\"需要转换为短横线分隔的形式\",{\"1\":{\"121\":1,\"138\":1}}],[\"需要子组件来进行展示\",{\"1\":{\"117\":1,\"134\":1}}],[\"需要有父组件来完成某些操作\",{\"1\":{\"116\":1,\"133\":1}}],[\"需要安装如下库\",{\"1\":{\"82\":1}}],[\"需要包含在你的构建中\",{\"1\":{\"78\":1}}],[\"需要\",{\"1\":{\"25\":1,\"107\":1}}],[\"需要定义task处理构建\",{\"1\":{\"20\":1}}],[\"安装yarn\",{\"1\":{\"237\":1}}],[\"安装yarn包时的重要信息存储到yarn\",{\"1\":{\"109\":1}}],[\"安装了一个名为\",{\"1\":{\"109\":1}}],[\"安装了一个预设\",{\"1\":{\"28\":1}}],[\"安装之后\",{\"1\":{\"107\":1}}],[\"安装webpack\",{\"1\":{\"94\":1}}],[\"安装copywebpackplugin插件\",{\"1\":{\"78\":1}}],[\"安装url\",{\"1\":{\"65\":1}}],[\"安装file\",{\"1\":{\"64\":1}}],[\"安装一下它们\",{\"1\":{\"60\":1}}],[\"安装style\",{\"1\":{\"56\":1}}],[\"安装局部的webpack\",{\"1\":{\"49\":1}}],[\"安装支持vue的插件\",{\"1\":{\"32\":1}}],[\"安装\",{\"0\":{\"25\":1,\"107\":1},\"1\":{\"88\":1}}],[\"安装loadsh\",{\"1\":{\"16\":1}}],[\"适合前端新手\",{\"1\":{\"23\":1}}],[\"灵活适中\",{\"1\":{\"23\":1}}],[\"灵活扩展\",{\"1\":{\"20\":1}}],[\"既不会像parcel一样配置不灵活\",{\"1\":{\"23\":1}}],[\"只是通过css的display属性来进行\",{\"1\":{\"185\":1}}],[\"只是暴露了极少数的配置项和plugin接口\",{\"1\":{\"23\":1}}],[\"只当点击鼠标中键时触发\",{\"1\":{\"177\":1,\"180\":1}}],[\"只当点击鼠标右键时触发\",{\"1\":{\"177\":1,\"180\":1}}],[\"只当点击鼠标左键时触发\",{\"1\":{\"177\":1,\"180\":1}}],[\"只当事件是从侦听器绑定的元素本身触发时才触发回调\",{\"1\":{\"177\":1,\"180\":1}}],[\"只触发一次回调\",{\"1\":{\"177\":1,\"180\":1}}],[\"只有在注册的组件中才能使用的组件\",{\"1\":{\"152\":1}}],[\"只会搜索\",{\"1\":{\"104\":1}}],[\"只能通过本地访问\",{\"1\":{\"100\":1}}],[\"只更新需要变化的内容\",{\"1\":{\"95\":1}}],[\"只要有一个发生了更新\",{\"1\":{\"93\":1}}],[\"只需要一个getter方法即可\",{\"1\":{\"204\":1}}],[\"只需要将整个项目目录复制到其他环境中\",{\"1\":{\"49\":1}}],[\"只需要直接导入即可\",{\"1\":{\"31\":1}}],[\"只需要安装postcss\",{\"1\":{\"28\":1}}],[\"只需执行初始化命令\",{\"1\":{\"23\":1}}],[\"他使用复杂度介于parcel和webpack的中间\",{\"1\":{\"23\":1}}],[\"压缩css等\",{\"1\":{\"60\":1}}],[\"压缩和优化图像等\",{\"1\":{\"54\":1}}],[\"压缩\",{\"1\":{\"23\":1,\"63\":1}}],[\"异步加载\",{\"1\":{\"23\":1}}],[\"开始\",{\"1\":{\"225\":1}}],[\"开启\",{\"0\":{\"96\":1}}],[\"开启watch模式有两种方式\",{\"1\":{\"93\":1}}],[\"开启bundler\",{\"1\":{\"91\":1}}],[\"开头\",{\"1\":{\"90\":1,\"107\":1}}],[\"开发者学习新的api的成本\",{\"1\":{\"225\":1}}],[\"开发者通常需要一个本地服务器来运行他们的应用程序\",{\"1\":{\"92\":1}}],[\"开发和生成时\",{\"1\":{\"105\":1}}],[\"开发服务器将对传输到浏览器的资源进行gzip压缩\",{\"1\":{\"101\":1}}],[\"开发服务器将在启动后自动打开默认浏览器\",{\"1\":{\"101\":1}}],[\"开发服务器会监视文件的变化\",{\"1\":{\"98\":1}}],[\"开发服务器的更新通知\",{\"1\":{\"98\":1}}],[\"开发react项目\",{\"1\":{\"81\":1}}],[\"开发中我们在data返回的对象中定义了数据\",{\"1\":{\"205\":1}}],[\"开发中如何进行选择呢\",{\"1\":{\"185\":1}}],[\"开发中\",{\"1\":{\"81\":1}}],[\"开发阶段\",{\"1\":{\"79\":1}}],[\"开发阶段中\",{\"1\":{\"37\":1}}],[\"开发模式或生产模式\",{\"1\":{\"53\":1}}],[\"开发依赖\",{\"1\":{\"49\":1}}],[\"开发环境⚡️速度的提升\",{\"0\":{\"22\":1}}],[\"开箱即获得一堆功能\",{\"1\":{\"23\":1}}],[\"开箱即用的模块热更新\",{\"1\":{\"236\":1}}],[\"开箱即用\",{\"0\":{\"23\":1}}],[\"当原生的\",{\"1\":{\"211\":1}}],[\"当有多次一样的逻辑时\",{\"1\":{\"200\":1}}],[\"当score小于60的时候\",{\"1\":{\"199\":1}}],[\"当score大于60的时候\",{\"1\":{\"199\":1}}],[\"当条件为true时\",{\"1\":{\"183\":1}}],[\"当条件为false时\",{\"1\":{\"183\":1}}],[\"当一个元素上的事件被触发时\",{\"1\":{\"180\":1}}],[\"当通过methods中定义方法\",{\"1\":{\"179\":1}}],[\"当数据变化时\",{\"1\":{\"205\":1}}],[\"当数据另一个状态时\",{\"1\":{\"169\":1}}],[\"当数据为某个状态时\",{\"1\":{\"169\":1}}],[\"当数据发生变化时\",{\"1\":{\"162\":1}}],[\"当不带参数使用时\",{\"1\":{\"167\":1}}],[\"当用于组件\",{\"1\":{\"167\":1}}],[\"当用于绑定\",{\"1\":{\"167\":1}}],[\"当data中的数据发生改变时\",{\"1\":{\"160\":1}}],[\"当使用直接在\",{\"1\":{\"166\":1}}],[\"当使用\",{\"1\":{\"151\":2,\"167\":1}}],[\"当使用vue\",{\"1\":{\"126\":1,\"143\":1}}],[\"当面对一个非常复杂的问题时\",{\"1\":{\"149\":1}}],[\"当点击按钮时\",{\"1\":{\"130\":1,\"147\":1}}],[\"当子组件有一些事件发生的时候\",{\"1\":{\"125\":1,\"142\":1}}],[\"当父组件向子组件传递数据时\",{\"1\":{\"117\":1,\"134\":1}}],[\"当配置越来越多时\",{\"1\":{\"105\":1}}],[\"当导入一个模块时\",{\"1\":{\"104\":1}}],[\"当导入模块时可以省略文件扩展名\",{\"1\":{\"104\":1}}],[\"当导入自己的模块时\",{\"1\":{\"90\":1}}],[\"当访问一个不存在的路由时\",{\"1\":{\"103\":1}}],[\"当应用程序绑定到0\",{\"1\":{\"100\":1}}],[\"当应用程序绑定到localhost`时\",{\"1\":{\"100\":1}}],[\"当客户端接收到更新通知时\",{\"1\":{\"98\":1}}],[\"当客户端连接到websocket服务时\",{\"1\":{\"98\":1}}],[\"当服务器监听到对应的模块发生变化时\",{\"1\":{\"98\":1}}],[\"当文件发生变化时\",{\"1\":{\"92\":1}}],[\"当你需要将一些文件复制到构建目录\",{\"1\":{\"78\":1}}],[\"当你有一些静态资源\",{\"1\":{\"78\":1}}],[\"当你的包管理器发出警告时\",{\"1\":{\"25\":1}}],[\"当然某些配置是在开发和生成环\",{\"1\":{\"105\":1}}],[\"当然此时控制台还有如下报错\",{\"1\":{\"91\":1}}],[\"当然我们依然可以把它们抽离到单独的js\",{\"1\":{\"155\":1}}],[\"当然我们也可以通过outputpath来设置输出的文件夹\",{\"1\":{\"70\":1}}],[\"当然我们待会儿可以学习如何修改它的名字和所在文件夹\",{\"1\":{\"64\":1}}],[\"当然\",{\"1\":{\"48\":1,\"94\":1,\"129\":1,\"146\":1,\"160\":1}}],[\"当我们多次使用计算属性时\",{\"1\":{\"203\":1}}],[\"当我们修改了源代码之后\",{\"1\":{\"95\":1}}],[\"当我们运行webpack时\",{\"1\":{\"48\":1}}],[\"当我们请求\",{\"1\":{\"37\":1}}],[\"当request\",{\"1\":{\"41\":1}}],[\"当代码被修改时\",{\"1\":{\"41\":1}}],[\"当\",{\"1\":{\"39\":1,\"44\":1,\"102\":1,\"203\":1,\"207\":1,\"213\":1}}],[\"当请求的路径符合\",{\"1\":{\"38\":1}}],[\"当浏览器使用\",{\"1\":{\"103\":1}}],[\"当浏览器解析\",{\"1\":{\"35\":1}}],[\"当浏览器发出原生的esm请求\",{\"1\":{\"22\":1}}],[\"当修改其中一个变量的值时\",{\"1\":{\"3\":2}}],[\"更好的\",{\"1\":{\"236\":1}}],[\"更新真实\",{\"1\":{\"194\":1}}],[\"更新速度与项目复杂度无关\",{\"1\":{\"22\":1}}],[\"更加友好\",{\"1\":{\"154\":1}}],[\"更加推荐\",{\"1\":{\"89\":1}}],[\"更多细节请查阅审查\",{\"1\":{\"112\":1}}],[\"更多细节请查阅构建目标\",{\"1\":{\"111\":1}}],[\"更专注于js打包\",{\"1\":{\"20\":1}}],[\"针对hmr慢\",{\"1\":{\"22\":1}}],[\"针对开发环境中的启动慢问题\",{\"1\":{\"22\":1}}],[\"高兼容性的产物代码\",{\"1\":{\"22\":1}}],[\"离散的源码编译打包成低版本\",{\"1\":{\"22\":1}}],[\"经历一条很长的编译打包链条\",{\"1\":{\"22\":1}}],[\"经过优化的构建\",{\"1\":{\"19\":1}}],[\"来将一部分独立的逻辑抽取出去\",{\"1\":{\"226\":1}}],[\"来描述组件对象\",{\"1\":{\"226\":1}}],[\"来实现数据的劫持\",{\"1\":{\"225\":1}}],[\"来劫持数据的\",{\"1\":{\"225\":1}}],[\"来进行重构\",{\"1\":{\"224\":1}}],[\"来进行类型检测\",{\"1\":{\"224\":1}}],[\"来进行预构建\",{\"1\":{\"22\":1}}],[\"来侦听\",{\"1\":{\"209\":1}}],[\"来阻止\",{\"1\":{\"180\":1}}],[\"来命名\",{\"1\":{\"172\":1}}],[\"来命名你的props\",{\"1\":{\"121\":1,\"138\":1}}],[\"来绑定一些css内联样式\",{\"1\":{\"172\":1}}],[\"来展示\",{\"1\":{\"163\":1}}],[\"来解决\",{\"1\":{\"155\":1}}],[\"来解析文件路径\",{\"1\":{\"104\":1}}],[\"来创建一个全局事件总线\",{\"1\":{\"130\":1,\"147\":1}}],[\"来自哪里\",{\"1\":{\"129\":1,\"146\":1}}],[\"来自动使用less工具转换less到css\",{\"1\":{\"58\":1}}],[\"来审查一个\",{\"1\":{\"112\":1}}],[\"来验证它是否安装成功\",{\"1\":{\"107\":1}}],[\"来生成模块的绝对路径\",{\"1\":{\"104\":1}}],[\"来导入位于\",{\"1\":{\"104\":1}}],[\"来启用vue的hmr功能\",{\"1\":{\"97\":1}}],[\"来提高开发的速度\",{\"1\":{\"95\":1}}],[\"来完成这样的功能\",{\"1\":{\"94\":1}}],[\"来完成其他文件的加载\",{\"1\":{\"55\":1}}],[\"来引入\",{\"1\":{\"90\":2}}],[\"来替换旧的模块代码\",{\"1\":{\"98\":1}}],[\"来替换所有这些\",{\"1\":{\"71\":1}}],[\"来替代上面的这些loader\",{\"1\":{\"71\":1}}],[\"来替代\",{\"1\":{\"54\":1}}],[\"来处理您的\",{\"1\":{\"63\":1}}],[\"来处理css文件\",{\"1\":{\"53\":1}}],[\"来指定对应的配置文件\",{\"1\":{\"52\":1}}],[\"来作为webpack的配置文件\",{\"1\":{\"51\":1}}],[\"来优化请求\",{\"1\":{\"22\":1}}],[\"内联模板等\",{\"1\":{\"225\":1}}],[\"内联方式使用较少\",{\"1\":{\"55\":1}}],[\"内联方式\",{\"1\":{\"55\":2}}],[\"内置修饰符\",{\"0\":{\"215\":1}}],[\"内置常见场景的构建方案及其依赖\",{\"1\":{\"20\":1}}],[\"内部实现\",{\"0\":{\"212\":1}}],[\"内部发生的改变是不能侦听\",{\"1\":{\"207\":1}}],[\"内模板解析注意事项\",{\"1\":{\"151\":1}}],[\"内存高效利用\",{\"1\":{\"22\":1}}],[\"利用esbuild在启动的时候预先把debounce用到的所有内部模块全部打包成一个bundle\",{\"1\":{\"37\":1}}],[\"利用新一代浏览器的esm能力\",{\"1\":{\"22\":1}}],[\"利用浏览器去解析imports\",{\"1\":{\"18\":1}}],[\"先加载所有依赖模块\",{\"1\":{\"35\":1}}],[\"先启动开发服务器\",{\"1\":{\"22\":1}}],[\"先打包生成bundle\",{\"1\":{\"22\":1}}],[\"发送了一个名为\",{\"1\":{\"130\":1,\"147\":1}}],[\"发送一个单独的文件并导出\",{\"1\":{\"71\":1}}],[\"发送多个请求获取\",{\"1\":{\"39\":1}}],[\"发布的依赖项转换为\",{\"1\":{\"37\":1}}],[\"发现主要有如下不同\",{\"1\":{\"22\":1}}],[\"发音同\",{\"1\":{\"18\":1}}],[\"发音\",{\"1\":{\"18\":1}}],[\"代理服务器会将请求头中的\",{\"1\":{\"102\":1}}],[\"代理服务器和api服务器没有跨域的问题\",{\"1\":{\"102\":1}}],[\"代理\",{\"1\":{\"102\":1}}],[\"代码大全\",{\"1\":{\"210\":1}}],[\"代码片段\",{\"0\":{\"158\":1}}],[\"代码是非常的臃肿和难以维护的\",{\"1\":{\"114\":1,\"131\":1}}],[\"代码格式化工具\",{\"1\":{\"108\":1}}],[\"代码检查工具\",{\"1\":{\"108\":1}}],[\"代码抽离为单文件组件\",{\"1\":{\"90\":1}}],[\"代码生成\",{\"1\":{\"87\":1}}],[\"代码的内聚性非常差\",{\"1\":{\"226\":1}}],[\"代码的高亮\",{\"1\":{\"155\":1}}],[\"代码的预设\",{\"1\":{\"84\":1}}],[\"代码的小型程序\",{\"1\":{\"83\":1}}],[\"代码\",{\"1\":{\"81\":1,\"83\":2,\"84\":3,\"111\":1,\"155\":1}}],[\"代码转换为向后兼容的旧版本\",{\"1\":{\"84\":1}}],[\"代码转换为向后兼容的\",{\"1\":{\"81\":1}}],[\"代码转译\",{\"1\":{\"22\":1}}],[\"代码中以\",{\"1\":{\"37\":1}}],[\"代码如下\",{\"1\":{\"37\":1}}],[\"代码优化\",{\"1\":{\"22\":1,\"86\":1,\"87\":1}}],[\"代码复杂度正相关\",{\"1\":{\"22\":1}}],[\"代表如webpack\",{\"1\":{\"22\":1}}],[\"文件体积更小\",{\"1\":{\"235\":1}}],[\"文件系统\",{\"1\":{\"90\":1}}],[\"文件相对于webpack配置文件的路径\",{\"1\":{\"68\":1}}],[\"文件的内容\",{\"1\":{\"68\":1}}],[\"文件命名规则\",{\"0\":{\"68\":1}}],[\"文件中配置\",{\"1\":{\"112\":1}}],[\"文件中定义了多个入口字段\",{\"1\":{\"104\":1}}],[\"文件中指定所需的预设\",{\"1\":{\"84\":1}}],[\"文件中的配置来确定需要转换的\",{\"1\":{\"84\":1}}],[\"文件中\",{\"1\":{\"63\":1,\"154\":1}}],[\"文件\",{\"1\":{\"48\":1,\"53\":2,\"63\":1,\"89\":2,\"156\":1,\"236\":1}}],[\"文件夹\",{\"1\":{\"48\":1}}],[\"文件模块使用了\",{\"1\":{\"37\":1}}],[\"文件修改后的效果也要几秒钟才能在浏览器中反应出来\",{\"1\":{\"22\":1}}],[\"文件打包工具\",{\"1\":{\"20\":1}}],[\"且其值为\",{\"1\":{\"219\":1}}],[\"且这个启动时间与代码量\",{\"1\":{\"22\":1}}],[\"且热更新的速度不会随着模块增多而变慢\",{\"1\":{\"18\":1}}],[\"库\",{\"0\":{\"130\":1,\"147\":1}}],[\"库或\",{\"1\":{\"111\":1}}],[\"库依赖等\",{\"1\":{\"49\":1}}],[\"库模式\",{\"1\":{\"20\":1}}],[\"库的方法\",{\"1\":{\"16\":1}}],[\"借鉴了snowpack\",{\"1\":{\"20\":1}}],[\"大话西游\",{\"1\":{\"187\":1,\"189\":1}}],[\"大小等等\",{\"1\":{\"172\":1}}],[\"大多数主流框架\",{\"1\":{\"97\":1}}],[\"大多为在开发时不会变动的纯\",{\"1\":{\"37\":1}}],[\"大型项目构建慢\",{\"1\":{\"20\":1}}],[\"大而全\",{\"1\":{\"20\":1}}],[\"社群庞大\",{\"1\":{\"20\":1}}],[\"功能\",{\"1\":{\"98\":1}}],[\"功能全面\",{\"1\":{\"20\":1}}],[\"功能指南\",{\"1\":{\"18\":1}}],[\"无论其被嵌套多深\",{\"1\":{\"208\":1}}],[\"无论是组件还是元素\",{\"1\":{\"191\":1}}],[\"无论从三大框架\",{\"1\":{\"149\":1}}],[\"无论层级结构有多深\",{\"1\":{\"129\":1,\"146\":1}}],[\"无需传入\",{\"1\":{\"166\":1}}],[\"无需\",{\"1\":{\"106\":1}}],[\"无需分析模块之间的依赖\",{\"1\":{\"22\":1}}],[\"无需打包\",{\"1\":{\"22\":1}}],[\"无需递归循环依赖组装依赖树\",{\"1\":{\"20\":1}}],[\"无需再次安装\",{\"1\":{\"20\":1}}],[\"无法tree\",{\"1\":{\"20\":1}}],[\"自我介绍\",{\"1\":{\"213\":1}}],[\"自己使用webpack或rollup或\",{\"1\":{\"156\":1}}],[\"自定义的修饰符\",{\"0\":{\"219\":1}}],[\"自定义的组件都会放到这\",{\"1\":{\"109\":1}}],[\"自定义事件\",{\"1\":{\"211\":1}}],[\"自定义验证函数\",{\"1\":{\"121\":1,\"138\":1}}],[\"自定义html模板\",{\"0\":{\"76\":1}}],[\"自定义文件的输出路径和文件名\",{\"1\":{\"72\":1}}],[\"自定义适应你的项目\",{\"1\":{\"18\":1}}],[\"自动打开浏览器\",{\"1\":{\"101\":1}}],[\"自动添加浏览器前缀\",{\"1\":{\"63\":1}}],[\"自动检测和打包依赖\",{\"1\":{\"20\":1}}],[\"但作为回报带来了以下优点\",{\"1\":{\"236\":1}}],[\"但也带来了更好的性能和更小的文件大小\",{\"1\":{\"235\":1}}],[\"但随后可以在运行时使用\",{\"1\":{\"232\":1}}],[\"但并没有被使用的组件无法在生产打包时被自动移除\",{\"1\":{\"154\":1}}],[\"但有以下几个问题\",{\"1\":{\"154\":1}}],[\"但如果\",{\"1\":{\"149\":1}}],[\"但没有对应的prop定义的attribute\",{\"1\":{\"122\":1,\"139\":1}}],[\"但强烈建议正确配置它们以便在最终的打包文件中实现正确的树摇效果\",{\"1\":{\"91\":1}}],[\"但是这个模板的写法有点过于别扭了\",{\"1\":{\"232\":1}}],[\"但是这些资源并不需要通过\",{\"1\":{\"78\":1}}],[\"但是整个设计是受到它的启发的\",{\"1\":{\"231\":1}}],[\"但是有一个很大的缺陷就是\",{\"1\":{\"226\":1}}],[\"但是有一个问题\",{\"1\":{\"48\":1}}],[\"但是watch不会侦听到\",{\"1\":{\"207\":2}}],[\"但是如果依赖的数据发生变化\",{\"1\":{\"203\":1}}],[\"但是如果我们使用箭头函数\",{\"1\":{\"234\":1}}],[\"但是如果我们希望切换的是多个元素呢\",{\"1\":{\"183\":1}}],[\"但是如果我们的配置文件并不是webpack\",{\"1\":{\"52\":1}}],[\"但是计算的过程只调用了一次\",{\"1\":{\"203\":1}}],[\"但是我们在使用的时候不需要加\",{\"1\":{\"202\":1}}],[\"但是我们并不希望div这种元素被渲染\",{\"1\":{\"183\":1}}],[\"但是我们并没有设置过这个常量值\",{\"1\":{\"77\":1}}],[\"但是都变成了一种方法的调用\",{\"1\":{\"201\":1}}],[\"但是设计它们的初衷是用于简单的运算\",{\"1\":{\"198\":1}}],[\"但是依然有旧的节点\",{\"1\":{\"194\":1}}],[\"但是依然有新的节点\",{\"1\":{\"194\":1}}],[\"但是因为我们的c被f所使用了\",{\"1\":{\"194\":1}}],[\"但是某些方法不会替换原来的数组\",{\"1\":{\"189\":1}}],[\"但是最终template不会被渲染出来\",{\"1\":{\"183\":1}}],[\"但是注意\",{\"1\":{\"179\":1}}],[\"但是你也可以显式用\",{\"1\":{\"167\":1}}],[\"但是你会发现这个css在我们的代码中并没有生效\",{\"1\":{\"56\":1}}],[\"但是大多数情况下\",{\"1\":{\"159\":1}}],[\"但是大的图片直接使用图片即可\",{\"1\":{\"66\":1}}],[\"但是它们还是会分离开来\",{\"1\":{\"155\":1}}],[\"但是随着项目越来越复杂\",{\"1\":{\"155\":1}}],[\"但是思想都是一样的\",{\"1\":{\"149\":1}}],[\"但是服务器上并没有对应的\",{\"1\":{\"103\":1}}],[\"但是babel对于前端开发来说\",{\"1\":{\"81\":1}}],[\"但是开发中我们往往是小的图片需要转换\",{\"1\":{\"66\":1}}],[\"但是在某些情况下\",{\"1\":{\"205\":1}}],[\"但是在某些情况\",{\"1\":{\"198\":1}}],[\"但是在真实开发中我们不可能每一个项目从头来完成\",{\"1\":{\"106\":1}}],[\"但是在dist文件夹中\",{\"1\":{\"65\":1}}],[\"但是在项目中我们会编写大量的css\",{\"1\":{\"58\":1}}],[\"但是可以将较小的文件\",{\"1\":{\"65\":1}}],[\"但是每次这样执行命令来对源码进行编译\",{\"1\":{\"52\":1}}],[\"但是通过使用webpack的打包功能\",{\"1\":{\"48\":1}}],[\"但是事实上它本身是没有自动刷新浏览器的功能的\",{\"1\":{\"94\":1}}],[\"但是事实上\",{\"1\":{\"43\":1}}],[\"但是对于配置monorepos项目是比较麻烦的\",{\"1\":{\"89\":1}}],[\"但是对于很多的前端开发者来说\",{\"1\":{\"43\":1}}],[\"但是对应两个不同的地址\",{\"1\":{\"11\":1}}],[\"但是\",{\"1\":{\"40\":1,\"94\":1,\"149\":1,\"151\":1,\"198\":1,\"204\":1}}],[\"但浏览器只能通过相对路径去寻找\",{\"1\":{\"37\":1}}],[\"但造成了配置不灵活\",{\"1\":{\"20\":1}}],[\"零配置\",{\"1\":{\"20\":1}}],[\"极速0配置\",{\"1\":{\"20\":1}}],[\"极速打包\",{\"1\":{\"20\":1}}],[\"支持也更好了\",{\"1\":{\"224\":1}}],[\"支持自定义的修饰符\",{\"1\":{\"219\":1}}],[\"支持额外的值类型如数组或对象\",{\"1\":{\"167\":1}}],[\"支持将模板中使用\",{\"1\":{\"151\":1}}],[\"支持扩展其他插件\",{\"1\":{\"36\":1}}],[\"支持代码压缩\",{\"1\":{\"36\":1}}],[\"支持sourcemap\",{\"1\":{\"36\":1}}],[\"支持typescript\",{\"1\":{\"36\":1}}],[\"支持go\",{\"1\":{\"36\":1}}],[\"支持es6的tree\",{\"1\":{\"36\":1}}],[\"支持es6和commonjs的模块化\",{\"1\":{\"36\":1}}],[\"支持\",{\"0\":{\"27\":1,\"28\":1,\"31\":1},\"1\":{\"32\":2,\"236\":2}}],[\"支持监听读写文件\",{\"1\":{\"20\":1}}],[\"支持与其他框架或工具的集成\",{\"1\":{\"18\":1}}],[\"偏向编程式\",{\"1\":{\"20\":1}}],[\"工程化\",{\"1\":{\"20\":4}}],[\"基础的类型检查\",{\"1\":{\"121\":1,\"138\":1}}],[\"基于\",{\"1\":{\"106\":1,\"110\":1}}],[\"基于esm\",{\"1\":{\"37\":1}}],[\"基于esm运行时打包\",{\"1\":{\"20\":1}}],[\"基于esm运行时编译\",{\"1\":{\"20\":1}}],[\"基于es6打包\",{\"1\":{\"20\":1}}],[\"基于流的自动化构建工具\",{\"1\":{\"20\":1}}],[\"基本使用\",{\"0\":{\"168\":1,\"178\":1,\"182\":1,\"187\":1,\"199\":1},\"1\":{\"160\":1}}],[\"基本指令\",{\"0\":{\"157\":1}}],[\"基本类型如number\",{\"1\":{\"1\":1}}],[\"基本数据类型和引用数据类型\",{\"1\":{\"1\":1}}],[\"遵循commonjs规范打包js\",{\"1\":{\"20\":1}}],[\"通常我们会在这个对象中定义很多的方法\",{\"1\":{\"234\":1}}],[\"通常使用\",{\"1\":{\"232\":1}}],[\"通常情况下\",{\"1\":{\"231\":1}}],[\"通常是\",{\"1\":{\"103\":1}}],[\"通常是webpack\",{\"1\":{\"54\":1}}],[\"通常将应用程序绑定到localhost以进行本地开发和测试\",{\"1\":{\"100\":1}}],[\"通常用于前端开发环境\",{\"1\":{\"92\":1}}],[\"通常会设置成正则表达式\",{\"1\":{\"55\":1}}],[\"通常命名为webpack\",{\"1\":{\"53\":1}}],[\"通用的plugin接口\",{\"1\":{\"19\":1}}],[\"通过交叉分析模板和逻辑代码能进行更多编译时优化\",{\"1\":{\"236\":1}}],[\"通过npm包管理工具安装使用它\",{\"1\":{\"227\":1}}],[\"通过索引值获取到对象\",{\"1\":{\"210\":1}}],[\"通过template编写自己的模板\",{\"1\":{\"155\":1}}],[\"通过components属性选项来进行注册\",{\"1\":{\"154\":1}}],[\"通过component方法传入组件名称\",{\"1\":{\"153\":1}}],[\"通过全局事件总线\",{\"1\":{\"130\":1,\"147\":1}}],[\"通过将事件总线实例添加到全局属性中\",{\"1\":{\"130\":1,\"147\":1}}],[\"通过$emit触发事件\",{\"1\":{\"116\":1,\"133\":1}}],[\"通过props属性\",{\"1\":{\"116\":1,\"133\":1}}],[\"通过设置参数来区分它们\",{\"1\":{\"105\":1}}],[\"通过设置compress选项为true\",{\"1\":{\"101\":1}}],[\"通过设置open选项为true\",{\"1\":{\"101\":1}}],[\"通过设置port选项\",{\"1\":{\"101\":1}}],[\"通过hmr\",{\"1\":{\"98\":1}}],[\"通过长连接\",{\"1\":{\"98\":1}}],[\"通过开发服务器向客户端发送更新的模块代码\",{\"1\":{\"98\":1}}],[\"通过使用这些工具\",{\"1\":{\"97\":1}}],[\"通过live\",{\"1\":{\"92\":1}}],[\"通过禁用不需要的特性\",{\"1\":{\"91\":1}}],[\"通过正确配置特性标志\",{\"1\":{\"91\":1}}],[\"通过配置\",{\"1\":{\"104\":2}}],[\"通过配置webpack的规则\",{\"1\":{\"88\":1}}],[\"通过配置文件达到一站式配置\",{\"1\":{\"20\":1}}],[\"通过添加\",{\"1\":{\"71\":1}}],[\"通过局部安装webpack\",{\"1\":{\"49\":1}}],[\"通过在命令行中使用\",{\"1\":{\"93\":1}}],[\"通过在项目中局部安装webpack\",{\"1\":{\"49\":1}}],[\"通过在一开始将应用中的模块区分为\",{\"1\":{\"37\":1}}],[\"通过sass\",{\"1\":{\"43\":1}}],[\"通过不同的消息触发一些事件\",{\"1\":{\"41\":1}}],[\"通过该数组的值获取判断是否为一个\",{\"1\":{\"37\":1}}],[\"通过vite来启动项目\",{\"1\":{\"25\":1}}],[\"通过\",{\"1\":{\"18\":1,\"106\":2,\"205\":1,\"235\":1}}],[\"丰富的功能\",{\"1\":{\"19\":1}}],[\"丰富的内建功能\",{\"1\":{\"18\":1}}],[\"闪电般快速的热更新\",{\"1\":{\"19\":1}}],[\"即template模板\",{\"1\":{\"235\":1}}],[\"即\",{\"1\":{\"235\":1,\"236\":1}}],[\"即不能使用箭头函数\",{\"1\":{\"234\":1}}],[\"即当刷新页面时会立刻执行一次\",{\"1\":{\"207\":1}}],[\"即只包含应用程序实际使用的代码\",{\"1\":{\"91\":1}}],[\"即可自动填充\",{\"1\":{\"158\":1}}],[\"即可\",{\"1\":{\"62\":1,\"63\":1,\"193\":1}}],[\"即使它并没有被实际使用\",{\"1\":{\"154\":1}}],[\"即使它们不支持箭头函数或\",{\"1\":{\"81\":1}}],[\"即使你没有在组件的props中定义它们\",{\"1\":{\"122\":1,\"139\":1}}],[\"即使只有很小的改动\",{\"1\":{\"22\":1}}],[\"即使使用hmr\",{\"1\":{\"22\":1}}],[\"即时服务启动\",{\"1\":{\"19\":1}}],[\"即基本数据类型的值会被完全拷贝\",{\"1\":{\"3\":1}}],[\"部分深入了解该项目的设计理念\",{\"1\":{\"18\":1}}],[\"至少会比webpack快10倍左右\",{\"1\":{\"18\":1}}],[\"和底层组件实例的数据绑定在\",{\"1\":{\"159\":1}}],[\"和使用过多的全局变量一样\",{\"1\":{\"154\":1}}],[\"和为更好的缓存而做的自动的\",{\"1\":{\"111\":1}}],[\"和socket服务\",{\"1\":{\"98\":1}}],[\"和相关的babel插件和预设\",{\"1\":{\"88\":1}}],[\"和postcss一样\",{\"1\":{\"82\":1}}],[\"和发送一个单独的文件之间自动选择\",{\"1\":{\"71\":1}}],[\"和\",{\"0\":{\"183\":1,\"204\":1},\"1\":{\"18\":1,\"37\":2,\"53\":1,\"83\":1,\"90\":1,\"97\":1,\"98\":1,\"100\":1,\"103\":1,\"111\":1,\"121\":1,\"129\":1,\"138\":1,\"146\":1,\"167\":1,\"189\":1,\"198\":1,\"199\":1,\"207\":1,\"225\":2,\"235\":1,\"236\":1}}],[\"和函数等则是分别存储数据1的地址\",{\"1\":{\"1\":1}}],[\"可扩展性更强\",{\"1\":{\"224\":1}}],[\"可维护性\",{\"1\":{\"224\":1}}],[\"可能会出现一种叫做\",{\"1\":{\"166\":1}}],[\"可供选择的附加代码检查功能\",{\"1\":{\"108\":1}}],[\"可自动格式化代码\",{\"1\":{\"108\":1}}],[\"可升级\",{\"1\":{\"106\":1}}],[\"可选的\",{\"1\":{\"167\":1}}],[\"可选的属性\",{\"1\":{\"55\":1}}],[\"可选择不同打包器\",{\"1\":{\"20\":1}}],[\"可移植性\",{\"1\":{\"49\":1}}],[\"可以从对象中获取到数据\",{\"1\":{\"233\":1}}],[\"可以有自己的功能逻辑\",{\"1\":{\"224\":1}}],[\"可以利用\",{\"1\":{\"207\":1}}],[\"可以\",{\"1\":{\"198\":1}}],[\"可以非常方便的实现\",{\"1\":{\"198\":1}}],[\"可以阻止事件继续冒泡到父元素\",{\"1\":{\"180\":1}}],[\"可以不添加\",{\"1\":{\"179\":1}}],[\"可以嵌套对象语法\",{\"1\":{\"171\":1}}],[\"可以用于描述某一个标签\",{\"1\":{\"191\":1}}],[\"可以用于遍历一组数据\",{\"1\":{\"186\":1}}],[\"可以用于绑定一个包含了多个\",{\"1\":{\"167\":1}}],[\"可以用于设置转换的限制\",{\"1\":{\"66\":1}}],[\"可以更详细地指定需要接收的属性名称\",{\"1\":{\"120\":1,\"137\":1}}],[\"可以简单地指定需要接收的属性名称\",{\"1\":{\"119\":1,\"136\":1}}],[\"可以简化模块导入的路径\",{\"1\":{\"104\":1}}],[\"可以简化项目的部署过程\",{\"1\":{\"49\":1}}],[\"可以运行以下命令\",{\"1\":{\"112\":1}}],[\"可以选择仅运行时版本\",{\"1\":{\"235\":1}}],[\"可以选择运行时+编译器版本\",{\"1\":{\"235\":1}}],[\"可以选择\",{\"1\":{\"108\":1}}],[\"可以告诉\",{\"1\":{\"104\":2}}],[\"可以设置一个默认的页面\",{\"1\":{\"103\":1}}],[\"可以设置为true\",{\"1\":{\"101\":1}}],[\"可以设置为\",{\"1\":{\"100\":1}}],[\"可以这样修改配置\",{\"1\":{\"102\":1}}],[\"可以使用格式\",{\"1\":{\"187\":1}}],[\"可以使用computed\",{\"1\":{\"160\":1}}],[\"可以使用预处理器来构建更加丰富的组件\",{\"1\":{\"155\":1}}],[\"可以使用\",{\"1\":{\"130\":1,\"147\":1,\"180\":1}}],[\"可以使用下列任一命令安装这个新的包\",{\"1\":{\"107\":1}}],[\"可以使用import\",{\"1\":{\"104\":1}}],[\"可以使用proxy选项来配置代理设置\",{\"1\":{\"102\":1}}],[\"可以使用不同的参数和选项来控制打包的行为\",{\"1\":{\"53\":1}}],[\"可以提高开发效率\",{\"1\":{\"94\":1}}],[\"可以具备live\",{\"1\":{\"94\":1}}],[\"可以在组件上使用以实现双向绑定\",{\"1\":{\"211\":1}}],[\"可以在方法中获取\",{\"1\":{\"179\":1}}],[\"可以在其中直接使用\",{\"1\":{\"156\":1}}],[\"可以在命令后面添加对应的参数\",{\"1\":{\"112\":1}}],[\"可以在各种设备和平台上提供类似原生应用的体验\",{\"1\":{\"108\":1}}],[\"可以在本地运行你的应用程序\",{\"1\":{\"92\":1}}],[\"可以在编译时进行覆盖\",{\"1\":{\"91\":1}}],[\"可以自动的完成编译和展示\",{\"1\":{\"92\":1}}],[\"可以帮助开发者在本地启动一个服务器\",{\"1\":{\"92\":1}}],[\"可以实现树摇\",{\"1\":{\"91\":1}}],[\"可以通过vue\",{\"1\":{\"235\":1}}],[\"可以通过插件进行扩展\",{\"1\":{\"106\":1}}],[\"可以通过项目内的配置文件进行配置\",{\"1\":{\"106\":1}}],[\"可以通过网络访问\",{\"1\":{\"100\":1}}],[\"可以通过\",{\"1\":{\"90\":1,\"105\":1,\"179\":1,\"219\":1}}],[\"可以通过对象的属性来设置一些其他属性\",{\"1\":{\"55\":1}}],[\"可以直接打开cdn的链接\",{\"1\":{\"229\":1}}],[\"可以直接将这两个文件主动发送给客户端\",{\"1\":{\"98\":1}}],[\"可以直接作用于monorepos项目的子包\",{\"1\":{\"89\":1}}],[\"可以直接转换成机器代码\",{\"1\":{\"36\":1}}],[\"可以添加到\",{\"1\":{\"83\":1}}],[\"可以让我们在命令行使用babel\",{\"1\":{\"82\":1}}],[\"可以省略\",{\"1\":{\"78\":1}}],[\"可以指定不同类型文件的匹配规则和对应的loader\",{\"1\":{\"54\":1}}],[\"可以根据需要配置多个loader来处理文件\",{\"1\":{\"54\":1}}],[\"可以是单个文件或多个文件\",{\"1\":{\"53\":1}}],[\"可以将\",{\"1\":{\"81\":1}}],[\"可以将整个项目打包成一个可移植的文件夹\",{\"1\":{\"49\":1}}],[\"可以将这些语法转换为浏览器可以识别的语法\",{\"1\":{\"48\":1}}],[\"可以确保每个项目使用的webpack版本是一致的\",{\"1\":{\"49\":1}}],[\"可以观察到浏览器请求\",{\"1\":{\"37\":1}}],[\"可以显著减少文件体积\",{\"1\":{\"35\":1}}],[\"可以看到在处理\",{\"1\":{\"41\":1}}],[\"可以看到\",{\"1\":{\"22\":1,\"35\":1}}],[\"可搭配browserify等模块化工具来使用\",{\"1\":{\"20\":1}}],[\"可引入插件打包css等其他资源\",{\"1\":{\"20\":1}}],[\"可通过其\",{\"1\":{\"18\":1}}],[\"可输出用于生产环境的高度优化过的静态资源\",{\"1\":{\"18\":1}}],[\"中更改如下\",{\"1\":{\"207\":1}}],[\"中更改应用\",{\"1\":{\"90\":1}}],[\"中间还有很多未知的或者乱序的节点\",{\"1\":{\"194\":1}}],[\"中书写的模板时\",{\"1\":{\"166\":1}}],[\"中创建全局事件总线\",{\"1\":{\"130\":1,\"147\":1}}],[\"中创建scripts脚本\",{\"1\":{\"49\":1}}],[\"中以\",{\"1\":{\"109\":1}}],[\"中给定的相对路径\",{\"1\":{\"104\":1}}],[\"中查找加载\",{\"1\":{\"96\":1}}],[\"中加载\",{\"1\":{\"96\":1}}],[\"中直接修改样式\",{\"1\":{\"95\":1}}],[\"中用于导入模块的函数\",{\"1\":{\"90\":1}}],[\"中可以使用\",{\"1\":{\"90\":1}}],[\"中使用\",{\"0\":{\"90\":1},\"1\":{\"94\":1}}],[\"中使用最新的特性\",{\"1\":{\"63\":1}}],[\"中\",{\"1\":{\"87\":1,\"102\":1,\"130\":2,\"147\":2,\"160\":1,\"180\":1,\"209\":1,\"213\":1,\"224\":1}}],[\"中只需要\",{\"1\":{\"62\":1,\"89\":1}}],[\"中的导航和路由功能\",{\"1\":{\"108\":1}}],[\"中的一个配置选项\",{\"1\":{\"104\":1}}],[\"中的一种特性标志\",{\"1\":{\"91\":1}}],[\"中的\",{\"0\":{\"190\":1},\"1\":{\"90\":1,\"110\":1,\"111\":1}}],[\"中的module\",{\"1\":{\"54\":1}}],[\"中的深拷贝实现\",{\"0\":{\"16\":1}}],[\"中的深浅拷贝\",{\"0\":{\"4\":1}}],[\"中时被写入代码中\",{\"1\":{\"41\":1}}],[\"中客户端的\",{\"1\":{\"41\":1}}],[\"中获取\",{\"1\":{\"37\":1}}],[\"中约定若\",{\"1\":{\"37\":1}}],[\"中了解\",{\"1\":{\"18\":1}}],[\"并编写一个处理函数来改变抛出的值\",{\"1\":{\"219\":1}}],[\"并传递了消息\",{\"1\":{\"130\":1,\"147\":1}}],[\"并指定每个prop的类型\",{\"1\":{\"117\":1,\"134\":1}}],[\"并在子组件中使用这些数据\",{\"1\":{\"117\":1,\"134\":1}}],[\"并在文件发生更改时\",{\"1\":{\"98\":1}}],[\"并在文件发生更改时自动重新加载页面\",{\"1\":{\"92\":1}}],[\"并生成一个兼容老浏览器的包用来自动回退\",{\"1\":{\"111\":1}}],[\"并生成输出文件\",{\"1\":{\"53\":1}}],[\"并附带开箱即用的模块热重载\",{\"1\":{\"110\":1}}],[\"并自动修复一些常见的问题\",{\"1\":{\"108\":1}}],[\"并与prettier代码格式化工具集成\",{\"1\":{\"108\":1}}],[\"并应用javascript\",{\"1\":{\"108\":1}}],[\"并应用airbnb\",{\"1\":{\"108\":1}}],[\"并带有合理的默认配置\",{\"1\":{\"106\":1}}],[\"并使用相应的选项进行配置\",{\"1\":{\"102\":1}}],[\"并使用pathrewrite选项将请求路径中的\",{\"1\":{\"102\":1}}],[\"并加载应用程序\",{\"1\":{\"101\":1}}],[\"并尽可能地将新代码应用于正在运行的应用程序\",{\"1\":{\"98\":1}}],[\"并接收来自服务器的更新通知\",{\"1\":{\"98\":1}}],[\"并触发模块热替换\",{\"1\":{\"98\":1}}],[\"并提高代码的可维护性\",{\"1\":{\"91\":1}}],[\"并提供更好的可重用性和协作性\",{\"1\":{\"89\":1}}],[\"并提供完整的类型支持\",{\"1\":{\"18\":1}}],[\"并减少资源消耗\",{\"1\":{\"91\":1}}],[\"并根据需要进行修改或替换\",{\"1\":{\"86\":1}}],[\"并根据依赖图来进行转换\",{\"1\":{\"22\":1}}],[\"并将接收到的消息显示在页面上\",{\"1\":{\"130\":1,\"147\":1}}],[\"并将该数据属性绑定到\",{\"1\":{\"127\":1,\"144\":1}}],[\"并将其应用于相应的模块\",{\"1\":{\"98\":1}}],[\"并将更新的模块代码应用到正在运行的应用程序中\",{\"1\":{\"98\":1}}],[\"并将转换后的结果传递给下一个loader\",{\"1\":{\"54\":1}}],[\"并将被拷贝对象的栈内存数据完全拷贝到该块空间中\",{\"1\":{\"3\":1}}],[\"并不是\",{\"1\":{\"90\":1}}],[\"并不是只下载包含这个函数的文件\",{\"1\":{\"37\":1}}],[\"并不会将解析之后的css插入到页面中\",{\"1\":{\"56\":1}}],[\"并不需要思考这些问题\",{\"1\":{\"43\":1}}],[\"并且愿意手动编写渲染逻辑\",{\"1\":{\"235\":1}}],[\"并且vue会在运行时将其编译成渲染函数\",{\"1\":{\"235\":1}}],[\"并且通过\",{\"1\":{\"234\":1}}],[\"并且应该可以通过this获取到data返回对象中的数据\",{\"1\":{\"234\":1}}],[\"并且该函数需要返回一个对象\",{\"1\":{\"233\":1}}],[\"并且标记它的类型为\",{\"1\":{\"232\":1}}],[\"并且ide很有可能没有任何提示\",{\"1\":{\"232\":1}}],[\"并且自己手动引入\",{\"1\":{\"227\":1}}],[\"并且它们还可以做到是响应式的\",{\"1\":{\"226\":1}}],[\"并且它是预配置的\",{\"1\":{\"18\":1}}],[\"并且多个mixins会存在命名冲突的问题\",{\"1\":{\"226\":1}}],[\"并且\",{\"1\":{\"224\":1}}],[\"并且计算属性是有缓存的\",{\"1\":{\"202\":1}}],[\"并且如果多个地方都使用到\",{\"1\":{\"198\":1}}],[\"并且最后进行新增\",{\"1\":{\"194\":1}}],[\"并且支持有一二三个参数\",{\"1\":{\"187\":1}}],[\"并且需要对其进行渲染\",{\"1\":{\"186\":1}}],[\"并且是一个对象\",{\"1\":{\"173\":1}}],[\"并且可以使用\",{\"1\":{\"155\":1}}],[\"并且我们前端提到过\",{\"1\":{\"160\":1}}],[\"并且我们的代码为了适配一些浏览器\",{\"1\":{\"155\":1}}],[\"并且我们需要一系列的配置来满足要求\",{\"1\":{\"51\":1}}],[\"并且对文件大小没有太大的担忧\",{\"1\":{\"235\":1}}],[\"并且对\",{\"1\":{\"154\":1}}],[\"并且只能在该父组件中使用\",{\"1\":{\"154\":1}}],[\"并且绑定到对应的方法中\",{\"1\":{\"125\":1,\"142\":1}}],[\"并且在下列场景中都是官方推荐的项目组织方式\",{\"1\":{\"236\":1}}],[\"并且在v\",{\"1\":{\"183\":1}}],[\"并且在真实开发中\",{\"1\":{\"114\":1,\"131\":1}}],[\"并且在文件发生变化时自动重新加载页面\",{\"1\":{\"92\":1}}],[\"并且默认选择\",{\"1\":{\"108\":2}}],[\"并且某些配置是在开发环境需要使用的\",{\"1\":{\"105\":1}}],[\"并且针对修改的模块进行更新\",{\"1\":{\"98\":1}}],[\"并且将其传递给babel\",{\"1\":{\"88\":1}}],[\"并且图片可以正常显示\",{\"1\":{\"65\":1}}],[\"并且会移除\",{\"1\":{\"190\":1}}],[\"并且会将它放到我们输出的文件夹中\",{\"1\":{\"64\":1}}],[\"并且会根据目标浏览器或者运行时环境\",{\"1\":{\"63\":1}}],[\"并且制定使用autoprefixer\",{\"1\":{\"61\":1}}],[\"并且使用它\",{\"1\":{\"227\":1}}],[\"并且使用\",{\"1\":{\"55\":1}}],[\"并且同时会安装npm\",{\"1\":{\"46\":1}}],[\"并且不需要缓存\",{\"1\":{\"36\":1}}],[\"并且配置资源体积限制实现\",{\"1\":{\"71\":1}}],[\"并且配置\",{\"1\":{\"28\":1}}],[\"一定会执行一次\",{\"1\":{\"207\":1}}],[\"一般写法\",{\"1\":{\"126\":1,\"143\":1}}],[\"一套完全图形化的创建和管理\",{\"1\":{\"106\":1}}],[\"一套构建指令\",{\"1\":{\"18\":1}}],[\"一些较大的依赖\",{\"1\":{\"37\":1}}],[\"一个参数\",{\"1\":{\"187\":1}}],[\"一个对象\",{\"1\":{\"170\":1}}],[\"一个丰富的官方插件集合\",{\"1\":{\"106\":1}}],[\"一个运行时依赖\",{\"1\":{\"106\":1}}],[\"一个用于hmr的websocket\",{\"1\":{\"22\":1}}],[\"一个用于页面加载\",{\"1\":{\"22\":1}}],[\"一个开发服务器\",{\"1\":{\"18\":1}}],[\"它更小巧\",{\"1\":{\"235\":1}}],[\"它仍然会出现在打包后的\",{\"1\":{\"154\":1}}],[\"它允许你在任何组件中触发事件并在其他组件中监听和响应这些事件\",{\"1\":{\"130\":1,\"147\":1}}],[\"它允许父组件向子组件传递数据\",{\"1\":{\"117\":1,\"134\":1}}],[\"它允许您使用最新的\",{\"1\":{\"63\":1}}],[\"它添加了类型注解和其他特性\",{\"1\":{\"108\":1}}],[\"它也为每个工具提供了调整配置的灵活性\",{\"1\":{\"106\":1}}],[\"它确保了各种构建工具能够基于智能的默认配置即可平稳衔接\",{\"1\":{\"106\":1}}],[\"它可能在\",{\"1\":{\"104\":1}}],[\"它可以在组件编译完毕前隐藏原始模板\",{\"1\":{\"166\":1}}],[\"它可以将客户端的请求转发到另一个服务器进行处理\",{\"1\":{\"102\":1}}],[\"它可以将\",{\"1\":{\"84\":3}}],[\"它可以帮助我们将一些现代的css特性\",{\"1\":{\"63\":1}}],[\"它的默认值是一个空对象\",{\"1\":{\"219\":1}}],[\"它的dom实际都是有渲染的\",{\"1\":{\"185\":1}}],[\"它的优点是使组件之间的依赖关系更加明确\",{\"1\":{\"154\":1}}],[\"它的模板是一个<div>元素\",{\"1\":{\"122\":1,\"139\":1}}],[\"它的\",{\"1\":{\"111\":1}}],[\"它的目的设置代理来解决跨域访问的问题\",{\"1\":{\"102\":1}}],[\"它的主要功能是将单个文件或整个目录复制到构建目录\",{\"1\":{\"78\":1}}],[\"它只能通过本地计算机或设备上的回环接口进行访问\",{\"1\":{\"100\":1}}],[\"它通常映射到回环地址\",{\"1\":{\"100\":1}}],[\"它还支持一些其他功能\",{\"1\":{\"92\":1}}],[\"它还支持将\",{\"1\":{\"81\":1}}],[\"它是\",{\"1\":{\"90\":1}}],[\"它是与babel配合使用的常用工具之一\",{\"1\":{\"88\":1}}],[\"它能够准确地描述源代码的语法和语义\",{\"1\":{\"87\":1}}],[\"它能够准确地描述代码的语法和语义\",{\"1\":{\"86\":1}}],[\"它根据你在\",{\"1\":{\"84\":1}}],[\"它将监听所有可用的网络接口\",{\"1\":{\"100\":1}}],[\"它将使用\",{\"1\":{\"63\":1}}],[\"它将返回目标对象\",{\"1\":{\"8\":1}}],[\"它们将会被逐一调用\",{\"1\":{\"208\":1}}],[\"它们最终在vue中表示出来的都是一个个vnode\",{\"1\":{\"191\":1}}],[\"它们的\",{\"1\":{\"154\":1}}],[\"它们会被添加到mycomponent的根元素上\",{\"1\":{\"122\":1,\"139\":1}}],[\"它们存在如下关系\",{\"1\":{\"116\":1,\"133\":1}}],[\"它们两个有什么区别呢\",{\"1\":{\"89\":1}}],[\"它们都是离不开babel的\",{\"1\":{\"81\":1}}],[\"它们如何可以自动转换呢\",{\"1\":{\"58\":1}}],[\"它们可以执行各种任务\",{\"1\":{\"54\":1}}],[\"它们作为webpack的一部分\",{\"1\":{\"54\":1}}],[\"它们均为静态资源\",{\"1\":{\"44\":1}}],[\"它会在自己的上层作用于中来查找this\",{\"1\":{\"234\":1}}],[\"它会在内部从一个或多个入口点构建一个\",{\"1\":{\"44\":1}}],[\"它会自动将\",{\"1\":{\"219\":1}}],[\"它会基于key的变化重新排列元素顺序\",{\"1\":{\"190\":1}}],[\"它会先执行该元素上的事件处理函数\",{\"1\":{\"180\":1}}],[\"它会帮助你分析包中包含的模块们的大小\",{\"1\":{\"111\":1}}],[\"它会根据更新代码进行处理\",{\"1\":{\"98\":1}}],[\"它会直接使用esbuild来完成编译\",{\"1\":{\"31\":1}}],[\"它被拆分成\",{\"1\":{\"39\":1}}],[\"它省略了开发环境的打包过程\",{\"1\":{\"18\":1}}],[\"它使用\",{\"1\":{\"18\":1}}],[\"它基于\",{\"1\":{\"18\":1}}],[\"它主要由两部分组成\",{\"1\":{\"18\":1}}],[\"能够显著提升前端开发体验\",{\"1\":{\"18\":1}}],[\"快速的\",{\"1\":{\"18\":1}}],[\"法语意为\",{\"1\":{\"18\":1}}],[\"tbody>\",{\"1\":{\"210\":1}}],[\"td>\",{\"1\":{\"210\":6}}],[\"td\",{\"1\":{\"210\":1}}],[\"t注册一个组件的时候\",{\"1\":{\"151\":1}}],[\"table>\",{\"1\":{\"210\":1}}],[\"table\",{\"1\":{\"210\":1}}],[\"tab\",{\"1\":{\"127\":7,\"144\":7,\"158\":1}}],[\"tabs\",{\"1\":{\"127\":2,\"144\":2}}],[\"target\",{\"1\":{\"96\":2,\"99\":3,\"102\":4,\"103\":1,\"105\":1,\"111\":2,\"180\":1,\"211\":1,\"219\":2,\"220\":2}}],[\"t\",{\"1\":{\"76\":1,\"107\":1}}],[\"tiny\",{\"1\":{\"86\":1,\"87\":1}}],[\"title>\",{\"1\":{\"76\":1,\"210\":1}}],[\"title\",{\"1\":{\"57\":2,\"61\":2,\"76\":5,\"90\":4,\"123\":1,\"140\":1,\"152\":1,\"153\":3,\"155\":2,\"170\":4,\"171\":4}}],[\"timestamp\",{\"1\":{\"41\":6}}],[\"t=$\",{\"1\":{\"41\":4}}],[\"trim=\",{\"1\":{\"218\":1}}],[\"trim\",{\"0\":{\"218\":1},\"1\":{\"218\":1}}],[\"triggered\",{\"1\":{\"208\":3}}],[\"trigger\",{\"1\":{\"158\":1}}],[\"tr>\",{\"1\":{\"210\":1}}],[\"transformation\",{\"1\":{\"86\":1,\"87\":1}}],[\"transform\",{\"1\":{\"83\":11}}],[\"true`选项来开启watch模式\",{\"1\":{\"93\":1}}],[\"true\",{\"1\":{\"38\":2,\"81\":1,\"91\":1,\"93\":1,\"96\":1,\"99\":4,\"101\":2,\"102\":3,\"103\":3,\"105\":4,\"120\":1,\"121\":1,\"126\":1,\"137\":1,\"138\":1,\"143\":1,\"160\":1,\"170\":5,\"171\":1,\"177\":1,\"180\":1,\"183\":1,\"207\":3,\"208\":2,\"209\":2,\"219\":2}}],[\"tree\",{\"1\":{\"20\":1,\"86\":1,\"90\":1,\"91\":3,\"154\":2,\"192\":1,\"225\":1}}],[\"tennis\",{\"1\":{\"213\":4}}],[\"textarea>\",{\"1\":{\"213\":1}}],[\"textdecoration\",{\"1\":{\"174\":1}}],[\"text=\",{\"1\":{\"164\":1}}],[\"textcontent\",{\"1\":{\"164\":1}}],[\"text\",{\"0\":{\"164\":1},\"1\":{\"180\":1,\"182\":1,\"189\":1,\"203\":1,\"206\":1,\"210\":1,\"219\":2,\"220\":2}}],[\"template模板的方式\",{\"1\":{\"235\":1}}],[\"template模板中\",{\"1\":{\"234\":1}}],[\"template模板中只能有一个根元素\",{\"1\":{\"167\":1}}],[\"template中的\",{\"1\":{\"233\":1}}],[\"template中通过\",{\"1\":{\"233\":1}}],[\"template标签\",{\"1\":{\"232\":1}}],[\"template属性\",{\"0\":{\"232\":1},\"1\":{\"232\":1}}],[\"template会自动进行更新来显示最新的数据\",{\"1\":{\"205\":1}}],[\"template元素是一种用于保存客户端内容的机制\",{\"1\":{\"232\":1}}],[\"template元素使用\",{\"0\":{\"188\":1}}],[\"template元素可以当做不可见的包裹元素\",{\"1\":{\"183\":1}}],[\"template元素\",{\"1\":{\"183\":1}}],[\"templatepath\",{\"1\":{\"41\":2}}],[\"template\",{\"0\":{\"183\":1},\"1\":{\"39\":2,\"41\":1,\"76\":2,\"90\":4,\"153\":3,\"160\":2,\"162\":1,\"163\":1,\"168\":1,\"170\":1,\"171\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"178\":1,\"179\":1,\"180\":1,\"182\":1,\"183\":1,\"187\":1,\"188\":2,\"189\":1,\"193\":1,\"201\":1,\"202\":1,\"203\":2,\"204\":1,\"206\":1,\"207\":1,\"210\":1,\"211\":1,\"213\":1,\"232\":4}}],[\"template>\",{\"1\":{\"35\":1,\"90\":1,\"114\":1,\"115\":6,\"119\":2,\"120\":2,\"121\":2,\"122\":1,\"123\":1,\"124\":1,\"125\":2,\"127\":1,\"129\":2,\"130\":2,\"131\":1,\"132\":6,\"136\":2,\"137\":2,\"138\":2,\"139\":1,\"140\":1,\"141\":1,\"142\":2,\"144\":1,\"146\":2,\"147\":2,\"153\":2,\"154\":1,\"155\":1,\"159\":1,\"160\":1,\"162\":1,\"163\":1,\"165\":1,\"167\":1,\"168\":1,\"170\":1,\"171\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"178\":1,\"179\":1,\"180\":1,\"182\":1,\"183\":3,\"184\":1,\"185\":1,\"187\":1,\"188\":2,\"189\":1,\"193\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":2,\"204\":1,\"206\":1,\"207\":1,\"210\":3,\"213\":1,\"219\":2,\"220\":1,\"232\":1,\"235\":2}}],[\"testing\",{\"1\":{\"108\":2}}],[\"test属性\",{\"1\":{\"55\":1}}],[\"test\",{\"1\":{\"37\":1,\"38\":3,\"55\":1,\"58\":1,\"64\":1,\"65\":1,\"67\":2,\"72\":1,\"88\":1,\"89\":1,\"90\":1}}],[\"tsconfig\",{\"1\":{\"109\":1}}],[\"ts处理\",{\"0\":{\"40\":1}}],[\"ts\",{\"0\":{\"31\":1},\"1\":{\"28\":1,\"38\":2,\"109\":2,\"110\":1}}],[\"th>\",{\"1\":{\"210\":6}}],[\"th\",{\"1\":{\"210\":2}}],[\"that\",{\"1\":{\"41\":1}}],[\"thead>\",{\"1\":{\"210\":1}}],[\"then\",{\"1\":{\"41\":2}}],[\"the\",{\"1\":{\"26\":1,\"41\":2,\"86\":1,\"87\":1,\"90\":1,\"91\":2,\"129\":1,\"146\":1}}],[\"this到底指向什么\",{\"1\":{\"234\":1}}],[\"this到底是如何查找和绑定的呢\",{\"1\":{\"234\":1}}],[\"this\",{\"1\":{\"16\":1,\"41\":1,\"90\":1,\"108\":1,\"125\":1,\"129\":4,\"130\":2,\"142\":1,\"146\":4,\"147\":2,\"160\":3,\"162\":1,\"170\":5,\"189\":5,\"193\":1,\"198\":1,\"201\":4,\"202\":4,\"203\":7,\"204\":7,\"206\":4,\"207\":3,\"208\":1,\"209\":2,\"210\":5,\"219\":3,\"232\":4,\"234\":2,\"235\":2}}],[\"touppercase\",{\"1\":{\"219\":1}}],[\"totalprice\",{\"1\":{\"210\":2}}],[\"toggle\",{\"1\":{\"160\":2,\"170\":2}}],[\"toc\",{\"1\":{\"113\":1,\"130\":1}}],[\"token\",{\"1\":{\"87\":1}}],[\"to\",{\"1\":{\"26\":4,\"38\":1,\"76\":1,\"78\":2,\"90\":2,\"91\":3,\"103\":5,\"107\":1,\"108\":1,\"125\":2,\"142\":2,\"230\":2}}],[\"type的类型都可以是哪些\",{\"1\":{\"121\":1,\"138\":1}}],[\"type的使用\",{\"0\":{\"72\":1}}],[\"type\",{\"0\":{\"71\":1},\"1\":{\"37\":3,\"38\":2,\"41\":2,\"54\":1,\"64\":1,\"67\":1,\"71\":2,\"72\":1,\"120\":1,\"121\":4,\"137\":1,\"138\":4}}],[\"type=template`\",{\"1\":{\"41\":1}}],[\"type=\",{\"1\":{\"37\":1,\"41\":1,\"90\":1,\"180\":1,\"182\":1,\"189\":1,\"203\":1,\"206\":1,\"213\":6,\"217\":1,\"219\":2,\"220\":2,\"232\":1}}],[\"typescript是一种静态类型的javascript超集\",{\"1\":{\"108\":1}}],[\"typescript的处理\",{\"1\":{\"45\":1}}],[\"typescript开发脚本逻辑\",{\"1\":{\"43\":1}}],[\"typescript\",{\"1\":{\"26\":1,\"43\":1,\"84\":3,\"86\":1,\"88\":1,\"108\":1,\"110\":1,\"224\":2}}],[\"typed\",{\"1\":{\"19\":1}}],[\"typeof\",{\"1\":{\"6\":1,\"12\":1,\"13\":1}}],[\"600\",{\"1\":{\"210\":1}}],[\"60\",{\"1\":{\"182\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":2}}],[\"6\",{\"1\":{\"14\":2,\"64\":1,\"65\":1,\"67\":2,\"72\":1,\"99\":1,\"208\":1}}],[\"yuejs\",{\"1\":{\"91\":1}}],[\"you\",{\"1\":{\"91\":1,\"108\":1}}],[\"your\",{\"1\":{\"90\":1,\"91\":1}}],[\"yarn\",{\"1\":{\"26\":2,\"107\":2,\"109\":3,\"237\":4}}],[\"y\",{\"1\":{\"14\":2,\"26\":2,\"108\":2}}],[\"59\",{\"1\":{\"210\":1}}],[\"5px\",{\"1\":{\"210\":1}}],[\"5c6b77\",{\"1\":{\"210\":1}}],[\"50px\",{\"1\":{\"173\":2}}],[\"50\",{\"1\":{\"173\":1}}],[\"5\",{\"1\":{\"14\":2,\"99\":1,\"208\":1}}],[\"join\",{\"1\":{\"160\":2,\"200\":1,\"201\":1,\"202\":1}}],[\"jpe\",{\"1\":{\"64\":1,\"65\":1,\"72\":1}}],[\"jamiebuilds\",{\"1\":{\"86\":1}}],[\"james\",{\"1\":{\"16\":1,\"207\":1}}],[\"jantimon\",{\"1\":{\"77\":1}}],[\"javascript风格指南的格式化规则\",{\"1\":{\"108\":1}}],[\"javascript等\",{\"1\":{\"98\":1}}],[\"javascript的打包\",{\"1\":{\"45\":1}}],[\"javascript的api\",{\"1\":{\"36\":1}}],[\"javascript\",{\"1\":{\"14\":1,\"18\":1,\"26\":1,\"37\":1,\"44\":1,\"76\":1,\"81\":5,\"83\":3,\"84\":5,\"90\":1,\"103\":1,\"151\":1,\"206\":1,\"232\":1,\"236\":1}}],[\"jquery\",{\"1\":{\"15\":1}}],[\"js和vue\",{\"1\":{\"237\":1}}],[\"js或者vuejs\",{\"1\":{\"223\":1}}],[\"js官方提供的状态管理库\",{\"1\":{\"108\":1}}],[\"js官方提供的路由管理器\",{\"1\":{\"108\":1}}],[\"js内置的net模块提供websocket服务\",{\"1\":{\"98\":1}}],[\"js源代码\",{\"1\":{\"95\":1}}],[\"js$\",{\"1\":{\"88\":1,\"89\":1}}],[\"js修改成了\",{\"1\":{\"52\":1}}],[\"js文件中写明配置信息\",{\"1\":{\"55\":1}}],[\"js文件\",{\"1\":{\"51\":1,\"98\":1}}],[\"js作为入口\",{\"1\":{\"48\":1}}],[\"js的名字\",{\"1\":{\"52\":1}}],[\"js的文件\",{\"1\":{\"48\":1}}],[\"js的数据类型分为两类\",{\"1\":{\"1\":1}}],[\"js中\",{\"1\":{\"121\":1,\"122\":1,\"138\":1,\"139\":1}}],[\"js中配置插件\",{\"1\":{\"32\":1}}],[\"js中的基本数据类型\",{\"1\":{\"2\":1}}],[\"jsx等语法编译\",{\"1\":{\"36\":1}}],[\"jsx\",{\"1\":{\"32\":2,\"81\":1,\"83\":4,\"84\":2,\"104\":3,\"159\":1}}],[\"json中的dev后加上\",{\"1\":{\"237\":1}}],[\"json中增加一个新的脚本\",{\"1\":{\"52\":1}}],[\"json文件的特定字段中\",{\"1\":{\"108\":1}}],[\"json文件\",{\"1\":{\"49\":1}}],[\"jsonplugin\",{\"1\":{\"38\":1}}],[\"json\",{\"0\":{\"14\":2},\"1\":{\"14\":8,\"38\":5,\"41\":1,\"49\":1,\"61\":1,\"89\":4,\"93\":1,\"94\":1,\"98\":1,\"104\":1,\"105\":1,\"108\":1,\"109\":2,\"111\":4}}],[\"js\",{\"0\":{\"0\":1,\"4\":1,\"40\":1,\"238\":1},\"1\":{\"25\":1,\"28\":1,\"29\":1,\"30\":1,\"37\":6,\"38\":2,\"41\":1,\"46\":2,\"48\":2,\"51\":2,\"52\":3,\"53\":2,\"54\":1,\"62\":1,\"63\":1,\"68\":1,\"84\":2,\"88\":3,\"89\":4,\"90\":20,\"91\":1,\"93\":1,\"96\":2,\"99\":1,\"104\":3,\"105\":6,\"106\":2,\"107\":1,\"109\":1,\"110\":2,\"111\":1,\"112\":1,\"127\":2,\"130\":1,\"144\":2,\"147\":1,\"153\":2,\"154\":1,\"160\":2,\"162\":2,\"163\":2,\"170\":2,\"171\":2,\"173\":2,\"174\":2,\"175\":2,\"176\":2,\"178\":2,\"179\":2,\"180\":3,\"182\":2,\"183\":2,\"187\":2,\"188\":2,\"189\":2,\"193\":2,\"201\":2,\"202\":2,\"203\":4,\"204\":2,\"206\":2,\"207\":2,\"210\":3,\"213\":2,\"229\":3,\"232\":4,\"237\":1}}],[\"常用\",{\"0\":{\"14\":1},\"1\":{\"92\":1}}],[\">hhhh<\",{\"1\":{\"232\":1}}],[\">香蕉<\",{\"1\":{\"213\":1}}],[\">橘子<\",{\"1\":{\"213\":1}}],[\">苹果<\",{\"1\":{\"213\":1}}],[\">女\",{\"1\":{\"213\":1}}],[\">男\",{\"1\":{\"213\":1}}],[\">移除<\",{\"1\":{\"210\":1}}],[\">+<\",{\"1\":{\"210\":1}}],[\">+1<\",{\"1\":{\"162\":3,\"232\":2}}],[\">改变info\",{\"1\":{\"207\":2}}],[\">改变info<\",{\"1\":{\"207\":1}}],[\">查找答案<\",{\"1\":{\"206\":1}}],[\">修改fullname<\",{\"1\":{\"204\":1}}],[\">修改firstname<\",{\"1\":{\"203\":1}}],[\">=\",{\"1\":{\"200\":1,\"201\":1,\"202\":1,\"203\":2}}],[\">插入f元素<\",{\"1\":{\"193\":1}}],[\">添加电影<\",{\"1\":{\"189\":1}}],[\">良好<\",{\"1\":{\"182\":1}}],[\">优秀<\",{\"1\":{\"182\":1}}],[\">div<\",{\"1\":{\"178\":1}}],[\">按钮<\",{\"1\":{\"180\":2}}],[\">按钮2<\",{\"1\":{\"179\":1}}],[\">按钮1<\",{\"1\":{\"178\":2,\"179\":1}}],[\">按钮点击<\",{\"1\":{\"155\":1}}],[\">呵呵呵呵<\",{\"1\":{\"170\":4,\"173\":2,\"185\":1}}],[\">哈哈哈哈<\",{\"1\":{\"170\":1,\"171\":3,\"173\":3,\"176\":3,\"184\":1,\"185\":1}}],[\">哈哈哈<\",{\"1\":{\"163\":1,\"174\":1,\"175\":2}}],[\">百度一下<\",{\"1\":{\"167\":1,\"168\":1}}],[\">切换<\",{\"1\":{\"160\":1,\"170\":1,\"183\":1}}],[\">发送消息<\",{\"1\":{\"130\":2,\"147\":2}}],[\">传递数据给父组件<\",{\"1\":{\"125\":1,\"142\":1}}],[\"><\",{\"1\":{\"76\":2,\"119\":1,\"120\":1,\"121\":1,\"122\":1,\"125\":1,\"127\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"142\":1,\"144\":1,\"153\":2,\"160\":1,\"162\":2,\"163\":2,\"164\":1,\"170\":2,\"171\":2,\"173\":2,\"174\":2,\"175\":3,\"176\":2,\"178\":4,\"179\":2,\"180\":2,\"182\":1,\"183\":2,\"187\":2,\"188\":3,\"189\":2,\"193\":2,\"201\":1,\"202\":1,\"203\":3,\"204\":1,\"206\":2,\"207\":2,\"210\":3,\"213\":3,\"228\":1,\"229\":1,\"232\":3}}],[\">favicon\",{\"1\":{\"76\":1}}],[\">import\",{\"1\":{\"41\":1}}],[\">\",{\"0\":{\"14\":1},\"1\":{\"14\":2,\"35\":2,\"37\":1,\"76\":8,\"90\":3,\"115\":1,\"119\":2,\"120\":3,\"121\":3,\"123\":1,\"124\":1,\"125\":2,\"126\":1,\"127\":2,\"132\":1,\"136\":2,\"137\":3,\"138\":3,\"140\":1,\"141\":1,\"142\":2,\"143\":1,\"144\":2,\"153\":2,\"154\":1,\"160\":7,\"162\":1,\"163\":1,\"164\":1,\"165\":2,\"167\":8,\"168\":7,\"170\":7,\"171\":3,\"173\":4,\"174\":1,\"175\":3,\"176\":2,\"178\":6,\"179\":3,\"180\":3,\"182\":4,\"183\":2,\"184\":1,\"185\":1,\"187\":6,\"188\":2,\"189\":4,\"193\":2,\"200\":2,\"201\":1,\"202\":1,\"203\":5,\"204\":1,\"206\":2,\"207\":2,\"210\":11,\"211\":3,\"213\":19,\"216\":2,\"217\":2,\"218\":1,\"219\":4,\"220\":3,\"232\":4}}],[\"待拷贝对象\",{\"0\":{\"14\":1}}],[\"old\",{\"1\":{\"208\":2}}],[\"oldval\",{\"1\":{\"208\":7}}],[\"oldvalue\",{\"1\":{\"206\":2,\"207\":3}}],[\"oldvalue变化前的旧值\",{\"1\":{\"206\":1}}],[\"oldinfo\",{\"1\":{\"207\":4,\"209\":2}}],[\"other\",{\"1\":{\"102\":1}}],[\"others\",{\"1\":{\"26\":1}}],[\"orange\",{\"1\":{\"213\":2}}],[\"or\",{\"1\":{\"107\":1,\"109\":1,\"207\":1}}],[\"origin\",{\"1\":{\"102\":1}}],[\"org\",{\"1\":{\"44\":1,\"54\":1,\"68\":1,\"91\":2,\"102\":1,\"103\":1,\"104\":1,\"106\":1,\"130\":1,\"147\":1,\"152\":1,\"177\":1,\"190\":1,\"198\":1,\"208\":1,\"209\":1,\"213\":1,\"236\":1}}],[\"out\",{\"1\":{\"82\":4,\"83\":1,\"84\":1}}],[\"outputpath\",{\"1\":{\"65\":1,\"67\":1}}],[\"output\",{\"1\":{\"48\":1,\"51\":1,\"88\":1,\"105\":1}}],[\"o\",{\"1\":{\"61\":1}}],[\"on支持修饰符\",{\"1\":{\"180\":1}}],[\"on=\",{\"1\":{\"178\":1}}],[\"on的用法\",{\"1\":{\"177\":1}}],[\"on的方式传入要监听的事件名称\",{\"1\":{\"125\":1,\"142\":1}}],[\"on指令\",{\"1\":{\"177\":1}}],[\"on绑定事件\",{\"1\":{\"177\":1}}],[\"once\",{\"1\":{\"177\":1,\"180\":1}}],[\"once用于指定元素或者组件只渲染一次\",{\"1\":{\"162\":1}}],[\"once指令\",{\"0\":{\"162\":1}}],[\"once>\",{\"1\":{\"159\":1,\"162\":3}}],[\"online\",{\"1\":{\"60\":1}}],[\"only\",{\"1\":{\"41\":1,\"108\":1}}],[\"on\",{\"0\":{\"177\":1,\"180\":1},\"1\":{\"41\":1,\"108\":2,\"130\":3,\"147\":3,\"178\":3}}],[\"open是否打开浏览器\",{\"1\":{\"101\":1}}],[\"open\",{\"0\":{\"101\":1},\"1\":{\"99\":2,\"101\":1,\"105\":1,\"110\":1}}],[\"opera等\",{\"1\":{\"35\":1}}],[\"optimization\",{\"1\":{\"105\":1}}],[\"optimized\",{\"1\":{\"19\":1}}],[\"option>\",{\"1\":{\"213\":3}}],[\"option\",{\"1\":{\"90\":1}}],[\"options\",{\"1\":{\"55\":1,\"62\":1,\"65\":1,\"67\":1,\"76\":3,\"88\":1,\"91\":2,\"107\":1,\"110\":1,\"111\":1,\"112\":1,\"208\":1,\"226\":2}}],[\"ok\",{\"1\":{\"26\":1}}],[\"of\",{\"1\":{\"13\":1,\"90\":1,\"91\":1,\"210\":1}}],[\"obj2\",{\"1\":{\"234\":2}}],[\"obj\",{\"0\":{\"13\":1},\"1\":{\"6\":6,\"7\":3,\"8\":3,\"12\":11,\"13\":6,\"14\":3,\"16\":4,\"234\":2}}],[\"object\",{\"0\":{\"8\":1,\"13\":1},\"1\":{\"1\":1,\"6\":1,\"8\":2,\"12\":1,\"13\":4,\"14\":1,\"81\":1,\"83\":2,\"121\":2,\"138\":2,\"167\":1,\"177\":1,\"187\":3,\"205\":1,\"207\":1,\"210\":1,\"225\":1}}],[\"volar\",{\"1\":{\"236\":1}}],[\"void\",{\"1\":{\"81\":1}}],[\"vjuː\",{\"1\":{\"223\":1}}],[\"vnode节点\",{\"1\":{\"235\":1}}],[\"vnode的本质是一个javascript的对象\",{\"1\":{\"191\":1}}],[\"vnode的全称是virtual\",{\"1\":{\"191\":1}}],[\"vnode\",{\"0\":{\"191\":1},\"1\":{\"192\":1}}],[\"v=4\",{\"1\":{\"168\":1}}],[\"vs\",{\"0\":{\"203\":1},\"1\":{\"121\":1,\"138\":1}}],[\"vscode对sfc文件的支持\",{\"0\":{\"236\":1}}],[\"vscode中的代码片段有固定的格式\",{\"1\":{\"158\":1}}],[\"vscode\",{\"0\":{\"158\":1},\"1\":{\"94\":1}}],[\"vetur\",{\"1\":{\"236\":1}}],[\"vendor\",{\"1\":{\"111\":1}}],[\"version\",{\"1\":{\"107\":1}}],[\"veet\",{\"1\":{\"18\":1}}],[\"v10\",{\"1\":{\"107\":1}}],[\"v8\",{\"1\":{\"107\":1}}],[\"viewmode的简称\",{\"1\":{\"231\":1}}],[\"view\",{\"1\":{\"223\":1,\"231\":2}}],[\"views\",{\"1\":{\"103\":3}}],[\"viewport\",{\"1\":{\"76\":1,\"210\":1}}],[\"via\",{\"1\":{\"41\":1}}],[\"vit\",{\"1\":{\"18\":1}}],[\"vite使用esbuild将ts转译到js\",{\"1\":{\"40\":1}}],[\"vite使用esbuild在初次启动开发服务器前把检测到的依赖进行预构建\",{\"1\":{\"37\":1}}],[\"vite对vue提供第一优先级支持\",{\"1\":{\"32\":1}}],[\"vite对typescript是原生支持的\",{\"1\":{\"31\":1}}],[\"vite直接支持postcss的转换\",{\"1\":{\"28\":1}}],[\"vite可以直接支持css预处理器\",{\"1\":{\"28\":1}}],[\"vite可以直接支持css的处理\",{\"1\":{\"28\":1}}],[\"vite构建vue3项目\",{\"0\":{\"26\":1}}],[\"vite的使用可谓是相当简单了\",{\"1\":{\"23\":1}}],[\"vite的主要特性\",{\"0\":{\"19\":1}}],[\"vite这类面相非打包的构建工具\",{\"1\":{\"22\":1}}],[\"vite开发环境冷启动无需打包\",{\"1\":{\"22\":1}}],[\"vite作为一个基于浏览器原生esm的构建工具\",{\"1\":{\"18\":1}}],[\"vitejs\",{\"1\":{\"17\":1,\"30\":1,\"32\":4}}],[\"vite\",{\"0\":{\"17\":1,\"18\":1,\"21\":1,\"24\":1,\"27\":1,\"33\":1},\"1\":{\"18\":6,\"20\":1,\"22\":1,\"25\":4,\"26\":5,\"29\":2,\"30\":2,\"32\":1,\"35\":1,\"37\":12,\"39\":1,\"41\":10,\"155\":1,\"156\":1}}],[\"val\",{\"1\":{\"208\":7}}],[\"validator\",{\"1\":{\"120\":1,\"121\":1,\"137\":1,\"138\":1}}],[\"value=\",{\"1\":{\"211\":3,\"213\":8,\"219\":2,\"220\":2}}],[\"value\",{\"1\":{\"81\":1,\"120\":2,\"121\":2,\"129\":1,\"137\":2,\"138\":2,\"146\":1,\"175\":2,\"180\":1,\"187\":5,\"188\":2,\"211\":2,\"219\":7,\"220\":2}}],[\"var\",{\"1\":{\"81\":2,\"83\":2,\"160\":2}}],[\"variables\",{\"1\":{\"63\":1}}],[\"variant\",{\"1\":{\"26\":1}}],[\"vanilla\",{\"1\":{\"26\":1}}],[\"vue在让我们选择版本时\",{\"1\":{\"235\":1}}],[\"vue在进行diff算法的时候\",{\"1\":{\"195\":1}}],[\"vue提供了两种方式\",{\"1\":{\"232\":1}}],[\"vue提供了下面的指令来进行条件判断\",{\"1\":{\"181\":1}}],[\"vue虽然并没有完全遵守mvvm的模型\",{\"1\":{\"231\":1}}],[\"vue官方其实有说明\",{\"1\":{\"231\":1}}],[\"vue使用\",{\"1\":{\"224\":1}}],[\"vue源码对于key的判断\",{\"0\":{\"194\":1}}],[\"vue事实上会对于有key和没有key会调用两个不同的方法\",{\"1\":{\"193\":1}}],[\"vue会使用一种最大限度减少动态元素并且尽可能的尝试就地修改\",{\"1\":{\"190\":1}}],[\"vue将模板编译成虚拟dom渲染函数\",{\"1\":{\"159\":1}}],[\"vue也支持\",{\"1\":{\"159\":1}}],[\"vuehome\",{\"1\":{\"129\":3,\"146\":3}}],[\"vueheader\",{\"1\":{\"115\":3,\"132\":3}}],[\"vueheader>\",{\"1\":{\"115\":1,\"132\":1}}],[\"vueproductlist\",{\"1\":{\"115\":3,\"132\":3}}],[\"vuebanner\",{\"1\":{\"115\":3,\"132\":3}}],[\"vue组件\",{\"1\":{\"115\":4,\"132\":4}}],[\"vue组件中\",{\"1\":{\"114\":1,\"131\":1}}],[\"vuefooter\",{\"1\":{\"115\":3,\"132\":3}}],[\"vuefooter>\",{\"1\":{\"115\":1,\"132\":1}}],[\"vuemain\",{\"1\":{\"115\":4,\"132\":4}}],[\"vuemain>\",{\"1\":{\"115\":1,\"132\":1}}],[\"vue结尾的文件在ts中不认可\",{\"1\":{\"109\":1}}],[\"vuex是vue\",{\"1\":{\"108\":1}}],[\"vuex\",{\"1\":{\"108\":1}}],[\"vue的源码全部使用\",{\"1\":{\"224\":1}}],[\"vue的开发模式\",{\"0\":{\"155\":1}}],[\"vue的组件化\",{\"0\":{\"150\":1}}],[\"vue的组件文件\",{\"1\":{\"109\":1}}],[\"vue的项目我们使用的就是vue的脚手架\",{\"1\":{\"106\":1}}],[\"vue的写法\",{\"1\":{\"90\":1}}],[\"vuecli\",{\"0\":{\"106\":1}}],[\"vue和angular\",{\"1\":{\"97\":1}}],[\"vuejs\",{\"1\":{\"91\":1,\"106\":1,\"130\":1,\"147\":1,\"152\":1,\"190\":1,\"198\":1,\"208\":1,\"209\":1,\"213\":1,\"236\":1}}],[\"vue$\",{\"1\":{\"90\":1}}],[\"vue打包后不同版本解析\",{\"1\":{\"90\":1}}],[\"vue文件中的template\",{\"1\":{\"235\":1}}],[\"vue文件中的template来编写模板\",{\"1\":{\"235\":1}}],[\"vue文件中使用<template>标签编写模板\",{\"1\":{\"235\":1}}],[\"vue文件\",{\"1\":{\"45\":1,\"156\":1}}],[\"vue文件缓存\",{\"0\":{\"39\":1}}],[\"vue项目加载的文件有哪些呢\",{\"0\":{\"45\":1}}],[\"vue2\",{\"1\":{\"32\":1,\"108\":1,\"167\":1,\"225\":3,\"226\":1}}],[\"vue2插件\",{\"1\":{\"26\":1}}],[\"vue支持\",{\"0\":{\"32\":1}}],[\"vue3带来的变化\",{\"0\":{\"224\":1}}],[\"vue3不支持过滤器了\",{\"1\":{\"210\":1}}],[\"vue3\",{\"0\":{\"157\":1},\"1\":{\"26\":2,\"108\":1,\"167\":2,\"225\":1,\"234\":1}}],[\"vue\",{\"0\":{\"16\":1,\"90\":1,\"107\":1,\"110\":1,\"111\":1,\"112\":1,\"196\":1,\"222\":1,\"223\":1,\"227\":1,\"242\":1},\"1\":{\"26\":3,\"30\":3,\"32\":9,\"35\":4,\"37\":6,\"39\":2,\"41\":6,\"43\":1,\"90\":30,\"91\":6,\"97\":4,\"106\":10,\"107\":15,\"108\":6,\"109\":11,\"110\":3,\"111\":2,\"112\":5,\"115\":8,\"119\":3,\"120\":3,\"121\":2,\"122\":1,\"125\":1,\"127\":5,\"129\":3,\"130\":3,\"132\":8,\"136\":3,\"137\":3,\"138\":2,\"139\":1,\"142\":1,\"144\":5,\"146\":3,\"147\":3,\"149\":1,\"150\":1,\"151\":1,\"153\":3,\"154\":1,\"155\":1,\"156\":1,\"160\":2,\"162\":2,\"163\":2,\"167\":2,\"168\":1,\"170\":2,\"171\":2,\"173\":2,\"174\":2,\"175\":2,\"176\":2,\"178\":2,\"179\":2,\"180\":3,\"182\":2,\"183\":2,\"187\":2,\"188\":2,\"189\":3,\"193\":2,\"201\":2,\"202\":2,\"203\":4,\"204\":2,\"206\":2,\"207\":3,\"210\":2,\"213\":2,\"223\":1,\"224\":1,\"225\":1,\"228\":1,\"229\":1,\"232\":4,\"236\":4,\"237\":1}}],[\"v\",{\"0\":{\"162\":1,\"163\":1,\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"177\":1,\"180\":1,\"183\":1,\"184\":1,\"185\":1,\"190\":1,\"211\":1,\"220\":1},\"1\":{\"13\":4,\"123\":1,\"127\":1,\"140\":1,\"144\":1,\"159\":2,\"162\":4,\"163\":2,\"164\":1,\"165\":2,\"166\":4,\"167\":5,\"168\":4,\"170\":1,\"172\":1,\"176\":2,\"177\":2,\"178\":4,\"180\":1,\"181\":4,\"182\":7,\"183\":4,\"184\":2,\"185\":6,\"186\":1,\"187\":7,\"188\":1,\"189\":2,\"193\":1,\"203\":1,\"206\":1,\"210\":3,\"211\":5,\"213\":8,\"216\":2,\"217\":2,\"218\":2,\"219\":6,\"220\":4,\"232\":1}}],[\"kebab\",{\"1\":{\"121\":2,\"138\":2,\"151\":4,\"172\":2}}],[\"key属性主要用在vue的虚拟dom算法\",{\"1\":{\"190\":1}}],[\"keyup\",{\"1\":{\"180\":2}}],[\"keyalias\",{\"1\":{\"177\":1,\"180\":1}}],[\"key=\",{\"1\":{\"127\":1,\"144\":1,\"193\":1}}],[\"keys\",{\"1\":{\"26\":2}}],[\"key\",{\"0\":{\"190\":1},\"1\":{\"6\":4,\"154\":1,\"167\":1,\"187\":4,\"188\":2,\"190\":1,\"199\":1,\"205\":1}}],[\"kobe\",{\"1\":{\"16\":1,\"175\":2,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"207\":3}}],[\"k\",{\"1\":{\"13\":2}}],[\"e9e9e9\",{\"1\":{\"210\":2}}],[\"e\",{\"1\":{\"208\":3,\"219\":2}}],[\"emitvalue\",{\"1\":{\"219\":2}}],[\"emit\",{\"1\":{\"130\":5,\"147\":5}}],[\"emits\",{\"0\":{\"126\":1,\"143\":1},\"1\":{\"126\":2,\"143\":2,\"219\":2,\"220\":1}}],[\"events\",{\"1\":{\"177\":1}}],[\"event\",{\"1\":{\"130\":7,\"147\":7,\"177\":4,\"179\":5,\"180\":4}}],[\"eval\",{\"1\":{\"105\":1}}],[\"etc\",{\"1\":{\"108\":1}}],[\"e2e\",{\"1\":{\"108\":1}}],[\"eject\",{\"1\":{\"106\":1}}],[\"ecmascript\",{\"1\":{\"81\":1,\"83\":1,\"90\":2}}],[\"equiv=\",{\"1\":{\"76\":1,\"210\":1}}],[\"eot|ttf|woff2\",{\"1\":{\"67\":2}}],[\"eyj2zxjzaw9uijozlcjzb3vyy2vzijpbinrlc3quy3nzil0sim5hbwvzijpbxswibwfwcgluz3mioijbqufbo0vbq0useujbqwlco0tbqwpclhncqufpqjtnqufqqixxqkfbaui7vufbakisaujbqwlco0fbq25ciiwizmlszsi6imrlbw8uy3nziiwic291cmnlc0nvbnrlbnqiolsilnrpdgxlihtcbiagdxnlci1zzwxly3q6ig5vbmu7xg59il19\",{\"1\":{\"61\":1}}],[\"edited\",{\"1\":{\"41\":1}}],[\"element函数调用\",{\"1\":{\"159\":1}}],[\"element模块发生了变化\",{\"1\":{\"96\":1}}],[\"element\",{\"1\":{\"89\":1,\"96\":1}}],[\"el\",{\"1\":{\"41\":3}}],[\"else一起使用\",{\"1\":{\"185\":1}}],[\"else>\",{\"1\":{\"183\":1,\"210\":1}}],[\"else>不及格<\",{\"1\":{\"182\":1}}],[\"else\",{\"1\":{\"12\":1,\"41\":2,\"181\":2,\"182\":5}}],[\"error\",{\"1\":{\"90\":1,\"108\":1}}],[\"err\",{\"1\":{\"41\":2}}],[\"examplex新建自己的文件夹以及测试demo\",{\"1\":{\"237\":1}}],[\"example\",{\"1\":{\"102\":1}}],[\"express\",{\"1\":{\"98\":2}}],[\"expl1citly\",{\"1\":{\"91\":1}}],[\"export\",{\"1\":{\"29\":1,\"30\":1,\"35\":1,\"37\":1,\"38\":3,\"41\":1,\"81\":1,\"90\":2,\"114\":1,\"115\":2,\"119\":2,\"120\":2,\"121\":2,\"122\":1,\"123\":1,\"125\":2,\"126\":1,\"127\":1,\"129\":3,\"130\":2,\"131\":1,\"132\":2,\"136\":2,\"137\":2,\"138\":2,\"139\":1,\"140\":1,\"142\":2,\"143\":1,\"144\":1,\"146\":3,\"147\":2,\"154\":2,\"155\":1,\"208\":1,\"219\":2,\"220\":1,\"235\":1}}],[\"exports\",{\"1\":{\"28\":1,\"32\":1,\"51\":1,\"55\":1,\"62\":1,\"74\":1,\"76\":1,\"77\":1,\"79\":1,\"81\":3,\"84\":1,\"88\":1,\"89\":1,\"91\":1,\"93\":1,\"96\":1,\"99\":1,\"101\":1,\"102\":3,\"103\":2,\"104\":1,\"105\":2,\"112\":1}}],[\"exclude\",{\"1\":{\"88\":1}}],[\"extensions\",{\"1\":{\"104\":4}}],[\"extend\",{\"1\":{\"15\":1}}],[\"ext\",{\"1\":{\"64\":1,\"65\":1,\"67\":2,\"68\":1,\"72\":1}}],[\"extract\",{\"1\":{\"53\":1}}],[\"enterkeyup\",{\"1\":{\"180\":2}}],[\"enter=\",{\"1\":{\"180\":1}}],[\"entry|pattern\",{\"1\":{\"111\":1}}],[\"entry\",{\"1\":{\"48\":1,\"51\":1,\"88\":1,\"105\":1,\"110\":4}}],[\"entries\",{\"0\":{\"13\":1},\"1\":{\"13\":3}}],[\"en\",{\"1\":{\"177\":1,\"210\":1}}],[\"enhanced\",{\"1\":{\"104\":1}}],[\"enable\",{\"1\":{\"76\":1}}],[\"enabled\",{\"1\":{\"76\":1}}],[\"end\",{\"1\":{\"61\":1,\"108\":2}}],[\"endswith\",{\"1\":{\"38\":1,\"41\":2}}],[\"encode\",{\"1\":{\"37\":1}}],[\"env也是一个postcss的插件\",{\"1\":{\"63\":1}}],[\"env\",{\"0\":{\"63\":1},\"1\":{\"28\":2,\"62\":1,\"63\":6,\"84\":4,\"88\":4,\"89\":2,\"105\":1}}],[\"essential\",{\"0\":{\"244\":1}}],[\"essentials\",{\"1\":{\"213\":1}}],[\"es2015\",{\"1\":{\"111\":1,\"154\":1}}],[\"eslint的配置文件\",{\"1\":{\"109\":1}}],[\"eslintrc\",{\"1\":{\"109\":1}}],[\"eslintrc等\",{\"1\":{\"108\":1}}],[\"eslintconfig等\",{\"1\":{\"108\":1}}],[\"eslint等配置信息保存在package\",{\"1\":{\"108\":1}}],[\"eslint等配置信息分别保存在它们各自的配置文件中\",{\"1\":{\"108\":1}}],[\"eslint\",{\"1\":{\"108\":9}}],[\"es5\",{\"1\":{\"81\":1,\"83\":2,\"86\":1}}],[\"es6\",{\"1\":{\"48\":1,\"86\":1,\"155\":1}}],[\"es6出现后\",{\"1\":{\"35\":1}}],[\"esmodule\",{\"1\":{\"81\":1}}],[\"esm支持解析相对路径\",{\"1\":{\"35\":1}}],[\"esm的对外接口只是一种静态定义\",{\"1\":{\"35\":1}}],[\"esm是浏览器支持的一种模块化方案\",{\"1\":{\"35\":1}}],[\"esm\",{\"0\":{\"34\":1,\"35\":1},\"1\":{\"37\":2,\"90\":9,\"91\":1}}],[\"esm运行时\",{\"1\":{\"20\":1}}],[\"esbuild可以充分利用cpu的多内核\",{\"1\":{\"36\":1}}],[\"esbuild为什么这么快呢\",{\"1\":{\"36\":1}}],[\"esbuild的所有内容都是从零开始编写的\",{\"1\":{\"36\":1}}],[\"esbuild的构建速度和其他构建工具速度对比\",{\"1\":{\"36\":1}}],[\"esbuild的特点\",{\"1\":{\"36\":1}}],[\"esbuild\",{\"0\":{\"34\":1,\"36\":1},\"1\":{\"22\":1}}],[\"es\",{\"1\":{\"18\":1,\"37\":3,\"44\":1,\"90\":2}}],[\"乒乓球\",{\"1\":{\"12\":3,\"13\":1,\"14\":1}}],[\"排球\",{\"1\":{\"12\":2,\"13\":1,\"14\":1}}],[\"若是\",{\"1\":{\"37\":1}}],[\"若是则进行对应改写成\",{\"1\":{\"37\":1}}],[\"若对象属性还是引用类型\",{\"1\":{\"12\":1}}],[\"若被拷贝对象中有引用类型\",{\"1\":{\"3\":1}}],[\"x中\",{\"1\":{\"226\":1}}],[\"x的时候\",{\"1\":{\"224\":2,\"226\":1}}],[\"x\",{\"1\":{\"14\":2,\"76\":1,\"107\":1,\"210\":1,\"225\":3,\"226\":1,\"232\":2}}],[\"xia\",{\"1\":{\"10\":1}}],[\"xkc\",{\"1\":{\"6\":2}}],[\"p\",{\"1\":{\"177\":1,\"235\":1}}],[\"px\",{\"1\":{\"173\":1}}],[\"push\",{\"1\":{\"129\":1,\"130\":1,\"146\":1,\"147\":1,\"189\":2}}],[\"public\",{\"1\":{\"76\":2,\"78\":1,\"96\":1,\"99\":1,\"105\":1,\"109\":1}}],[\"p>\",{\"1\":{\"123\":1,\"129\":1,\"140\":1,\"146\":1,\"153\":1,\"155\":1,\"206\":2,\"235\":2}}],[\"pick\",{\"1\":{\"108\":2}}],[\"pig\",{\"1\":{\"10\":2}}],[\"pwa是一种使用现代web技术构建的应用程序\",{\"1\":{\"108\":1}}],[\"pwa\",{\"1\":{\"108\":1}}],[\"pop\",{\"1\":{\"189\":1}}],[\"posts\",{\"1\":{\"127\":4,\"144\":4}}],[\"postcssoptions\",{\"1\":{\"62\":1}}],[\"postcss通常用于对css文件进行预处理和后处理\",{\"1\":{\"60\":1}}],[\"postcss是一个通过javascript来转换样式的工具\",{\"1\":{\"59\":1}}],[\"postcsspresetenv\",{\"1\":{\"28\":2}}],[\"postcss\",{\"0\":{\"59\":1,\"62\":1,\"63\":1},\"1\":{\"28\":5,\"60\":4,\"61\":1,\"62\":6,\"63\":11}}],[\"port设置监听的端口\",{\"1\":{\"101\":1}}],[\"port\",{\"0\":{\"101\":1},\"1\":{\"99\":1,\"101\":1,\"103\":1,\"105\":1,\"110\":2}}],[\"placing\",{\"1\":{\"108\":1}}],[\"placeholders\",{\"1\":{\"68\":1}}],[\"plus\",{\"1\":{\"89\":1}}],[\"plugin可以用于执行更加广泛的任务\",{\"1\":{\"73\":1}}],[\"plugin提取css文件\",{\"1\":{\"53\":1}}],[\"plugin生成html文件\",{\"1\":{\"53\":1}}],[\"plugin生态\",{\"1\":{\"23\":1}}],[\"plugins=\",{\"1\":{\"83\":1}}],[\"plugins\",{\"1\":{\"30\":1,\"32\":1,\"62\":2,\"74\":1,\"76\":1,\"77\":1,\"91\":2,\"112\":1}}],[\"pluginoptions\",{\"1\":{\"28\":1}}],[\"plugin等进行诸多配置\",{\"1\":{\"23\":1}}],[\"plugin\",{\"0\":{\"73\":1},\"1\":{\"19\":1,\"26\":1,\"28\":1,\"30\":1,\"32\":5,\"37\":1,\"74\":2,\"75\":1,\"76\":1,\"77\":1,\"78\":2,\"83\":11,\"91\":1,\"107\":3}}],[\"please\",{\"1\":{\"76\":1}}],[\"p但是实现这些功能\",{\"1\":{\"59\":1}}],[\"png就放在这里\",{\"1\":{\"109\":1}}],[\"png等格式的图片\",{\"1\":{\"64\":1}}],[\"png|jpe\",{\"1\":{\"38\":1}}],[\"png\",{\"1\":{\"35\":1}}],[\"price\",{\"1\":{\"210\":10}}],[\"preventdefault\",{\"1\":{\"177\":1,\"180\":1}}],[\"prevent\",{\"1\":{\"177\":1,\"180\":1}}],[\"prevention\",{\"1\":{\"108\":1}}],[\"pre>\",{\"1\":{\"165\":1}}],[\"pre用于跳过元素和它的子元素的编译过程\",{\"1\":{\"165\":1}}],[\"prefer\",{\"1\":{\"108\":1}}],[\"preferconst\",{\"1\":{\"38\":1}}],[\"prettier\",{\"1\":{\"108\":1}}],[\"pre\",{\"0\":{\"165\":1},\"1\":{\"108\":1}}],[\"present\",{\"1\":{\"90\":1}}],[\"presets=\",{\"1\":{\"84\":1}}],[\"presets\",{\"1\":{\"84\":1,\"88\":2,\"89\":1}}],[\"preset\",{\"0\":{\"63\":1,\"84\":1},\"1\":{\"28\":2,\"62\":1,\"63\":7,\"84\":8,\"88\":4,\"89\":2,\"108\":1}}],[\"preprocessoroptions\",{\"1\":{\"29\":1}}],[\"preact\",{\"1\":{\"26\":1}}],[\"provide\",{\"0\":{\"129\":1,\"146\":1},\"1\":{\"128\":1,\"129\":6,\"145\":1,\"146\":6}}],[\"provided\",{\"1\":{\"90\":1}}],[\"prop=\",{\"1\":{\"121\":1,\"138\":1}}],[\"prop来引用它\",{\"1\":{\"121\":1,\"138\":1}}],[\"prop\",{\"0\":{\"122\":1,\"139\":1},\"1\":{\"121\":3,\"138\":3,\"167\":5,\"211\":1,\"219\":4,\"220\":1}}],[\"propg\",{\"1\":{\"121\":1,\"138\":1}}],[\"propf\",{\"1\":{\"121\":1,\"138\":1}}],[\"prope\",{\"1\":{\"121\":1,\"138\":1}}],[\"property\",{\"1\":{\"129\":2,\"146\":2,\"167\":4,\"172\":2}}],[\"proper\",{\"1\":{\"91\":1}}],[\"properly\",{\"1\":{\"76\":1}}],[\"propd\",{\"1\":{\"121\":1,\"138\":1}}],[\"propc\",{\"1\":{\"121\":1,\"138\":1}}],[\"propb\",{\"1\":{\"121\":1,\"138\":1}}],[\"propa\",{\"1\":{\"121\":1,\"138\":1}}],[\"props可以使用两种方式来定义\",{\"1\":{\"118\":1,\"135\":1}}],[\"props是一种用于向组件传递数据的机制\",{\"1\":{\"117\":1,\"134\":1}}],[\"props\",{\"0\":{\"118\":1,\"135\":1},\"1\":{\"117\":1,\"119\":1,\"120\":1,\"121\":2,\"129\":1,\"130\":1,\"134\":1,\"136\":1,\"137\":1,\"138\":2,\"146\":1,\"147\":1,\"167\":2,\"219\":2,\"220\":1,\"226\":1}}],[\"processors\",{\"1\":{\"108\":1}}],[\"proceed\",{\"1\":{\"26\":1}}],[\"progressive\",{\"1\":{\"108\":1}}],[\"proxyoptions\",{\"1\":{\"102\":1}}],[\"proxy选项可以是一个对象\",{\"1\":{\"102\":1}}],[\"proxy是我们开发中非常常用的一个配置选项\",{\"1\":{\"102\":1}}],[\"proxy\",{\"0\":{\"102\":1},\"1\":{\"99\":2,\"102\":4,\"103\":1,\"105\":1,\"207\":1,\"225\":1}}],[\"productlist组件的父组件\",{\"1\":{\"116\":1,\"133\":1}}],[\"productlist组件\",{\"1\":{\"115\":1,\"132\":1}}],[\"product\",{\"1\":{\"115\":2,\"132\":2}}],[\"production\",{\"1\":{\"79\":1,\"111\":1,\"112\":1}}],[\"prod\",{\"1\":{\"90\":3,\"91\":2,\"105\":1}}],[\"projects\",{\"1\":{\"108\":1}}],[\"project\",{\"1\":{\"26\":2}}],[\"padding\",{\"1\":{\"210\":1}}],[\"passive\",{\"1\":{\"177\":2,\"180\":2}}],[\"pascalcase\",{\"1\":{\"151\":4}}],[\"patchunkeyedchildren方法\",{\"1\":{\"194\":1}}],[\"patchkeyedchildren方法\",{\"1\":{\"194\":1}}],[\"patterns\",{\"1\":{\"78\":1}}],[\"paths\",{\"1\":{\"112\":1}}],[\"pathrewrite\",{\"1\":{\"99\":1,\"102\":2,\"105\":1}}],[\"pathname\",{\"1\":{\"41\":1}}],[\"pathutils\",{\"1\":{\"38\":1}}],[\"path\",{\"1\":{\"37\":6,\"38\":3,\"41\":20,\"48\":1,\"51\":4,\"68\":1,\"88\":1,\"104\":2,\"105\":4}}],[\"package\",{\"1\":{\"49\":2,\"93\":1,\"94\":1,\"104\":1,\"105\":1,\"108\":1,\"109\":1,\"111\":1}}],[\"packages\",{\"1\":{\"26\":1,\"91\":1}}],[\"pages\",{\"1\":{\"110\":1}}],[\"pagepath\",{\"1\":{\"41\":4}}],[\"page\",{\"1\":{\"41\":2}}],[\"payload\",{\"1\":{\"41\":9}}],[\"parent=\",{\"1\":{\"125\":1,\"142\":1}}],[\"parentvalue\",{\"1\":{\"121\":2,\"138\":2}}],[\"parentmessage\",{\"1\":{\"120\":3,\"137\":3}}],[\"parent\",{\"1\":{\"119\":2,\"120\":1,\"121\":1,\"125\":2,\"129\":1,\"136\":2,\"137\":1,\"138\":1,\"142\":2,\"146\":1}}],[\"parsing\",{\"1\":{\"86\":1,\"87\":1}}],[\"parsefloat\",{\"1\":{\"217\":1}}],[\"parser\",{\"1\":{\"64\":1,\"72\":1}}],[\"parse\",{\"0\":{\"14\":1},\"1\":{\"14\":3,\"38\":1,\"41\":1}}],[\"parcel等\",{\"1\":{\"90\":1}}],[\"parcel\",{\"1\":{\"20\":1}}],[\"person1\",{\"1\":{\"6\":4}}],[\"person\",{\"1\":{\"6\":3}}],[\"dx\",{\"1\":{\"236\":1}}],[\"d它们都是没有变化的\",{\"1\":{\"193\":1}}],[\"ds\",{\"1\":{\"78\":1}}],[\"diff\",{\"1\":{\"194\":2}}],[\"diff算法优化\",{\"1\":{\"225\":1}}],[\"diff算法\",{\"1\":{\"194\":2}}],[\"div\",{\"1\":{\"235\":1}}],[\"divider\",{\"1\":{\"188\":1}}],[\"divclick\",{\"1\":{\"180\":3}}],[\"div>\",{\"1\":{\"76\":1,\"114\":3,\"115\":4,\"119\":2,\"120\":2,\"121\":2,\"122\":1,\"123\":1,\"124\":3,\"125\":1,\"127\":1,\"129\":2,\"130\":2,\"131\":3,\"132\":4,\"136\":2,\"137\":2,\"138\":2,\"139\":1,\"140\":1,\"141\":3,\"142\":1,\"144\":1,\"146\":2,\"147\":2,\"153\":1,\"155\":1,\"159\":2,\"162\":3,\"163\":2,\"166\":1,\"170\":7,\"171\":4,\"173\":6,\"174\":2,\"175\":4,\"176\":4,\"178\":4,\"179\":1,\"180\":2,\"183\":1,\"187\":1,\"188\":1,\"189\":1,\"193\":1,\"203\":1,\"206\":1,\"207\":1,\"210\":1,\"213\":1,\"232\":4,\"235\":2}}],[\"disabled=\",{\"1\":{\"210\":1}}],[\"display\",{\"1\":{\"166\":2}}],[\"dist文件夹下有两个文件\",{\"1\":{\"237\":1}}],[\"dist\",{\"1\":{\"48\":1,\"82\":2,\"83\":1,\"84\":1,\"88\":1,\"90\":3,\"105\":1,\"111\":2}}],[\"dir\",{\"1\":{\"82\":2,\"83\":1,\"84\":1}}],[\"dirname\",{\"1\":{\"51\":1,\"88\":1,\"104\":2,\"105\":1}}],[\"dom\",{\"0\":{\"192\":1},\"1\":{\"151\":2,\"159\":1,\"166\":2,\"167\":4,\"192\":2,\"194\":2}}],[\"do\",{\"1\":{\"108\":1,\"208\":1,\"230\":2}}],[\"doesn\",{\"1\":{\"76\":1}}],[\"docs\",{\"1\":{\"177\":1}}],[\"docschina\",{\"1\":{\"44\":1,\"54\":1,\"102\":1,\"103\":1,\"104\":1}}],[\"doctype\",{\"1\":{\"76\":1,\"210\":1}}],[\"document\",{\"1\":{\"41\":1}}],[\"dog\",{\"1\":{\"10\":1}}],[\"danger\",{\"1\":{\"121\":1,\"138\":1}}],[\"dance\",{\"1\":{\"6\":3}}],[\"date\",{\"1\":{\"121\":1,\"138\":1,\"210\":5}}],[\"data中返回的对象会被vue的响应式系统劫持\",{\"1\":{\"233\":1}}],[\"data属性是传入一个函数\",{\"1\":{\"233\":1}}],[\"data属性\",{\"0\":{\"233\":1}}],[\"data返回的对象是有添加到vue的响应式系统中\",{\"1\":{\"160\":1}}],[\"dataurlcondition\",{\"1\":{\"64\":1,\"72\":1}}],[\"data\",{\"1\":{\"41\":2,\"71\":2,\"90\":2,\"120\":1,\"121\":1,\"125\":6,\"127\":1,\"129\":2,\"137\":1,\"138\":1,\"142\":6,\"144\":1,\"146\":2,\"153\":1,\"155\":1,\"160\":1,\"162\":1,\"163\":1,\"168\":1,\"170\":1,\"171\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"178\":1,\"179\":1,\"180\":1,\"182\":1,\"183\":1,\"187\":1,\"188\":1,\"189\":1,\"193\":1,\"201\":1,\"202\":1,\"203\":2,\"204\":1,\"205\":1,\"206\":1,\"207\":2,\"208\":1,\"210\":1,\"213\":1,\"232\":2}}],[\"datatoesm\",{\"1\":{\"38\":1}}],[\"d\",{\"1\":{\"25\":1,\"28\":2,\"32\":1,\"49\":1,\"55\":1,\"56\":1,\"57\":2,\"58\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"74\":1,\"75\":1,\"78\":1,\"82\":1,\"83\":2,\"84\":1,\"90\":2,\"94\":1,\"109\":1,\"193\":1,\"208\":2}}],[\"decrement\",{\"1\":{\"210\":2,\"232\":4}}],[\"decodeuricomponent\",{\"1\":{\"37\":1}}],[\"deep\",{\"1\":{\"207\":1,\"208\":1,\"209\":1}}],[\"deepclone\",{\"1\":{\"12\":3,\"13\":3}}],[\"description\",{\"1\":{\"235\":3}}],[\"desc\",{\"1\":{\"153\":2,\"155\":2}}],[\"dest\",{\"1\":{\"111\":1}}],[\"destructuring\",{\"1\":{\"83\":1}}],[\"dedicated\",{\"1\":{\"108\":1}}],[\"details\",{\"1\":{\"91\":1}}],[\"dependency\",{\"1\":{\"44\":1,\"90\":1}}],[\"debounce\",{\"1\":{\"37\":1}}],[\"debugger\",{\"1\":{\"237\":1}}],[\"debug\",{\"1\":{\"37\":1}}],[\"demo\",{\"1\":{\"37\":1,\"127\":1,\"144\":1}}],[\"define\",{\"1\":{\"91\":1}}],[\"defineproperty\",{\"1\":{\"81\":1,\"225\":1}}],[\"defineplugin允许在编译时创建配置的全局常量\",{\"1\":{\"77\":1}}],[\"defineplugin\",{\"0\":{\"77\":1},\"1\":{\"77\":2,\"91\":1}}],[\"defined\",{\"1\":{\"77\":1}}],[\"defineconfig\",{\"1\":{\"29\":2,\"30\":2}}],[\"default为\",{\"1\":{\"120\":1,\"137\":1}}],[\"default\",{\"1\":{\"29\":1,\"30\":1,\"35\":1,\"38\":1,\"41\":1,\"81\":5,\"90\":1,\"108\":2,\"114\":1,\"115\":2,\"119\":2,\"120\":3,\"121\":5,\"122\":1,\"123\":1,\"125\":2,\"126\":1,\"127\":1,\"129\":3,\"130\":2,\"131\":1,\"132\":2,\"136\":2,\"137\":3,\"138\":5,\"139\":1,\"140\":1,\"142\":2,\"143\":1,\"144\":1,\"146\":3,\"147\":2,\"154\":2,\"155\":1,\"208\":1,\"219\":4,\"220\":1,\"235\":1}}],[\"developer\",{\"1\":{\"177\":1}}],[\"development\",{\"1\":{\"79\":2,\"105\":3,\"110\":1,\"112\":1}}],[\"devserverhistoryapifallback\",{\"1\":{\"103\":1}}],[\"devserverproxy\",{\"1\":{\"102\":1}}],[\"devserver\",{\"0\":{\"92\":1,\"99\":1},\"1\":{\"92\":3,\"96\":1,\"99\":1,\"101\":1,\"102\":4,\"103\":2,\"105\":1,\"110\":1}}],[\"devtools\",{\"1\":{\"91\":2,\"95\":1}}],[\"devtool\",{\"1\":{\"79\":1,\"105\":2}}],[\"devinjectioncode\",{\"1\":{\"41\":2}}],[\"dev\",{\"0\":{\"94\":1},\"1\":{\"17\":1,\"18\":1,\"26\":1,\"49\":2,\"55\":1,\"88\":1,\"92\":2,\"94\":2,\"95\":1,\"98\":5,\"102\":1,\"103\":3,\"105\":1,\"110\":1,\"237\":1}}],[\"2scrlta\",{\"1\":{\"234\":1}}],[\"2+\",{\"1\":{\"167\":2}}],[\"2008\",{\"1\":{\"210\":1}}],[\"2006\",{\"1\":{\"210\":3}}],[\"20231031200224648\",{\"1\":{\"213\":1}}],[\"20231031204213497\",{\"1\":{\"150\":1}}],[\"20231022182300781\",{\"1\":{\"194\":1}}],[\"20231022182341619\",{\"1\":{\"194\":1}}],[\"20231022182251535\",{\"1\":{\"194\":1}}],[\"20231022182241976\",{\"1\":{\"194\":1}}],[\"20231022182232738\",{\"1\":{\"194\":1}}],[\"20231022182140133\",{\"1\":{\"194\":1}}],[\"20231022182012027\",{\"1\":{\"194\":1}}],[\"20231020164733530\",{\"1\":{\"194\":1}}],[\"20231020163154944\",{\"1\":{\"192\":1}}],[\"20231020162812819\",{\"1\":{\"191\":1}}],[\"20231019222841008\",{\"1\":{\"185\":1}}],[\"20231019005251770\",{\"1\":{\"180\":1}}],[\"20231019004604619\",{\"1\":{\"179\":1}}],[\"20231018083558572\",{\"1\":{\"163\":1}}],[\"20231016233051010\",{\"1\":{\"158\":1}}],[\"20231130195805276\",{\"1\":{\"129\":1,\"146\":1}}],[\"20231124000011715\",{\"1\":{\"116\":1,\"133\":1}}],[\"20231122103654515\",{\"1\":{\"108\":1}}],[\"20231122103618450\",{\"1\":{\"108\":1}}],[\"20231122103332793\",{\"1\":{\"108\":1}}],[\"20231122171839049\",{\"1\":{\"22\":1}}],[\"20231122171817220\",{\"1\":{\"22\":1}}],[\"20231119222920881\",{\"1\":{\"105\":1}}],[\"20231119203330239\",{\"1\":{\"98\":1}}],[\"20231119201428778\",{\"1\":{\"96\":1}}],[\"20231119190420271\",{\"1\":{\"94\":1}}],[\"20231117234618957\",{\"1\":{\"91\":1}}],[\"20231116220536704\",{\"1\":{\"88\":1}}],[\"20231116205317664\",{\"1\":{\"87\":1}}],[\"20231116205304599\",{\"1\":{\"87\":1}}],[\"20231112151429444\",{\"1\":{\"73\":1}}],[\"20231111211324041\",{\"1\":{\"65\":1}}],[\"20231105235229201\",{\"1\":{\"49\":1}}],[\"20231102102926580\",{\"1\":{\"44\":1}}],[\"2015+\",{\"1\":{\"81\":1}}],[\"20+\",{\"1\":{\"25\":1}}],[\"2\",{\"1\":{\"9\":1,\"10\":1,\"26\":1,\"32\":1,\"96\":1,\"99\":1,\"108\":1,\"160\":2,\"167\":1,\"168\":1,\"189\":1,\"193\":1,\"203\":1,\"208\":1,\"210\":2,\"213\":5}}],[\"404\",{\"1\":{\"103\":8}}],[\"4\",{\"1\":{\"9\":3,\"26\":1,\"71\":1,\"99\":1,\"107\":1,\"160\":2,\"208\":1,\"210\":1,\"213\":1}}],[\"42\",{\"1\":{\"9\":3,\"13\":2}}],[\"39\",{\"1\":{\"210\":1}}],[\"3时\",{\"1\":{\"126\":1,\"143\":1}}],[\"3版本开始\",{\"1\":{\"91\":1}}],[\"38\",{\"1\":{\"90\":2}}],[\"32个十六进制\",{\"1\":{\"68\":1}}],[\"30\",{\"1\":{\"213\":1}}],[\"30px\",{\"1\":{\"173\":2,\"174\":1}}],[\"304\",{\"1\":{\"37\":1,\"38\":1}}],[\"3000服务器上\",{\"1\":{\"102\":2}}],[\"3000但是本地启动服务器的域名是\",{\"1\":{\"102\":1}}],[\"3000\",{\"1\":{\"37\":2,\"102\":2,\"103\":1}}],[\"3\",{\"1\":{\"9\":1,\"10\":1,\"32\":2,\"35\":1,\"90\":1,\"91\":1,\"99\":1,\"108\":1,\"130\":2,\"147\":2,\"160\":2,\"167\":2,\"208\":2,\"210\":2,\"213\":1}}],[\"1<\",{\"1\":{\"232\":2}}],[\"16px\",{\"1\":{\"210\":1}}],[\"1px\",{\"1\":{\"210\":2}}],[\"128\",{\"1\":{\"210\":1}}],[\"12\",{\"1\":{\"25\":1}}],[\"18+\",{\"1\":{\"25\":1}}],[\"18\",{\"1\":{\"10\":1,\"14\":2,\"129\":1,\"146\":1,\"176\":2,\"179\":1,\"187\":1,\"188\":1,\"207\":2}}],[\"1\",{\"1\":{\"9\":2,\"96\":1,\"99\":1,\"100\":2,\"121\":1,\"138\":1,\"160\":2,\"167\":1,\"168\":1,\"176\":2,\"187\":1,\"188\":1,\"200\":1,\"203\":1,\"204\":1,\"208\":3,\"210\":8,\"213\":2,\"219\":1}}],[\"10335230\",{\"1\":{\"168\":1}}],[\"1024\",{\"1\":{\"64\":1,\"65\":1,\"72\":1}}],[\"100\",{\"1\":{\"9\":3,\"64\":1,\"65\":1,\"72\":1,\"121\":1,\"138\":1,\"160\":1,\"162\":1,\"178\":1,\"217\":1,\"232\":2}}],[\"10\",{\"1\":{\"2\":1,\"9\":2,\"126\":1,\"143\":1,\"160\":1,\"187\":1,\"210\":1,\"213\":1}}],[\"篮球\",{\"1\":{\"8\":2,\"12\":2,\"13\":1,\"14\":1,\"213\":1}}],[\"跳过不需要编译的节点\",{\"1\":{\"165\":1}}],[\"跳过本地版本检测\",{\"1\":{\"107\":1}}],[\"跳转到\",{\"1\":{\"103\":1}}],[\"跳\",{\"1\":{\"8\":2}}],[\"唱\",{\"1\":{\"8\":1}}],[\"物理\",{\"1\":{\"7\":3}}],[\"数组更新检测\",{\"0\":{\"189\":1}}],[\"数组元素项item是在前面的\",{\"1\":{\"187\":1}}],[\"数组通常是来自data或者prop\",{\"1\":{\"187\":1}}],[\"数组\",{\"1\":{\"187\":2}}],[\"数组语法\",{\"0\":{\"171\":1,\"174\":1},\"1\":{\"169\":1,\"171\":2,\"172\":1}}],[\"数组中的字符串就是attribute的名称\",{\"1\":{\"118\":1,\"135\":1}}],[\"数组中存放的是一个个的rule\",{\"1\":{\"55\":1}}],[\"数组来定义重写规则\",{\"1\":{\"103\":1}}],[\"数学\",{\"1\":{\"7\":3}}],[\"数据进行某种转化后显示\",{\"1\":{\"198\":1}}],[\"数据2的地址和数据3的地址\",{\"1\":{\"1\":1}}],[\"数据类型\",{\"0\":{\"1\":1}}],[\"的项目\",{\"1\":{\"236\":1}}],[\"的单文件组件\",{\"1\":{\"236\":1}}],[\"的innerhtml\",{\"1\":{\"232\":1}}],[\"的过程\",{\"1\":{\"230\":1}}],[\"的时候\",{\"1\":{\"225\":2,\"226\":1}}],[\"的api\",{\"0\":{\"209\":1}}],[\"的attribute\",{\"0\":{\"122\":1,\"139\":1}}],[\"的答案是哈哈哈哈哈`\",{\"1\":{\"206\":2}}],[\"的改变\",{\"1\":{\"203\":1}}],[\"的options\",{\"0\":{\"196\":1}}],[\"的列表\",{\"1\":{\"193\":1}}],[\"的案例\",{\"0\":{\"193\":1}}],[\"的样子\",{\"1\":{\"191\":1}}],[\"的修饰符\",{\"0\":{\"180\":1}}],[\"的格式来定义\",{\"1\":{\"175\":1}}],[\"的情况\",{\"1\":{\"166\":1}}],[\"的文本插值\",{\"1\":{\"160\":1}}],[\"的文件\",{\"1\":{\"90\":1}}],[\"的开发模式\",{\"1\":{\"159\":1}}],[\"的开发服务器将所有代码视为原生\",{\"1\":{\"37\":1}}],[\"的single\",{\"1\":{\"155\":1}}],[\"的大小\",{\"1\":{\"154\":1}}],[\"的大小写命名\",{\"1\":{\"121\":1,\"138\":1}}],[\"的缩写语法\",{\"1\":{\"154\":1}}],[\"的第一个参数是组件的名称\",{\"1\":{\"153\":1}}],[\"的标签解析为使用\",{\"1\":{\"151\":1}}],[\"的标签名在\",{\"1\":{\"151\":1}}],[\"的标准化规范\",{\"1\":{\"90\":1}}],[\"的flutter\",{\"1\":{\"149\":1}}],[\"的管理和维护就变得非常容易了\",{\"1\":{\"149\":1}}],[\"的事件\",{\"1\":{\"130\":1,\"147\":1}}],[\"的函数来创建事件总线实例\",{\"1\":{\"130\":1,\"147\":1}}],[\"的动态组件是指可以根据不同的数据渲染不同的组件的功能\",{\"1\":{\"127\":1,\"144\":1}}],[\"的定义\",{\"0\":{\"118\":1,\"135\":1}}],[\"的压缩\",{\"1\":{\"111\":1}}],[\"的命令\",{\"1\":{\"109\":1}}],[\"的构建模式\",{\"1\":{\"105\":1}}],[\"的资源文件所处的目录\",{\"1\":{\"104\":1}}],[\"的页面\",{\"1\":{\"103\":1}}],[\"的区别\",{\"1\":{\"100\":1}}],[\"的原理是通过在应用程序运行时\",{\"1\":{\"98\":1}}],[\"的功能\",{\"1\":{\"94\":1}}],[\"的各种选项\",{\"1\":{\"92\":1}}],[\"的各种可能性\",{\"1\":{\"18\":1}}],[\"的一个方法\",{\"1\":{\"153\":1}}],[\"的一个配置项\",{\"1\":{\"103\":1}}],[\"的一部分\",{\"1\":{\"90\":1}}],[\"的一般步骤如下\",{\"1\":{\"88\":1}}],[\"的内置\",{\"1\":{\"90\":1}}],[\"的基本用法示例\",{\"1\":{\"90\":1}}],[\"的默认模块系统\",{\"1\":{\"90\":1}}],[\"的版本\",{\"1\":{\"90\":1}}],[\"的呢\",{\"1\":{\"86\":1}}],[\"的类型注解转换为普通的\",{\"1\":{\"84\":1}}],[\"的类型注解和其他特定语法转换为普通的\",{\"1\":{\"84\":1}}],[\"的预设\",{\"1\":{\"84\":1}}],[\"的示例\",{\"1\":{\"81\":1}}],[\"的插件是用于转换\",{\"1\":{\"83\":1}}],[\"的插件\",{\"1\":{\"78\":1}}],[\"的前面\",{\"1\":{\"56\":1}}],[\"的简写\",{\"1\":{\"55\":1,\"170\":1}}],[\"的使用\",{\"0\":{\"55\":1}}],[\"的\",{\"0\":{\"97\":1},\"1\":{\"43\":1,\"90\":1,\"102\":1,\"103\":1,\"127\":1,\"129\":2,\"144\":1,\"146\":2,\"163\":1,\"193\":1,\"198\":1,\"204\":1}}],[\"的重新加载\",{\"1\":{\"41\":1}}],[\"的相关代码已经被插入\",{\"1\":{\"41\":1}}],[\"的热加载原理\",{\"1\":{\"41\":1}}],[\"的模块\",{\"1\":{\"37\":1,\"104\":1}}],[\"的对应请求\",{\"1\":{\"37\":1}}],[\"的写法\",{\"1\":{\"37\":1}}],[\"的请求路径满足\",{\"1\":{\"37\":1}}],[\"的代码转换为旧\",{\"1\":{\"83\":1}}],[\"的代码\",{\"1\":{\"37\":1,\"41\":1}}],[\"的配置文件即可\",{\"1\":{\"28\":1}}],[\"的安装与使用\",{\"0\":{\"24\":1}}],[\"的位置扩展\",{\"1\":{\"7\":1}}],[\"的浅拷贝与深拷贝\",{\"0\":{\"0\":1}}],[\"展开语法\",{\"0\":{\"7\":1},\"1\":{\"7\":1}}],[\"last\",{\"1\":{\"220\":2}}],[\"lastname\",{\"1\":{\"199\":1,\"200\":1,\"201\":2,\"202\":2,\"203\":3,\"204\":4,\"220\":4}}],[\"lazy=\",{\"1\":{\"216\":1}}],[\"lazy\",{\"0\":{\"216\":1},\"1\":{\"216\":1}}],[\"label>\",{\"1\":{\"213\":7}}],[\"landing\",{\"1\":{\"103\":1}}],[\"lang=\",{\"1\":{\"76\":1,\"210\":1}}],[\"latest\",{\"1\":{\"26\":1,\"107\":1}}],[\"li\",{\"1\":{\"193\":2}}],[\"li>\",{\"1\":{\"114\":5,\"115\":5,\"131\":5,\"132\":5,\"187\":3,\"188\":3,\"189\":1,\"193\":1}}],[\"lib\",{\"1\":{\"111\":1}}],[\"lint\",{\"1\":{\"108\":3,\"109\":2}}],[\"linter\",{\"1\":{\"108\":2}}],[\"link\",{\"1\":{\"91\":1,\"167\":1,\"168\":2}}],[\"live\",{\"1\":{\"94\":1}}],[\"limit\",{\"1\":{\"65\":1}}],[\"list>\",{\"1\":{\"115\":1,\"132\":1}}],[\"list><\",{\"1\":{\"115\":1,\"132\":1}}],[\"listeners\",{\"1\":{\"130\":6,\"147\":6}}],[\"listen\",{\"1\":{\"41\":1}}],[\"lisi\",{\"1\":{\"12\":2,\"13\":1,\"14\":1}}],[\"literals\",{\"1\":{\"91\":1}}],[\"lit\",{\"1\":{\"26\":1}}],[\"lightning\",{\"1\":{\"19\":1}}],[\"long\",{\"1\":{\"129\":1,\"146\":1}}],[\"lock文件中\",{\"1\":{\"109\":1}}],[\"lock\",{\"1\":{\"109\":1}}],[\"location\",{\"1\":{\"41\":3}}],[\"localhost指的是本地计算机或设备自身\",{\"1\":{\"100\":1}}],[\"localhost是一个主机名\",{\"1\":{\"100\":1}}],[\"localhost\",{\"1\":{\"37\":2,\"99\":1,\"100\":2,\"102\":6,\"103\":1,\"105\":1}}],[\"loopback\",{\"1\":{\"100\":1}}],[\"loading\",{\"1\":{\"62\":1}}],[\"loader对其进行编译和处理\",{\"1\":{\"235\":1}}],[\"loader可以将指定的javascript文件传递给babel进行转换\",{\"1\":{\"88\":1}}],[\"loader可以将不同类型的文件\",{\"1\":{\"54\":1}}],[\"loader是一个用于在webpack构建过程中将javascript代码转换的加载器\",{\"1\":{\"88\":1}}],[\"loader是用于特定的模块类型进行转换\",{\"1\":{\"73\":1}}],[\"loader是用于对不同类型的文件进行转换和处理的模块\",{\"1\":{\"54\":1}}],[\"loader中和\",{\"1\":{\"68\":1}}],[\"loader有一个options属性limit\",{\"1\":{\"66\":1}}],[\"loader会将所有的图片文件转成base64编码\",{\"1\":{\"65\":1}}],[\"loader和file\",{\"1\":{\"65\":1}}],[\"loader时\",{\"1\":{\"63\":1}}],[\"loader处理\",{\"0\":{\"58\":1}}],[\"loader写到\",{\"1\":{\"56\":1}}],[\"loader只是负责将\",{\"1\":{\"56\":1}}],[\"loader来处理的\",{\"1\":{\"62\":1}}],[\"loader来加载css文件了\",{\"1\":{\"56\":1}}],[\"loader来转换es6+代码\",{\"1\":{\"53\":1}}],[\"loader属性\",{\"1\":{\"55\":2}}],[\"loader的limit\",{\"0\":{\"66\":1}}],[\"loader的工作方式是相似的\",{\"1\":{\"65\":1}}],[\"loader的作用就是帮助我们处理import\",{\"1\":{\"64\":1}}],[\"loader的安装\",{\"1\":{\"55\":1}}],[\"loader的配置是通过webpack的配置文件\",{\"1\":{\"54\":1}}],[\"loader的使用\",{\"0\":{\"54\":1}}],[\"loader通常以链式调用的方式使用\",{\"1\":{\"54\":1}}],[\"loaders\",{\"1\":{\"54\":1,\"68\":1}}],[\"loader\",{\"0\":{\"55\":1,\"56\":1,\"59\":1,\"62\":1,\"64\":1,\"65\":1,\"88\":1},\"1\":{\"23\":1,\"53\":2,\"54\":1,\"55\":12,\"56\":8,\"58\":5,\"59\":1,\"62\":4,\"64\":3,\"65\":5,\"67\":2,\"68\":1,\"71\":8,\"88\":7,\"89\":2,\"90\":4,\"97\":3}}],[\"loader进行资源转换\",{\"1\":{\"20\":1}}],[\"loadsh\",{\"1\":{\"16\":1}}],[\"lodash\",{\"1\":{\"16\":2,\"37\":2}}],[\"logo\",{\"1\":{\"35\":2}}],[\"log\",{\"1\":{\"6\":2,\"7\":2,\"8\":2,\"9\":2,\"10\":2,\"12\":2,\"13\":2,\"14\":2,\"16\":2,\"41\":5,\"81\":2,\"96\":1,\"125\":1,\"126\":1,\"129\":1,\"142\":1,\"143\":1,\"146\":1,\"153\":1,\"155\":1,\"178\":2,\"179\":2,\"180\":3,\"203\":4,\"204\":1,\"206\":2,\"207\":2,\"208\":7,\"209\":1,\"217\":1,\"219\":1,\"234\":1}}],[\"learn\",{\"0\":{\"241\":1}}],[\"left\",{\"1\":{\"177\":1,\"180\":1,\"210\":1}}],[\"length\",{\"1\":{\"120\":1,\"129\":2,\"137\":1,\"146\":2,\"189\":1,\"210\":1}}],[\"lexing\",{\"1\":{\"87\":1}}],[\"lexer\",{\"1\":{\"37\":2}}],[\"less$\",{\"1\":{\"58\":1}}],[\"lessc\",{\"1\":{\"57\":1}}],[\"less工具处理\",{\"0\":{\"57\":1}}],[\"less等方式来编写\",{\"1\":{\"43\":1}}],[\"less\",{\"0\":{\"58\":1},\"1\":{\"28\":1,\"43\":1,\"45\":1,\"57\":3,\"58\":2,\"108\":1,\"155\":1}}],[\"lessons\",{\"1\":{\"7\":4}}],[\"letters\",{\"1\":{\"193\":3}}],[\"let\",{\"1\":{\"2\":1,\"6\":2,\"7\":2,\"8\":2,\"9\":2,\"10\":2,\"12\":2,\"13\":1,\"83\":1,\"210\":2,\"219\":1}}],[\"0可以使其在局域网或公共网络上可访问\",{\"1\":{\"100\":1}}],[\"0表示任意主机或所有主机\",{\"1\":{\"100\":1}}],[\"0时\",{\"1\":{\"100\":1}}],[\"0是一个特殊的ip地址\",{\"1\":{\"100\":1}}],[\"0\",{\"1\":{\"6\":1,\"7\":1,\"8\":1,\"9\":2,\"12\":1,\"13\":1,\"14\":1,\"26\":1,\"35\":1,\"76\":1,\"81\":1,\"91\":2,\"99\":4,\"100\":23,\"105\":4,\"110\":4,\"120\":1,\"137\":1,\"193\":1,\"204\":1,\"210\":9,\"219\":1,\"234\":1}}],[\"right\",{\"1\":{\"177\":1,\"180\":1}}],[\"rich\",{\"1\":{\"19\":1}}],[\"r\",{\"1\":{\"107\":1}}],[\"rc\",{\"1\":{\"91\":1,\"107\":1}}],[\"radio\",{\"1\":{\"213\":3}}],[\"range\",{\"1\":{\"129\":1,\"146\":1}}],[\"raw\",{\"1\":{\"71\":1}}],[\"rap\",{\"1\":{\"6\":3,\"8\":2}}],[\"rule是一个对象\",{\"1\":{\"55\":1}}],[\"rule\",{\"1\":{\"55\":2}}],[\"rules\",{\"1\":{\"55\":1,\"88\":1}}],[\"rules属性对应的值是一个数组\",{\"1\":{\"55\":1}}],[\"rules的配置如下\",{\"1\":{\"55\":1}}],[\"rules中允许我们配置多个loader\",{\"1\":{\"55\":1}}],[\"rules字段来完成\",{\"1\":{\"54\":1}}],[\"running\",{\"1\":{\"91\":1}}],[\"runtime机制\",{\"1\":{\"98\":1}}],[\"runtime\",{\"1\":{\"41\":2,\"83\":1,\"90\":7,\"98\":1}}],[\"run\",{\"1\":{\"26\":1,\"49\":1,\"51\":1,\"52\":1,\"92\":1,\"93\":1,\"94\":2,\"109\":1}}],[\"rows=\",{\"1\":{\"213\":1}}],[\"router是vue\",{\"1\":{\"108\":1}}],[\"router\",{\"1\":{\"108\":1}}],[\"roplace\",{\"1\":{\"91\":1}}],[\"root\",{\"1\":{\"37\":2}}],[\"rollup有对应插件\",{\"1\":{\"37\":1}}],[\"rollup等\",{\"1\":{\"20\":1}}],[\"rollup\",{\"1\":{\"18\":1,\"20\":1,\"37\":1,\"90\":1,\"155\":1}}],[\"removebook\",{\"1\":{\"210\":2}}],[\"reversemessage\",{\"1\":{\"202\":2}}],[\"reverse\",{\"1\":{\"160\":2,\"189\":1,\"200\":1,\"201\":1,\"202\":1}}],[\"registration\",{\"1\":{\"152\":2}}],[\"registry\",{\"1\":{\"107\":2}}],[\"ref对象\",{\"1\":{\"129\":1,\"146\":1}}],[\"referenced\",{\"1\":{\"41\":1}}],[\"repository\",{\"1\":{\"224\":1}}],[\"repository仓库\",{\"1\":{\"224\":1}}],[\"repo\",{\"1\":{\"224\":1}}],[\"report\",{\"1\":{\"111\":6}}],[\"replacement\",{\"1\":{\"92\":1,\"95\":1,\"98\":1,\"110\":1}}],[\"replace\",{\"1\":{\"37\":1}}],[\"rewrites\",{\"1\":{\"103\":3}}],[\"rewritehtml\",{\"1\":{\"41\":1}}],[\"result\",{\"1\":{\"202\":2,\"203\":4}}],[\"res\",{\"1\":{\"102\":1}}],[\"resource\",{\"1\":{\"55\":1,\"67\":1,\"71\":1}}],[\"resolving\",{\"1\":{\"37\":1}}],[\"resolve可以帮助webpack从每个\",{\"1\":{\"104\":1}}],[\"resolve模块解析\",{\"0\":{\"104\":1}}],[\"resolvenodemodulefile\",{\"1\":{\"37\":1}}],[\"resolver\",{\"1\":{\"37\":1}}],[\"resolve\",{\"1\":{\"30\":1,\"51\":1,\"104\":7,\"105\":1}}],[\"req\",{\"1\":{\"102\":2}}],[\"requesttofile\",{\"1\":{\"37\":1}}],[\"requests\",{\"1\":{\"37\":1}}],[\"required\",{\"1\":{\"120\":1,\"121\":1,\"137\":1,\"138\":1}}],[\"required为true\",{\"1\":{\"120\":1,\"137\":1}}],[\"requires\",{\"1\":{\"90\":1}}],[\"require\",{\"1\":{\"28\":1,\"32\":1,\"35\":1,\"51\":1,\"62\":2,\"64\":1,\"74\":1,\"76\":1,\"77\":1,\"78\":1,\"90\":7,\"104\":3,\"105\":3}}],[\"recommended\",{\"1\":{\"91\":1}}],[\"red\",{\"1\":{\"90\":1,\"122\":1,\"139\":1,\"163\":1,\"170\":1,\"173\":3,\"174\":1}}],[\"re\",{\"1\":{\"76\":1}}],[\"rel=\",{\"1\":{\"76\":1,\"210\":1}}],[\"reloading\",{\"1\":{\"94\":1,\"95\":1}}],[\"reloaded\",{\"1\":{\"41\":1}}],[\"reload\",{\"1\":{\"41\":7}}],[\"render函数的方式\",{\"1\":{\"235\":1}}],[\"render\",{\"1\":{\"41\":1,\"235\":1}}],[\"render等\",{\"1\":{\"41\":1}}],[\"rerender\",{\"1\":{\"41\":3}}],[\"readme\",{\"1\":{\"109\":1}}],[\"readbody\",{\"1\":{\"38\":1}}],[\"read\",{\"1\":{\"37\":1}}],[\"reactivity\",{\"1\":{\"198\":1}}],[\"react使用的jsx\",{\"1\":{\"159\":1}}],[\"react的开发模式\",{\"1\":{\"159\":1}}],[\"react脚手架中常见的设置方式\",{\"1\":{\"70\":1}}],[\"react项目\",{\"1\":{\"26\":1}}],[\"react\",{\"1\":{\"26\":1,\"43\":2,\"83\":1,\"84\":2,\"86\":1,\"88\":1,\"97\":3,\"149\":1,\"159\":1}}],[\"return\",{\"1\":{\"6\":2,\"12\":1,\"13\":1,\"26\":2,\"37\":3,\"38\":3,\"41\":2,\"90\":2,\"102\":1,\"105\":1,\"120\":2,\"121\":4,\"126\":2,\"127\":1,\"129\":3,\"130\":1,\"137\":2,\"138\":4,\"143\":2,\"144\":1,\"146\":3,\"147\":1,\"153\":1,\"155\":1,\"159\":1,\"160\":3,\"162\":1,\"163\":1,\"168\":1,\"170\":2,\"171\":1,\"173\":2,\"174\":1,\"175\":1,\"176\":1,\"178\":1,\"179\":1,\"180\":1,\"182\":1,\"183\":1,\"187\":1,\"188\":1,\"189\":1,\"193\":1,\"201\":4,\"202\":4,\"203\":6,\"204\":3,\"206\":1,\"207\":1,\"208\":1,\"210\":5,\"213\":1,\"232\":2,\"235\":1}}],[\"h1\",{\"1\":{\"235\":1}}],[\"h1>\",{\"1\":{\"235\":2}}],[\"h函数可以直接返回一个虚拟节点\",{\"1\":{\"235\":1}}],[\"hym0jgbi25grng\",{\"1\":{\"234\":1}}],[\"h\",{\"1\":{\"107\":1,\"235\":4}}],[\"history\",{\"1\":{\"103\":2}}],[\"historyapifallback\",{\"0\":{\"103\":1},\"1\":{\"103\":7}}],[\"how\",{\"1\":{\"230\":2}}],[\"hooks函数增加代码的复用性\",{\"1\":{\"226\":1}}],[\"home\",{\"1\":{\"103\":1,\"127\":5,\"144\":5}}],[\"host设置主机地址\",{\"1\":{\"100\":1}}],[\"host\",{\"0\":{\"100\":1},\"1\":{\"99\":2,\"105\":1,\"110\":2}}],[\"hotonly\",{\"0\":{\"100\":1}}],[\"hot\",{\"1\":{\"92\":1,\"96\":5,\"97\":1,\"98\":2,\"99\":2,\"105\":1,\"110\":1}}],[\"hobbies\",{\"1\":{\"8\":3,\"213\":5}}],[\"hobby\",{\"1\":{\"6\":4,\"12\":4,\"13\":2,\"14\":2}}],[\"h2\",{\"1\":{\"90\":1}}],[\"h2>\",{\"1\":{\"90\":3,\"114\":5,\"115\":5,\"121\":1,\"123\":1,\"131\":5,\"132\":5,\"138\":1,\"140\":1,\"152\":2,\"153\":2,\"155\":1,\"160\":7,\"162\":6,\"164\":2,\"165\":1,\"182\":3,\"183\":6,\"184\":1,\"185\":2,\"187\":3,\"189\":1,\"200\":3,\"201\":3,\"202\":3,\"203\":20,\"204\":1,\"207\":1,\"210\":2,\"213\":5,\"232\":4}}],[\"height\",{\"1\":{\"176\":1,\"187\":1,\"188\":1}}],[\"height=\",{\"1\":{\"176\":1}}],[\"header\",{\"1\":{\"115\":1,\"132\":1}}],[\"head>\",{\"1\":{\"76\":1,\"210\":1}}],[\"help\",{\"1\":{\"107\":1}}],[\"helloworld\",{\"1\":{\"35\":5,\"90\":3}}],[\"hello\",{\"1\":{\"35\":1,\"81\":1,\"90\":3,\"108\":1,\"119\":2,\"120\":3,\"121\":3,\"125\":1,\"129\":1,\"130\":3,\"136\":2,\"137\":3,\"138\":3,\"142\":1,\"146\":1,\"147\":3,\"160\":1,\"171\":1,\"173\":1,\"174\":1,\"178\":1,\"179\":1,\"180\":1,\"201\":1,\"202\":1,\"206\":1,\"213\":1,\"232\":2}}],[\"href=\",{\"1\":{\"76\":1,\"167\":1,\"168\":1,\"175\":1,\"210\":1}}],[\"href\",{\"1\":{\"41\":2,\"175\":1}}],[\"hack\",{\"1\":{\"225\":1}}],[\"hash\",{\"1\":{\"64\":1,\"65\":1,\"67\":2,\"68\":3,\"72\":1}}],[\"hasownproperty\",{\"1\":{\"6\":1,\"12\":1}}],[\"handle3\",{\"1\":{\"208\":2}}],[\"handle2\",{\"1\":{\"208\":2}}],[\"handle1\",{\"1\":{\"208\":2}}],[\"handler\",{\"1\":{\"207\":1,\"208\":3}}],[\"handledatafromchild\",{\"1\":{\"125\":2,\"142\":2}}],[\"handlemessage\",{\"1\":{\"41\":3}}],[\"handle\",{\"1\":{\"38\":1,\"208\":1}}],[\"http\",{\"1\":{\"76\":1,\"91\":1,\"99\":1,\"102\":4,\"103\":1,\"105\":1,\"210\":1}}],[\"https\",{\"1\":{\"17\":1,\"44\":1,\"54\":1,\"68\":1,\"77\":1,\"81\":1,\"86\":1,\"91\":2,\"102\":3,\"103\":1,\"104\":1,\"106\":1,\"110\":2,\"130\":1,\"147\":1,\"152\":1,\"158\":1,\"168\":2,\"177\":1,\"190\":1,\"198\":1,\"208\":1,\"209\":1,\"213\":1,\"228\":1,\"234\":1,\"236\":1}}],[\"html=\",{\"1\":{\"163\":1}}],[\"html5\",{\"1\":{\"103\":2}}],[\"html代码\",{\"1\":{\"92\":1}}],[\"html的生成\",{\"1\":{\"78\":1}}],[\"html>\",{\"1\":{\"76\":2,\"210\":2}}],[\"html模块\",{\"1\":{\"76\":1}}],[\"html进行打包处理\",{\"1\":{\"75\":1}}],[\"html文件的\",{\"1\":{\"75\":1}}],[\"htmlwebpackplugin\",{\"0\":{\"75\":1},\"1\":{\"75\":1,\"76\":6}}],[\"html资源的处理\",{\"1\":{\"45\":1}}],[\"html\",{\"0\":{\"163\":1},\"1\":{\"37\":1,\"41\":8,\"75\":2,\"76\":3,\"77\":1,\"78\":2,\"103\":10,\"109\":1,\"111\":3,\"130\":1,\"147\":1,\"152\":1,\"163\":2,\"190\":1,\"198\":1,\"208\":1,\"209\":1,\"213\":2,\"236\":2}}],[\"html预处理\",{\"1\":{\"23\":1}}],[\"hmr利用了webpack的构建能力和热更新运行时\",{\"1\":{\"98\":1}}],[\"hmr的原理可以分为以下几个步骤\",{\"1\":{\"98\":1}}],[\"hmr的原理\",{\"0\":{\"98\":1}}],[\"hmr的全称是hot\",{\"1\":{\"95\":1}}],[\"hmr通过如下几种方式\",{\"1\":{\"95\":1}}],[\"hmrpayload\",{\"1\":{\"41\":2}}],[\"hmr等\",{\"1\":{\"23\":1}}],[\"hmr时只需让浏览器重新请求该模块\",{\"1\":{\"22\":1}}],[\"hmr时需要把改动模块及相关依赖全部编译\",{\"1\":{\"22\":1}}],[\"hmr慢的问题呢\",{\"1\":{\"22\":1}}],[\"hmr\",{\"0\":{\"95\":1,\"96\":1,\"97\":1},\"1\":{\"18\":1,\"19\":1,\"41\":2,\"97\":1,\"98\":4,\"236\":1}}],[\"hdx\",{\"1\":{\"7\":2}}],[\"hd1\",{\"1\":{\"7\":4}}],[\"c和f因为key不一致\",{\"1\":{\"194\":1}}],[\"c和d来说它们事实上并不需要有任何的改动\",{\"1\":{\"194\":1}}],[\"c\",{\"1\":{\"193\":2,\"208\":4}}],[\"csm\",{\"1\":{\"91\":1}}],[\"csspropertyvalue\",{\"1\":{\"173\":1}}],[\"csspropertyname\",{\"1\":{\"173\":1}}],[\"cssnano\",{\"1\":{\"63\":1}}],[\"css样式的重置\",{\"1\":{\"59\":1}}],[\"css文件中\",{\"1\":{\"155\":1}}],[\"css文件进行解析\",{\"1\":{\"56\":1}}],[\"css文件模块的加载\",{\"1\":{\"45\":1}}],[\"css$\",{\"1\":{\"55\":1}}],[\"css的处理\",{\"1\":{\"45\":1}}],[\"css\",{\"0\":{\"28\":1,\"55\":1},\"1\":{\"29\":1,\"37\":1,\"39\":2,\"43\":1,\"53\":3,\"54\":1,\"55\":7,\"56\":2,\"57\":2,\"58\":1,\"60\":1,\"61\":3,\"63\":6,\"98\":1,\"103\":1,\"108\":1,\"111\":1,\"166\":1,\"172\":2,\"210\":2,\"236\":2}}],[\"css预处理器\",{\"1\":{\"108\":1}}],[\"css预处理\",{\"1\":{\"23\":1}}],[\"css+js+icon+front\",{\"1\":{\"20\":1}}],[\"cjs\",{\"1\":{\"89\":2,\"90\":1}}],[\"currenttab\",{\"1\":{\"127\":4,\"144\":4}}],[\"currently\",{\"1\":{\"41\":1}}],[\"customdata\",{\"1\":{\"41\":1}}],[\"customupdatemap\",{\"1\":{\"41\":1}}],[\"custom\",{\"1\":{\"41\":1,\"97\":1}}],[\"customize\",{\"1\":{\"26\":1}}],[\"cba=\",{\"1\":{\"175\":1}}],[\"cba\",{\"1\":{\"129\":1,\"146\":1,\"170\":3,\"171\":2,\"175\":1}}],[\"cb\",{\"1\":{\"41\":2}}],[\"cbs\",{\"1\":{\"41\":3}}],[\"childcomponent\",{\"1\":{\"119\":4,\"120\":4,\"121\":4,\"125\":3,\"129\":3,\"136\":4,\"137\":4,\"138\":4,\"142\":3,\"146\":3}}],[\"child\",{\"1\":{\"119\":1,\"120\":3,\"121\":1,\"125\":1,\"129\":1,\"136\":1,\"137\":3,\"138\":1,\"142\":1,\"146\":1}}],[\"chrome等值\",{\"1\":{\"101\":1}}],[\"chunk\",{\"1\":{\"98\":1,\"111\":2}}],[\"checkbox\",{\"1\":{\"213\":5}}],[\"check\",{\"1\":{\"41\":1}}],[\"charat\",{\"1\":{\"219\":1}}],[\"charset=\",{\"1\":{\"76\":1,\"210\":1}}],[\"chars\",{\"1\":{\"37\":1}}],[\"change\",{\"1\":{\"216\":2}}],[\"changed\",{\"1\":{\"208\":3}}],[\"changeinfonbaname\",{\"1\":{\"207\":2}}],[\"changeinfoname\",{\"1\":{\"207\":2}}],[\"changeinfo\",{\"1\":{\"207\":2}}],[\"changefullname\",{\"1\":{\"204\":2}}],[\"changefirstname\",{\"1\":{\"203\":2}}],[\"changeorigin\",{\"1\":{\"99\":1,\"102\":3,\"103\":1,\"105\":1}}],[\"changesrcpath\",{\"1\":{\"41\":2}}],[\"capitalize=\",{\"1\":{\"219\":2}}],[\"capitalize\",{\"1\":{\"219\":4}}],[\"capture\",{\"1\":{\"177\":2,\"180\":2}}],[\"camel\",{\"1\":{\"167\":1}}],[\"camelcase\",{\"1\":{\"121\":2,\"138\":2,\"172\":1}}],[\"callback\",{\"1\":{\"96\":1,\"130\":4,\"147\":4}}],[\"case\",{\"1\":{\"41\":7,\"121\":2,\"138\":2,\"151\":4,\"172\":2}}],[\"catch\",{\"1\":{\"41\":1}}],[\"cat\",{\"1\":{\"10\":1}}],[\"cloak>\",{\"1\":{\"166\":1}}],[\"cloak\",{\"0\":{\"166\":1},\"1\":{\"166\":3}}],[\"clone\",{\"1\":{\"16\":2}}],[\"clonedeep\",{\"1\":{\"15\":1,\"16\":2}}],[\"class><\",{\"1\":{\"175\":1}}],[\"classobj\",{\"1\":{\"170\":5}}],[\"classname\",{\"1\":{\"170\":2}}],[\"class也是动态的\",{\"1\":{\"169\":1}}],[\"class和style就是非prop的attribute\",{\"1\":{\"122\":1,\"139\":1}}],[\"class\",{\"0\":{\"169\":1},\"1\":{\"122\":1,\"124\":1,\"139\":1,\"141\":1,\"167\":1,\"170\":3,\"171\":2,\"175\":1}}],[\"class=\",{\"1\":{\"122\":1,\"124\":1,\"127\":3,\"139\":1,\"141\":1,\"144\":3,\"170\":9,\"171\":4,\"178\":3,\"188\":1,\"210\":1}}],[\"classes\",{\"1\":{\"83\":1}}],[\"clean\",{\"1\":{\"74\":2,\"111\":1}}],[\"cleanwebpackplugin\",{\"0\":{\"74\":1},\"1\":{\"74\":2}}],[\"cli创建项目\",{\"1\":{\"227\":1}}],[\"click调用时\",{\"1\":{\"179\":1}}],[\"click\",{\"1\":{\"159\":1,\"178\":2,\"180\":3,\"232\":1}}],[\"click=\",{\"1\":{\"125\":1,\"127\":1,\"130\":2,\"142\":1,\"144\":1,\"147\":2,\"155\":1,\"160\":1,\"162\":3,\"170\":1,\"178\":3,\"179\":2,\"180\":2,\"183\":1,\"189\":1,\"193\":1,\"203\":1,\"204\":1,\"206\":1,\"207\":3,\"210\":3,\"232\":4}}],[\"cli来创建项目\",{\"1\":{\"156\":1}}],[\"cli已经内置了webpack相关的配置\",{\"1\":{\"106\":1}}],[\"cli方式\",{\"1\":{\"55\":1}}],[\"cli中代码执行时\",{\"1\":{\"47\":1}}],[\"cli的东西\",{\"1\":{\"47\":1}}],[\"cli的\",{\"1\":{\"47\":2}}],[\"cli都是基于webpack来帮助我们支持模块化\",{\"1\":{\"43\":1}}],[\"cli\",{\"0\":{\"107\":1,\"110\":1,\"111\":1,\"112\":1,\"240\":1},\"1\":{\"43\":2,\"47\":2,\"49\":1,\"60\":2,\"82\":2,\"94\":1,\"106\":7,\"107\":11,\"109\":9,\"110\":2,\"111\":2,\"112\":4}}],[\"client`\",{\"1\":{\"41\":1}}],[\"clientpublicpath\",{\"1\":{\"41\":2}}],[\"client\",{\"1\":{\"41\":2}}],[\"ctx\",{\"1\":{\"37\":6,\"38\":14}}],[\"cmd\",{\"1\":{\"35\":1,\"49\":1}}],[\"cmd规范常用在客户端\",{\"1\":{\"35\":1}}],[\"cols=\",{\"1\":{\"213\":1}}],[\"collapse\",{\"1\":{\"210\":2}}],[\"color\",{\"1\":{\"90\":1,\"122\":1,\"139\":1,\"163\":1,\"170\":1,\"173\":3,\"174\":1,\"210\":2}}],[\"count++\",{\"1\":{\"210\":1}}],[\"count\",{\"1\":{\"210\":8}}],[\"counter的值时\",{\"1\":{\"233\":1}}],[\"counter++\",{\"1\":{\"162\":1,\"178\":1,\"232\":2}}],[\"counter\",{\"1\":{\"160\":2,\"162\":5,\"178\":2,\"210\":2,\"232\":6,\"233\":3}}],[\"could\",{\"1\":{\"38\":1}}],[\"coder\",{\"1\":{\"203\":1,\"204\":1}}],[\"coderwhy\",{\"1\":{\"179\":1}}],[\"code\",{\"1\":{\"87\":1}}],[\"core\",{\"1\":{\"82\":2,\"88\":1,\"90\":2,\"91\":1,\"198\":1}}],[\"copy\",{\"1\":{\"78\":2,\"110\":1}}],[\"copywebpackplugin\",{\"0\":{\"78\":1},\"1\":{\"78\":3}}],[\"commitform\",{\"1\":{\"213\":1}}],[\"commit\",{\"1\":{\"108\":1}}],[\"comm\",{\"1\":{\"105\":1}}],[\"commonconfig\",{\"1\":{\"105\":2}}],[\"commonjs的模块化能力\",{\"1\":{\"155\":1}}],[\"commonjs等模块化语法在浏览器中是不被直接识别的\",{\"1\":{\"48\":1}}],[\"commonjs\",{\"1\":{\"35\":1,\"37\":2,\"44\":1,\"90\":1}}],[\"com\",{\"1\":{\"77\":1,\"86\":1,\"91\":1,\"102\":1,\"168\":2,\"228\":1,\"234\":1}}],[\"composition\",{\"1\":{\"226\":2}}],[\"componen\",{\"1\":{\"151\":1}}],[\"componentc\",{\"1\":{\"154\":1}}],[\"componentb\",{\"1\":{\"154\":2}}],[\"componenta\",{\"1\":{\"154\":7,\"155\":1,\"156\":1}}],[\"component><\",{\"1\":{\"129\":1,\"146\":1}}],[\"component>\",{\"1\":{\"119\":1,\"120\":1,\"121\":1,\"122\":1,\"125\":1,\"127\":1,\"129\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"142\":1,\"144\":1,\"146\":1,\"151\":1}}],[\"component\",{\"1\":{\"90\":1,\"119\":1,\"120\":1,\"121\":2,\"122\":1,\"125\":1,\"129\":1,\"130\":3,\"136\":1,\"137\":1,\"138\":2,\"139\":1,\"142\":1,\"146\":1,\"147\":3,\"151\":2,\"152\":1,\"153\":10,\"209\":1,\"236\":1}}],[\"components\",{\"0\":{\"243\":1},\"1\":{\"35\":3,\"90\":2,\"104\":2,\"111\":2,\"115\":2,\"119\":1,\"120\":1,\"121\":1,\"122\":1,\"125\":1,\"127\":1,\"129\":2,\"132\":2,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"142\":1,\"144\":1,\"146\":2,\"152\":1,\"154\":4,\"155\":1}}],[\"computed的fullname中的计算\",{\"1\":{\"203\":1}}],[\"computed\",{\"0\":{\"197\":1,\"202\":1},\"1\":{\"129\":2,\"146\":2,\"154\":1,\"170\":1,\"198\":1,\"199\":1,\"202\":1,\"203\":2,\"204\":1,\"205\":1,\"207\":1,\"210\":1,\"226\":1}}],[\"compression\",{\"1\":{\"101\":1}}],[\"compress是否为静态文件开启gzip\",{\"1\":{\"101\":1}}],[\"compress\",{\"0\":{\"101\":1},\"1\":{\"99\":2,\"101\":1,\"105\":1}}],[\"compilation\",{\"1\":{\"90\":1}}],[\"compiler\",{\"1\":{\"86\":1,\"87\":1,\"90\":3}}],[\"compatible\",{\"1\":{\"76\":1,\"210\":1}}],[\"controller的简称\",{\"1\":{\"231\":1}}],[\"contigure\",{\"1\":{\"91\":1}}],[\"continue\",{\"1\":{\"76\":1}}],[\"content\",{\"1\":{\"123\":1,\"140\":1}}],[\"contentbase\",{\"1\":{\"99\":1,\"105\":1}}],[\"content=\",{\"1\":{\"76\":2,\"210\":2}}],[\"contenthash\",{\"1\":{\"68\":1,\"105\":1}}],[\"contain\",{\"1\":{\"37\":1}}],[\"connected\",{\"1\":{\"41\":2}}],[\"connect\",{\"1\":{\"41\":1}}],[\"configuration\",{\"1\":{\"102\":1,\"103\":1,\"104\":1}}],[\"configurewebpack\",{\"1\":{\"112\":2}}],[\"configure\",{\"1\":{\"90\":1}}],[\"config\",{\"1\":{\"28\":2,\"29\":1,\"30\":1,\"32\":1,\"51\":1,\"52\":8,\"53\":1,\"54\":1,\"55\":1,\"62\":2,\"63\":1,\"84\":2,\"88\":1,\"89\":4,\"90\":1,\"93\":1,\"96\":1,\"99\":1,\"105\":8,\"108\":5,\"110\":2,\"112\":3,\"130\":3,\"147\":3}}],[\"concat\",{\"0\":{\"10\":1},\"1\":{\"10\":2,\"81\":1,\"189\":1}}],[\"console\",{\"1\":{\"6\":2,\"7\":2,\"8\":2,\"9\":2,\"10\":2,\"12\":2,\"13\":2,\"14\":2,\"16\":2,\"41\":5,\"81\":2,\"96\":1,\"125\":1,\"126\":1,\"129\":1,\"142\":1,\"143\":1,\"146\":1,\"153\":1,\"155\":1,\"178\":2,\"179\":2,\"180\":3,\"203\":5,\"204\":1,\"206\":2,\"207\":2,\"208\":7,\"209\":1,\"217\":1,\"219\":1,\"234\":1}}],[\"const等\",{\"1\":{\"48\":1}}],[\"const\",{\"1\":{\"6\":2,\"12\":2,\"13\":3,\"14\":2,\"16\":2,\"28\":1,\"32\":1,\"37\":5,\"38\":5,\"41\":9,\"51\":1,\"74\":1,\"76\":1,\"77\":1,\"78\":1,\"81\":3,\"83\":2,\"90\":2,\"102\":1,\"105\":4,\"125\":1,\"130\":2,\"142\":1,\"147\":2,\"153\":2,\"160\":1,\"162\":1,\"163\":1,\"168\":1,\"170\":1,\"171\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"178\":1,\"179\":1,\"180\":1,\"182\":1,\"183\":1,\"187\":1,\"188\":1,\"189\":1,\"193\":1,\"201\":1,\"202\":1,\"203\":2,\"204\":2,\"206\":1,\"207\":1,\"209\":1,\"210\":1,\"213\":1,\"217\":1,\"234\":3}}],[\"cdn\",{\"0\":{\"228\":1}}],[\"cd\",{\"1\":{\"26\":1}}],[\"created\",{\"1\":{\"207\":1,\"208\":1,\"209\":1,\"219\":1}}],[\"createeventbus\",{\"1\":{\"130\":3,\"147\":3}}],[\"createapp的时候\",{\"1\":{\"232\":1}}],[\"createapp\",{\"1\":{\"37\":2,\"90\":3,\"130\":2,\"147\":2,\"150\":1,\"153\":2,\"160\":1,\"162\":1,\"163\":1,\"168\":1,\"170\":1,\"171\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"178\":1,\"179\":1,\"180\":1,\"182\":1,\"183\":1,\"187\":1,\"188\":1,\"189\":1,\"193\":1,\"201\":1,\"202\":1,\"203\":2,\"204\":1,\"206\":1,\"207\":1,\"210\":1,\"213\":1,\"232\":2}}],[\"create\",{\"1\":{\"26\":4,\"43\":1,\"108\":1,\"159\":1}}],[\"cn\",{\"1\":{\"17\":1,\"130\":1,\"147\":1,\"152\":1,\"190\":1,\"198\":1,\"208\":1,\"209\":1,\"213\":1,\"236\":1}}],[\"cxk\",{\"1\":{\"6\":2,\"7\":2,\"8\":2,\"14\":2}}],[\"female\",{\"1\":{\"213\":4}}],[\"feature\",{\"1\":{\"91\":5}}],[\"features\",{\"1\":{\"19\":1,\"108\":3}}],[\"featur\",{\"1\":{\"91\":1}}],[\"f7f7f7\",{\"1\":{\"210\":1}}],[\"f\",{\"0\":{\"193\":1},\"1\":{\"107\":1,\"193\":2,\"208\":2,\"234\":1}}],[\"false选项\",{\"1\":{\"123\":1,\"140\":1}}],[\"false\",{\"1\":{\"91\":1,\"99\":1,\"102\":1,\"105\":1,\"110\":1,\"123\":1,\"126\":1,\"140\":1,\"143\":1,\"213\":1}}],[\"fast\",{\"1\":{\"19\":1}}],[\"first\",{\"1\":{\"220\":2}}],[\"firstname\",{\"1\":{\"199\":1,\"200\":1,\"201\":2,\"202\":2,\"203\":5,\"204\":4,\"220\":4}}],[\"filterbooks\",{\"1\":{\"210\":1}}],[\"filter\",{\"1\":{\"189\":3}}],[\"files\",{\"1\":{\"76\":1,\"108\":1}}],[\"filename\",{\"1\":{\"51\":1,\"64\":1,\"67\":1,\"72\":1,\"88\":1,\"105\":1}}],[\"file\",{\"0\":{\"64\":1},\"1\":{\"37\":5,\"38\":4,\"41\":1,\"64\":3,\"67\":1,\"68\":1,\"71\":2,\"82\":2,\"155\":1,\"236\":1}}],[\"fix\",{\"1\":{\"108\":1}}],[\"finalprice\",{\"1\":{\"210\":3}}],[\"finalstyleobj\",{\"1\":{\"173\":2}}],[\"finalfontsize\",{\"1\":{\"173\":2}}],[\"finalcolor\",{\"1\":{\"173\":4}}],[\"fina\",{\"1\":{\"91\":1}}],[\"flags的好处在于能够更好地控制vue框架的特性和功能\",{\"1\":{\"91\":1}}],[\"flags是构建工具\",{\"1\":{\"91\":1}}],[\"flags\",{\"1\":{\"91\":3}}],[\"flag\",{\"1\":{\"91\":1}}],[\"flow\",{\"1\":{\"84\":3,\"224\":1}}],[\"fs\",{\"1\":{\"90\":3}}],[\"future\",{\"1\":{\"108\":1}}],[\"fullname的getter和setter方法\",{\"1\":{\"204\":1}}],[\"fullname\",{\"1\":{\"202\":2,\"203\":9,\"204\":5}}],[\"full\",{\"1\":{\"41\":1}}],[\"fully\",{\"1\":{\"19\":1}}],[\"functions\",{\"1\":{\"83\":3}}],[\"function\",{\"1\":{\"6\":1,\"12\":1,\"13\":1,\"41\":2,\"81\":1,\"121\":5,\"130\":3,\"138\":5,\"147\":3,\"159\":1,\"177\":1,\"199\":3,\"204\":2,\"205\":1,\"206\":1,\"207\":1,\"208\":3,\"209\":1,\"232\":2}}],[\"fruit\",{\"1\":{\"213\":3}}],[\"framework\",{\"1\":{\"26\":2}}],[\"friend\",{\"1\":{\"16\":2}}],[\"from\",{\"1\":{\"16\":1,\"29\":1,\"30\":2,\"35\":2,\"37\":4,\"78\":2,\"90\":3,\"103\":5,\"104\":2,\"107\":1,\"115\":5,\"119\":3,\"120\":4,\"121\":2,\"122\":1,\"125\":1,\"127\":3,\"129\":4,\"130\":4,\"132\":5,\"136\":3,\"137\":4,\"138\":2,\"139\":1,\"142\":1,\"144\":3,\"146\":4,\"147\":4,\"154\":1}}],[\"fontweight\",{\"1\":{\"173\":2}}],[\"fontsize\",{\"1\":{\"173\":2,\"174\":1}}],[\"fontsre\",{\"1\":{\"38\":3}}],[\"font\",{\"1\":{\"45\":1,\"67\":3,\"173\":3,\"210\":1}}],[\"following\",{\"1\":{\"26\":1}}],[\"foo2\",{\"1\":{\"234\":2}}],[\"football\",{\"1\":{\"213\":4}}],[\"footer组件的父组件\",{\"1\":{\"116\":1,\"133\":1}}],[\"footer\",{\"1\":{\"115\":1,\"132\":1}}],[\"foo\",{\"1\":{\"13\":2,\"234\":2}}],[\"forms\",{\"1\":{\"213\":1}}],[\"formatprice\",{\"1\":{\"210\":3}}],[\"formatter\",{\"1\":{\"108\":2}}],[\"for进行列表渲染时\",{\"1\":{\"190\":1}}],[\"for同时也支持数字的遍历\",{\"1\":{\"187\":1}}],[\"for也支持遍历对象\",{\"1\":{\"187\":1}}],[\"for支持的类型\",{\"1\":{\"187\":1}}],[\"for的基本格式是\",{\"1\":{\"187\":1}}],[\"for类似于javascript的for循环\",{\"1\":{\"186\":1}}],[\"for来完成\",{\"1\":{\"186\":1}}],[\"for=\",{\"1\":{\"127\":1,\"144\":1,\"187\":3,\"188\":1,\"189\":1,\"193\":1,\"210\":1,\"213\":7}}],[\"foreach\",{\"1\":{\"41\":2,\"130\":1,\"147\":1}}],[\"for\",{\"0\":{\"190\":1},\"1\":{\"6\":1,\"12\":1,\"13\":1,\"37\":1,\"41\":1,\"91\":1,\"108\":2,\"210\":1,\"213\":2}}],[\"io\",{\"1\":{\"81\":1}}],[\"ignore\",{\"1\":{\"78\":1}}],[\"item是我们给每项元素起的一个别名\",{\"1\":{\"187\":1}}],[\"item\",{\"1\":{\"187\":2,\"189\":2,\"193\":3,\"210\":3}}],[\"it\",{\"1\":{\"76\":1,\"91\":1}}],[\"ico\",{\"1\":{\"76\":1,\"109\":1}}],[\"icon\",{\"1\":{\"76\":1}}],[\"ie=edge\",{\"1\":{\"76\":1,\"210\":1}}],[\"isagree\",{\"1\":{\"213\":3}}],[\"isactive\",{\"1\":{\"170\":6,\"171\":3}}],[\"isshowha\",{\"1\":{\"183\":4}}],[\"isshow\",{\"1\":{\"160\":5,\"184\":1,\"185\":2}}],[\"isstaticasset\",{\"1\":{\"38\":2}}],[\"is=\",{\"1\":{\"127\":1,\"144\":1}}],[\"isdev\",{\"1\":{\"105\":4}}],[\"is\",{\"1\":{\"41\":3,\"77\":1,\"90\":1,\"91\":1,\"127\":1,\"144\":1}}],[\"isimportrequest\",{\"1\":{\"38\":2}}],[\"ide\",{\"1\":{\"236\":1}}],[\"id=\",{\"1\":{\"76\":1,\"115\":1,\"122\":1,\"132\":1,\"139\":1,\"153\":3,\"160\":1,\"162\":2,\"163\":1,\"165\":1,\"167\":1,\"168\":1,\"170\":2,\"171\":2,\"173\":2,\"174\":2,\"175\":2,\"176\":2,\"178\":2,\"179\":2,\"180\":2,\"182\":1,\"183\":2,\"184\":1,\"185\":1,\"187\":2,\"188\":2,\"189\":2,\"193\":2,\"200\":1,\"201\":1,\"202\":1,\"203\":3,\"204\":1,\"206\":2,\"207\":2,\"210\":2,\"213\":9,\"232\":4}}],[\"id\",{\"1\":{\"37\":9,\"41\":1,\"122\":1,\"139\":1,\"210\":4,\"213\":1}}],[\"ime\",{\"1\":{\"216\":1}}],[\"immediate\",{\"1\":{\"207\":2,\"208\":1,\"209\":2}}],[\"imgurl\",{\"1\":{\"167\":3,\"168\":4}}],[\"img\",{\"1\":{\"35\":1,\"37\":2,\"39\":1,\"47\":1,\"53\":1,\"64\":1,\"65\":2,\"69\":1,\"70\":2,\"72\":1}}],[\"imagere\",{\"1\":{\"38\":3}}],[\"image\",{\"1\":{\"22\":2,\"44\":1,\"49\":1,\"65\":1,\"73\":1,\"87\":2,\"88\":1,\"91\":1,\"94\":1,\"96\":1,\"98\":1,\"105\":1,\"108\":3,\"116\":1,\"129\":1,\"133\":1,\"146\":1,\"150\":1,\"158\":1,\"163\":1,\"179\":1,\"180\":1,\"185\":1,\"191\":1,\"192\":1,\"194\":8,\"213\":1}}],[\"importquery\",{\"1\":{\"41\":2}}],[\"imports\",{\"1\":{\"38\":1}}],[\"importer\",{\"1\":{\"37\":2,\"41\":1}}],[\"importerfilepath\",{\"1\":{\"37\":2}}],[\"import\",{\"1\":{\"16\":1,\"29\":2,\"30\":2,\"35\":2,\"37\":6,\"41\":5,\"55\":1,\"90\":4,\"104\":4,\"115\":5,\"119\":1,\"120\":1,\"121\":1,\"122\":1,\"125\":1,\"127\":3,\"129\":3,\"130\":1,\"132\":5,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"142\":1,\"144\":3,\"146\":3,\"147\":1,\"154\":1}}],[\"i\",{\"1\":{\"12\":8,\"16\":1,\"38\":1}}],[\"intro\",{\"1\":{\"213\":6}}],[\"interface\",{\"1\":{\"19\":1}}],[\"input\",{\"1\":{\"211\":1,\"216\":2,\"219\":1}}],[\"input=\",{\"1\":{\"211\":1,\"219\":2,\"220\":2}}],[\"increment\",{\"1\":{\"162\":4,\"210\":2,\"232\":4}}],[\"includes\",{\"1\":{\"41\":2}}],[\"inheritattrs\",{\"1\":{\"123\":1,\"140\":1}}],[\"insertf\",{\"1\":{\"193\":2}}],[\"inspect\",{\"0\":{\"112\":1},\"1\":{\"112\":4}}],[\"install\",{\"1\":{\"25\":2,\"26\":2,\"28\":2,\"32\":1,\"49\":1,\"55\":2,\"56\":1,\"57\":2,\"58\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"74\":1,\"75\":1,\"78\":1,\"82\":1,\"83\":2,\"84\":1,\"88\":1,\"90\":3,\"94\":1,\"107\":1,\"237\":2}}],[\"instance\",{\"1\":{\"209\":1}}],[\"instanceof\",{\"1\":{\"6\":1,\"12\":1,\"13\":1}}],[\"instant\",{\"1\":{\"19\":1}}],[\"inject用于非父子组件之间共享数据\",{\"1\":{\"129\":1,\"146\":1}}],[\"inject\",{\"0\":{\"129\":1,\"146\":1},\"1\":{\"128\":1,\"129\":4,\"145\":1,\"146\":4}}],[\"injected\",{\"1\":{\"76\":1}}],[\"injectscripttohtml\",{\"1\":{\"41\":1}}],[\"inline\",{\"1\":{\"71\":1,\"177\":1,\"178\":1}}],[\"initial\",{\"1\":{\"76\":1,\"210\":1}}],[\"init\",{\"1\":{\"49\":1}}],[\"index+1\",{\"1\":{\"187\":1,\"189\":1}}],[\"indexof\",{\"1\":{\"121\":1,\"138\":1}}],[\"index\",{\"1\":{\"37\":2,\"41\":1,\"48\":2,\"76\":2,\"78\":2,\"88\":1,\"103\":3,\"105\":1,\"187\":7,\"189\":1,\"210\":13}}],[\"info对象会被拆解成div的各个属性\",{\"1\":{\"176\":1}}],[\"info\",{\"1\":{\"8\":3,\"16\":3,\"120\":1,\"137\":1,\"176\":3,\"187\":2,\"188\":2,\"207\":8,\"209\":1}}],[\"in\",{\"1\":{\"6\":1,\"12\":1,\"41\":1,\"90\":1,\"91\":1,\"108\":2,\"127\":1,\"144\":1,\"167\":1,\"187\":8,\"188\":1,\"189\":1,\"190\":1,\"193\":1,\"210\":1}}],[\"if当条件为false时\",{\"1\":{\"185\":1}}],[\"if的区别\",{\"0\":{\"185\":1}}],[\"if的用法看起来是一致的\",{\"1\":{\"184\":1}}],[\"if的渲染原理\",{\"1\":{\"183\":1}}],[\"if上使用\",{\"1\":{\"183\":1}}],[\"if是一个指令\",{\"1\":{\"183\":1}}],[\"if是惰性的\",{\"1\":{\"183\":1}}],[\"if=\",{\"1\":{\"182\":2,\"183\":1,\"185\":1,\"210\":1}}],[\"if类似\",{\"1\":{\"182\":1}}],[\"if用于根据条件来渲染某一块的内容\",{\"1\":{\"182\":1}}],[\"if\",{\"0\":{\"183\":1},\"1\":{\"6\":2,\"12\":2,\"37\":2,\"38\":3,\"41\":8,\"96\":1,\"102\":1,\"126\":1,\"130\":2,\"143\":1,\"147\":2,\"160\":1,\"181\":2,\"182\":1,\"185\":1,\"188\":1,\"217\":1,\"219\":1}}],[\"nba\",{\"1\":{\"129\":1,\"146\":1,\"207\":4}}],[\"nvm\",{\"1\":{\"107\":2}}],[\"n\",{\"1\":{\"107\":1,\"108\":2,\"187\":1}}],[\"n`\",{\"1\":{\"41\":1}}],[\"n<script\",{\"1\":{\"41\":1}}],[\"no\",{\"1\":{\"111\":1}}],[\"not\",{\"1\":{\"77\":1,\"90\":1}}],[\"note\",{\"1\":{\"38\":1}}],[\"noscript>\",{\"1\":{\"76\":1}}],[\"none\",{\"1\":{\"61\":5,\"166\":2}}],[\"noemit\",{\"1\":{\"40\":1}}],[\"node官方网站\",{\"1\":{\"46\":1}}],[\"nodemodulepath\",{\"1\":{\"37\":3}}],[\"node\",{\"1\":{\"25\":3,\"37\":4,\"38\":2,\"46\":1,\"88\":1,\"90\":4,\"104\":5,\"107\":3,\"109\":2,\"191\":1}}],[\"net\",{\"1\":{\"98\":1}}],[\"newitem\",{\"1\":{\"210\":3}}],[\"newinfo\",{\"1\":{\"207\":4,\"209\":2}}],[\"newvalue变化后的新值\",{\"1\":{\"206\":1}}],[\"newvalue\",{\"1\":{\"204\":3,\"206\":2,\"207\":3,\"211\":2}}],[\"newmovie\",{\"1\":{\"189\":4}}],[\"new\",{\"1\":{\"74\":1,\"76\":1,\"77\":1,\"78\":1,\"91\":1,\"208\":1}}],[\"newobj\",{\"1\":{\"6\":3,\"12\":8,\"13\":7,\"14\":4,\"16\":1}}],[\"next\",{\"1\":{\"37\":3,\"38\":4,\"107\":1,\"228\":1}}],[\"need\",{\"1\":{\"26\":1}}],[\"npx\",{\"1\":{\"25\":1,\"48\":1,\"49\":1,\"57\":1,\"61\":1,\"82\":2,\"83\":1,\"84\":1,\"109\":2}}],[\"npm\",{\"1\":{\"16\":1,\"25\":2,\"26\":4,\"28\":2,\"32\":1,\"49\":3,\"51\":1,\"52\":1,\"55\":2,\"56\":1,\"57\":2,\"58\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"74\":1,\"75\":1,\"78\":1,\"82\":1,\"83\":2,\"84\":1,\"88\":1,\"90\":3,\"92\":1,\"93\":1,\"94\":3,\"107\":2,\"109\":4,\"237\":2}}],[\"name<\",{\"1\":{\"207\":2}}],[\"names\",{\"1\":{\"129\":4,\"146\":4,\"204\":3}}],[\"name>和\",{\"1\":{\"151\":1}}],[\"name>\",{\"1\":{\"107\":1,\"151\":1}}],[\"name=\",{\"1\":{\"76\":1,\"176\":1,\"210\":1,\"213\":1,\"220\":2}}],[\"namedexports\",{\"1\":{\"38\":1}}],[\"name\",{\"1\":{\"6\":4,\"7\":4,\"8\":2,\"10\":2,\"12\":4,\"13\":2,\"14\":4,\"16\":4,\"26\":2,\"35\":1,\"64\":1,\"65\":2,\"67\":3,\"68\":1,\"72\":1,\"81\":4,\"107\":1,\"111\":2,\"115\":2,\"126\":2,\"129\":1,\"132\":2,\"143\":2,\"146\":1,\"160\":2,\"175\":2,\"176\":1,\"179\":2,\"187\":1,\"188\":1,\"207\":8,\"210\":5}}],[\"num\",{\"1\":{\"126\":3,\"143\":3,\"187\":2}}],[\"number=\",{\"1\":{\"217\":1}}],[\"number\",{\"0\":{\"217\":1},\"1\":{\"2\":1,\"121\":4,\"138\":4,\"217\":3}}],[\"nuxt\",{\"1\":{\"26\":1}}],[\"null\",{\"1\":{\"2\":1,\"38\":1,\"126\":2,\"143\":2}}],[\"null和\",{\"1\":{\"1\":1}}],[\"ssg\",{\"1\":{\"236\":1}}],[\"s\",{\"1\":{\"234\":1}}],[\"slot编译优化\",{\"1\":{\"225\":1}}],[\"slice\",{\"0\":{\"9\":1},\"1\":{\"9\":2,\"189\":1,\"219\":1}}],[\"shift\",{\"1\":{\"189\":1}}],[\"show元素无论是否需要显示到浏览器上\",{\"1\":{\"185\":1}}],[\"show不可以和v\",{\"1\":{\"185\":1}}],[\"show是不支持template\",{\"1\":{\"185\":1}}],[\"show=\",{\"1\":{\"184\":1,\"185\":1}}],[\"show和v\",{\"0\":{\"185\":1},\"1\":{\"184\":1}}],[\"show\",{\"0\":{\"184\":1},\"1\":{\"181\":1,\"185\":1}}],[\"shaking\",{\"1\":{\"20\":2,\"36\":1,\"91\":2,\"154\":2}}],[\"shallowclone\",{\"1\":{\"6\":2}}],[\"size=\",{\"1\":{\"213\":1}}],[\"size\",{\"1\":{\"173\":3}}],[\"single\",{\"1\":{\"236\":1}}],[\"sing\",{\"1\":{\"6\":1}}],[\"s=60\",{\"1\":{\"168\":1}}],[\"snippet\",{\"1\":{\"158\":1}}],[\"snowpack\",{\"1\":{\"20\":1}}],[\"symbol\",{\"1\":{\"121\":1,\"138\":1}}],[\"syntax\",{\"1\":{\"7\":1,\"86\":1}}],[\"special\",{\"1\":{\"190\":1}}],[\"splice\",{\"1\":{\"189\":1,\"193\":1,\"210\":1}}],[\"split\",{\"1\":{\"160\":2,\"200\":1,\"201\":1,\"202\":1,\"204\":1}}],[\"splitting\",{\"1\":{\"111\":1}}],[\"spacing\",{\"1\":{\"210\":1}}],[\"span>\",{\"1\":{\"163\":1,\"210\":1,\"213\":3}}],[\"spa\",{\"1\":{\"108\":1,\"236\":1}}],[\"spread\",{\"1\":{\"7\":1}}],[\"sfc​\",{\"1\":{\"236\":1}}],[\"sfc来对template进行解析\",{\"1\":{\"90\":1}}],[\"sfc\",{\"1\":{\"90\":2,\"236\":4}}],[\"success\",{\"1\":{\"121\":1,\"138\":1}}],[\"sub\",{\"1\":{\"126\":2,\"143\":2}}],[\"subpage\",{\"1\":{\"103\":2}}],[\"submit\",{\"1\":{\"26\":2}}],[\"support\",{\"1\":{\"108\":1}}],[\"supported\",{\"1\":{\"90\":1}}],[\"super\",{\"1\":{\"86\":1,\"87\":1}}],[\"solid\",{\"1\":{\"210\":2}}],[\"something\",{\"1\":{\"208\":1}}],[\"somemethod\",{\"1\":{\"208\":2}}],[\"sort\",{\"1\":{\"189\":1}}],[\"sorry\",{\"1\":{\"76\":1}}],[\"sourcemap\",{\"1\":{\"237\":1}}],[\"sourcemappingurl=data\",{\"1\":{\"61\":1}}],[\"source\",{\"1\":{\"71\":1,\"79\":1,\"105\":3}}],[\"socket\",{\"1\":{\"41\":1,\"98\":2}}],[\"sass等\",{\"1\":{\"155\":1}}],[\"sass等预处理器的处理\",{\"1\":{\"45\":1}}],[\"save\",{\"1\":{\"16\":1,\"49\":2,\"55\":1,\"88\":1,\"108\":2}}],[\"switch\",{\"1\":{\"41\":1}}],[\"scaling\",{\"1\":{\"236\":1}}],[\"scale=1\",{\"1\":{\"76\":1,\"210\":1}}],[\"score\",{\"1\":{\"182\":4,\"199\":1,\"200\":1,\"201\":2,\"202\":2,\"203\":5,\"217\":2}}],[\"scoped><\",{\"1\":{\"114\":1,\"115\":1,\"131\":1,\"132\":1,\"155\":1}}],[\"scoped>\",{\"1\":{\"90\":1}}],[\"scoping\",{\"1\":{\"83\":3}}],[\"script标签\",{\"1\":{\"232\":1}}],[\"scripts\",{\"1\":{\"49\":1,\"93\":1,\"94\":1,\"105\":1,\"109\":2}}],[\"script\",{\"1\":{\"39\":2,\"109\":1}}],[\"script>\",{\"1\":{\"35\":1,\"41\":1,\"90\":1,\"114\":1,\"115\":2,\"119\":2,\"120\":2,\"121\":2,\"122\":1,\"125\":2,\"127\":1,\"129\":2,\"130\":2,\"131\":1,\"132\":2,\"136\":2,\"137\":2,\"138\":2,\"139\":1,\"142\":2,\"144\":1,\"146\":2,\"147\":2,\"153\":2,\"154\":1,\"155\":1,\"160\":2,\"162\":2,\"163\":2,\"168\":1,\"170\":2,\"171\":2,\"173\":2,\"174\":2,\"175\":2,\"176\":2,\"178\":2,\"179\":2,\"180\":2,\"182\":2,\"183\":2,\"187\":2,\"188\":2,\"189\":2,\"193\":2,\"201\":2,\"202\":2,\"203\":4,\"204\":2,\"206\":2,\"207\":2,\"210\":3,\"213\":2,\"219\":2,\"220\":1,\"228\":1,\"229\":1,\"232\":5}}],[\"scss\",{\"1\":{\"29\":2}}],[\"src=\",{\"1\":{\"35\":1,\"153\":1,\"160\":1,\"162\":1,\"163\":1,\"167\":3,\"168\":3,\"170\":1,\"171\":1,\"173\":1,\"174\":1,\"175\":2,\"176\":1,\"178\":1,\"179\":1,\"180\":1,\"182\":1,\"183\":1,\"187\":1,\"188\":1,\"189\":1,\"193\":1,\"201\":1,\"202\":1,\"203\":2,\"204\":1,\"206\":1,\"207\":1,\"210\":2,\"213\":1,\"228\":1,\"229\":1,\"232\":2}}],[\"src\",{\"1\":{\"30\":1,\"37\":1,\"38\":2,\"48\":3,\"51\":1,\"57\":1,\"61\":1,\"82\":3,\"83\":1,\"84\":1,\"88\":1,\"104\":7,\"105\":1,\"109\":1,\"110\":2}}],[\"svelte\",{\"1\":{\"26\":1}}],[\"searchtext\",{\"1\":{\"211\":5}}],[\"self\",{\"1\":{\"177\":1,\"180\":1}}],[\"select>\",{\"1\":{\"213\":1}}],[\"select\",{\"1\":{\"26\":3,\"61\":5,\"108\":2,\"213\":1}}],[\"sendmessage\",{\"1\":{\"130\":4,\"147\":4}}],[\"senddatatoparent\",{\"1\":{\"125\":2,\"142\":2}}],[\"secure\",{\"1\":{\"99\":1,\"102\":1,\"105\":1}}],[\"see\",{\"1\":{\"91\":1}}],[\"service\",{\"0\":{\"110\":1,\"111\":1,\"112\":1},\"1\":{\"47\":1,\"106\":2,\"109\":8,\"110\":2,\"111\":2,\"112\":3}}],[\"serve\",{\"0\":{\"110\":1},\"1\":{\"37\":2,\"94\":4,\"105\":2,\"109\":5,\"110\":2}}],[\"server使用express框架提供静态资源服务\",{\"1\":{\"98\":1}}],[\"server使用node\",{\"1\":{\"98\":1}}],[\"server负责直接提供静态资源的服务\",{\"1\":{\"98\":1}}],[\"server建立连接\",{\"1\":{\"98\":1}}],[\"server会将更新的模块代码发送到客户端\",{\"1\":{\"98\":1}}],[\"server会创建两个服务\",{\"1\":{\"98\":1}}],[\"server已经支持hmr\",{\"1\":{\"95\":1}}],[\"server的情况下\",{\"1\":{\"94\":1}}],[\"server或者直接通过浏览器\",{\"1\":{\"92\":1}}],[\"serverplugin\",{\"1\":{\"38\":1}}],[\"serverpluginassets\",{\"1\":{\"38\":1}}],[\"server收到请求只需要编译当前文件后返回给浏览器\",{\"1\":{\"22\":1}}],[\"server\",{\"0\":{\"94\":1},\"1\":{\"18\":1,\"19\":1,\"38\":1,\"92\":1,\"94\":3,\"98\":1,\"102\":2,\"103\":3,\"110\":1}}],[\"setter\",{\"0\":{\"204\":1},\"1\":{\"198\":1,\"225\":1}}],[\"setattribute\",{\"1\":{\"41\":1}}],[\"set\",{\"1\":{\"37\":2,\"38\":1,\"199\":1,\"204\":1}}],[\"stop=\",{\"1\":{\"180\":1}}],[\"stoppropagation\",{\"1\":{\"177\":1,\"180\":3}}],[\"stop\",{\"1\":{\"177\":1,\"180\":2}}],[\"store\",{\"1\":{\"78\":1}}],[\"strict\",{\"1\":{\"81\":1}}],[\"stringify\",{\"0\":{\"14\":1},\"1\":{\"14\":3,\"38\":1}}],[\"string\",{\"1\":{\"1\":1,\"2\":1,\"14\":1,\"37\":3,\"38\":1,\"41\":2,\"120\":2,\"121\":4,\"137\":2,\"138\":4,\"199\":1,\"205\":2,\"219\":2,\"220\":2}}],[\"strong>\",{\"1\":{\"76\":1}}],[\"standard风格的格式化规则\",{\"1\":{\"108\":1}}],[\"standard\",{\"1\":{\"108\":1}}],[\"state\",{\"1\":{\"208\":1}}],[\"statement\",{\"1\":{\"177\":1,\"178\":1}}],[\"static\",{\"1\":{\"96\":3,\"99\":1}}],[\"status\",{\"1\":{\"38\":1}}],[\"startswith\",{\"1\":{\"102\":1}}],[\"start\",{\"1\":{\"19\":1}}],[\"stylesheet\",{\"1\":{\"210\":1}}],[\"style2obj\",{\"1\":{\"174\":2}}],[\"style1obj\",{\"1\":{\"174\":2}}],[\"style=\",{\"1\":{\"122\":1,\"139\":1,\"163\":1,\"173\":6,\"174\":1}}],[\"style>\",{\"1\":{\"90\":1,\"114\":1,\"115\":1,\"131\":1,\"132\":1,\"155\":1,\"170\":1}}],[\"style\",{\"0\":{\"56\":1,\"172\":1},\"1\":{\"29\":1,\"41\":1,\"53\":1,\"55\":4,\"56\":2,\"58\":1,\"61\":1,\"97\":1,\"167\":1,\"172\":1,\"175\":1,\"210\":1}}],[\"拷贝的就是内存地址\",{\"1\":{\"5\":1}}],[\"拷贝的就是基本类型的值\",{\"1\":{\"5\":1}}],[\"如filter\",{\"1\":{\"225\":1}}],[\"如下\",{\"1\":{\"175\":1,\"203\":1}}],[\"如下图所示\",{\"1\":{\"1\":1}}],[\"如何阅读vue源码\",{\"0\":{\"237\":1}}],[\"如何基于key重新排列的\",{\"1\":{\"190\":1}}],[\"如何尝试修改和复用的\",{\"1\":{\"190\":1}}],[\"如何支持sfc\",{\"0\":{\"156\":1}}],[\"如何注册一个组件呢\",{\"1\":{\"152\":1}}],[\"如何使用hmr呢\",{\"1\":{\"95\":1}}],[\"如何使用\",{\"0\":{\"227\":1},\"1\":{\"83\":1}}],[\"如何使用postcss呢\",{\"1\":{\"59\":1}}],[\"如何使用这个loader来加载css文件呢\",{\"1\":{\"55\":1}}],[\"如上\",{\"1\":{\"123\":1,\"140\":1}}],[\"如上代码\",{\"1\":{\"115\":1,\"132\":1}}],[\"如babel\",{\"1\":{\"108\":1}}],[\"如browserify会对代码进行解析\",{\"1\":{\"35\":1}}],[\"如prettier\",{\"1\":{\"108\":1}}],[\"如eslint\",{\"1\":{\"108\":1}}],[\"如sass\",{\"1\":{\"108\":1}}],[\"如snowpack\",{\"1\":{\"22\":1}}],[\"如需升级项目中的\",{\"1\":{\"107\":1}}],[\"如需升级全局的\",{\"1\":{\"107\":1}}],[\"如html\",{\"1\":{\"98\":1}}],[\"如react\",{\"1\":{\"97\":1}}],[\"如webpack\",{\"1\":{\"90\":1}}],[\"如\",{\"1\":{\"55\":2,\"98\":1,\"104\":2,\"108\":1,\"213\":1}}],[\"如javascript\",{\"1\":{\"54\":1}}],[\"如commonjs常用于服务端\",{\"1\":{\"35\":1}}],[\"如果该值无法被\",{\"1\":{\"217\":1}}],[\"如果该方法不需要额外参数\",{\"1\":{\"179\":1}}],[\"如果想侦听所有嵌套的变更\",{\"1\":{\"207\":1}}],[\"如果不使用key\",{\"1\":{\"190\":1}}],[\"如果不会频繁的发生切换\",{\"1\":{\"185\":1}}],[\"如果方法本身中有一个参数\",{\"1\":{\"179\":1}}],[\"如果属性名称不是固定的\",{\"1\":{\"175\":1}}],[\"如果属性是引用类型\",{\"1\":{\"5\":1}}],[\"如果属性是基本类型\",{\"1\":{\"5\":1}}],[\"如果存在同名的\",{\"1\":{\"167\":1}}],[\"如果componentc没有用到但是我们依然在全局进行\",{\"1\":{\"154\":1}}],[\"如果将一个复杂的问题\",{\"1\":{\"149\":1}}],[\"如果您希望将当前配置保存为预设\",{\"1\":{\"108\":1}}],[\"如果找不到对应的资源应该返回什么页面\",{\"1\":{\"103\":1}}],[\"如果需要同时传入某个参数\",{\"1\":{\"179\":1}}],[\"如果需要\",{\"1\":{\"102\":1}}],[\"如果需要解析模板\",{\"1\":{\"90\":1}}],[\"如果请求路径以\",{\"1\":{\"102\":1}}],[\"如果希望其他地方也可以访问\",{\"1\":{\"100\":1}}],[\"如果新代码可以被成功替换\",{\"1\":{\"98\":1}}],[\"如果有的资源没有在\",{\"1\":{\"96\":1}}],[\"如果没有指定输出目录\",{\"1\":{\"94\":1}}],[\"如果没有安装就会报错\",{\"1\":{\"47\":1}}],[\"如果你想让用户输入自动转换为数字\",{\"1\":{\"217\":1}}],[\"如果你想要默认自动去除用户输入内容中两端的空格\",{\"1\":{\"218\":1}}],[\"如果你想要查看生产环境的\",{\"1\":{\"112\":1}}],[\"如果你想要设置\",{\"1\":{\"112\":1}}],[\"如果你全局注册了一个组件\",{\"1\":{\"154\":1}}],[\"如果你不希望非prop的attribute被添加到根元素上\",{\"1\":{\"123\":1,\"140\":1}}],[\"如果你有一个组件\",{\"1\":{\"122\":1,\"139\":1}}],[\"如果你有一个名为\",{\"1\":{\"90\":1}}],[\"如果你在javascript中定义了一个名为myprop的prop\",{\"1\":{\"121\":1,\"138\":1}}],[\"如果你可以使用\",{\"1\":{\"109\":1}}],[\"如果你要使用vue2可以用这个方式\",{\"1\":{\"26\":1}}],[\"如果我们对文件大小敏感\",{\"1\":{\"235\":1}}],[\"如果我们需要更完整的功能\",{\"1\":{\"235\":1}}],[\"如果我们需要索引\",{\"1\":{\"187\":1}}],[\"如果我们确实想设置计算属性的值呢\",{\"1\":{\"204\":1}}],[\"如果我们不只是一个简单的div\",{\"1\":{\"192\":1}}],[\"如果我们的元素需要在显示和隐藏之间频繁的切换\",{\"1\":{\"185\":1}}],[\"如果我们展示的内容本身是\",{\"1\":{\"163\":1}}],[\"如果我们现在有一部分内容\",{\"1\":{\"152\":1}}],[\"如果我们将一个个功能块拆分后\",{\"1\":{\"149\":1}}],[\"如果我们将一个页面中所有的处理逻辑\",{\"1\":{\"149\":1}}],[\"如果我们仍然将props沿着组件链逐级传递下去\",{\"1\":{\"129\":1,\"146\":1}}],[\"如果我们一个应用程序将所有的逻辑都放在一个组件中\",{\"1\":{\"114\":1,\"131\":1}}],[\"如果我们一个个去安装使用插件\",{\"1\":{\"88\":1}}],[\"如果我们希望将一个对象的所有属性\",{\"1\":{\"176\":1}}],[\"如果我们希望这个内容被vue可以解析出来\",{\"1\":{\"163\":1}}],[\"如果我们希望把数据显示到模板\",{\"1\":{\"160\":1}}],[\"如果我们希望在命令行尝试使用babel\",{\"1\":{\"82\":1}}],[\"如果我们希望再完成插入style的操作\",{\"1\":{\"56\":1}}],[\"如果我们想要使用这一\",{\"1\":{\"156\":1}}],[\"如果我们想要在旧版浏览器中运行它\",{\"1\":{\"81\":1}}],[\"如果我们想在自己的模块中加入一些比较特别的内容\",{\"1\":{\"76\":1}}],[\"如果我们查看浏览器中的请求\",{\"1\":{\"31\":1}}],[\"如果当前项目中没有存在\",{\"1\":{\"48\":1}}],[\"如果是一个string类型\",{\"1\":{\"217\":1}}],[\"如果是子节点的化\",{\"1\":{\"162\":1}}],[\"如果是个\",{\"1\":{\"37\":1}}],[\"如果是\",{\"1\":{\"37\":1}}],[\"如有需要\",{\"1\":{\"18\":1}}],[\"如速度快到惊人的\",{\"1\":{\"18\":1}}],[\"指向项目根目录下的\",{\"1\":{\"104\":1}}],[\"指向\",{\"1\":{\"90\":1}}],[\"指向堆内存的地址\",{\"1\":{\"3\":1}}],[\"指单个仓库中管理多个项目\",{\"1\":{\"89\":1}}],[\"指定它需要传递的类型\",{\"1\":{\"118\":1,\"135\":1}}],[\"指定输出目录\",{\"1\":{\"111\":1}}],[\"指定\",{\"1\":{\"110\":2}}],[\"指定环境模式\",{\"1\":{\"110\":1,\"111\":1,\"112\":1}}],[\"指定端口号为8080\",{\"1\":{\"101\":1}}],[\"指定服务器的ip地址\",{\"1\":{\"99\":1}}],[\"指定哪些模块发生更新时\",{\"1\":{\"96\":1}}],[\"指定静态资源的路径\",{\"1\":{\"92\":1}}],[\"指定使用的插件\",{\"1\":{\"88\":1}}],[\"指定要输出的文件dist\",{\"1\":{\"82\":1}}],[\"指定要输出的文件夹dist\",{\"1\":{\"82\":1}}],[\"指定我们要使用的模块所在的路径\",{\"1\":{\"76\":1}}],[\"指定配置文件\",{\"0\":{\"52\":1}}],[\"指的是创建新的数据\",{\"1\":{\"5\":1}}],[\"两种选项\",{\"1\":{\"235\":1}}],[\"两类\",{\"1\":{\"37\":1}}],[\"两个对象属性完成相同\",{\"1\":{\"11\":1}}],[\"两个对象指向不同的地址\",{\"1\":{\"3\":1}}],[\"两个对象指向同一个地址\",{\"1\":{\"3\":1}}],[\"两者示意图如下\",{\"1\":{\"3\":1}}],[\"不使用箭头函数的情况下\",{\"1\":{\"234\":1}}],[\"不可以是window\",{\"1\":{\"234\":1}}],[\"不得不提供一些特殊的api\",{\"1\":{\"225\":1}}],[\"不能侦听到旧值\",{\"1\":{\"207\":1}}],[\"不管多深都会侦听到\",{\"1\":{\"207\":1}}],[\"不及格\",{\"1\":{\"200\":1,\"201\":1,\"202\":1,\"203\":2}}],[\"不便于维护\",{\"1\":{\"200\":1}}],[\"不一定一一对应\",{\"1\":{\"192\":1}}],[\"不带参数\",{\"1\":{\"167\":1}}],[\"不常用指令\",{\"0\":{\"161\":1}}],[\"不太容易定位子组件的实现\",{\"1\":{\"154\":1}}],[\"不用作过多介绍\",{\"1\":{\"109\":1}}],[\"不应用其他格式化规则\",{\"1\":{\"108\":1}}],[\"不重新加载整个页面\",{\"1\":{\"95\":1}}],[\"不和webpack等构建工具配置来单独使用\",{\"1\":{\"82\":1}}],[\"不需要单独安装\",{\"1\":{\"77\":1}}],[\"不需要再次安装全局的webpack\",{\"1\":{\"49\":1}}],[\"不需要管理依赖\",{\"1\":{\"22\":1}}],[\"不支持sourcemap\",{\"1\":{\"20\":1}}],[\"不会受到其他项目的影响\",{\"1\":{\"49\":1}}],[\"不会改变另一个对象的属性\",{\"1\":{\"11\":1}}],[\"不会影响到另一个变量的值\",{\"1\":{\"2\":1,\"3\":1}}],[\"不仅会在栈中开辟另一块空间\",{\"1\":{\"3\":1}}],[\"深度侦听\",{\"1\":{\"207\":2}}],[\"深拷贝开辟一个新的栈\",{\"1\":{\"11\":1}}],[\"深拷贝是新开栈\",{\"1\":{\"3\":1}}],[\"深拷贝是递归拷贝深层次\",{\"1\":{\"3\":1}}],[\"深拷贝\",{\"0\":{\"11\":1},\"1\":{\"3\":1}}],[\"深浅拷贝\",{\"0\":{\"2\":1}}],[\"会被展开为如下的形式\",{\"1\":{\"211\":1}}],[\"会被认为是一个静态资源\",{\"1\":{\"38\":1}}],[\"会调用多次\",{\"1\":{\"203\":1}}],[\"会尽量利用我们的key来进行优化操作\",{\"1\":{\"195\":1}}],[\"会将它作为\",{\"1\":{\"167\":1}}],[\"会将特殊的hmr运行时代码注入到应用程序中的每个模块中\",{\"1\":{\"98\":1}}],[\"会保留在所绑定的元素上\",{\"1\":{\"166\":1}}],[\"会通过任何类型验证\",{\"1\":{\"121\":1,\"138\":1}}],[\"会通过websocket与webpack\",{\"1\":{\"98\":1}}],[\"会根据构建统计生成报告\",{\"1\":{\"111\":1}}],[\"会内联在\",{\"1\":{\"111\":1}}],[\"会在每次\",{\"1\":{\"216\":1}}],[\"会在\",{\"1\":{\"111\":1}}],[\"会在栈中开辟另一块空间\",{\"1\":{\"3\":1}}],[\"会拼接此上下文路径\",{\"1\":{\"104\":1}}],[\"会优先使用\",{\"1\":{\"104\":1}}],[\"会先在\",{\"1\":{\"104\":1}}],[\"会自动尝试解析\",{\"1\":{\"104\":1}}],[\"会返回一个默认的\",{\"1\":{\"103\":1}}],[\"会生成两个文件\",{\"1\":{\"98\":1}}],[\"会生成一个\",{\"1\":{\"53\":1}}],[\"会立即在浏览器更新\",{\"1\":{\"95\":1}}],[\"会暴露一个全局的vue来使用\",{\"1\":{\"90\":1}}],[\"会设置development\",{\"1\":{\"79\":1}}],[\"会设置响应类型为js\",{\"1\":{\"37\":1}}],[\"会默认复制到打包的目录下\",{\"1\":{\"78\":1}}],[\"会有一些类似这样的语法<\",{\"1\":{\"76\":1}}],[\"会非常繁琐\",{\"1\":{\"52\":1}}],[\"会执行node\",{\"1\":{\"47\":1}}],[\"会接受到来自客户端的消息\",{\"1\":{\"41\":1}}],[\"会出现页面初始化时一次发送数百个模块请求的情况\",{\"1\":{\"37\":1}}],[\"会找到代码中以\",{\"1\":{\"37\":1}}],[\"会向当前域名发送一个请求获取对应的资源\",{\"1\":{\"35\":1}}],[\"会发现请求的依然是ts的代码\",{\"1\":{\"31\":1}}],[\"会影响到另一个变量的值\",{\"1\":{\"3\":1}}],[\"浅拷贝是复制\",{\"1\":{\"3\":1}}],[\"浅拷贝是拷贝一层\",{\"1\":{\"3\":1}}],[\"浅拷贝\",{\"0\":{\"5\":1},\"1\":{\"3\":1,\"5\":1}}],[\"概念\",{\"0\":{\"3\":1}}],[\"btn2click\",{\"1\":{\"179\":2}}],[\"btn1click\",{\"1\":{\"178\":5,\"179\":2}}],[\"btnclick\",{\"1\":{\"153\":1,\"155\":2,\"180\":4}}],[\"blue\",{\"1\":{\"163\":1}}],[\"block\",{\"1\":{\"83\":3}}],[\"bind来进行值的绑定\",{\"1\":{\"213\":1}}],[\"bind提供一个语法糖\",{\"1\":{\"167\":1,\"168\":1}}],[\"bind的基本使用\",{\"1\":{\"167\":1,\"168\":1}}],[\"bind\",{\"0\":{\"167\":1},\"1\":{\"159\":1,\"167\":3,\"168\":2,\"170\":1,\"172\":1,\"176\":1,\"234\":1}}],[\"bind=\",{\"1\":{\"123\":1,\"140\":1,\"176\":1}}],[\"bin\",{\"1\":{\"109\":1}}],[\"bin目录下的webpack\",{\"1\":{\"47\":1}}],[\"big\",{\"1\":{\"10\":1}}],[\"bu1ld\",{\"1\":{\"91\":1}}],[\"built\",{\"1\":{\"76\":1,\"190\":1}}],[\"builders\",{\"1\":{\"97\":1}}],[\"build指令了\",{\"1\":{\"93\":1}}],[\"build来打包即可\",{\"1\":{\"52\":1}}],[\"build\",{\"0\":{\"111\":1},\"1\":{\"19\":1,\"48\":1,\"49\":2,\"51\":2,\"52\":1,\"90\":3,\"91\":4,\"92\":1,\"93\":1,\"94\":1,\"105\":1,\"109\":2,\"111\":2}}],[\"button\",{\"1\":{\"127\":1,\"144\":1}}],[\"button>\",{\"1\":{\"125\":1,\"127\":1,\"130\":2,\"142\":1,\"144\":1,\"147\":2,\"155\":1,\"160\":1,\"162\":3,\"170\":1,\"178\":3,\"179\":2,\"180\":2,\"183\":1,\"189\":1,\"193\":1,\"203\":1,\"204\":1,\"206\":1,\"207\":3,\"210\":3,\"232\":4}}],[\"but\",{\"1\":{\"76\":1,\"90\":1}}],[\"bundler构建工具现在公开了全局特性标志\",{\"1\":{\"91\":1}}],[\"bundler\",{\"1\":{\"90\":9,\"91\":5}}],[\"bundle\",{\"1\":{\"51\":1,\"88\":1,\"91\":1,\"105\":2}}],[\"bundles\",{\"1\":{\"44\":1}}],[\"bryant\",{\"1\":{\"201\":1,\"202\":1,\"203\":1,\"204\":1}}],[\"browserslistrc\",{\"1\":{\"109\":1}}],[\"browser\",{\"1\":{\"41\":1,\"90\":1,\"104\":4}}],[\"browserify基于流方式干净灵活\",{\"1\":{\"20\":1}}],[\"browserify\",{\"1\":{\"20\":1}}],[\"break\",{\"1\":{\"41\":7}}],[\"beta\",{\"1\":{\"107\":1}}],[\"be\",{\"1\":{\"38\":1,\"76\":1}}],[\"book\",{\"1\":{\"210\":9}}],[\"books\",{\"1\":{\"210\":8}}],[\"boolean\",{\"1\":{\"1\":1,\"2\":1,\"91\":1,\"121\":1,\"138\":1,\"170\":1}}],[\"border\",{\"1\":{\"210\":4}}],[\"body>\",{\"1\":{\"76\":1,\"153\":1,\"170\":1,\"171\":1,\"173\":1,\"175\":1,\"176\":1,\"178\":1,\"179\":1,\"180\":1,\"183\":1,\"187\":1,\"188\":1,\"189\":1,\"193\":1,\"203\":1,\"206\":1,\"207\":1,\"210\":1,\"213\":1,\"232\":2}}],[\"body\",{\"1\":{\"38\":5,\"174\":1}}],[\"banana\",{\"1\":{\"213\":1}}],[\"banner\",{\"1\":{\"115\":1,\"132\":1}}],[\"banner>\",{\"1\":{\"115\":1,\"132\":1}}],[\"banner><\",{\"1\":{\"115\":1,\"132\":1}}],[\"baidu\",{\"1\":{\"168\":1}}],[\"backgroundcolor\",{\"1\":{\"173\":2}}],[\"background\",{\"1\":{\"163\":1,\"210\":1}}],[\"babel是一个javascript编译器\",{\"1\":{\"108\":1}}],[\"babel是如何做到将我们的一段代码\",{\"1\":{\"86\":1}}],[\"babel7\",{\"1\":{\"89\":1}}],[\"babel本身\",{\"1\":{\"89\":1}}],[\"babel本身可以作为一个独立的工具\",{\"1\":{\"82\":1}}],[\"babel给我们提供了两种配置文件的编写\",{\"1\":{\"89\":1}}],[\"babel的执行阶段\",{\"1\":{\"87\":1}}],[\"babel的核心代码\",{\"1\":{\"82\":1}}],[\"babel会根据配置的插件和预设\",{\"1\":{\"88\":1}}],[\"babel会将修改后的ast重新生成为javascript代码\",{\"1\":{\"86\":1}}],[\"babel会应用一系列的插件和预设来进行代码转换\",{\"1\":{\"86\":1}}],[\"babel首先将输入的javascript代码解析成抽象语法树\",{\"1\":{\"86\":1}}],[\"babel也拥有编译器的工作流程\",{\"1\":{\"86\":1}}],[\"babel编译器的作用就是将我们的源代码\",{\"1\":{\"86\":1}}],[\"babelrc\",{\"1\":{\"84\":2,\"89\":3,\"108\":1}}],[\"babeljs\",{\"1\":{\"81\":1}}],[\"babel\",{\"0\":{\"80\":1,\"81\":1,\"82\":1,\"88\":1},\"1\":{\"81\":4,\"82\":6,\"83\":17,\"84\":12,\"88\":10,\"89\":6,\"108\":6,\"155\":1}}],[\"babel等\",{\"1\":{\"20\":1}}],[\"base\",{\"1\":{\"76\":1,\"77\":3,\"91\":1}}],[\"base64\",{\"1\":{\"61\":1}}],[\"basketball\",{\"1\":{\"6\":3,\"213\":4}}],[\"baz\",{\"1\":{\"13\":2}}],[\"bar\",{\"1\":{\"13\":2,\"234\":5}}],[\"b\",{\"1\":{\"2\":1,\"130\":1,\"147\":1,\"193\":2,\"208\":3}}],[\"=>\",{\"1\":{\"37\":2,\"38\":4,\"41\":6,\"81\":1,\"96\":1,\"102\":1,\"105\":1,\"120\":1,\"126\":1,\"129\":1,\"130\":1,\"137\":1,\"143\":1,\"146\":1,\"147\":1,\"189\":1,\"208\":1,\"210\":1,\"211\":1,\"219\":2,\"234\":1}}],[\"===\",{\"1\":{\"41\":3,\"105\":1,\"127\":1,\"144\":1}}],[\"==\",{\"1\":{\"6\":1,\"12\":1,\"13\":1,\"121\":1,\"138\":1}}],[\"=\",{\"1\":{\"2\":2,\"6\":6,\"7\":4,\"8\":3,\"9\":4,\"10\":4,\"12\":7,\"13\":6,\"14\":4,\"16\":4,\"28\":2,\"32\":2,\"37\":6,\"38\":9,\"41\":10,\"51\":2,\"55\":1,\"62\":1,\"74\":2,\"76\":5,\"77\":2,\"78\":1,\"79\":1,\"81\":5,\"84\":1,\"88\":1,\"89\":1,\"90\":2,\"91\":1,\"93\":1,\"96\":1,\"99\":1,\"101\":1,\"102\":4,\"103\":2,\"104\":1,\"105\":6,\"112\":1,\"125\":1,\"127\":1,\"130\":4,\"142\":1,\"144\":1,\"147\":4,\"153\":2,\"160\":4,\"162\":1,\"163\":1,\"168\":1,\"170\":3,\"171\":1,\"173\":1,\"174\":1,\"175\":3,\"176\":2,\"178\":2,\"179\":1,\"180\":1,\"182\":1,\"183\":2,\"187\":1,\"188\":1,\"189\":3,\"193\":1,\"201\":1,\"202\":1,\"203\":3,\"204\":5,\"206\":2,\"207\":4,\"208\":1,\"209\":1,\"210\":3,\"211\":2,\"213\":1,\"217\":1,\"219\":2,\"234\":3}}],[\"axios\",{\"1\":{\"213\":1}}],[\"agree\",{\"1\":{\"213\":2}}],[\"age=\",{\"1\":{\"176\":1}}],[\"age\",{\"1\":{\"10\":1,\"14\":2,\"126\":2,\"129\":1,\"143\":2,\"146\":1,\"176\":1,\"179\":2,\"187\":1,\"188\":1,\"207\":2,\"217\":1}}],[\"a和b是一致的会继续进行比较\",{\"1\":{\"194\":1}}],[\"avatars\",{\"1\":{\"168\":1}}],[\"a>\",{\"1\":{\"153\":1,\"167\":1,\"168\":1,\"175\":1}}],[\"a><\",{\"1\":{\"153\":1}}],[\"active\",{\"1\":{\"127\":1,\"144\":1,\"170\":8,\"171\":3}}],[\"accept\",{\"1\":{\"96\":2}}],[\"anwser\",{\"1\":{\"206\":3}}],[\"any\",{\"1\":{\"167\":1}}],[\"and\",{\"1\":{\"108\":1}}],[\"angular\",{\"1\":{\"43\":2,\"97\":3,\"149\":1}}],[\"airbnb\",{\"1\":{\"108\":1}}],[\"abc\",{\"1\":{\"122\":1,\"129\":1,\"139\":1,\"146\":1,\"160\":2,\"162\":1,\"170\":4,\"171\":4}}],[\"about\",{\"1\":{\"103\":2}}],[\"abstract\",{\"1\":{\"86\":1}}],[\"args\",{\"1\":{\"130\":2,\"147\":2}}],[\"argv\",{\"1\":{\"105\":3}}],[\"archive\",{\"1\":{\"127\":4,\"144\":4}}],[\"area\",{\"1\":{\"178\":3}}],[\"are\",{\"1\":{\"91\":1}}],[\"arrow\",{\"1\":{\"26\":2,\"83\":3}}],[\"arr2copy\",{\"1\":{\"10\":4}}],[\"arr2\",{\"1\":{\"10\":3}}],[\"arr1copy\",{\"1\":{\"9\":4}}],[\"arr1\",{\"1\":{\"9\":3}}],[\"array\",{\"1\":{\"1\":1,\"6\":1,\"12\":1,\"13\":1,\"121\":1,\"138\":1,\"205\":1}}],[\"attr\",{\"1\":{\"167\":2}}],[\"attrorprop\",{\"1\":{\"167\":1}}],[\"attributes\",{\"1\":{\"190\":1}}],[\"attribute\",{\"0\":{\"123\":1,\"140\":1},\"1\":{\"167\":7,\"211\":1}}],[\"at\",{\"1\":{\"90\":1}}],[\"auto\",{\"1\":{\"76\":1}}],[\"autoprefixer\",{\"1\":{\"60\":1,\"61\":2,\"62\":1,\"63\":4}}],[\"addmovie\",{\"1\":{\"189\":2}}],[\"addname\",{\"1\":{\"129\":1,\"146\":1}}],[\"addn\",{\"1\":{\"126\":2,\"143\":2}}],[\"additional\",{\"1\":{\"108\":1}}],[\"additionaldata\",{\"1\":{\"29\":1}}],[\"add\",{\"1\":{\"107\":1,\"126\":2,\"143\":2}}],[\"address\",{\"1\":{\"100\":1}}],[\"addeventlistener\",{\"1\":{\"41\":1}}],[\"await\",{\"1\":{\"37\":1,\"38\":2,\"41\":1}}],[\"ast是一个用于描述代码结构的树状数据结构\",{\"1\":{\"87\":1}}],[\"ast是一个用于表示代码结构的树状数据结构\",{\"1\":{\"86\":1}}],[\"ast\",{\"1\":{\"86\":1,\"87\":1}}],[\"as\",{\"1\":{\"41\":2,\"108\":1}}],[\"async\",{\"1\":{\"37\":2,\"38\":2,\"41\":3,\"111\":1}}],[\"asset\",{\"0\":{\"71\":1,\"72\":1},\"1\":{\"54\":1,\"64\":1,\"67\":1,\"71\":6,\"72\":1}}],[\"assets\",{\"1\":{\"35\":1}}],[\"assign\",{\"0\":{\"8\":1},\"1\":{\"8\":2,\"83\":2,\"210\":1}}],[\"apple\",{\"1\":{\"213\":1}}],[\"application\",{\"1\":{\"61\":1,\"130\":1,\"147\":1}}],[\"app组件是header\",{\"1\":{\"116\":1,\"133\":1}}],[\"app\",{\"1\":{\"35\":1,\"37\":5,\"38\":3,\"43\":1,\"76\":1,\"90\":2,\"108\":1,\"111\":2,\"115\":3,\"119\":1,\"120\":1,\"130\":7,\"132\":3,\"136\":1,\"137\":1,\"147\":7,\"151\":1,\"153\":13,\"158\":1,\"160\":5,\"162\":6,\"163\":5,\"165\":1,\"167\":1,\"168\":5,\"170\":6,\"171\":6,\"173\":6,\"174\":6,\"175\":6,\"176\":6,\"178\":6,\"179\":6,\"180\":6,\"182\":5,\"183\":6,\"184\":1,\"185\":1,\"187\":6,\"188\":6,\"189\":6,\"193\":6,\"200\":1,\"201\":5,\"202\":5,\"203\":11,\"204\":5,\"206\":6,\"207\":6,\"210\":4,\"213\":6,\"232\":4}}],[\"api可以将\",{\"1\":{\"226\":1}}],[\"api开头\",{\"1\":{\"102\":1}}],[\"api开头的请求转发到http\",{\"1\":{\"102\":1}}],[\"api前缀替换为空\",{\"1\":{\"102\":2}}],[\"api支持\",{\"1\":{\"91\":1}}],[\"apis\",{\"1\":{\"19\":1}}],[\"api\",{\"0\":{\"196\":1},\"1\":{\"18\":2,\"83\":3,\"91\":2,\"99\":2,\"102\":5,\"103\":3,\"105\":2,\"130\":1,\"147\":1,\"190\":1,\"198\":1,\"208\":1,\"209\":1,\"226\":4,\"236\":1}}],[\"align\",{\"1\":{\"210\":1}}],[\"alias\",{\"1\":{\"30\":1,\"37\":1,\"90\":1,\"104\":5}}],[\"alpha\",{\"1\":{\"107\":1}}],[\"all\",{\"1\":{\"107\":1}}],[\"alt=\",{\"1\":{\"35\":1,\"167\":3,\"168\":3,\"175\":1}}],[\"amd等\",{\"1\":{\"44\":1}}],[\"amd不同\",{\"1\":{\"35\":1}}],[\"amd\",{\"1\":{\"35\":2}}],[\"aa\",{\"1\":{\"10\":1}}],[\"a\",{\"1\":{\"2\":2,\"26\":3,\"108\":2,\"130\":4,\"147\":4,\"153\":4,\"193\":2,\"208\":3}}],[\"例如从\",{\"1\":{\"103\":1}}],[\"例如标识符\",{\"1\":{\"87\":1}}],[\"例如语法转换\",{\"1\":{\"86\":1,\"87\":1}}],[\"例如图片\",{\"1\":{\"78\":1}}],[\"例如自动添加css前缀\",{\"1\":{\"60\":1}}],[\"例如将es6+代码转换为es5语法\",{\"1\":{\"54\":1}}],[\"例如有上百个模块的组件库\",{\"1\":{\"37\":1}}],[\"例如\",{\"1\":{\"2\":1,\"53\":3,\"63\":1,\"83\":1,\"84\":1,\"90\":1,\"93\":2,\"102\":2,\"103\":1,\"104\":4,\"105\":1,\"112\":2,\"121\":1,\"122\":1,\"127\":1,\"138\":1,\"139\":1,\"144\":1,\"151\":1,\"205\":1}}],[\"在浏览器中打开调试面板\",{\"1\":{\"237\":1}}],[\"在浏览器环境中\",{\"1\":{\"90\":1}}],[\"在demo中打下断点\",{\"1\":{\"237\":1}}],[\"在package\",{\"1\":{\"237\":1}}],[\"在项目中配置yarn\",{\"1\":{\"237\":1}}],[\"在项目中创建\",{\"1\":{\"28\":1}}],[\"在页面中通过cdn的方式来引入\",{\"1\":{\"227\":1}}],[\"在下面的代码里\",{\"1\":{\"219\":1}}],[\"在下面的组件中\",{\"1\":{\"219\":1}}],[\"在下面的示例中\",{\"1\":{\"119\":1,\"120\":1,\"136\":1,\"137\":1}}],[\"在组件内访问到\",{\"1\":{\"219\":1}}],[\"在某些场景下\",{\"1\":{\"219\":1}}],[\"在某些情况下\",{\"1\":{\"175\":1,\"181\":1}}],[\"在可以转化的情况下会进行隐式转换的\",{\"1\":{\"217\":1}}],[\"在代码背后\",{\"1\":{\"211\":1}}],[\"在代码中做一个缓存\",{\"1\":{\"37\":1}}],[\"在原生元素上的用法\",{\"1\":{\"211\":1}}],[\"在方法中被赋值改变时\",{\"1\":{\"207\":1}}],[\"在数据不发生变化时\",{\"1\":{\"203\":1}}],[\"在上面的实现思路中\",{\"1\":{\"203\":1}}],[\"在上述示例中\",{\"1\":{\"130\":1,\"147\":1}}],[\"在上述配置中\",{\"1\":{\"103\":1}}],[\"在模板语法中直接使用表达式\",{\"0\":{\"200\":1},\"1\":{\"199\":1}}],[\"在模板中放入太多的逻辑会让模板过重和难以维护\",{\"1\":{\"198\":1}}],[\"在模板中可以直接通过插值语法显示一些data中的数据\",{\"1\":{\"198\":1}}],[\"在模板中可以通过\",{\"1\":{\"151\":1}}],[\"在模板中\",{\"1\":{\"159\":1}}],[\"在模板中使用表达式\",{\"1\":{\"198\":1}}],[\"在模板中使用\",{\"1\":{\"127\":1,\"144\":1}}],[\"在模板中使用短横线分隔的形式\",{\"1\":{\"121\":1,\"138\":1}}],[\"在界面上显示不及格\",{\"1\":{\"199\":1}}],[\"在界面上显示及格\",{\"1\":{\"199\":1}}],[\"在没有key的时候我们的效率是非常低效的\",{\"1\":{\"195\":1}}],[\"在没有配置这些特性标志的情况下\",{\"1\":{\"91\":1}}],[\"在操作真实dom的时候\",{\"1\":{\"193\":1}}],[\"在新旧nodes对比时辨识vnodes\",{\"1\":{\"190\":1}}],[\"在遍历一个数组的时候会经常需要拿到数组的索引\",{\"1\":{\"187\":1}}],[\"在真实开发中\",{\"1\":{\"186\":1,\"213\":1}}],[\"在真实的开发中\",{\"1\":{\"114\":1,\"131\":1}}],[\"在用法上的区别\",{\"1\":{\"185\":1}}],[\"在用户的javascript被关闭时\",{\"1\":{\"76\":1}}],[\"在给元素绑定事件时\",{\"1\":{\"180\":1}}],[\"在处理绑定时\",{\"1\":{\"167\":1}}],[\"在该方法中\",{\"1\":{\"234\":1}}],[\"在该网站中生成代码片段\",{\"1\":{\"158\":1}}],[\"在该模式下\",{\"1\":{\"93\":1}}],[\"在我们进行逻辑判断时\",{\"1\":{\"217\":1}}],[\"在我们编写代码完成之后\",{\"1\":{\"155\":1}}],[\"在我们软件工程中也会将一些帮助我们搭建项目的工具称之为脚手架\",{\"1\":{\"106\":1}}],[\"在父组件中使用子组件时\",{\"1\":{\"154\":1}}],[\"在父组件中以v\",{\"1\":{\"125\":1,\"142\":1}}],[\"在任何其他的组件中都可以使用的组件\",{\"1\":{\"152\":1}}],[\"在单文件组件和内联字符串模板中\",{\"1\":{\"151\":1}}],[\"在通过\",{\"1\":{\"151\":1}}],[\"在通常情况下\",{\"1\":{\"51\":1}}],[\"在控制台打印子组件传递的数据\",{\"1\":{\"125\":1,\"142\":1}}],[\"在javascript中使用驼峰式命名\",{\"1\":{\"121\":1,\"138\":1}}],[\"在子组件中发生某个事件的时候\",{\"1\":{\"125\":1,\"142\":1}}],[\"在子组件中\",{\"1\":{\"119\":1,\"120\":1,\"136\":1,\"137\":1}}],[\"在vscode中配置代码片段\",{\"1\":{\"158\":1}}],[\"在vue3x的时候\",{\"1\":{\"233\":1}}],[\"在vue3\",{\"1\":{\"224\":1,\"226\":1}}],[\"在vue3中\",{\"1\":{\"117\":2,\"118\":1,\"134\":2,\"135\":1}}],[\"在vue2x的时候\",{\"1\":{\"233\":1}}],[\"在vue2\",{\"1\":{\"224\":1,\"226\":1}}],[\"在vue中\",{\"1\":{\"193\":1}}],[\"在vue中如何监听事件呢\",{\"1\":{\"177\":1}}],[\"在vue\",{\"1\":{\"121\":1,\"122\":1,\"138\":1,\"139\":1,\"237\":2}}],[\"在vite\",{\"1\":{\"32\":1}}],[\"在之前的案例中\",{\"1\":{\"114\":1,\"131\":1}}],[\"在构建项目之前不清除目标目录的内容\",{\"1\":{\"111\":1}}],[\"在服务器启动时将\",{\"1\":{\"110\":1}}],[\"在服务器启动时打开浏览器\",{\"1\":{\"110\":1}}],[\"在服务端按需编译返回\",{\"1\":{\"18\":1}}],[\"在一个\",{\"1\":{\"109\":1}}],[\"在不同前端工具之间公用目标浏览器和node版本的配置文件\",{\"1\":{\"109\":1}}],[\"在不开启hmr的情况下\",{\"1\":{\"95\":1}}],[\"在提交代码时运行代码检查\",{\"1\":{\"108\":1}}],[\"在保存文件时运行代码检查\",{\"1\":{\"108\":1}}],[\"在同一台电脑中管理多个\",{\"1\":{\"107\":1}}],[\"在命令行中\",{\"1\":{\"105\":1}}],[\"在命令行中运行webpack命令\",{\"1\":{\"53\":1}}],[\"在其他目录中查找模块\",{\"1\":{\"104\":1}}],[\"在其中配置\",{\"1\":{\"88\":1}}],[\"在其中定义打包的入口文件\",{\"1\":{\"53\":1}}],[\"在解析模块时搜索的目录\",{\"1\":{\"104\":1}}],[\"在生产环境中\",{\"1\":{\"103\":1}}],[\"在运行\",{\"1\":{\"94\":1}}],[\"在运行webpack命令时\",{\"1\":{\"53\":1}}],[\"在本地配置一个服务器\",{\"1\":{\"94\":1}}],[\"在文件发生变化时\",{\"1\":{\"92\":1}}],[\"在使用组合式\",{\"1\":{\"236\":1}}],[\"在使用这个版本时\",{\"1\":{\"235\":2}}],[\"在使用\",{\"1\":{\"232\":1}}],[\"在使用时\",{\"1\":{\"203\":1}}],[\"在使用v\",{\"1\":{\"190\":1}}],[\"在使用webpack配置文件时\",{\"1\":{\"92\":1}}],[\"在使用某些模块时\",{\"1\":{\"37\":1}}],[\"在前端开发中另外一个非常重要的特性就是交互\",{\"1\":{\"177\":1}}],[\"在前端开发中\",{\"1\":{\"92\":1,\"177\":1}}],[\"在官方解释如下\",{\"1\":{\"91\":1}}],[\"在支持\",{\"1\":{\"90\":1}}],[\"在ast的基础上\",{\"1\":{\"86\":1,\"87\":1}}],[\"在开发中\",{\"1\":{\"128\":1,\"145\":1,\"169\":1}}],[\"在开发中很常见的就是父子组件之间通信\",{\"1\":{\"117\":1,\"134\":1}}],[\"在开发中我们只使用了componenta\",{\"1\":{\"154\":1}}],[\"在开发中我们会有各种各样的模块依赖\",{\"1\":{\"104\":1}}],[\"在开发中我们很少直接去接触babel\",{\"1\":{\"81\":1}}],[\"在开发过程中\",{\"1\":{\"100\":1,\"116\":1,\"133\":1}}],[\"在开发环境中\",{\"1\":{\"102\":1}}],[\"在开发环境启动时只需要启动两个server\",{\"1\":{\"22\":1}}],[\"在开发环境拥有速度快到惊人的模块热更新\",{\"1\":{\"18\":1}}],[\"在进行插入或者重置顺序的时候\",{\"1\":{\"195\":1}}],[\"在进行\",{\"1\":{\"76\":1}}],[\"在进行项目部署的时\",{\"1\":{\"75\":1}}],[\"在导出一个\",{\"1\":{\"71\":1}}],[\"在webpack构建过程中\",{\"1\":{\"98\":1}}],[\"在webpack配置文件中添加以下代码\",{\"1\":{\"93\":1}}],[\"在webpack配置文件中添加``watch\",{\"1\":{\"93\":1}}],[\"在webpack5开始\",{\"1\":{\"71\":1}}],[\"在webpack5之前\",{\"1\":{\"71\":1}}],[\"在webpack的一些其他地方不一样\",{\"1\":{\"68\":1}}],[\"在webpack中使用postcss就是使用postcss\",{\"1\":{\"62\":1}}],[\"在webpack中\",{\"1\":{\"54\":1,\"60\":1}}],[\"在file\",{\"1\":{\"68\":1}}],[\"在配置\",{\"1\":{\"76\":1}}],[\"在配置postcss\",{\"1\":{\"63\":1}}],[\"在配置文件中\",{\"1\":{\"56\":1}}],[\"在配置文件中指定打包输出的路径和文件名\",{\"1\":{\"53\":1}}],[\"在配置文件中指定打包的入口文件\",{\"1\":{\"53\":1}}],[\"在您的\",{\"1\":{\"63\":1}}],[\"在引入的样式前加上使用的loader\",{\"1\":{\"55\":1}}],[\"在这种方式中\",{\"1\":{\"235\":1}}],[\"在这种情况下\",{\"1\":{\"104\":1,\"119\":1,\"129\":1,\"136\":1,\"146\":1}}],[\"在这里处理从子组件接收到的数据\",{\"1\":{\"125\":1,\"142\":1}}],[\"在这里插入图片描述\",{\"1\":{\"36\":1}}],[\"在这个组件中我们可以获得非常多的特性\",{\"1\":{\"155\":1}}],[\"在这个对象中\",{\"1\":{\"120\":1,\"137\":1}}],[\"在这个示例中\",{\"1\":{\"102\":2}}],[\"在这个例子中\",{\"1\":{\"90\":1,\"121\":1,\"122\":1,\"138\":1,\"139\":1,\"154\":1}}],[\"在这个字段中\",{\"1\":{\"54\":1}}],[\"在目录下直接执行\",{\"1\":{\"48\":1}}],[\"在合适的时机向客户端发送\",{\"1\":{\"41\":1}}],[\"在\",{\"0\":{\"90\":1},\"1\":{\"37\":1,\"49\":1,\"54\":1,\"87\":1,\"90\":2,\"102\":1,\"104\":2,\"130\":3,\"147\":3,\"180\":1,\"213\":1,\"216\":1,\"225\":1,\"226\":1,\"235\":1}}],[\"在es6没有出现之前\",{\"1\":{\"35\":1}}],[\"在复杂\",{\"1\":{\"22\":1}}],[\"在赋值的过程中都是深拷贝\",{\"1\":{\"2\":1}}],[\"在探讨深浅拷贝之前\",{\"1\":{\"1\":1}}],[\"而当使用在一个组件上时\",{\"1\":{\"211\":1}}],[\"而嵌套属性的变化不会触发\",{\"1\":{\"207\":1}}],[\"而计算属性虽然使用了多次\",{\"1\":{\"203\":1}}],[\"而进行重新计算\",{\"1\":{\"203\":1}}],[\"而且模块划分的更加清晰\",{\"1\":{\"224\":1}}],[\"而且我们多次提到计算属性有缓存\",{\"1\":{\"203\":1}}],[\"而且不利于后续的管理以及扩展\",{\"1\":{\"149\":1}}],[\"而使用key时\",{\"1\":{\"190\":1}}],[\"而在\",{\"1\":{\"225\":1}}],[\"而在任何的子组件或更深层的子组件中都不可用\",{\"1\":{\"154\":1}}],[\"而在子组件的javascript代码中\",{\"1\":{\"121\":1,\"138\":1}}],[\"而值就是相应组件的实现\",{\"1\":{\"154\":1}}],[\"而组件本身又可以在多个地方进行复用\",{\"1\":{\"149\":1}}],[\"而每一个组件又可以进行细分\",{\"1\":{\"149\":1}}],[\"而非额外的追加入口\",{\"1\":{\"110\":1}}],[\"而将其绑定到0\",{\"1\":{\"100\":1}}],[\"而0\",{\"1\":{\"100\":1}}],[\"而无需额外的选项\",{\"1\":{\"220\":1}}],[\"而无需显式地通过\",{\"1\":{\"130\":1,\"147\":1}}],[\"而无需重新加载整个页面\",{\"1\":{\"98\":1}}],[\"而无需重新刷新整个页面\",{\"1\":{\"95\":1}}],[\"而无需手动刷新页面\",{\"1\":{\"97\":1}}],[\"而无需经过字节码\",{\"1\":{\"36\":1}}],[\"而devserver就是webpack提供的一个功能\",{\"1\":{\"92\":1}}],[\"而最终打包的dist文件夹中是没有index\",{\"1\":{\"75\":1}}],[\"而295kb的不会\",{\"1\":{\"66\":1}}],[\"而大的图片也进行转换\",{\"1\":{\"66\":1}}],[\"而不需要在多个options之间寻找\",{\"1\":{\"226\":1}}],[\"而不需要担心兼容性问题\",{\"1\":{\"63\":1}}],[\"而不一定需要全部使用vue来开发整个\",{\"1\":{\"223\":1}}],[\"而不会被添加到根元素上\",{\"1\":{\"123\":1,\"140\":1}}],[\"而不必花好几天去纠结配置的问题\",{\"1\":{\"106\":1}}],[\"而不是直接使用template模板\",{\"1\":{\"235\":1}}],[\"而不是使用div来完成\",{\"1\":{\"188\":1}}],[\"而不是使用第三方\",{\"1\":{\"36\":1}}],[\"而不是作为\",{\"1\":{\"167\":1}}],[\"而不是由前端框架或工具来处理\",{\"1\":{\"103\":1}}],[\"而不是硬盘上的某个目录中\",{\"1\":{\"94\":1}}],[\"而不包含未使用的代码\",{\"1\":{\"91\":1}}],[\"而是说\",{\"1\":{\"198\":1}}],[\"而是有一大堆的元素\",{\"1\":{\"192\":1}}],[\"而是有一个依赖图\",{\"1\":{\"37\":1}}],[\"而是会生成新的数组\",{\"1\":{\"189\":1}}],[\"而是可以借助于构建工具\",{\"1\":{\"62\":1}}],[\"而是其他的名字呢\",{\"1\":{\"52\":1}}],[\"而是类似于自\",{\"1\":{\"47\":1}}],[\"而如果是直接使用模块名比如\",{\"1\":{\"37\":1}}],[\"而后发送请求\",{\"1\":{\"37\":1}}],[\"而vite利用了esm和浏览器缓存技术\",{\"1\":{\"22\":1}}],[\"而webpack\",{\"1\":{\"22\":1,\"47\":1}}],[\"而引用类型的值则是拷贝了\",{\"1\":{\"3\":1}}],[\"而引用数据类型如\",{\"1\":{\"1\":1}}],[\"而真实数据存储在堆内存中\",{\"1\":{\"1\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
